Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"


State 59 conflicts: 1 shift/reduce
State 325 conflicts: 1 shift/reduce
State 422 conflicts: 1 shift/reduce
State 526 conflicts: 2 shift/reduce
State 528 conflicts: 2 shift/reduce
State 637 conflicts: 1 shift/reduce
State 719 conflicts: 1 shift/reduce
State 928 conflicts: 1 shift/reduce
State 1070 conflicts: 1 shift/reduce
State 1183 conflicts: 1 shift/reduce
State 1184 conflicts: 1 shift/reduce
State 1472 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration
    9        | program options_declaration
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program tuple_alias_declaration
   13        | program bitfield_alias_declaration
   14        | program top_level_reader_macro
   15        | program "end of expression"

   16 top_level_reader_macro: expr_reader "end of expression"

   17 optional_public_or_private_module: %empty
   18                                  | "public"
   19                                  | "private"

   20 module_name: '$'
   21            | "name"

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   23 character_sequence: STRING_CHARACTER
   24                   | STRING_CHARACTER_ESC
   25                   | character_sequence STRING_CHARACTER
   26                   | character_sequence STRING_CHARACTER_ESC

   27 string_constant: "start of the string" character_sequence "end of the string"
   28                | "start of the string" "end of the string"

   29 string_builder_body: %empty
   30                    | string_builder_body character_sequence
   31                    | string_builder_body "{" expr "}"

   32 string_builder: "start of the string" string_builder_body "end of the string"

   33 reader_character_sequence: STRING_CHARACTER
   34                          | reader_character_sequence STRING_CHARACTER

   35 $@1: %empty

   36 expr_reader: '%' name_in_namespace $@1 reader_character_sequence

   37 options_declaration: "options" annotation_argument_list

   38 require_declaration: "require" require_module

   39 keyword_or_name: "name"
   40                | "keyword"
   41                | "type function"

   42 require_module_name: keyword_or_name
   43                    | '%' require_module_name
   44                    | require_module_name '.' keyword_or_name
   45                    | require_module_name '/' keyword_or_name

   46 require_module: require_module_name is_public_module
   47               | require_module_name "as" "name" is_public_module

   48 is_public_module: %empty
   49                 | "public"

   50 expect_declaration: "expect" expect_list

   51 expect_list: expect_error
   52            | expect_list ',' expect_error

   53 expect_error: "integer constant"
   54             | "integer constant" ':' "integer constant"

   55 expression_label: "label" "integer constant" ':'

   56 expression_goto: "goto" "label" "integer constant"
   57                | "goto" expr

   58 elif_or_static_elif: "elif"
   59                    | "static_elif"

   60 expression_else: %empty
   61                | "else" expression_block
   62                | elif_or_static_elif expr expression_block expression_else

   63 if_or_static_if: "if"
   64                | "static_if"

   65 expression_else_one_liner: %empty

   66 $@2: %empty

   67 expression_else_one_liner: "else" $@2 expression_if_one_liner

   68 expression_if_one_liner: expr
   69                        | expression_return_no_pipe
   70                        | expression_yield_no_pipe
   71                        | expression_break
   72                        | expression_continue

   73 expression_if_then_else: if_or_static_if expr expression_block expression_else

   74 $@3: %empty

   75 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner "end of expression"

   76 $@4: %empty

   77 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" expr_list expression_block

   78 expression_unsafe: "unsafe" expression_block

   79 expression_while_loop: "while" expr expression_block

   80 expression_with: "with" expr expression_block

   81 $@5: %empty

   82 expression_with_alias: "assume" "name" '=' $@5 expr

   83 annotation_argument_value: string_constant
   84                          | "name"
   85                          | "integer constant"
   86                          | "floating point constant"
   87                          | "true"
   88                          | "false"

   89 annotation_argument_value_list: annotation_argument_value
   90                               | annotation_argument_value_list ',' annotation_argument_value

   91 annotation_argument_name: "name"
   92                         | "type"
   93                         | "in"

   94 annotation_argument: annotation_argument_name '=' string_constant
   95                    | annotation_argument_name '=' "name"
   96                    | annotation_argument_name '=' "integer constant"
   97                    | annotation_argument_name '=' "floating point constant"
   98                    | annotation_argument_name '=' "true"
   99                    | annotation_argument_name '=' "false"
  100                    | annotation_argument_name
  101                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

  102 annotation_argument_list: annotation_argument
  103                         | annotation_argument_list ',' annotation_argument

  104 metadata_argument_list: '@' annotation_argument
  105                       | metadata_argument_list '@' annotation_argument
  106                       | metadata_argument_list "end of expression"

  107 annotation_declaration_name: name_in_namespace
  108                            | "require"
  109                            | "private"
  110                            | "template"

  111 annotation_declaration_basic: annotation_declaration_name
  112                             | annotation_declaration_name '(' annotation_argument_list ')'

  113 annotation_declaration: annotation_declaration_basic
  114                       | '!' annotation_declaration
  115                       | annotation_declaration "&&" annotation_declaration
  116                       | annotation_declaration "||" annotation_declaration
  117                       | annotation_declaration "^^" annotation_declaration
  118                       | '(' annotation_declaration ')'
  119                       | "|>" annotation_declaration

  120 annotation_list: annotation_declaration
  121                | annotation_list ',' annotation_declaration

  122 optional_annotation_list: %empty
  123                         | '[' annotation_list ']'

  124 optional_function_argument_list: %empty
  125                                | '(' ')'
  126                                | '(' function_argument_list ')'

  127 optional_function_type: %empty
  128                       | ':' type_declaration

  129 function_name: "name"
  130              | "operator" '!'
  131              | "operator" '~'
  132              | "operator" "+="
  133              | "operator" "-="
  134              | "operator" "*="
  135              | "operator" "/="
  136              | "operator" "%="
  137              | "operator" "&="
  138              | "operator" "|="
  139              | "operator" "^="
  140              | "operator" "&&="
  141              | "operator" "||="
  142              | "operator" "^^="
  143              | "operator" "&&"
  144              | "operator" "||"
  145              | "operator" "^^"
  146              | "operator" '+'
  147              | "operator" '-'
  148              | "operator" '*'
  149              | "operator" '/'
  150              | "operator" '%'
  151              | "operator" '<'
  152              | "operator" '>'
  153              | "operator" ".."
  154              | "operator" "=="
  155              | "operator" "!="
  156              | "operator" "<="
  157              | "operator" ">="
  158              | "operator" '&'
  159              | "operator" '|'
  160              | "operator" '^'
  161              | "++" "operator"
  162              | "--" "operator"
  163              | "operator" "++"
  164              | "operator" "--"
  165              | "operator" "<<"
  166              | "operator" ">>"
  167              | "operator" "<<="
  168              | "operator" ">>="
  169              | "operator" "<<<"
  170              | "operator" ">>>"
  171              | "operator" "<<<="
  172              | "operator" ">>>="
  173              | "operator" '[' ']'
  174              | "operator" "?[" ']'
  175              | "operator" '.'
  176              | "operator" "?."
  177              | "operator" '.' "name"
  178              | "operator" '.' "name" ":="
  179              | "operator" "?." "name"
  180              | "operator" ":="
  181              | "operator" "delete"
  182              | "operator" "??"
  183              | "operator" "is"
  184              | "operator" "as"
  185              | "operator" "is" "name"
  186              | "operator" "as" "name"
  187              | "operator" '?' "as"
  188              | "operator" '?' "as" "name"
  189              | "bool"
  190              | "string"
  191              | "int"
  192              | "int2"
  193              | "int3"
  194              | "int4"
  195              | "uint"
  196              | "uint2"
  197              | "uint3"
  198              | "uint4"
  199              | "float"
  200              | "float2"
  201              | "float3"
  202              | "float4"
  203              | "range"
  204              | "urange"
  205              | "range64"
  206              | "urange64"
  207              | "int64"
  208              | "uint64"
  209              | "double"
  210              | "int8"
  211              | "uint8"
  212              | "int16"
  213              | "uint16"

  214 global_function_declaration: optional_annotation_list "def" function_declaration

  215 optional_public_or_private_function: %empty
  216                                    | "private"
  217                                    | "public"

  218 function_declaration_header: function_name optional_function_argument_list optional_function_type

  219 $@6: %empty

  220 function_declaration: optional_public_or_private_function $@6 function_declaration_header expression_block

  221 expression_block: "begin of code block" expressions "end of code block"
  222                 | "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions "end of code block"

  223 expr_call_pipe: expr expr_full_block_assumed_piped
  224               | expression_keyword expr_full_block_assumed_piped
  225               | "generator" '<' type_declaration_no_options '>' optional_capture_list expr_full_block_assumed_piped

  226 expression_any: "end of expression"
  227               | expr_pipe
  228               | expr_keyword
  229               | expr_assign_pipe
  230               | expr_assign "end of expression"
  231               | expression_delete "end of expression"
  232               | expression_let
  233               | expression_while_loop
  234               | expression_unsafe
  235               | expression_with
  236               | expression_with_alias
  237               | expression_for_loop
  238               | expression_break "end of expression"
  239               | expression_continue "end of expression"
  240               | expression_return
  241               | expression_yield
  242               | expression_if_then_else
  243               | expression_try_catch
  244               | expression_label "end of expression"
  245               | expression_goto "end of expression"
  246               | "pass" "end of expression"

  247 expressions: %empty
  248            | expressions expression_any
  249            | expressions error

  250 expr_keyword: "keyword" expr expression_block

  251 optional_expr_list: %empty
  252                   | expr_list optional_comma

  253 optional_expr_list_in_braces: %empty
  254                             | '(' optional_expr_list optional_comma ')'

  255 optional_expr_map_tuple_list: %empty
  256                             | expr_map_tuple_list optional_comma

  257 type_declaration_no_options_list: type_declaration
  258                                 | type_declaration_no_options_list c_or_s type_declaration

  259 $@7: %empty

  260 $@8: %empty

  261 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list '>' $@8 expr

  262 $@9: %empty

  263 $@10: %empty

  264 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces

  265 expr_pipe: expr_assign " <|" expr_block
  266          | "@ <|" expr_block
  267          | "@@ <|" expr_block
  268          | "$ <|" expr_block
  269          | expr_call_pipe

  270 name_in_namespace: "name"
  271                  | "name" "::" "name"
  272                  | "::" "name"

  273 expression_delete: "delete" expr
  274                  | "delete" "explicit" expr

  275 $@11: %empty

  276 $@12: %empty

  277 new_type_declaration: '<' $@11 type_declaration '>' $@12
  278                     | structure_type_declaration

  279 expr_new: "new" new_type_declaration
  280         | "new" new_type_declaration '(' use_initializer ')'
  281         | "new" new_type_declaration '(' expr_list ')'
  282         | "new" new_type_declaration '(' make_struct_single ')'
  283         | "new" new_type_declaration '(' "uninitialized" make_struct_single ')'
  284         | "new" make_decl

  285 expression_break: "break"

  286 expression_continue: "continue"

  287 expression_return_no_pipe: "return"
  288                          | "return" expr_list
  289                          | "return" "<-" expr_list

  290 expression_return: expression_return_no_pipe "end of expression"
  291                  | "return" expr_pipe
  292                  | "return" "<-" expr_pipe

  293 expression_yield_no_pipe: "yield" expr
  294                         | "yield" "<-" expr

  295 expression_yield: expression_yield_no_pipe "end of expression"
  296                 | "yield" expr_pipe
  297                 | "yield" "<-" expr_pipe

  298 expression_try_catch: "try" expression_block "recover" expression_block

  299 kwd_let_var_or_nothing: "let"
  300                       | "var"
  301                       | %empty

  302 kwd_let: "let"
  303        | "var"

  304 optional_in_scope: "inscope"
  305                  | %empty

  306 tuple_expansion: "name"
  307                | tuple_expansion ',' "name"

  308 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  309                                     | "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  310                                     | '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  311                                     | '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  312                                     | "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr "end of expression"
  313                                     | "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr_pipe
  314                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression"
  315                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr_pipe

  316 expression_let: kwd_let optional_in_scope let_variable_declaration
  317               | kwd_let optional_in_scope tuple_expansion_variable_declaration

  318 $@13: %empty

  319 $@14: %empty

  320 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 expr

  321 $@15: %empty

  322 $@16: %empty

  323 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 expr

  324 $@17: %empty

  325 $@18: %empty

  326 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 expr

  327 $@19: %empty

  328 $@20: %empty

  329 expr_type_decl: "type" '<' $@19 type_declaration '>' $@20

  330 expr_type_info: "typeinfo" '(' name_in_namespace expr ')'
  331               | "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')'
  332               | "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" '>' expr ')'
  333               | "typeinfo" name_in_namespace '(' expr ')'
  334               | "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')'
  335               | "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr ')'

  336 expr_list: expr
  337          | expr_list ',' expr

  338 block_or_simple_block: expression_block
  339                      | "=>" expr
  340                      | "=>" "<-" expr

  341 block_or_lambda: '$'
  342                | '@'
  343                | '@' '@'

  344 capture_entry: '&' "name"
  345              | '=' "name"
  346              | "<-" "name"
  347              | ":=" "name"
  348              | "name" '(' "name" ')'

  349 capture_list: capture_entry
  350             | capture_list ',' capture_entry

  351 optional_capture_list: %empty
  352                      | "[[" capture_list ']' ']'
  353                      | "capture" '(' capture_list ')'

  354 expr_block: expression_block
  355           | block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  356 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  357 $@21: %empty

  358 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

  359 expr_numeric_const: "integer constant"
  360                   | "unsigned integer constant"
  361                   | "long integer constant"
  362                   | "unsigned long integer constant"
  363                   | "unsigned int8 constant"
  364                   | "floating point constant"
  365                   | "double constant"

  366 expr_assign: expr
  367            | expr '=' expr
  368            | expr "<-" expr
  369            | expr ":=" expr
  370            | expr "&=" expr
  371            | expr "|=" expr
  372            | expr "^=" expr
  373            | expr "&&=" expr
  374            | expr "||=" expr
  375            | expr "^^=" expr
  376            | expr "+=" expr
  377            | expr "-=" expr
  378            | expr "*=" expr
  379            | expr "/=" expr
  380            | expr "%=" expr
  381            | expr "<<=" expr
  382            | expr ">>=" expr
  383            | expr "<<<=" expr
  384            | expr ">>>=" expr

  385 expr_assign_pipe_right: "@ <|" expr_block
  386                       | "@@ <|" expr_block
  387                       | "$ <|" expr_block
  388                       | expr_call_pipe

  389 expr_assign_pipe: expr '=' expr_assign_pipe_right
  390                 | expr "<-" expr_assign_pipe_right
  391                 | expr "&=" expr_assign_pipe_right
  392                 | expr "|=" expr_assign_pipe_right
  393                 | expr "^=" expr_assign_pipe_right
  394                 | expr "&&=" expr_assign_pipe_right
  395                 | expr "||=" expr_assign_pipe_right
  396                 | expr "^^=" expr_assign_pipe_right
  397                 | expr "+=" expr_assign_pipe_right
  398                 | expr "-=" expr_assign_pipe_right
  399                 | expr "*=" expr_assign_pipe_right
  400                 | expr "/=" expr_assign_pipe_right
  401                 | expr "%=" expr_assign_pipe_right
  402                 | expr "<<=" expr_assign_pipe_right
  403                 | expr ">>=" expr_assign_pipe_right
  404                 | expr "<<<=" expr_assign_pipe_right
  405                 | expr ">>>=" expr_assign_pipe_right

  406 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  407                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  408 expr_method_call: expr "->" "name" '(' ')'
  409                 | expr "->" "name" '(' expr_list ')'

  410 func_addr_name: name_in_namespace
  411               | "$i" '(' expr ')'

  412 func_addr_expr: '@' '@' func_addr_name

  413 $@22: %empty

  414 $@23: %empty

  415 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options '>' $@23 func_addr_name

  416 $@24: %empty

  417 $@25: %empty

  418 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name

  419 expr_field: expr '.' "name"
  420           | expr '.' '.' "name"
  421           | expr '.' "name" '(' ')'
  422           | expr '.' "name" '(' expr_list ')'
  423           | expr '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr '.' basic_type_declaration '(' ')'
  425           | expr '.' basic_type_declaration '(' expr_list ')'

  426 $@26: %empty

  427 $@27: %empty

  428 expr_field: expr '.' $@26 error $@27

  429 expr_call: name_in_namespace '(' ')'
  430          | name_in_namespace '(' "uninitialized" ')'
  431          | name_in_namespace '(' make_struct_single ')'
  432          | name_in_namespace '(' "uninitialized" make_struct_single ')'
  433          | name_in_namespace '(' expr_list ')'
  434          | basic_type_declaration '(' ')'
  435          | basic_type_declaration '(' expr_list ')'

  436 expr: "null"
  437     | name_in_namespace
  438     | expr_numeric_const
  439     | expr_reader
  440     | string_builder
  441     | make_decl
  442     | "true"
  443     | "false"
  444     | expr_field
  445     | expr_mtag
  446     | '!' expr
  447     | '~' expr
  448     | '+' expr
  449     | '-' expr
  450     | expr "<<" expr
  451     | expr ">>" expr
  452     | expr "<<<" expr
  453     | expr ">>>" expr
  454     | expr '+' expr
  455     | expr '-' expr
  456     | expr '*' expr
  457     | expr '/' expr
  458     | expr '%' expr
  459     | expr '<' expr
  460     | expr '>' expr
  461     | expr "==" expr
  462     | expr "!=" expr
  463     | expr "<=" expr
  464     | expr ">=" expr
  465     | expr '&' expr
  466     | expr '|' expr
  467     | expr '^' expr
  468     | expr "&&" expr
  469     | expr "||" expr
  470     | expr "^^" expr
  471     | expr ".." expr
  472     | "++" expr
  473     | "--" expr
  474     | expr "++"
  475     | expr "--"
  476     | '(' expr_list optional_comma ')'
  477     | '(' make_struct_single ')'
  478     | expr '[' expr ']'
  479     | expr '.' '[' expr ']'
  480     | expr "?[" expr ']'
  481     | expr '.' "?[" expr ']'
  482     | expr "?." "name"
  483     | expr '.' "?." "name"
  484     | func_addr_expr
  485     | expr_call
  486     | '*' expr
  487     | "deref" '(' expr ')'
  488     | "addr" '(' expr ')'
  489     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  490     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  491     | expr "??" expr
  492     | expr '?' expr ':' expr

  493 $@28: %empty

  494 $@29: %empty

  495 expr: expr "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr "is" basic_type_declaration
  497     | expr "is" "name"
  498     | expr "as" "name"

  499 $@30: %empty

  500 $@31: %empty

  501 expr: expr "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr "as" basic_type_declaration
  503     | expr '?' "as" "name"

  504 $@32: %empty

  505 $@33: %empty

  506 expr: expr '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr '?' "as" basic_type_declaration
  508     | expr_type_info
  509     | expr_type_decl
  510     | expr_cast
  511     | expr_new
  512     | expr_method_call
  513     | expr_named_call
  514     | expr_full_block
  515     | expr "<|" expr
  516     | expr "|>" expr
  517     | expr "|>" basic_type_declaration
  518     | name_in_namespace "name"
  519     | "unsafe" '(' expr ')'
  520     | expression_keyword

  521 expr_mtag: "$$" '(' expr ')'
  522          | "$i" '(' expr ')'
  523          | "$v" '(' expr ')'
  524          | "$b" '(' expr ')'
  525          | "$a" '(' expr ')'
  526          | "..."
  527          | "$c" '(' expr ')' '(' ')'
  528          | "$c" '(' expr ')' '(' expr_list ')'
  529          | expr '.' "$f" '(' expr ')'
  530          | expr "?." "$f" '(' expr ')'
  531          | expr '.' '.' "$f" '(' expr ')'
  532          | expr '.' "?." "$f" '(' expr ')'
  533          | expr "as" "$f" '(' expr ')'
  534          | expr '?' "as" "$f" '(' expr ')'
  535          | expr "is" "$f" '(' expr ')'
  536          | '@' '@' "$c" '(' expr ')'

  537 optional_field_annotation: %empty
  538                          | "[[" annotation_argument_list ']' ']'
  539                          | metadata_argument_list

  540 optional_override: %empty
  541                  | "override"
  542                  | "sealed"

  543 optional_constant: %empty
  544                  | "const"

  545 optional_public_or_private_member_variable: %empty
  546                                           | "public"
  547                                           | "private"

  548 optional_static_member_variable: %empty
  549                                | "static"

  550 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  551 struct_variable_declaration_list: %empty

  552 $@34: %empty

  553 struct_variable_declaration_list: struct_variable_declaration_list $@34 structure_variable_declaration "end of expression"

  554 $@35: %empty

  555 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header "end of expression"

  556 $@36: %empty

  557 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block
  558                                 | struct_variable_declaration_list '[' annotation_list ']' "end of expression"

  559 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration
  560                              | "$a" '(' expr ')'

  561 function_argument_list: function_argument_declaration
  562                       | function_argument_list "end of expression" function_argument_declaration

  563 tuple_type: type_declaration
  564           | "name" ':' type_declaration

  565 tuple_type_list: tuple_type
  566                | tuple_type_list c_or_s tuple_type

  567 tuple_alias_type_list: %empty
  568                      | tuple_alias_type_list c_or_s
  569                      | tuple_alias_type_list tuple_type c_or_s

  570 variant_type: "name" ':' type_declaration

  571 variant_type_list: variant_type
  572                  | variant_type_list c_or_s variant_type

  573 variant_alias_type_list: %empty
  574                        | variant_alias_type_list c_or_s
  575                        | variant_alias_type_list variant_type c_or_s

  576 copy_or_move: '='
  577             | "<-"

  578 variable_declaration: variable_name_with_pos_list
  579                     | variable_name_with_pos_list '&'
  580                     | variable_name_with_pos_list ':' type_declaration
  581                     | variable_name_with_pos_list ':' type_declaration copy_or_move expr
  582                     | variable_name_with_pos_list copy_or_move expr
  583                     | variable_name_with_pos_list copy_or_move expr_pipe

  584 copy_or_move_or_clone: '='
  585                      | "<-"
  586                      | ":="

  587 optional_ref: %empty
  588             | '&'

  589 let_variable_name_with_pos_list: "name"
  590                                | "$i" '(' expr ')'
  591                                | "name" "aka" "name"
  592                                | let_variable_name_with_pos_list ',' "name"
  593                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  594 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression"
  595                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  596                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  597                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression"
  598                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe

  599 global_variable_declaration_list: %empty

  600 $@37: %empty

  601 global_variable_declaration_list: global_variable_declaration_list $@37 optional_field_annotation let_variable_declaration

  602 optional_shared: %empty
  603                | "shared"

  604 optional_public_or_private_variable: %empty
  605                                    | "private"
  606                                    | "public"

  607 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"

  608 $@38: %empty

  609 global_let: kwd_let optional_shared optional_public_or_private_variable $@38 optional_field_annotation let_variable_declaration

  610 enum_list: %empty
  611          | enum_list "end of expression"
  612          | enum_list "name" "end of expression"
  613          | enum_list "name" '=' expr "end of expression"

  614 optional_public_or_private_alias: %empty
  615                                 | "private"
  616                                 | "public"

  617 $@39: %empty

  618 single_alias: optional_public_or_private_alias "name" $@39 '=' type_declaration

  619 alias_list: single_alias "end of expression"
  620           | alias_list single_alias "end of expression"

  621 alias_declaration: "typedef" "begin of code block" alias_list "end of code block"

  622 $@40: %empty

  623 alias_declaration: "typedef" $@40 single_alias "end of expression"

  624 optional_public_or_private_enum: %empty
  625                                | "private"
  626                                | "public"

  627 enum_name: "name"

  628 $@41: %empty

  629 $@42: %empty

  630 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list $@42 "end of code block"

  631 $@43: %empty

  632 $@44: %empty

  633 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"

  634 optional_structure_parent: %empty
  635                          | ':' name_in_namespace

  636 optional_sealed: %empty
  637                | "sealed"

  638 structure_name: optional_sealed "name" optional_structure_parent

  639 class_or_struct: "class"
  640                | "struct"
  641                | "template" "class"
  642                | "template" "struct"

  643 optional_public_or_private_structure: %empty
  644                                     | "private"
  645                                     | "public"

  646 optional_struct_variable_declaration_list: %empty
  647                                          | "begin of code block" struct_variable_declaration_list "end of code block"

  648 $@45: %empty

  649 $@46: %empty

  650 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 structure_name $@46 optional_struct_variable_declaration_list

  651 variable_name_with_pos_list: "name"
  652                            | "$i" '(' expr ')'
  653                            | "name" "aka" "name"
  654                            | variable_name_with_pos_list ',' "name"
  655                            | variable_name_with_pos_list ',' "name" "aka" "name"

  656 basic_type_declaration: "bool"
  657                       | "string"
  658                       | "int"
  659                       | "int8"
  660                       | "int16"
  661                       | "int64"
  662                       | "int2"
  663                       | "int3"
  664                       | "int4"
  665                       | "uint"
  666                       | "uint8"
  667                       | "uint16"
  668                       | "uint64"
  669                       | "uint2"
  670                       | "uint3"
  671                       | "uint4"
  672                       | "float"
  673                       | "float2"
  674                       | "float3"
  675                       | "float4"
  676                       | "void"
  677                       | "range"
  678                       | "urange"
  679                       | "range64"
  680                       | "urange64"
  681                       | "double"
  682                       | "bitfield"

  683 enum_basic_type_declaration: "int"
  684                            | "int8"
  685                            | "int16"
  686                            | "uint"
  687                            | "uint8"
  688                            | "uint16"
  689                            | "int64"
  690                            | "uint64"

  691 structure_type_declaration: name_in_namespace

  692 auto_type_declaration: "auto"
  693                      | "auto" '(' "name" ')'
  694                      | "$t" '(' expr ')'

  695 bitfield_bits: "name"
  696              | bitfield_bits "end of expression" "name"

  697 bitfield_alias_bits: %empty
  698                    | bitfield_alias_bits "end of expression"
  699                    | bitfield_alias_bits "name" "end of expression"

  700 $@47: %empty

  701 $@48: %empty

  702 bitfield_type_declaration: "bitfield" '<' $@47 bitfield_bits '>' $@48

  703 c_or_s: ','
  704       | "end of expression"

  705 table_type_pair: type_declaration
  706                | type_declaration c_or_s type_declaration

  707 dim_list: '[' expr ']'
  708         | dim_list '[' expr ']'

  709 type_declaration_no_options: basic_type_declaration
  710                            | auto_type_declaration
  711                            | bitfield_type_declaration
  712                            | structure_type_declaration
  713                            | type_declaration_no_options dim_list
  714                            | type_declaration_no_options '[' ']'

  715 $@49: %empty

  716 $@50: %empty

  717 type_declaration_no_options: "type" '<' $@49 type_declaration '>' $@50
  718                            | "typedecl" '(' expr ')'
  719                            | '$' name_in_namespace '(' optional_expr_list ')'

  720 $@51: %empty

  721 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')'
  722                            | type_declaration_no_options '-' '[' ']'
  723                            | type_declaration_no_options "explicit"
  724                            | type_declaration_no_options "const"
  725                            | type_declaration_no_options '-' "const"
  726                            | type_declaration_no_options '&'
  727                            | type_declaration_no_options '-' '&'
  728                            | type_declaration_no_options '#'
  729                            | type_declaration_no_options "implicit"
  730                            | type_declaration_no_options '-' '#'
  731                            | type_declaration_no_options "==" "const"
  732                            | type_declaration_no_options "==" '&'
  733                            | type_declaration_no_options '?'

  734 $@52: %empty

  735 $@53: %empty

  736 type_declaration_no_options: "smart_ptr" '<' $@52 type_declaration '>' $@53
  737                            | type_declaration_no_options "??"

  738 $@54: %empty

  739 $@55: %empty

  740 type_declaration_no_options: "array" '<' $@54 type_declaration '>' $@55

  741 $@56: %empty

  742 $@57: %empty

  743 type_declaration_no_options: "table" '<' $@56 table_type_pair '>' $@57

  744 $@58: %empty

  745 $@59: %empty

  746 type_declaration_no_options: "iterator" '<' $@58 type_declaration '>' $@59
  747                            | "block"

  748 $@60: %empty

  749 $@61: %empty

  750 type_declaration_no_options: "block" '<' $@60 type_declaration '>' $@61

  751 $@62: %empty

  752 $@63: %empty

  753 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list optional_function_type '>' $@63
  754                            | "function"

  755 $@64: %empty

  756 $@65: %empty

  757 type_declaration_no_options: "function" '<' $@64 type_declaration '>' $@65

  758 $@66: %empty

  759 $@67: %empty

  760 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list optional_function_type '>' $@67
  761                            | "lambda"

  762 $@68: %empty

  763 $@69: %empty

  764 type_declaration_no_options: "lambda" '<' $@68 type_declaration '>' $@69

  765 $@70: %empty

  766 $@71: %empty

  767 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list optional_function_type '>' $@71

  768 $@72: %empty

  769 $@73: %empty

  770 type_declaration_no_options: "tuple" '<' $@72 tuple_type_list '>' $@73

  771 $@74: %empty

  772 $@75: %empty

  773 type_declaration_no_options: "variant" '<' $@74 variant_type_list '>' $@75

  774 type_declaration: type_declaration_no_options
  775                 | type_declaration '|' type_declaration_no_options
  776                 | type_declaration '|' '#'

  777 $@76: %empty

  778 $@77: %empty

  779 $@78: %empty

  780 $@79: %empty

  781 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

  782 $@80: %empty

  783 $@81: %empty

  784 $@82: %empty

  785 $@83: %empty

  786 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

  787 $@84: %empty

  788 $@85: %empty

  789 $@86: %empty

  790 $@87: %empty

  791 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

  792 make_decl: make_struct_decl
  793          | make_dim_decl
  794          | make_table_decl
  795          | array_comprehension
  796          | make_tuple_call

  797 make_struct_fields: "name" copy_or_move expr
  798                   | "name" ":=" expr
  799                   | make_struct_fields ',' "name" copy_or_move expr
  800                   | make_struct_fields ',' "name" ":=" expr
  801                   | "$f" '(' expr ')' copy_or_move expr
  802                   | "$f" '(' expr ')' ":=" expr
  803                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  804                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  805 make_variant_dim: make_struct_fields

  806 make_struct_single: make_struct_fields

  807 make_struct_dim: make_struct_fields
  808                | make_struct_dim "end of expression" make_struct_fields

  809 make_struct_dim_list: '(' make_struct_fields ')'
  810                     | make_struct_dim_list ',' '(' make_struct_fields ')'

  811 make_struct_dim_decl: make_struct_fields
  812                     | make_struct_dim_list optional_comma

  813 optional_make_struct_dim_decl: make_struct_dim_decl
  814                              | %empty

  815 optional_block: %empty
  816               | "where" expr_block

  817 optional_trailing_semicolon_cur_cur: "end of code block" "end of code block"
  818                                    | ";}}"

  819 optional_trailing_semicolon_cur_sqr: "end of code block" ']'
  820                                    | ";}]"

  821 optional_trailing_semicolon_sqr_sqr: ']' ']'
  822                                    | ";]]"

  823 optional_trailing_delim_sqr_sqr: ']' ']'
  824                                | ";]]"
  825                                | ",]]"

  826 optional_trailing_delim_cur_sqr: "end of code block" ']'
  827                                | ";}]"
  828                                | ",}]"

  829 use_initializer: %empty
  830                | "uninitialized"

  831 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  832                 | "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  833                 | "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  834                 | "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  835                 | "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  836                 | "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

  837 $@88: %empty

  838 $@89: %empty

  839 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' use_initializer optional_make_struct_dim_decl ')'

  840 $@90: %empty

  841 $@91: %empty

  842 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer optional_make_struct_dim_decl ')'

  843 $@92: %empty

  844 $@93: %empty

  845 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 '(' make_variant_dim ')'

  846 $@94: %empty

  847 $@95: %empty

  848 make_struct_decl: "default" '<' $@94 type_declaration_no_options '>' $@95 use_initializer

  849 make_tuple: expr
  850           | expr "=>" expr
  851           | make_tuple ',' expr

  852 make_map_tuple: expr "=>" expr
  853               | expr

  854 make_tuple_call: "tuple" '(' expr_list optional_comma ')'

  855 $@96: %empty

  856 $@97: %empty

  857 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' use_initializer optional_make_struct_dim_decl ')'

  858 make_dim: make_tuple
  859         | make_dim "end of expression" make_tuple

  860 make_dim_decl: '[' optional_expr_list ']'
  861              | "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  862              | "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr

  863 $@98: %empty

  864 $@99: %empty

  865 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')'

  866 $@100: %empty

  867 $@101: %empty

  868 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')'

  869 $@102: %empty

  870 $@103: %empty

  871 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options '>' $@103 '(' make_variant_dim ')'
  872              | "array" '(' expr_list optional_comma ')'

  873 $@104: %empty

  874 $@105: %empty

  875 make_dim_decl: "array" '<' $@104 type_declaration_no_options '>' $@105 '(' optional_expr_list ')'
  876              | "fixed_array" '(' expr_list optional_comma ')'

  877 $@106: %empty

  878 $@107: %empty

  879 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' $@107 '(' expr_list optional_comma ')'

  880 make_table: make_map_tuple
  881           | make_table "end of expression" make_map_tuple

  882 expr_map_tuple_list: make_map_tuple
  883                    | expr_map_tuple_list ',' make_map_tuple

  884 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma "end of code block"
  885                | "{{" make_table optional_trailing_semicolon_cur_cur
  886                | "table" '(' optional_expr_map_tuple_list ')'
  887                | "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  888                | "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

  889 array_comprehension_where: %empty
  890                          | "end of expression" "where" expr

  891 optional_comma: %empty
  892               | ','

  893 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  894                    | '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  895                    | "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']'
  896                    | "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'
  897                    | "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"
  898                    | "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 114 130 446
    '#' (35) 728 730 776
    '$' (36) 20 341 719 721
    '%' (37) 36 43 150 458
    '&' (38) 158 344 465 579 588 726 727 732
    '(' (40) 101 112 118 125 126 254 280 281 282 283 310 311 314 315 330 331 332 333 334 335 348 353 406 407 408 409 411 421 422 423 424 425 429 430 431 432 433 434 435 476 477 487 488 489 490 519 521 522 523 524 525 527 528 529 530 531 532 533 534 535 536 560 590 652 693 694 718 719 721 801 802 803 804 809 810 833 834 836 839 842 845 854 857 865 868 871 872 875 876 879 886 887 888
    ')' (41) 101 112 118 125 126 254 280 281 282 283 310 311 314 315 330 331 332 333 334 335 348 353 406 407 408 409 411 421 422 423 424 425 429 430 431 432 433 434 435 476 477 487 488 489 490 519 521 522 523 524 525 527 528 529 530 531 532 533 534 535 536 560 590 652 693 694 718 719 721 801 802 803 804 809 810 833 834 836 839 842 845 854 857 865 868 871 872 875 876 879 886 887 888
    '*' (42) 148 456 486
    '+' (43) 146 448 454
    ',' (44) 52 90 103 121 307 337 350 407 592 593 654 655 703 799 800 803 804 810 851 883 892
    '-' (45) 147 449 455 722 725 727 730
    '.' (46) 44 175 177 178 419 420 421 422 423 424 425 428 479 481 483 529 531 532
    '/' (47) 45 149 457
    ':' (58) 54 55 128 308 309 310 311 492 564 570 580 581 594 595 596 633 635
    "end of expression" (59) 15 16 75 106 226 230 231 238 239 244 245 246 290 295 308 310 312 314 335 553 555 558 562 594 595 597 611 612 613 619 620 623 696 698 699 704 808 859 881 890 893 894 895 896 897 898
    '<' (60) 151 225 261 264 277 320 323 326 329 331 332 334 335 415 418 459 489 490 495 501 506 702 717 721 736 740 743 746 750 753 757 760 764 767 770 773 839 842 845 848 857 865 868 871 875 879 887 888
    '=' (61) 82 94 95 96 97 98 99 101 345 367 389 576 584 613 618
    '>' (62) 152 225 261 264 277 320 323 326 329 331 332 334 335 415 418 460 489 490 495 501 506 702 717 721 736 740 743 746 750 753 757 760 764 767 770 773 839 842 845 848 857 865 868 871 875 879 887 888
    '?' (63) 187 188 492 503 506 507 534 733
    '@' (64) 104 105 342 343 412 415 418 536
    '[' (91) 123 173 406 407 423 478 479 558 707 708 714 722 860 893 894
    ']' (93) 123 173 174 308 309 312 313 352 406 407 423 478 479 480 481 538 558 707 708 714 722 819 821 823 826 860 893 894 895 896
    '^' (94) 160 467
    "begin of code block" (123) 221 222 607 621 630 633 647 781 786 791 884 897
    '|' (124) 159 466 775 776
    "end of code block" (125) 221 222 607 621 630 633 647 781 786 791 817 819 826 884 896 897 898
    '~' (126) 131 447
    error (256) 249 428
    "lexer error" (258)
    "capture" (259) 353
    "struct" (260) 640 642 839 865
    "class" (261) 639 641 842
    "let" (262) 299 302
    "def" (263) 214 555 557
    "while" (264) 79
    "if" (265) 63 75
    "static_if" (266) 64
    "else" (267) 61 67
    "for" (268) 77 893 894 895 896 897 898
    "recover" (269) 298
    "true" (270) 87 98 442
    "false" (271) 88 99 443
    "new" (272) 279 280 281 282 283 284
    "typeinfo" (273) 330 331 332 333 334 335
    "type" (274) 92 329 495 501 506 717
    "in" (275) 77 93 893 894 895 896 897 898
    "is" (276) 183 185 495 496 497 535
    "as" (277) 47 184 186 187 188 498 501 502 503 506 507 533 534
    "elif" (278) 58
    "static_elif" (279) 59
    "array" (280) 740 865 868 871 872 875
    "return" (281) 287 288 289 291 292
    "null" (282) 436
    "break" (283) 285
    "try" (284) 298
    "options" (285) 37
    "table" (286) 743 886 887 888
    "expect" (287) 50
    "const" (288) 544 724 725 731
    "require" (289) 38 108
    "operator" (290) 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188
    "enum" (291) 630 633
    "finally" (292) 222
    "delete" (293) 181 273 274
    "deref" (294) 487
    "typedef" (295) 621 623
    "typedecl" (296) 718
    "with" (297) 80
    "aka" (298) 591 593 653 655
    "assume" (299) 82
    "cast" (300) 320
    "override" (301) 541
    "abstract" (302) 555
    "upcast" (303) 323
    "iterator" (304) 746 894
    "var" (305) 300 303
    "addr" (306) 488
    "continue" (307) 286
    "where" (308) 816 890
    "pass" (309) 246
    "reinterpret" (310) 326
    "module" (311) 22
    "public" (312) 18 49 217 546 606 616 626 645
    "label" (313) 55 56
    "goto" (314) 56 57
    "implicit" (315) 729
    "explicit" (316) 274 723
    "shared" (317) 603
    "private" (318) 19 109 216 547 605 615 625 644
    "smart_ptr" (319) 736
    "unsafe" (320) 78 519
    "inscope" (321) 304
    "static" (322) 549
    "fixed_array" (323) 876 879
    "default" (324) 848
    "uninitialized" (325) 283 430 432 830
    "bool" (326) 189 656
    "void" (327) 676
    "string" (328) 190 657
    "auto" (329) 692 693
    "int" (330) 191 658 683
    "int2" (331) 192 662
    "int3" (332) 193 663
    "int4" (333) 194 664
    "uint" (334) 195 665 686
    "bitfield" (335) 682 702 791
    "uint2" (336) 196 669
    "uint3" (337) 197 670
    "uint4" (338) 198 671
    "float" (339) 199 672
    "float2" (340) 200 673
    "float3" (341) 201 674
    "float4" (342) 202 675
    "range" (343) 203 677
    "urange" (344) 204 678
    "range64" (345) 205 679
    "urange64" (346) 206 680
    "block" (347) 747 750 753
    "int64" (348) 207 661 689
    "uint64" (349) 208 668 690
    "double" (350) 209 681
    "function" (351) 754 757 760
    "lambda" (352) 761 764 767
    "int8" (353) 210 659 684
    "uint8" (354) 211 666 687
    "int16" (355) 212 660 685
    "uint16" (356) 213 667 688
    "tuple" (357) 770 781 854 857 868
    "variant" (358) 773 786 845 871
    "generator" (359) 225 489 490
    "yield" (360) 293 294 296 297
    "sealed" (361) 542 637
    "template" (362) 110 641 642
    "+=" (363) 132 376 397
    "-=" (364) 133 377 398
    "/=" (365) 135 379 400
    "*=" (366) 134 378 399
    "%=" (367) 136 380 401
    "&=" (368) 137 370 391
    "|=" (369) 138 371 392
    "^=" (370) 139 372 393
    "<<" (371) 165 450
    ">>" (372) 166 451
    "++" (373) 161 163 472 474
    "--" (374) 162 164 473 475
    "<=" (375) 156 463
    "<<=" (376) 167 381 402
    ">>=" (377) 168 382 403
    ">=" (378) 157 464
    "==" (379) 154 461 731 732
    "!=" (380) 155 462
    "->" (381) 408 409
    "<-" (382) 289 292 294 297 340 346 368 390 577 585
    "??" (383) 182 491 737
    "?." (384) 176 179 482 483 530 532
    "?[" (385) 174 480 481
    "<|" (386) 515
    " <|" (387) 265
    "$ <|" (388) 268 387
    "@ <|" (389) 266 385
    "@@ <|" (390) 267 386
    "|>" (391) 119 516 517
    ":=" (392) 178 180 347 369 586 798 800 802 804
    "<<<" (393) 169 452
    ">>>" (394) 170 453
    "<<<=" (395) 171 383 404
    ">>>=" (396) 172 384 405
    "=>" (397) 339 340 850 852
    "::" (398) 271 272
    "&&" (399) 115 143 468
    "||" (400) 116 144 469
    "^^" (401) 117 145 470
    "&&=" (402) 140 373 394
    "||=" (403) 141 374 395
    "^^=" (404) 142 375 396
    ".." (405) 153 471
    "$$" (406) 521
    "$i" (407) 411 522 590 652
    "$v" (408) 523
    "$b" (409) 524
    "$a" (410) 525 560
    "$t" (411) 694
    "$c" (412) 527 528 536
    "$f" (413) 529 530 531 532 533 534 535 801 802 803 804
    "..." (414) 526
    "[[" (415) 308 309 312 313 352 538 831 832 833 834 861 895
    "[{" (416) 835 836 862 896
    "{{" (417) 885 898
    "integer constant" <i> (418) 53 54 55 56 85 96 359
    "long integer constant" <i64> (419) 361
    "unsigned integer constant" <ui> (420) 360
    "unsigned long integer constant" <ui64> (421) 362
    "unsigned int8 constant" <ui> (422) 363
    "floating point constant" <fd> (423) 86 97 364
    "double constant" <d> (424) 365
    "name" <s> (425) 21 39 47 82 84 91 95 129 177 178 179 185 186 188 270 271 272 306 307 331 332 334 335 344 345 346 347 348 408 409 419 420 421 422 423 482 483 497 498 503 518 564 570 589 591 592 593 612 613 618 627 638 651 653 654 655 693 695 696 699 781 786 791 797 798 799 800
    "keyword" <s> (426) 40 250 261
    "type function" <s> (427) 41 264
    "start of the string" (428) 27 28 32
    STRING_CHARACTER <ch> (429) 23 25 33 34
    STRING_CHARACTER_ESC (430) 24 26
    "end of the string" (431) 27 28 32
    "{" (432) 31
    "}" (433) 31
    "end of failed eader macro" (434)
    ";}}" (435) 818
    ";}]" (436) 820 827
    ";]]" (437) 822 824
    ",]]" (438) 825
    ",}]" (439) 828
    UNARY_MINUS (440)
    UNARY_PLUS (441)
    PRE_INC (442)
    PRE_DEC (443)
    POST_INC (444)
    POST_DEC (445)
    DEREF (446)


Nonterminals, with rules where they appear

    $accept (219)
        on left: 0
    program (220)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    top_level_reader_macro (221)
        on left: 16
        on right: 14
    optional_public_or_private_module <b> (222)
        on left: 17 18 19
        on right: 22
    module_name <s> (223)
        on left: 20 21
        on right: 22
    module_declaration (224)
        on left: 22
        on right: 2
    character_sequence <s> (225)
        on left: 23 24 25 26
        on right: 25 26 27 30
    string_constant <s> (226)
        on left: 27 28
        on right: 83 94
    string_builder_body <pExpression> (227)
        on left: 29 30 31
        on right: 30 31 32
    string_builder <pExpression> (228)
        on left: 32
        on right: 440
    reader_character_sequence (229)
        on left: 33 34
        on right: 34 36
    expr_reader <pExpression> (230)
        on left: 36
        on right: 16 439
    $@1 (231)
        on left: 35
        on right: 36
    options_declaration (232)
        on left: 37
        on right: 9
    require_declaration (233)
        on left: 38
        on right: 8
    keyword_or_name <s> (234)
        on left: 39 40 41
        on right: 42 44 45
    require_module_name <s> (235)
        on left: 42 43 44 45
        on right: 43 44 45 46 47
    require_module (236)
        on left: 46 47
        on right: 38
    is_public_module <b> (237)
        on left: 48 49
        on right: 46 47
    expect_declaration (238)
        on left: 50
        on right: 7
    expect_list (239)
        on left: 51 52
        on right: 50 52
    expect_error (240)
        on left: 53 54
        on right: 51 52
    expression_label <pExpression> (241)
        on left: 55
        on right: 244
    expression_goto <pExpression> (242)
        on left: 56 57
        on right: 245
    elif_or_static_elif <b> (243)
        on left: 58 59
        on right: 62
    expression_else <pExpression> (244)
        on left: 60 61 62
        on right: 62 73
    if_or_static_if <b> (245)
        on left: 63 64
        on right: 73
    expression_else_one_liner <pExpression> (246)
        on left: 65 67
        on right: 75
    $@2 (247)
        on left: 66
        on right: 67
    expression_if_one_liner <pExpression> (248)
        on left: 68 69 70 71 72
        on right: 67 75
    expression_if_then_else <pExpression> (249)
        on left: 73 75
        on right: 242
    $@3 (250)
        on left: 74
        on right: 75
    expression_for_loop <pExpression> (251)
        on left: 77
        on right: 237
    $@4 (252)
        on left: 76
        on right: 77
    expression_unsafe <pExpression> (253)
        on left: 78
        on right: 234
    expression_while_loop <pExpression> (254)
        on left: 79
        on right: 233
    expression_with <pExpression> (255)
        on left: 80
        on right: 235
    expression_with_alias <pExpression> (256)
        on left: 82
        on right: 236
    $@5 (257)
        on left: 81
        on right: 82
    annotation_argument_value <aa> (258)
        on left: 83 84 85 86 87 88
        on right: 89 90
    annotation_argument_value_list <aaList> (259)
        on left: 89 90
        on right: 90 101
    annotation_argument_name <s> (260)
        on left: 91 92 93
        on right: 94 95 96 97 98 99 100 101
    annotation_argument <aa> (261)
        on left: 94 95 96 97 98 99 100 101
        on right: 102 103 104 105
    annotation_argument_list <aaList> (262)
        on left: 102 103
        on right: 37 103 112 538
    metadata_argument_list <aaList> (263)
        on left: 104 105 106
        on right: 105 106 539
    annotation_declaration_name <s> (264)
        on left: 107 108 109 110
        on right: 111 112
    annotation_declaration_basic <fa> (265)
        on left: 111 112
        on right: 113
    annotation_declaration <fa> (266)
        on left: 113 114 115 116 117 118 119
        on right: 114 115 116 117 118 119 120 121
    annotation_list <faList> (267)
        on left: 120 121
        on right: 121 123 558
    optional_annotation_list <faList> (268)
        on left: 122 123
        on right: 214 355 356 358 555 557 630 633 650
    optional_function_argument_list <pVarDeclList> (269)
        on left: 124 125 126
        on right: 218 355 356 358 418 753 760 767
    optional_function_type <pTypeDecl> (270)
        on left: 127 128
        on right: 218 355 356 358 418 753 760 767
    function_name <s> (271)
        on left: 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213
        on right: 218
    global_function_declaration (272)
        on left: 214
        on right: 6
    optional_public_or_private_function <b> (273)
        on left: 215 216 217
        on right: 220
    function_declaration_header <pFuncDecl> (274)
        on left: 218
        on right: 220 555 557
    function_declaration <pFuncDecl> (275)
        on left: 220
        on right: 214
    $@6 (276)
        on left: 219
        on right: 220
    expression_block <pExpression> (277)
        on left: 221 222
        on right: 61 62 73 77 78 79 80 220 250 298 338 354 358 557
    expr_call_pipe <pExpression> (278)
        on left: 223 224 225
        on right: 269 388
    expression_any <pExpression> (279)
        on left: 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246
        on right: 248
    expressions <pExpression> (280)
        on left: 247 248 249
        on right: 221 222 248 249
    expr_keyword <pExpression> (281)
        on left: 250
        on right: 228
    optional_expr_list <pExpression> (282)
        on left: 251 252
        on right: 254 719 721 860 875
    optional_expr_list_in_braces <pExpression> (283)
        on left: 253 254
        on right: 264
    optional_expr_map_tuple_list <pExpression> (284)
        on left: 255 256
        on right: 886 887 888
    type_declaration_no_options_list <pTypeDeclList> (285)
        on left: 257 258
        on right: 258 261 264 721
    expression_keyword <pExpression> (286)
        on left: 261 264
        on right: 224 520
    $@7 (287)
        on left: 259
        on right: 261
    $@8 (288)
        on left: 260
        on right: 261
    $@9 (289)
        on left: 262
        on right: 264
    $@10 (290)
        on left: 263
        on right: 264
    expr_pipe <pExpression> (291)
        on left: 265 266 267 268 269
        on right: 227 291 292 296 297 309 311 313 315 583 596 598
    name_in_namespace <s> (292)
        on left: 270 271 272
        on right: 36 107 330 331 332 333 334 335 406 407 410 429 430 431 432 433 437 518 635 691 719 721
    expression_delete <pExpression> (293)
        on left: 273 274
        on right: 231
    new_type_declaration <pTypeDecl> (294)
        on left: 277 278
        on right: 279 280 281 282 283
    $@11 (295)
        on left: 275
        on right: 277
    $@12 (296)
        on left: 276
        on right: 277
    expr_new <pExpression> (297)
        on left: 279 280 281 282 283 284
        on right: 511
    expression_break <pExpression> (298)
        on left: 285
        on right: 71 238
    expression_continue <pExpression> (299)
        on left: 286
        on right: 72 239
    expression_return_no_pipe <pExpression> (300)
        on left: 287 288 289
        on right: 69 290
    expression_return <pExpression> (301)
        on left: 290 291 292
        on right: 240
    expression_yield_no_pipe <pExpression> (302)
        on left: 293 294
        on right: 70 295
    expression_yield <pExpression> (303)
        on left: 295 296 297
        on right: 241
    expression_try_catch <pExpression> (304)
        on left: 298
        on right: 243
    kwd_let_var_or_nothing <b> (305)
        on left: 299 300 301
        on right: 559
    kwd_let <b> (306)
        on left: 302 303
        on right: 316 317 607 609
    optional_in_scope <b> (307)
        on left: 304 305
        on right: 316 317
    tuple_expansion <pNameList> (308)
        on left: 306 307
        on right: 307 308 309 310 311 312 313 314 315
    tuple_expansion_variable_declaration <pVarDecl> (309)
        on left: 308 309 310 311 312 313 314 315
        on right: 317
    expression_let <pExpression> (310)
        on left: 316 317
        on right: 232
    expr_cast <pExpression> (311)
        on left: 320 323 326
        on right: 510
    $@13 (312)
        on left: 318
        on right: 320
    $@14 (313)
        on left: 319
        on right: 320
    $@15 (314)
        on left: 321
        on right: 323
    $@16 (315)
        on left: 322
        on right: 323
    $@17 (316)
        on left: 324
        on right: 326
    $@18 (317)
        on left: 325
        on right: 326
    expr_type_decl <pExpression> (318)
        on left: 329
        on right: 509
    $@19 (319)
        on left: 327
        on right: 329
    $@20 (320)
        on left: 328
        on right: 329
    expr_type_info <pExpression> (321)
        on left: 330 331 332 333 334 335
        on right: 508
    expr_list <pExpression> (322)
        on left: 336 337
        on right: 77 252 281 288 289 337 407 409 422 425 433 435 476 528 854 872 876 879 893 894 895 896 897 898
    block_or_simple_block <pExpression> (323)
        on left: 338 339 340
        on right: 355 356
    block_or_lambda <i> (324)
        on left: 341 342 343
        on right: 355 356 358
    capture_entry <pCapt> (325)
        on left: 344 345 346 347 348
        on right: 349 350
    capture_list <pCaptList> (326)
        on left: 349 350
        on right: 350 352 353
    optional_capture_list <pCaptList> (327)
        on left: 351 352 353
        on right: 225 355 356 358 489 490
    expr_block <pExpression> (328)
        on left: 354 355
        on right: 265 266 267 268 385 386 387 816
    expr_full_block <pExpression> (329)
        on left: 356
        on right: 514
    expr_full_block_assumed_piped <pExpression> (330)
        on left: 358
        on right: 223 224 225
    $@21 (331)
        on left: 357
        on right: 358
    expr_numeric_const <pExpression> (332)
        on left: 359 360 361 362 363 364 365
        on right: 438
    expr_assign <pExpression> (333)
        on left: 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384
        on right: 230 265
    expr_assign_pipe_right <pExpression> (334)
        on left: 385 386 387 388
        on right: 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405
    expr_assign_pipe <pExpression> (335)
        on left: 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405
        on right: 229
    expr_named_call <pExpression> (336)
        on left: 406 407
        on right: 513
    expr_method_call <pExpression> (337)
        on left: 408 409
        on right: 512
    func_addr_name <pExpression> (338)
        on left: 410 411
        on right: 412 415 418
    func_addr_expr <pExpression> (339)
        on left: 412 415 418
        on right: 484
    $@22 (340)
        on left: 413
        on right: 415
    $@23 (341)
        on left: 414
        on right: 415
    $@24 (342)
        on left: 416
        on right: 418
    $@25 (343)
        on left: 417
        on right: 418
    expr_field <pExpression> (344)
        on left: 419 420 421 422 423 424 425 428
        on right: 444
    $@26 (345)
        on left: 426
        on right: 428
    $@27 (346)
        on left: 427
        on right: 428
    expr_call <pExpression> (347)
        on left: 429 430 431 432 433 434 435
        on right: 485
    expr <pExpression> (348)
        on left: 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 495 496 497 498 501 502 503 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520
        on right: 31 57 62 68 73 75 79 80 82 223 250 261 273 274 293 294 308 310 312 314 320 323 326 330 331 332 333 334 335 336 337 339 340 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 408 409 411 419 420 421 422 423 424 425 428 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 478 479 480 481 482 483 486 487 488 490 491 492 495 496 497 498 501 502 503 506 507 515 516 517 519 521 522 523 524 525 527 528 529 530 531 532 533 534 535 536 560 581 582 590 595 597 613 652 694 707 708 718 797 798 799 800 801 802 803 804 849 850 851 852 853 890 893 894 895 896
    $@28 (349)
        on left: 493
        on right: 495
    $@29 (350)
        on left: 494
        on right: 495
    $@30 (351)
        on left: 499
        on right: 501
    $@31 (352)
        on left: 500
        on right: 501
    $@32 (353)
        on left: 504
        on right: 506
    $@33 (354)
        on left: 505
        on right: 506
    expr_mtag <pExpression> (355)
        on left: 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536
        on right: 445
    optional_field_annotation <aaList> (356)
        on left: 537 538 539
        on right: 550 559 601 609
    optional_override <i> (357)
        on left: 540 541 542
        on right: 550 557
    optional_constant <b> (358)
        on left: 543 544
        on right: 555 557
    optional_public_or_private_member_variable <b> (359)
        on left: 545 546 547
        on right: 550 555 557
    optional_static_member_variable <b> (360)
        on left: 548 549
        on right: 550 557
    structure_variable_declaration <pVarDecl> (361)
        on left: 550
        on right: 553
    struct_variable_declaration_list <pVarDeclList> (362)
        on left: 551 553 555 557 558
        on right: 553 555 557 558 647
    $@34 (363)
        on left: 552
        on right: 553
    $@35 (364)
        on left: 554
        on right: 555
    $@36 (365)
        on left: 556
        on right: 557
    function_argument_declaration <pVarDecl> (366)
        on left: 559 560
        on right: 561 562
    function_argument_list <pVarDeclList> (367)
        on left: 561 562
        on right: 126 562
    tuple_type <pVarDecl> (368)
        on left: 563 564
        on right: 565 566 569
    tuple_type_list <pVarDeclList> (369)
        on left: 565 566
        on right: 566 770
    tuple_alias_type_list <pVarDeclList> (370)
        on left: 567 568 569
        on right: 568 569 781
    variant_type <pVarDecl> (371)
        on left: 570
        on right: 571 572 575
    variant_type_list <pVarDeclList> (372)
        on left: 571 572
        on right: 572 773
    variant_alias_type_list <pVarDeclList> (373)
        on left: 573 574 575
        on right: 574 575 786
    copy_or_move <b> (374)
        on left: 576 577
        on right: 581 582 583 797 799 801 803
    variable_declaration <pVarDecl> (375)
        on left: 578 579 580 581 582 583
        on right: 550 559
    copy_or_move_or_clone <i> (376)
        on left: 584 585 586
        on right: 308 309 310 311 312 313 314 315 595 596 597 598
    optional_ref <b> (377)
        on left: 587 588
        on right: 312 313 314 315 597 598
    let_variable_name_with_pos_list <pNameWithPosList> (378)
        on left: 589 590 591 592 593
        on right: 592 593 594 595 596 597 598
    let_variable_declaration <pVarDecl> (379)
        on left: 594 595 596 597 598
        on right: 316 601 609
    global_variable_declaration_list <pVarDeclList> (380)
        on left: 599 601
        on right: 601 607
    $@37 (381)
        on left: 600
        on right: 601
    optional_shared <b> (382)
        on left: 602 603
        on right: 22 607 609
    optional_public_or_private_variable <b> (383)
        on left: 604 605 606
        on right: 607 609
    global_let (384)
        on left: 607 609
        on right: 5
    $@38 (385)
        on left: 608
        on right: 609
    enum_list <pEnum> (386)
        on left: 610 611 612 613
        on right: 611 612 613 630 633
    optional_public_or_private_alias <b> (387)
        on left: 614 615 616
        on right: 618 781 786 791
    single_alias (388)
        on left: 618
        on right: 619 620 623
    $@39 (389)
        on left: 617
        on right: 618
    alias_list (390)
        on left: 619 620
        on right: 620 621
    alias_declaration (391)
        on left: 621 623
        on right: 10
    $@40 (392)
        on left: 622
        on right: 623
    optional_public_or_private_enum <b> (393)
        on left: 624 625 626
        on right: 630 633
    enum_name <pEnum> (394)
        on left: 627
        on right: 630 633
    enum_declaration (395)
        on left: 630 633
        on right: 4
    $@41 (396)
        on left: 628
        on right: 630
    $@42 (397)
        on left: 629
        on right: 630
    $@43 (398)
        on left: 631
        on right: 633
    $@44 (399)
        on left: 632
        on right: 633
    optional_structure_parent <s> (400)
        on left: 634 635
        on right: 638
    optional_sealed <b> (401)
        on left: 636 637
        on right: 638
    structure_name <pStructure> (402)
        on left: 638
        on right: 650
    class_or_struct <i> (403)
        on left: 639 640 641 642
        on right: 650
    optional_public_or_private_structure <b> (404)
        on left: 643 644 645
        on right: 650
    optional_struct_variable_declaration_list <pVarDeclList> (405)
        on left: 646 647
        on right: 650
    structure_declaration (406)
        on left: 650
        on right: 3
    $@45 (407)
        on left: 648
        on right: 650
    $@46 (408)
        on left: 649
        on right: 650
    variable_name_with_pos_list <pNameWithPosList> (409)
        on left: 651 652 653 654 655
        on right: 77 578 579 580 581 582 583 654 655 893 894 895 896 897 898
    basic_type_declaration <type> (410)
        on left: 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682
        on right: 424 425 434 435 496 502 507 517 709
    enum_basic_type_declaration <type> (411)
        on left: 683 684 685 686 687 688 689 690
        on right: 633
    structure_type_declaration <pTypeDecl> (412)
        on left: 691
        on right: 278 712
    auto_type_declaration <pTypeDecl> (413)
        on left: 692 693 694
        on right: 710
    bitfield_bits <pNameList> (414)
        on left: 695 696
        on right: 696 702
    bitfield_alias_bits <pNameList> (415)
        on left: 697 698 699
        on right: 698 699 791
    bitfield_type_declaration <pTypeDecl> (416)
        on left: 702
        on right: 711
    $@47 (417)
        on left: 700
        on right: 702
    $@48 (418)
        on left: 701
        on right: 702
    c_or_s (419)
        on left: 703 704
        on right: 258 332 566 568 569 572 574 575 706 888
    table_type_pair <aTypePair> (420)
        on left: 705 706
        on right: 743
    dim_list <pTypeDecl> (421)
        on left: 707 708
        on right: 708 713
    type_declaration_no_options <pTypeDecl> (422)
        on left: 709 710 711 712 713 714 717 718 719 721 722 723 724 725 726 727 728 729 730 731 732 733 736 737 740 743 746 747 750 753 754 757 760 761 764 767 770 773
        on right: 225 308 309 310 311 320 323 326 415 489 490 495 594 595 596 713 714 722 723 724 725 726 727 728 729 730 731 732 733 737 774 775 831 832 833 834 835 836 839 842 845 848 857 861 862 865 868 871 875 879 887 888
    $@49 (423)
        on left: 715
        on right: 717
    $@50 (424)
        on left: 716
        on right: 717
    $@51 (425)
        on left: 720
        on right: 721
    $@52 (426)
        on left: 734
        on right: 736
    $@53 (427)
        on left: 735
        on right: 736
    $@54 (428)
        on left: 738
        on right: 740
    $@55 (429)
        on left: 739
        on right: 740
    $@56 (430)
        on left: 741
        on right: 743
    $@57 (431)
        on left: 742
        on right: 743
    $@58 (432)
        on left: 744
        on right: 746
    $@59 (433)
        on left: 745
        on right: 746
    $@60 (434)
        on left: 748
        on right: 750
    $@61 (435)
        on left: 749
        on right: 750
    $@62 (436)
        on left: 751
        on right: 753
    $@63 (437)
        on left: 752
        on right: 753
    $@64 (438)
        on left: 755
        on right: 757
    $@65 (439)
        on left: 756
        on right: 757
    $@66 (440)
        on left: 758
        on right: 760
    $@67 (441)
        on left: 759
        on right: 760
    $@68 (442)
        on left: 762
        on right: 764
    $@69 (443)
        on left: 763
        on right: 764
    $@70 (444)
        on left: 765
        on right: 767
    $@71 (445)
        on left: 766
        on right: 767
    $@72 (446)
        on left: 768
        on right: 770
    $@73 (447)
        on left: 769
        on right: 770
    $@74 (448)
        on left: 771
        on right: 773
    $@75 (449)
        on left: 772
        on right: 773
    type_declaration <pTypeDecl> (450)
        on left: 774 775 776
        on right: 128 257 258 277 329 501 506 563 564 570 580 581 618 705 706 717 736 740 746 750 757 764 775 776
    tuple_alias_declaration (451)
        on left: 781
        on right: 12
    $@76 (452)
        on left: 777
        on right: 781
    $@77 (453)
        on left: 778
        on right: 781
    $@78 (454)
        on left: 779
        on right: 781
    $@79 (455)
        on left: 780
        on right: 781
    variant_alias_declaration (456)
        on left: 786
        on right: 11
    $@80 (457)
        on left: 782
        on right: 786
    $@81 (458)
        on left: 783
        on right: 786
    $@82 (459)
        on left: 784
        on right: 786
    $@83 (460)
        on left: 785
        on right: 786
    bitfield_alias_declaration (461)
        on left: 791
        on right: 13
    $@84 (462)
        on left: 787
        on right: 791
    $@85 (463)
        on left: 788
        on right: 791
    $@86 (464)
        on left: 789
        on right: 791
    $@87 (465)
        on left: 790
        on right: 791
    make_decl <pExpression> (466)
        on left: 792 793 794 795 796
        on right: 284 441
    make_struct_fields <pMakeStruct> (467)
        on left: 797 798 799 800 801 802 803 804
        on right: 406 407 423 799 800 803 804 805 806 807 808 809 810 811
    make_variant_dim <pExpression> (468)
        on left: 805
        on right: 845 871
    make_struct_single <pExpression> (469)
        on left: 806
        on right: 282 283 431 432 477
    make_struct_dim <pExpression> (470)
        on left: 807 808
        on right: 808 831 834 835 836
    make_struct_dim_list <pExpression> (471)
        on left: 809 810
        on right: 810 812
    make_struct_dim_decl <pExpression> (472)
        on left: 811 812
        on right: 813
    optional_make_struct_dim_decl <pExpression> (473)
        on left: 813 814
        on right: 839 842 857 865 868
    optional_block <pExpression> (474)
        on left: 815 816
        on right: 831 832 833 834 835 836
    optional_trailing_semicolon_cur_cur (475)
        on left: 817 818
        on right: 885
    optional_trailing_semicolon_cur_sqr (476)
        on left: 819 820
        on right: 862
    optional_trailing_semicolon_sqr_sqr (477)
        on left: 821 822
        on right: 861
    optional_trailing_delim_sqr_sqr (478)
        on left: 823 824 825
        on right: 831 832 833 834
    optional_trailing_delim_cur_sqr (479)
        on left: 826 827 828
        on right: 835 836
    use_initializer <b> (480)
        on left: 829 830
        on right: 280 839 842 848 857 865 868
    make_struct_decl <pExpression> (481)
        on left: 831 832 833 834 835 836 839 842 845 848
        on right: 792
    $@88 (482)
        on left: 837
        on right: 839
    $@89 (483)
        on left: 838
        on right: 839
    $@90 (484)
        on left: 840
        on right: 842
    $@91 (485)
        on left: 841
        on right: 842
    $@92 (486)
        on left: 843
        on right: 845
    $@93 (487)
        on left: 844
        on right: 845
    $@94 (488)
        on left: 846
        on right: 848
    $@95 (489)
        on left: 847
        on right: 848
    make_tuple <pExpression> (490)
        on left: 849 850 851
        on right: 851 858 859
    make_map_tuple <pExpression> (491)
        on left: 852 853
        on right: 880 881 882 883 897 898
    make_tuple_call <pExpression> (492)
        on left: 854 857
        on right: 796
    $@96 (493)
        on left: 855
        on right: 857
    $@97 (494)
        on left: 856
        on right: 857
    make_dim <pExpression> (495)
        on left: 858 859
        on right: 859 861 862
    make_dim_decl <pExpression> (496)
        on left: 860 861 862 865 868 871 872 875 876 879
        on right: 793
    $@98 (497)
        on left: 863
        on right: 865
    $@99 (498)
        on left: 864
        on right: 865
    $@100 (499)
        on left: 866
        on right: 868
    $@101 (500)
        on left: 867
        on right: 868
    $@102 (501)
        on left: 869
        on right: 871
    $@103 (502)
        on left: 870
        on right: 871
    $@104 (503)
        on left: 873
        on right: 875
    $@105 (504)
        on left: 874
        on right: 875
    $@106 (505)
        on left: 877
        on right: 879
    $@107 (506)
        on left: 878
        on right: 879
    make_table <pExpression> (507)
        on left: 880 881
        on right: 881 885
    expr_map_tuple_list <pExpression> (508)
        on left: 882 883
        on right: 256 883 884
    make_table_decl <pExpression> (509)
        on left: 884 885 886 887 888
        on right: 794
    array_comprehension_where <pExpression> (510)
        on left: 889 890
        on right: 893 894 895 896 897 898
    optional_comma <b> (511)
        on left: 891 892
        on right: 252 254 256 476 812 854 872 876 879 884
    array_comprehension <pExpression> (512)
        on left: 893 894 895 896 897 898
        on right: 795


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration
    9        | program . options_declaration
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . tuple_alias_declaration
   13        | program . bitfield_alias_declaration
   14        | program . top_level_reader_macro
   15        | program . "end of expression"

    $end                 shift, and go to state 2
    "let"                shift, and go to state 3
    "options"            shift, and go to state 4
    "expect"             shift, and go to state 5
    "require"            shift, and go to state 6
    "typedef"            shift, and go to state 7
    "var"                shift, and go to state 8
    "module"             shift, and go to state 9
    "bitfield"           shift, and go to state 10
    "tuple"              shift, and go to state 11
    "variant"            shift, and go to state 12
    "end of expression"  shift, and go to state 13
    '%'                  shift, and go to state 14
    '['                  shift, and go to state 15

    $default  reduce using rule 122 (optional_annotation_list)

    top_level_reader_macro       go to state 16
    module_declaration           go to state 17
    expr_reader                  go to state 18
    options_declaration          go to state 19
    require_declaration          go to state 20
    expect_declaration           go to state 21
    optional_annotation_list     go to state 22
    global_function_declaration  go to state 23
    kwd_let                      go to state 24
    global_let                   go to state 25
    alias_declaration            go to state 26
    enum_declaration             go to state 27
    structure_declaration        go to state 28
    tuple_alias_declaration      go to state 29
    variant_alias_declaration    go to state 30
    bitfield_alias_declaration   go to state 31


State 2

    0 $accept: program $end .

    $default  accept


State 3

  302 kwd_let: "let" .

    $default  reduce using rule 302 (kwd_let)


State 4

   37 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 37


State 5

   50 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 38

    expect_list   go to state 39
    expect_error  go to state 40


State 6

   38 require_declaration: "require" . require_module

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43
    '%'              shift, and go to state 44

    keyword_or_name      go to state 45
    require_module_name  go to state 46
    require_module       go to state 47


State 7

  621 alias_declaration: "typedef" . "begin of code block" alias_list "end of code block"
  623                  | "typedef" . $@40 single_alias "end of expression"

    "begin of code block"  shift, and go to state 48

    $default  reduce using rule 622 ($@40)

    $@40  go to state 49


State 8

  303 kwd_let: "var" .

    $default  reduce using rule 303 (kwd_let)


State 9

   22 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 50
    '$'     shift, and go to state 51

    module_name  go to state 52


State 10

  791 bitfield_alias_declaration: "bitfield" . optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 614 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 55


State 11

  781 tuple_alias_declaration: "tuple" . optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 614 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 56


State 12

  786 variant_alias_declaration: "variant" . optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 614 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 57


State 13

   15 program: program "end of expression" .

    $default  reduce using rule 15 (program)


State 14

   36 expr_reader: '%' . name_in_namespace $@1 reader_character_sequence

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 60


State 15

  123 optional_annotation_list: '[' . annotation_list ']'

    "require"   shift, and go to state 61
    "private"   shift, and go to state 62
    "template"  shift, and go to state 63
    "|>"        shift, and go to state 64
    "::"        shift, and go to state 58
    "name"      shift, and go to state 59
    '!'         shift, and go to state 65
    '('         shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 69
    annotation_list               go to state 70
    name_in_namespace             go to state 71


State 16

   14 program: program top_level_reader_macro .

    $default  reduce using rule 14 (program)


State 17

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 18

   16 top_level_reader_macro: expr_reader . "end of expression"

    "end of expression"  shift, and go to state 72


State 19

    9 program: program options_declaration .

    $default  reduce using rule 9 (program)


State 20

    8 program: program require_declaration .

    $default  reduce using rule 8 (program)


State 21

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 22

  214 global_function_declaration: optional_annotation_list . "def" function_declaration
  630 enum_declaration: optional_annotation_list . "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list $@42 "end of code block"
  633                 | optional_annotation_list . "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"
  650 structure_declaration: optional_annotation_list . class_or_struct optional_public_or_private_structure $@45 structure_name $@46 optional_struct_variable_declaration_list

    "struct"    shift, and go to state 73
    "class"     shift, and go to state 74
    "def"       shift, and go to state 75
    "enum"      shift, and go to state 76
    "template"  shift, and go to state 77

    class_or_struct  go to state 78


State 23

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 24

  607 global_let: kwd_let . optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"
  609           | kwd_let . optional_shared optional_public_or_private_variable $@38 optional_field_annotation let_variable_declaration

    "shared"  shift, and go to state 79

    $default  reduce using rule 602 (optional_shared)

    optional_shared  go to state 80


State 25

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 26

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 27

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 28

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 29

   12 program: program tuple_alias_declaration .

    $default  reduce using rule 12 (program)


State 30

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 31

   13 program: program bitfield_alias_declaration .

    $default  reduce using rule 13 (program)


State 32

   92 annotation_argument_name: "type" .

    $default  reduce using rule 92 (annotation_argument_name)


State 33

   93 annotation_argument_name: "in" .

    $default  reduce using rule 93 (annotation_argument_name)


State 34

   91 annotation_argument_name: "name" .

    $default  reduce using rule 91 (annotation_argument_name)


State 35

   94 annotation_argument: annotation_argument_name . '=' string_constant
   95                    | annotation_argument_name . '=' "name"
   96                    | annotation_argument_name . '=' "integer constant"
   97                    | annotation_argument_name . '=' "floating point constant"
   98                    | annotation_argument_name . '=' "true"
   99                    | annotation_argument_name . '=' "false"
  100                    | annotation_argument_name .
  101                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 81

    $default  reduce using rule 100 (annotation_argument)


State 36

  102 annotation_argument_list: annotation_argument .

    $default  reduce using rule 102 (annotation_argument_list)


State 37

   37 options_declaration: "options" annotation_argument_list .
  103 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 82

    $default  reduce using rule 37 (options_declaration)


State 38

   53 expect_error: "integer constant" .
   54             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 83

    $default  reduce using rule 53 (expect_error)


State 39

   50 expect_declaration: "expect" expect_list .
   52 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 84

    $default  reduce using rule 50 (expect_declaration)


State 40

   51 expect_list: expect_error .

    $default  reduce using rule 51 (expect_list)


State 41

   39 keyword_or_name: "name" .

    $default  reduce using rule 39 (keyword_or_name)


State 42

   40 keyword_or_name: "keyword" .

    $default  reduce using rule 40 (keyword_or_name)


State 43

   41 keyword_or_name: "type function" .

    $default  reduce using rule 41 (keyword_or_name)


State 44

   43 require_module_name: '%' . require_module_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43
    '%'              shift, and go to state 44

    keyword_or_name      go to state 45
    require_module_name  go to state 85


State 45

   42 require_module_name: keyword_or_name .

    $default  reduce using rule 42 (require_module_name)


State 46

   44 require_module_name: require_module_name . '.' keyword_or_name
   45                    | require_module_name . '/' keyword_or_name
   46 require_module: require_module_name . is_public_module
   47               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 86
    "public"  shift, and go to state 87
    '/'       shift, and go to state 88
    '.'       shift, and go to state 89

    $default  reduce using rule 48 (is_public_module)

    is_public_module  go to state 90


State 47

   38 require_declaration: "require" require_module .

    $default  reduce using rule 38 (require_declaration)


State 48

  621 alias_declaration: "typedef" "begin of code block" . alias_list "end of code block"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 614 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 91
    single_alias                      go to state 92
    alias_list                        go to state 93


State 49

  623 alias_declaration: "typedef" $@40 . single_alias "end of expression"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 614 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 91
    single_alias                      go to state 94


State 50

   21 module_name: "name" .

    $default  reduce using rule 21 (module_name)


State 51

   20 module_name: '$' .

    $default  reduce using rule 20 (module_name)


State 52

   22 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 79

    $default  reduce using rule 602 (optional_shared)

    optional_shared  go to state 95


State 53

  616 optional_public_or_private_alias: "public" .

    $default  reduce using rule 616 (optional_public_or_private_alias)


State 54

  615 optional_public_or_private_alias: "private" .

    $default  reduce using rule 615 (optional_public_or_private_alias)


State 55

  791 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias . $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

    $default  reduce using rule 787 ($@84)

    $@84  go to state 96


State 56

  781 tuple_alias_declaration: "tuple" optional_public_or_private_alias . $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

    $default  reduce using rule 777 ($@76)

    $@76  go to state 97


State 57

  786 variant_alias_declaration: "variant" optional_public_or_private_alias . $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

    $default  reduce using rule 782 ($@80)

    $@80  go to state 98


State 58

  272 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 99


State 59

  270 name_in_namespace: "name" .
  271                  | "name" . "::" "name"

    "::"  shift, and go to state 100

    "::"      [reduce using rule 270 (name_in_namespace)]
    $default  reduce using rule 270 (name_in_namespace)


State 60

   36 expr_reader: '%' name_in_namespace . $@1 reader_character_sequence

    $default  reduce using rule 35 ($@1)

    $@1  go to state 101


State 61

  108 annotation_declaration_name: "require" .

    $default  reduce using rule 108 (annotation_declaration_name)


State 62

  109 annotation_declaration_name: "private" .

    $default  reduce using rule 109 (annotation_declaration_name)


State 63

  110 annotation_declaration_name: "template" .

    $default  reduce using rule 110 (annotation_declaration_name)


State 64

  119 annotation_declaration: "|>" . annotation_declaration

    "require"   shift, and go to state 61
    "private"   shift, and go to state 62
    "template"  shift, and go to state 63
    "|>"        shift, and go to state 64
    "::"        shift, and go to state 58
    "name"      shift, and go to state 59
    '!'         shift, and go to state 65
    '('         shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 102
    name_in_namespace             go to state 71


State 65

  114 annotation_declaration: '!' . annotation_declaration

    "require"   shift, and go to state 61
    "private"   shift, and go to state 62
    "template"  shift, and go to state 63
    "|>"        shift, and go to state 64
    "::"        shift, and go to state 58
    "name"      shift, and go to state 59
    '!'         shift, and go to state 65
    '('         shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 103
    name_in_namespace             go to state 71


State 66

  118 annotation_declaration: '(' . annotation_declaration ')'

    "require"   shift, and go to state 61
    "private"   shift, and go to state 62
    "template"  shift, and go to state 63
    "|>"        shift, and go to state 64
    "::"        shift, and go to state 58
    "name"      shift, and go to state 59
    '!'         shift, and go to state 65
    '('         shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 104
    name_in_namespace             go to state 71


State 67

  111 annotation_declaration_basic: annotation_declaration_name .
  112                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 105

    $default  reduce using rule 111 (annotation_declaration_basic)


State 68

  113 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 113 (annotation_declaration)


State 69

  115 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  116                       | annotation_declaration . "||" annotation_declaration
  117                       | annotation_declaration . "^^" annotation_declaration
  120 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 106
    "||"  shift, and go to state 107
    "^^"  shift, and go to state 108

    $default  reduce using rule 120 (annotation_list)


State 70

  121 annotation_list: annotation_list . ',' annotation_declaration
  123 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 109
    ']'  shift, and go to state 110


State 71

  107 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 107 (annotation_declaration_name)


State 72

   16 top_level_reader_macro: expr_reader "end of expression" .

    $default  reduce using rule 16 (top_level_reader_macro)


State 73

  640 class_or_struct: "struct" .

    $default  reduce using rule 640 (class_or_struct)


State 74

  639 class_or_struct: "class" .

    $default  reduce using rule 639 (class_or_struct)


State 75

  214 global_function_declaration: optional_annotation_list "def" . function_declaration

    "public"   shift, and go to state 111
    "private"  shift, and go to state 112

    $default  reduce using rule 215 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 113
    function_declaration                 go to state 114


State 76

  630 enum_declaration: optional_annotation_list "enum" . optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list $@42 "end of code block"
  633                 | optional_annotation_list "enum" . optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"

    "public"   shift, and go to state 115
    "private"  shift, and go to state 116

    $default  reduce using rule 624 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 117


State 77

  641 class_or_struct: "template" . "class"
  642                | "template" . "struct"

    "struct"  shift, and go to state 118
    "class"   shift, and go to state 119


State 78

  650 structure_declaration: optional_annotation_list class_or_struct . optional_public_or_private_structure $@45 structure_name $@46 optional_struct_variable_declaration_list

    "public"   shift, and go to state 120
    "private"  shift, and go to state 121

    $default  reduce using rule 643 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 122


State 79

  603 optional_shared: "shared" .

    $default  reduce using rule 603 (optional_shared)


State 80

  607 global_let: kwd_let optional_shared . optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"
  609           | kwd_let optional_shared . optional_public_or_private_variable $@38 optional_field_annotation let_variable_declaration

    "public"   shift, and go to state 123
    "private"  shift, and go to state 124

    $default  reduce using rule 604 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 125


State 81

   94 annotation_argument: annotation_argument_name '=' . string_constant
   95                    | annotation_argument_name '=' . "name"
   96                    | annotation_argument_name '=' . "integer constant"
   97                    | annotation_argument_name '=' . "floating point constant"
   98                    | annotation_argument_name '=' . "true"
   99                    | annotation_argument_name '=' . "false"
  101                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 126
    "false"                    shift, and go to state 127
    "integer constant"         shift, and go to state 128
    "floating point constant"  shift, and go to state 129
    "name"                     shift, and go to state 130
    "start of the string"      shift, and go to state 131
    '('                        shift, and go to state 132

    string_constant  go to state 133


State 82

  103 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 134


State 83

   54 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 135


State 84

   52 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 38

    expect_error  go to state 136


State 85

   43 require_module_name: '%' require_module_name .
   44                    | require_module_name . '.' keyword_or_name
   45                    | require_module_name . '/' keyword_or_name

    '.'  shift, and go to state 89

    $default  reduce using rule 43 (require_module_name)


State 86

   47 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 137


State 87

   49 is_public_module: "public" .

    $default  reduce using rule 49 (is_public_module)


State 88

   45 require_module_name: require_module_name '/' . keyword_or_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43

    keyword_or_name  go to state 138


State 89

   44 require_module_name: require_module_name '.' . keyword_or_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43

    keyword_or_name  go to state 139


State 90

   46 require_module: require_module_name is_public_module .

    $default  reduce using rule 46 (require_module)


State 91

  618 single_alias: optional_public_or_private_alias . "name" $@39 '=' type_declaration

    "name"  shift, and go to state 140


State 92

  619 alias_list: single_alias . "end of expression"

    "end of expression"  shift, and go to state 141


State 93

  620 alias_list: alias_list . single_alias "end of expression"
  621 alias_declaration: "typedef" "begin of code block" alias_list . "end of code block"

    "public"             shift, and go to state 53
    "private"            shift, and go to state 54
    "end of code block"  shift, and go to state 142

    $default  reduce using rule 614 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 91
    single_alias                      go to state 143


State 94

  623 alias_declaration: "typedef" $@40 single_alias . "end of expression"

    "end of expression"  shift, and go to state 144


State 95

   22 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 145
    "private"  shift, and go to state 146

    $default  reduce using rule 17 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 147


State 96

  791 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 . "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

    "name"  shift, and go to state 148


State 97

  781 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 . "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

    "name"  shift, and go to state 149


State 98

  786 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 . "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

    "name"  shift, and go to state 150


State 99

  272 name_in_namespace: "::" "name" .

    $default  reduce using rule 272 (name_in_namespace)


State 100

  271 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 151


State 101

   36 expr_reader: '%' name_in_namespace $@1 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 152

    reader_character_sequence  go to state 153


State 102

  115 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  116                       | annotation_declaration . "||" annotation_declaration
  117                       | annotation_declaration . "^^" annotation_declaration
  119                       | "|>" annotation_declaration .

    $default  reduce using rule 119 (annotation_declaration)


State 103

  114 annotation_declaration: '!' annotation_declaration .
  115                       | annotation_declaration . "&&" annotation_declaration
  116                       | annotation_declaration . "||" annotation_declaration
  117                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 114 (annotation_declaration)


State 104

  115 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  116                       | annotation_declaration . "||" annotation_declaration
  117                       | annotation_declaration . "^^" annotation_declaration
  118                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 106
    "||"  shift, and go to state 107
    "^^"  shift, and go to state 108
    ')'   shift, and go to state 154


State 105

  112 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 155


State 106

  115 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"   shift, and go to state 61
    "private"   shift, and go to state 62
    "template"  shift, and go to state 63
    "|>"        shift, and go to state 64
    "::"        shift, and go to state 58
    "name"      shift, and go to state 59
    '!'         shift, and go to state 65
    '('         shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 156
    name_in_namespace             go to state 71


State 107

  116 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"   shift, and go to state 61
    "private"   shift, and go to state 62
    "template"  shift, and go to state 63
    "|>"        shift, and go to state 64
    "::"        shift, and go to state 58
    "name"      shift, and go to state 59
    '!'         shift, and go to state 65
    '('         shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 157
    name_in_namespace             go to state 71


State 108

  117 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"   shift, and go to state 61
    "private"   shift, and go to state 62
    "template"  shift, and go to state 63
    "|>"        shift, and go to state 64
    "::"        shift, and go to state 58
    "name"      shift, and go to state 59
    '!'         shift, and go to state 65
    '('         shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 158
    name_in_namespace             go to state 71


State 109

  121 annotation_list: annotation_list ',' . annotation_declaration

    "require"   shift, and go to state 61
    "private"   shift, and go to state 62
    "template"  shift, and go to state 63
    "|>"        shift, and go to state 64
    "::"        shift, and go to state 58
    "name"      shift, and go to state 59
    '!'         shift, and go to state 65
    '('         shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 159
    name_in_namespace             go to state 71


State 110

  123 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 123 (optional_annotation_list)


State 111

  217 optional_public_or_private_function: "public" .

    $default  reduce using rule 217 (optional_public_or_private_function)


State 112

  216 optional_public_or_private_function: "private" .

    $default  reduce using rule 216 (optional_public_or_private_function)


State 113

  220 function_declaration: optional_public_or_private_function . $@6 function_declaration_header expression_block

    $default  reduce using rule 219 ($@6)

    $@6  go to state 160


State 114

  214 global_function_declaration: optional_annotation_list "def" function_declaration .

    $default  reduce using rule 214 (global_function_declaration)


State 115

  626 optional_public_or_private_enum: "public" .

    $default  reduce using rule 626 (optional_public_or_private_enum)


State 116

  625 optional_public_or_private_enum: "private" .

    $default  reduce using rule 625 (optional_public_or_private_enum)


State 117

  630 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum . enum_name "begin of code block" $@41 enum_list $@42 "end of code block"
  633                 | optional_annotation_list "enum" optional_public_or_private_enum . enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"

    "name"  shift, and go to state 161

    enum_name  go to state 162


State 118

  642 class_or_struct: "template" "struct" .

    $default  reduce using rule 642 (class_or_struct)


State 119

  641 class_or_struct: "template" "class" .

    $default  reduce using rule 641 (class_or_struct)


State 120

  645 optional_public_or_private_structure: "public" .

    $default  reduce using rule 645 (optional_public_or_private_structure)


State 121

  644 optional_public_or_private_structure: "private" .

    $default  reduce using rule 644 (optional_public_or_private_structure)


State 122

  650 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure . $@45 structure_name $@46 optional_struct_variable_declaration_list

    $default  reduce using rule 648 ($@45)

    $@45  go to state 163


State 123

  606 optional_public_or_private_variable: "public" .

    $default  reduce using rule 606 (optional_public_or_private_variable)


State 124

  605 optional_public_or_private_variable: "private" .

    $default  reduce using rule 605 (optional_public_or_private_variable)


State 125

  607 global_let: kwd_let optional_shared optional_public_or_private_variable . "begin of code block" global_variable_declaration_list "end of code block"
  609           | kwd_let optional_shared optional_public_or_private_variable . $@38 optional_field_annotation let_variable_declaration

    "begin of code block"  shift, and go to state 164

    $default  reduce using rule 608 ($@38)

    $@38  go to state 165


State 126

   98 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 98 (annotation_argument)


State 127

   99 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 99 (annotation_argument)


State 128

   96 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 96 (annotation_argument)


State 129

   97 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 97 (annotation_argument)


State 130

   95 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 95 (annotation_argument)


State 131

   27 string_constant: "start of the string" . character_sequence "end of the string"
   28                | "start of the string" . "end of the string"

    STRING_CHARACTER      shift, and go to state 166
    STRING_CHARACTER_ESC  shift, and go to state 167
    "end of the string"   shift, and go to state 168

    character_sequence  go to state 169


State 132

  101 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 170
    "false"                    shift, and go to state 171
    "integer constant"         shift, and go to state 172
    "floating point constant"  shift, and go to state 173
    "name"                     shift, and go to state 174
    "start of the string"      shift, and go to state 131

    string_constant                 go to state 175
    annotation_argument_value       go to state 176
    annotation_argument_value_list  go to state 177


State 133

   94 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 94 (annotation_argument)


State 134

  103 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 103 (annotation_argument_list)


State 135

   54 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 54 (expect_error)


State 136

   52 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 52 (expect_list)


State 137

   47 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 87

    $default  reduce using rule 48 (is_public_module)

    is_public_module  go to state 178


State 138

   45 require_module_name: require_module_name '/' keyword_or_name .

    $default  reduce using rule 45 (require_module_name)


State 139

   44 require_module_name: require_module_name '.' keyword_or_name .

    $default  reduce using rule 44 (require_module_name)


State 140

  618 single_alias: optional_public_or_private_alias "name" . $@39 '=' type_declaration

    $default  reduce using rule 617 ($@39)

    $@39  go to state 179


State 141

  619 alias_list: single_alias "end of expression" .

    $default  reduce using rule 619 (alias_list)


State 142

  621 alias_declaration: "typedef" "begin of code block" alias_list "end of code block" .

    $default  reduce using rule 621 (alias_declaration)


State 143

  620 alias_list: alias_list single_alias . "end of expression"

    "end of expression"  shift, and go to state 180


State 144

  623 alias_declaration: "typedef" $@40 single_alias "end of expression" .

    $default  reduce using rule 623 (alias_declaration)


State 145

   18 optional_public_or_private_module: "public" .

    $default  reduce using rule 18 (optional_public_or_private_module)


State 146

   19 optional_public_or_private_module: "private" .

    $default  reduce using rule 19 (optional_public_or_private_module)


State 147

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 22 (module_declaration)


State 148

  791 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" . $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

    $default  reduce using rule 788 ($@85)

    $@85  go to state 181


State 149

  781 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" . $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

    $default  reduce using rule 778 ($@77)

    $@77  go to state 182


State 150

  786 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" . $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

    $default  reduce using rule 783 ($@81)

    $@81  go to state 183


State 151

  271 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 271 (name_in_namespace)


State 152

   33 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 33 (reader_character_sequence)


State 153

   34 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   36 expr_reader: '%' name_in_namespace $@1 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 184

    $default  reduce using rule 36 (expr_reader)


State 154

  118 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 118 (annotation_declaration)


State 155

  103 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  112 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 82
    ')'  shift, and go to state 185


State 156

  115 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  115                       | annotation_declaration "&&" annotation_declaration .
  116                       | annotation_declaration . "||" annotation_declaration
  117                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 115 (annotation_declaration)


State 157

  115 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  116                       | annotation_declaration . "||" annotation_declaration
  116                       | annotation_declaration "||" annotation_declaration .
  117                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 106
    "^^"  shift, and go to state 108

    $default  reduce using rule 116 (annotation_declaration)


State 158

  115 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  116                       | annotation_declaration . "||" annotation_declaration
  117                       | annotation_declaration . "^^" annotation_declaration
  117                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 106

    $default  reduce using rule 117 (annotation_declaration)


State 159

  115 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  116                       | annotation_declaration . "||" annotation_declaration
  117                       | annotation_declaration . "^^" annotation_declaration
  121 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 106
    "||"  shift, and go to state 107
    "^^"  shift, and go to state 108

    $default  reduce using rule 121 (annotation_list)


State 160

  220 function_declaration: optional_public_or_private_function $@6 . function_declaration_header expression_block

    "operator"  shift, and go to state 186
    "bool"      shift, and go to state 187
    "string"    shift, and go to state 188
    "int"       shift, and go to state 189
    "int2"      shift, and go to state 190
    "int3"      shift, and go to state 191
    "int4"      shift, and go to state 192
    "uint"      shift, and go to state 193
    "uint2"     shift, and go to state 194
    "uint3"     shift, and go to state 195
    "uint4"     shift, and go to state 196
    "float"     shift, and go to state 197
    "float2"    shift, and go to state 198
    "float3"    shift, and go to state 199
    "float4"    shift, and go to state 200
    "range"     shift, and go to state 201
    "urange"    shift, and go to state 202
    "range64"   shift, and go to state 203
    "urange64"  shift, and go to state 204
    "int64"     shift, and go to state 205
    "uint64"    shift, and go to state 206
    "double"    shift, and go to state 207
    "int8"      shift, and go to state 208
    "uint8"     shift, and go to state 209
    "int16"     shift, and go to state 210
    "uint16"    shift, and go to state 211
    "++"        shift, and go to state 212
    "--"        shift, and go to state 213
    "name"      shift, and go to state 214

    function_name                go to state 215
    function_declaration_header  go to state 216


State 161

  627 enum_name: "name" .

    $default  reduce using rule 627 (enum_name)


State 162

  630 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name . "begin of code block" $@41 enum_list $@42 "end of code block"
  633                 | optional_annotation_list "enum" optional_public_or_private_enum enum_name . ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"

    "begin of code block"  shift, and go to state 217
    ':'                    shift, and go to state 218


State 163

  650 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 . structure_name $@46 optional_struct_variable_declaration_list

    "sealed"  shift, and go to state 219

    $default  reduce using rule 636 (optional_sealed)

    optional_sealed  go to state 220
    structure_name   go to state 221


State 164

  607 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" . global_variable_declaration_list "end of code block"

    $default  reduce using rule 599 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 222


State 165

  609 global_let: kwd_let optional_shared optional_public_or_private_variable $@38 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 223
    '@'   shift, and go to state 224

    $default  reduce using rule 537 (optional_field_annotation)

    metadata_argument_list     go to state 225
    optional_field_annotation  go to state 226


State 166

   23 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 23 (character_sequence)


State 167

   24 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 24 (character_sequence)


State 168

   28 string_constant: "start of the string" "end of the string" .

    $default  reduce using rule 28 (string_constant)


State 169

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   27 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 227
    STRING_CHARACTER_ESC  shift, and go to state 228
    "end of the string"   shift, and go to state 229


State 170

   87 annotation_argument_value: "true" .

    $default  reduce using rule 87 (annotation_argument_value)


State 171

   88 annotation_argument_value: "false" .

    $default  reduce using rule 88 (annotation_argument_value)


State 172

   85 annotation_argument_value: "integer constant" .

    $default  reduce using rule 85 (annotation_argument_value)


State 173

   86 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 86 (annotation_argument_value)


State 174

   84 annotation_argument_value: "name" .

    $default  reduce using rule 84 (annotation_argument_value)


State 175

   83 annotation_argument_value: string_constant .

    $default  reduce using rule 83 (annotation_argument_value)


State 176

   89 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 89 (annotation_argument_value_list)


State 177

   90 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
  101 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 230
    ')'  shift, and go to state 231


State 178

   47 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 47 (require_module)


State 179

  618 single_alias: optional_public_or_private_alias "name" $@39 . '=' type_declaration

    '='  shift, and go to state 232


State 180

  620 alias_list: alias_list single_alias "end of expression" .

    $default  reduce using rule 620 (alias_list)


State 181

  791 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 . "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

    "begin of code block"  shift, and go to state 233


State 182

  781 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 . "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

    "begin of code block"  shift, and go to state 234


State 183

  786 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 . "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

    "begin of code block"  shift, and go to state 235


State 184

   34 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 34 (reader_character_sequence)


State 185

  112 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 112 (annotation_declaration_basic)


State 186

  130 function_name: "operator" . '!'
  131              | "operator" . '~'
  132              | "operator" . "+="
  133              | "operator" . "-="
  134              | "operator" . "*="
  135              | "operator" . "/="
  136              | "operator" . "%="
  137              | "operator" . "&="
  138              | "operator" . "|="
  139              | "operator" . "^="
  140              | "operator" . "&&="
  141              | "operator" . "||="
  142              | "operator" . "^^="
  143              | "operator" . "&&"
  144              | "operator" . "||"
  145              | "operator" . "^^"
  146              | "operator" . '+'
  147              | "operator" . '-'
  148              | "operator" . '*'
  149              | "operator" . '/'
  150              | "operator" . '%'
  151              | "operator" . '<'
  152              | "operator" . '>'
  153              | "operator" . ".."
  154              | "operator" . "=="
  155              | "operator" . "!="
  156              | "operator" . "<="
  157              | "operator" . ">="
  158              | "operator" . '&'
  159              | "operator" . '|'
  160              | "operator" . '^'
  163              | "operator" . "++"
  164              | "operator" . "--"
  165              | "operator" . "<<"
  166              | "operator" . ">>"
  167              | "operator" . "<<="
  168              | "operator" . ">>="
  169              | "operator" . "<<<"
  170              | "operator" . ">>>"
  171              | "operator" . "<<<="
  172              | "operator" . ">>>="
  173              | "operator" . '[' ']'
  174              | "operator" . "?[" ']'
  175              | "operator" . '.'
  176              | "operator" . "?."
  177              | "operator" . '.' "name"
  178              | "operator" . '.' "name" ":="
  179              | "operator" . "?." "name"
  180              | "operator" . ":="
  181              | "operator" . "delete"
  182              | "operator" . "??"
  183              | "operator" . "is"
  184              | "operator" . "as"
  185              | "operator" . "is" "name"
  186              | "operator" . "as" "name"
  187              | "operator" . '?' "as"
  188              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 236
    "as"      shift, and go to state 237
    "delete"  shift, and go to state 238
    "+="      shift, and go to state 239
    "-="      shift, and go to state 240
    "/="      shift, and go to state 241
    "*="      shift, and go to state 242
    "%="      shift, and go to state 243
    "&="      shift, and go to state 244
    "|="      shift, and go to state 245
    "^="      shift, and go to state 246
    "<<"      shift, and go to state 247
    ">>"      shift, and go to state 248
    "++"      shift, and go to state 249
    "--"      shift, and go to state 250
    "<="      shift, and go to state 251
    "<<="     shift, and go to state 252
    ">>="     shift, and go to state 253
    ">="      shift, and go to state 254
    "=="      shift, and go to state 255
    "!="      shift, and go to state 256
    "??"      shift, and go to state 257
    "?."      shift, and go to state 258
    "?["      shift, and go to state 259
    ":="      shift, and go to state 260
    "<<<"     shift, and go to state 261
    ">>>"     shift, and go to state 262
    "<<<="    shift, and go to state 263
    ">>>="    shift, and go to state 264
    "&&"      shift, and go to state 265
    "||"      shift, and go to state 266
    "^^"      shift, and go to state 267
    "&&="     shift, and go to state 268
    "||="     shift, and go to state 269
    "^^="     shift, and go to state 270
    ".."      shift, and go to state 271
    '?'       shift, and go to state 272
    '|'       shift, and go to state 273
    '^'       shift, and go to state 274
    '&'       shift, and go to state 275
    '<'       shift, and go to state 276
    '>'       shift, and go to state 277
    '-'       shift, and go to state 278
    '+'       shift, and go to state 279
    '*'       shift, and go to state 280
    '/'       shift, and go to state 281
    '%'       shift, and go to state 282
    '~'       shift, and go to state 283
    '!'       shift, and go to state 284
    '.'       shift, and go to state 285
    '['       shift, and go to state 286


State 187

  189 function_name: "bool" .

    $default  reduce using rule 189 (function_name)


State 188

  190 function_name: "string" .

    $default  reduce using rule 190 (function_name)


State 189

  191 function_name: "int" .

    $default  reduce using rule 191 (function_name)


State 190

  192 function_name: "int2" .

    $default  reduce using rule 192 (function_name)


State 191

  193 function_name: "int3" .

    $default  reduce using rule 193 (function_name)


State 192

  194 function_name: "int4" .

    $default  reduce using rule 194 (function_name)


State 193

  195 function_name: "uint" .

    $default  reduce using rule 195 (function_name)


State 194

  196 function_name: "uint2" .

    $default  reduce using rule 196 (function_name)


State 195

  197 function_name: "uint3" .

    $default  reduce using rule 197 (function_name)


State 196

  198 function_name: "uint4" .

    $default  reduce using rule 198 (function_name)


State 197

  199 function_name: "float" .

    $default  reduce using rule 199 (function_name)


State 198

  200 function_name: "float2" .

    $default  reduce using rule 200 (function_name)


State 199

  201 function_name: "float3" .

    $default  reduce using rule 201 (function_name)


State 200

  202 function_name: "float4" .

    $default  reduce using rule 202 (function_name)


State 201

  203 function_name: "range" .

    $default  reduce using rule 203 (function_name)


State 202

  204 function_name: "urange" .

    $default  reduce using rule 204 (function_name)


State 203

  205 function_name: "range64" .

    $default  reduce using rule 205 (function_name)


State 204

  206 function_name: "urange64" .

    $default  reduce using rule 206 (function_name)


State 205

  207 function_name: "int64" .

    $default  reduce using rule 207 (function_name)


State 206

  208 function_name: "uint64" .

    $default  reduce using rule 208 (function_name)


State 207

  209 function_name: "double" .

    $default  reduce using rule 209 (function_name)


State 208

  210 function_name: "int8" .

    $default  reduce using rule 210 (function_name)


State 209

  211 function_name: "uint8" .

    $default  reduce using rule 211 (function_name)


State 210

  212 function_name: "int16" .

    $default  reduce using rule 212 (function_name)


State 211

  213 function_name: "uint16" .

    $default  reduce using rule 213 (function_name)


State 212

  161 function_name: "++" . "operator"

    "operator"  shift, and go to state 287


State 213

  162 function_name: "--" . "operator"

    "operator"  shift, and go to state 288


State 214

  129 function_name: "name" .

    $default  reduce using rule 129 (function_name)


State 215

  218 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 289

    $default  reduce using rule 124 (optional_function_argument_list)

    optional_function_argument_list  go to state 290


State 216

  220 function_declaration: optional_public_or_private_function $@6 function_declaration_header . expression_block

    "begin of code block"  shift, and go to state 291

    expression_block  go to state 292


State 217

  630 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" . $@41 enum_list $@42 "end of code block"

    $default  reduce using rule 628 ($@41)

    $@41  go to state 293


State 218

  633 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' . enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"

    "int"     shift, and go to state 294
    "uint"    shift, and go to state 295
    "int64"   shift, and go to state 296
    "uint64"  shift, and go to state 297
    "int8"    shift, and go to state 298
    "uint8"   shift, and go to state 299
    "int16"   shift, and go to state 300
    "uint16"  shift, and go to state 301

    enum_basic_type_declaration  go to state 302


State 219

  637 optional_sealed: "sealed" .

    $default  reduce using rule 637 (optional_sealed)


State 220

  638 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 303


State 221

  650 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 structure_name . $@46 optional_struct_variable_declaration_list

    $default  reduce using rule 649 ($@46)

    $@46  go to state 304


State 222

  601 global_variable_declaration_list: global_variable_declaration_list . $@37 optional_field_annotation let_variable_declaration
  607 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list . "end of code block"

    "end of code block"  shift, and go to state 305

    $default  reduce using rule 600 ($@37)

    $@37  go to state 306


State 223

  538 optional_field_annotation: "[[" . annotation_argument_list ']' ']'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 307


State 224

  104 metadata_argument_list: '@' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 308


State 225

  105 metadata_argument_list: metadata_argument_list . '@' annotation_argument
  106                       | metadata_argument_list . "end of expression"
  539 optional_field_annotation: metadata_argument_list .

    "end of expression"  shift, and go to state 309
    '@'                  shift, and go to state 310

    $default  reduce using rule 539 (optional_field_annotation)


State 226

  609 global_let: kwd_let optional_shared optional_public_or_private_variable $@38 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 311
    "name"  shift, and go to state 312

    let_variable_name_with_pos_list  go to state 313
    let_variable_declaration         go to state 314


State 227

   25 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 25 (character_sequence)


State 228

   26 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 26 (character_sequence)


State 229

   27 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 27 (string_constant)


State 230

   90 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 170
    "false"                    shift, and go to state 171
    "integer constant"         shift, and go to state 172
    "floating point constant"  shift, and go to state 173
    "name"                     shift, and go to state 174
    "start of the string"      shift, and go to state 131

    string_constant            go to state 175
    annotation_argument_value  go to state 315


State 231

  101 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 101 (annotation_argument)


State 232

  618 single_alias: optional_public_or_private_alias "name" $@39 '=' . type_declaration

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 362
    type_declaration             go to state 363


State 233

  791 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" . $@86 bitfield_alias_bits $@87 "end of code block"

    $default  reduce using rule 789 ($@86)

    $@86  go to state 364


State 234

  781 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" . $@78 tuple_alias_type_list $@79 "end of code block"

    $default  reduce using rule 779 ($@78)

    $@78  go to state 365


State 235

  786 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" . $@82 variant_alias_type_list $@83 "end of code block"

    $default  reduce using rule 784 ($@82)

    $@82  go to state 366


State 236

  183 function_name: "operator" "is" .
  185              | "operator" "is" . "name"

    "name"  shift, and go to state 367

    $default  reduce using rule 183 (function_name)


State 237

  184 function_name: "operator" "as" .
  186              | "operator" "as" . "name"

    "name"  shift, and go to state 368

    $default  reduce using rule 184 (function_name)


State 238

  181 function_name: "operator" "delete" .

    $default  reduce using rule 181 (function_name)


State 239

  132 function_name: "operator" "+=" .

    $default  reduce using rule 132 (function_name)


State 240

  133 function_name: "operator" "-=" .

    $default  reduce using rule 133 (function_name)


State 241

  135 function_name: "operator" "/=" .

    $default  reduce using rule 135 (function_name)


State 242

  134 function_name: "operator" "*=" .

    $default  reduce using rule 134 (function_name)


State 243

  136 function_name: "operator" "%=" .

    $default  reduce using rule 136 (function_name)


State 244

  137 function_name: "operator" "&=" .

    $default  reduce using rule 137 (function_name)


State 245

  138 function_name: "operator" "|=" .

    $default  reduce using rule 138 (function_name)


State 246

  139 function_name: "operator" "^=" .

    $default  reduce using rule 139 (function_name)


State 247

  165 function_name: "operator" "<<" .

    $default  reduce using rule 165 (function_name)


State 248

  166 function_name: "operator" ">>" .

    $default  reduce using rule 166 (function_name)


State 249

  163 function_name: "operator" "++" .

    $default  reduce using rule 163 (function_name)


State 250

  164 function_name: "operator" "--" .

    $default  reduce using rule 164 (function_name)


State 251

  156 function_name: "operator" "<=" .

    $default  reduce using rule 156 (function_name)


State 252

  167 function_name: "operator" "<<=" .

    $default  reduce using rule 167 (function_name)


State 253

  168 function_name: "operator" ">>=" .

    $default  reduce using rule 168 (function_name)


State 254

  157 function_name: "operator" ">=" .

    $default  reduce using rule 157 (function_name)


State 255

  154 function_name: "operator" "==" .

    $default  reduce using rule 154 (function_name)


State 256

  155 function_name: "operator" "!=" .

    $default  reduce using rule 155 (function_name)


State 257

  182 function_name: "operator" "??" .

    $default  reduce using rule 182 (function_name)


State 258

  176 function_name: "operator" "?." .
  179              | "operator" "?." . "name"

    "name"  shift, and go to state 369

    $default  reduce using rule 176 (function_name)


State 259

  174 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 370


State 260

  180 function_name: "operator" ":=" .

    $default  reduce using rule 180 (function_name)


State 261

  169 function_name: "operator" "<<<" .

    $default  reduce using rule 169 (function_name)


State 262

  170 function_name: "operator" ">>>" .

    $default  reduce using rule 170 (function_name)


State 263

  171 function_name: "operator" "<<<=" .

    $default  reduce using rule 171 (function_name)


State 264

  172 function_name: "operator" ">>>=" .

    $default  reduce using rule 172 (function_name)


State 265

  143 function_name: "operator" "&&" .

    $default  reduce using rule 143 (function_name)


State 266

  144 function_name: "operator" "||" .

    $default  reduce using rule 144 (function_name)


State 267

  145 function_name: "operator" "^^" .

    $default  reduce using rule 145 (function_name)


State 268

  140 function_name: "operator" "&&=" .

    $default  reduce using rule 140 (function_name)


State 269

  141 function_name: "operator" "||=" .

    $default  reduce using rule 141 (function_name)


State 270

  142 function_name: "operator" "^^=" .

    $default  reduce using rule 142 (function_name)


State 271

  153 function_name: "operator" ".." .

    $default  reduce using rule 153 (function_name)


State 272

  187 function_name: "operator" '?' . "as"
  188              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 371


State 273

  159 function_name: "operator" '|' .

    $default  reduce using rule 159 (function_name)


State 274

  160 function_name: "operator" '^' .

    $default  reduce using rule 160 (function_name)


State 275

  158 function_name: "operator" '&' .

    $default  reduce using rule 158 (function_name)


State 276

  151 function_name: "operator" '<' .

    $default  reduce using rule 151 (function_name)


State 277

  152 function_name: "operator" '>' .

    $default  reduce using rule 152 (function_name)


State 278

  147 function_name: "operator" '-' .

    $default  reduce using rule 147 (function_name)


State 279

  146 function_name: "operator" '+' .

    $default  reduce using rule 146 (function_name)


State 280

  148 function_name: "operator" '*' .

    $default  reduce using rule 148 (function_name)


State 281

  149 function_name: "operator" '/' .

    $default  reduce using rule 149 (function_name)


State 282

  150 function_name: "operator" '%' .

    $default  reduce using rule 150 (function_name)


State 283

  131 function_name: "operator" '~' .

    $default  reduce using rule 131 (function_name)


State 284

  130 function_name: "operator" '!' .

    $default  reduce using rule 130 (function_name)


State 285

  175 function_name: "operator" '.' .
  177              | "operator" '.' . "name"
  178              | "operator" '.' . "name" ":="

    "name"  shift, and go to state 372

    $default  reduce using rule 175 (function_name)


State 286

  173 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 373


State 287

  161 function_name: "++" "operator" .

    $default  reduce using rule 161 (function_name)


State 288

  162 function_name: "--" "operator" .

    $default  reduce using rule 162 (function_name)


State 289

  125 optional_function_argument_list: '(' . ')'
  126                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 374
    "[["  shift, and go to state 223
    ')'   shift, and go to state 375
    '@'   shift, and go to state 224

    $default  reduce using rule 537 (optional_field_annotation)

    metadata_argument_list         go to state 225
    optional_field_annotation      go to state 376
    function_argument_declaration  go to state 377
    function_argument_list         go to state 378


State 290

  218 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 379

    $default  reduce using rule 127 (optional_function_type)

    optional_function_type  go to state 380


State 291

  221 expression_block: "begin of code block" . expressions "end of code block"
  222                 | "begin of code block" . expressions "end of code block" "finally" "begin of code block" expressions "end of code block"

    $default  reduce using rule 247 (expressions)

    expressions  go to state 381


State 292

  220 function_declaration: optional_public_or_private_function $@6 function_declaration_header expression_block .

    $default  reduce using rule 220 (function_declaration)


State 293

  630 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 . enum_list $@42 "end of code block"

    $default  reduce using rule 610 (enum_list)

    enum_list  go to state 382


State 294

  683 enum_basic_type_declaration: "int" .

    $default  reduce using rule 683 (enum_basic_type_declaration)


State 295

  686 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 686 (enum_basic_type_declaration)


State 296

  689 enum_basic_type_declaration: "int64" .

    $default  reduce using rule 689 (enum_basic_type_declaration)


State 297

  690 enum_basic_type_declaration: "uint64" .

    $default  reduce using rule 690 (enum_basic_type_declaration)


State 298

  684 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 684 (enum_basic_type_declaration)


State 299

  687 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 687 (enum_basic_type_declaration)


State 300

  685 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 685 (enum_basic_type_declaration)


State 301

  688 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 688 (enum_basic_type_declaration)


State 302

  633 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration . "begin of code block" $@43 enum_list $@44 "end of code block"

    "begin of code block"  shift, and go to state 383


State 303

  638 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 384

    $default  reduce using rule 634 (optional_structure_parent)

    optional_structure_parent  go to state 385


State 304

  650 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 structure_name $@46 . optional_struct_variable_declaration_list

    "begin of code block"  shift, and go to state 386

    $default  reduce using rule 646 (optional_struct_variable_declaration_list)

    optional_struct_variable_declaration_list  go to state 387


State 305

  607 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block" .

    $default  reduce using rule 607 (global_let)


State 306

  601 global_variable_declaration_list: global_variable_declaration_list $@37 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 223
    '@'   shift, and go to state 224

    $default  reduce using rule 537 (optional_field_annotation)

    metadata_argument_list     go to state 225
    optional_field_annotation  go to state 388


State 307

  103 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  538 optional_field_annotation: "[[" annotation_argument_list . ']' ']'

    ','  shift, and go to state 82
    ']'  shift, and go to state 389


State 308

  104 metadata_argument_list: '@' annotation_argument .

    $default  reduce using rule 104 (metadata_argument_list)


State 309

  106 metadata_argument_list: metadata_argument_list "end of expression" .

    $default  reduce using rule 106 (metadata_argument_list)


State 310

  105 metadata_argument_list: metadata_argument_list '@' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 390


State 311

  590 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 391


State 312

  589 let_variable_name_with_pos_list: "name" .
  591                                | "name" . "aka" "name"

    "aka"  shift, and go to state 392

    $default  reduce using rule 589 (let_variable_name_with_pos_list)


State 313

  592 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  593                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  594 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options "end of expression"
  595                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  596                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  597                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr "end of expression"
  598                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 393
    ':'  shift, and go to state 394
    '&'  shift, and go to state 395

    $default  reduce using rule 587 (optional_ref)

    optional_ref  go to state 396


State 314

  609 global_let: kwd_let optional_shared optional_public_or_private_variable $@38 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 609 (global_let)


State 315

   90 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 90 (annotation_argument_value_list)


State 316

  717 type_declaration_no_options: "type" . '<' $@49 type_declaration '>' $@50

    '<'  shift, and go to state 397


State 317

  740 type_declaration_no_options: "array" . '<' $@54 type_declaration '>' $@55

    '<'  shift, and go to state 398


State 318

  743 type_declaration_no_options: "table" . '<' $@56 table_type_pair '>' $@57

    '<'  shift, and go to state 399


State 319

  718 type_declaration_no_options: "typedecl" . '(' expr ')'

    '('  shift, and go to state 400


State 320

  746 type_declaration_no_options: "iterator" . '<' $@58 type_declaration '>' $@59

    '<'  shift, and go to state 401


State 321

  736 type_declaration_no_options: "smart_ptr" . '<' $@52 type_declaration '>' $@53

    '<'  shift, and go to state 402


State 322

  656 basic_type_declaration: "bool" .

    $default  reduce using rule 656 (basic_type_declaration)


State 323

  676 basic_type_declaration: "void" .

    $default  reduce using rule 676 (basic_type_declaration)


State 324

  657 basic_type_declaration: "string" .

    $default  reduce using rule 657 (basic_type_declaration)


State 325

  692 auto_type_declaration: "auto" .
  693                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 403

    '('       [reduce using rule 692 (auto_type_declaration)]
    $default  reduce using rule 692 (auto_type_declaration)


State 326

  658 basic_type_declaration: "int" .

    $default  reduce using rule 658 (basic_type_declaration)


State 327

  662 basic_type_declaration: "int2" .

    $default  reduce using rule 662 (basic_type_declaration)


State 328

  663 basic_type_declaration: "int3" .

    $default  reduce using rule 663 (basic_type_declaration)


State 329

  664 basic_type_declaration: "int4" .

    $default  reduce using rule 664 (basic_type_declaration)


State 330

  665 basic_type_declaration: "uint" .

    $default  reduce using rule 665 (basic_type_declaration)


State 331

  682 basic_type_declaration: "bitfield" .
  702 bitfield_type_declaration: "bitfield" . '<' $@47 bitfield_bits '>' $@48

    '<'  shift, and go to state 404

    $default  reduce using rule 682 (basic_type_declaration)


State 332

  669 basic_type_declaration: "uint2" .

    $default  reduce using rule 669 (basic_type_declaration)


State 333

  670 basic_type_declaration: "uint3" .

    $default  reduce using rule 670 (basic_type_declaration)


State 334

  671 basic_type_declaration: "uint4" .

    $default  reduce using rule 671 (basic_type_declaration)


State 335

  672 basic_type_declaration: "float" .

    $default  reduce using rule 672 (basic_type_declaration)


State 336

  673 basic_type_declaration: "float2" .

    $default  reduce using rule 673 (basic_type_declaration)


State 337

  674 basic_type_declaration: "float3" .

    $default  reduce using rule 674 (basic_type_declaration)


State 338

  675 basic_type_declaration: "float4" .

    $default  reduce using rule 675 (basic_type_declaration)


State 339

  677 basic_type_declaration: "range" .

    $default  reduce using rule 677 (basic_type_declaration)


State 340

  678 basic_type_declaration: "urange" .

    $default  reduce using rule 678 (basic_type_declaration)


State 341

  679 basic_type_declaration: "range64" .

    $default  reduce using rule 679 (basic_type_declaration)


State 342

  680 basic_type_declaration: "urange64" .

    $default  reduce using rule 680 (basic_type_declaration)


State 343

  747 type_declaration_no_options: "block" .
  750                            | "block" . '<' $@60 type_declaration '>' $@61
  753                            | "block" . '<' $@62 optional_function_argument_list optional_function_type '>' $@63

    '<'  shift, and go to state 405

    $default  reduce using rule 747 (type_declaration_no_options)


State 344

  661 basic_type_declaration: "int64" .

    $default  reduce using rule 661 (basic_type_declaration)


State 345

  668 basic_type_declaration: "uint64" .

    $default  reduce using rule 668 (basic_type_declaration)


State 346

  681 basic_type_declaration: "double" .

    $default  reduce using rule 681 (basic_type_declaration)


State 347

  754 type_declaration_no_options: "function" .
  757                            | "function" . '<' $@64 type_declaration '>' $@65
  760                            | "function" . '<' $@66 optional_function_argument_list optional_function_type '>' $@67

    '<'  shift, and go to state 406

    $default  reduce using rule 754 (type_declaration_no_options)


State 348

  761 type_declaration_no_options: "lambda" .
  764                            | "lambda" . '<' $@68 type_declaration '>' $@69
  767                            | "lambda" . '<' $@70 optional_function_argument_list optional_function_type '>' $@71

    '<'  shift, and go to state 407

    $default  reduce using rule 761 (type_declaration_no_options)


State 349

  659 basic_type_declaration: "int8" .

    $default  reduce using rule 659 (basic_type_declaration)


State 350

  666 basic_type_declaration: "uint8" .

    $default  reduce using rule 666 (basic_type_declaration)


State 351

  660 basic_type_declaration: "int16" .

    $default  reduce using rule 660 (basic_type_declaration)


State 352

  667 basic_type_declaration: "uint16" .

    $default  reduce using rule 667 (basic_type_declaration)


State 353

  770 type_declaration_no_options: "tuple" . '<' $@72 tuple_type_list '>' $@73

    '<'  shift, and go to state 408


State 354

  773 type_declaration_no_options: "variant" . '<' $@74 variant_type_list '>' $@75

    '<'  shift, and go to state 409


State 355

  694 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 410


State 356

  719 type_declaration_no_options: '$' . name_in_namespace '(' optional_expr_list ')'
  721                            | '$' . name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 411


State 357

  691 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 691 (structure_type_declaration)


State 358

  709 type_declaration_no_options: basic_type_declaration .

    $default  reduce using rule 709 (type_declaration_no_options)


State 359

  712 type_declaration_no_options: structure_type_declaration .

    $default  reduce using rule 712 (type_declaration_no_options)


State 360

  710 type_declaration_no_options: auto_type_declaration .

    $default  reduce using rule 710 (type_declaration_no_options)


State 361

  711 type_declaration_no_options: bitfield_type_declaration .

    $default  reduce using rule 711 (type_declaration_no_options)


State 362

  713 type_declaration_no_options: type_declaration_no_options . dim_list
  714                            | type_declaration_no_options . '[' ']'
  722                            | type_declaration_no_options . '-' '[' ']'
  723                            | type_declaration_no_options . "explicit"
  724                            | type_declaration_no_options . "const"
  725                            | type_declaration_no_options . '-' "const"
  726                            | type_declaration_no_options . '&'
  727                            | type_declaration_no_options . '-' '&'
  728                            | type_declaration_no_options . '#'
  729                            | type_declaration_no_options . "implicit"
  730                            | type_declaration_no_options . '-' '#'
  731                            | type_declaration_no_options . "==" "const"
  732                            | type_declaration_no_options . "==" '&'
  733                            | type_declaration_no_options . '?'
  737                            | type_declaration_no_options . "??"
  774 type_declaration: type_declaration_no_options .

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "??"        shift, and go to state 416
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    $default  reduce using rule 774 (type_declaration)

    dim_list  go to state 422


State 363

  618 single_alias: optional_public_or_private_alias "name" $@39 '=' type_declaration .
  775 type_declaration: type_declaration . '|' type_declaration_no_options
  776                 | type_declaration . '|' '#'

    '|'  shift, and go to state 423

    $default  reduce using rule 618 (single_alias)


State 364

  791 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 . bitfield_alias_bits $@87 "end of code block"

    $default  reduce using rule 697 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 424


State 365

  781 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 . tuple_alias_type_list $@79 "end of code block"

    $default  reduce using rule 567 (tuple_alias_type_list)

    tuple_alias_type_list  go to state 425


State 366

  786 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 . variant_alias_type_list $@83 "end of code block"

    $default  reduce using rule 573 (variant_alias_type_list)

    variant_alias_type_list  go to state 426


State 367

  185 function_name: "operator" "is" "name" .

    $default  reduce using rule 185 (function_name)


State 368

  186 function_name: "operator" "as" "name" .

    $default  reduce using rule 186 (function_name)


State 369

  179 function_name: "operator" "?." "name" .

    $default  reduce using rule 179 (function_name)


State 370

  174 function_name: "operator" "?[" ']' .

    $default  reduce using rule 174 (function_name)


State 371

  187 function_name: "operator" '?' "as" .
  188              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 427

    $default  reduce using rule 187 (function_name)


State 372

  177 function_name: "operator" '.' "name" .
  178              | "operator" '.' "name" . ":="

    ":="  shift, and go to state 428

    $default  reduce using rule 177 (function_name)


State 373

  173 function_name: "operator" '[' ']' .

    $default  reduce using rule 173 (function_name)


State 374

  560 function_argument_declaration: "$a" . '(' expr ')'

    '('  shift, and go to state 429


State 375

  125 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 125 (optional_function_argument_list)


State 376

  559 function_argument_declaration: optional_field_annotation . kwd_let_var_or_nothing variable_declaration

    "let"  shift, and go to state 430
    "var"  shift, and go to state 431

    $default  reduce using rule 301 (kwd_let_var_or_nothing)

    kwd_let_var_or_nothing  go to state 432


State 377

  561 function_argument_list: function_argument_declaration .

    $default  reduce using rule 561 (function_argument_list)


State 378

  126 optional_function_argument_list: '(' function_argument_list . ')'
  562 function_argument_list: function_argument_list . "end of expression" function_argument_declaration

    "end of expression"  shift, and go to state 433
    ')'                  shift, and go to state 434


State 379

  128 optional_function_type: ':' . type_declaration

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 362
    type_declaration             go to state 435


State 380

  218 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 218 (function_declaration_header)


State 381

  221 expression_block: "begin of code block" expressions . "end of code block"
  222                 | "begin of code block" expressions . "end of code block" "finally" "begin of code block" expressions "end of code block"
  248 expressions: expressions . expression_any
  249            | expressions . error

    error                             shift, and go to state 436
    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 439
    "if"                              shift, and go to state 440
    "static_if"                       shift, and go to state 441
    "for"                             shift, and go to state 442
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "return"                          shift, and go to state 449
    "null"                            shift, and go to state 450
    "break"                           shift, and go to state 451
    "try"                             shift, and go to state 452
    "table"                           shift, and go to state 453
    "delete"                          shift, and go to state 454
    "deref"                           shift, and go to state 455
    "with"                            shift, and go to state 456
    "assume"                          shift, and go to state 457
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 460
    "continue"                        shift, and go to state 461
    "pass"                            shift, and go to state 462
    "reinterpret"                     shift, and go to state 463
    "label"                           shift, and go to state 464
    "goto"                            shift, and go to state 465
    "unsafe"                          shift, and go to state 466
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "yield"                           shift, and go to state 473
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 476
    "@ <|"                            shift, and go to state 477
    "@@ <|"                           shift, and go to state 478
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 496
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    "end of code block"               shift, and go to state 500
    "end of expression"               shift, and go to state 501
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder             go to state 511
    expr_reader                go to state 512
    expression_label           go to state 513
    expression_goto            go to state 514
    if_or_static_if            go to state 515
    expression_if_one_liner    go to state 516
    expression_if_then_else    go to state 517
    expression_for_loop        go to state 518
    expression_unsafe          go to state 519
    expression_while_loop      go to state 520
    expression_with            go to state 521
    expression_with_alias      go to state 522
    expr_call_pipe             go to state 523
    expression_any             go to state 524
    expr_keyword               go to state 525
    expression_keyword         go to state 526
    expr_pipe                  go to state 527
    name_in_namespace          go to state 528
    expression_delete          go to state 529
    expr_new                   go to state 530
    expression_break           go to state 531
    expression_continue        go to state 532
    expression_return_no_pipe  go to state 533
    expression_return          go to state 534
    expression_yield_no_pipe   go to state 535
    expression_yield           go to state 536
    expression_try_catch       go to state 537
    kwd_let                    go to state 538
    expression_let             go to state 539
    expr_cast                  go to state 540
    expr_type_decl             go to state 541
    expr_type_info             go to state 542
    block_or_lambda            go to state 543
    expr_full_block            go to state 544
    expr_numeric_const         go to state 545
    expr_assign                go to state 546
    expr_assign_pipe           go to state 547
    expr_named_call            go to state 548
    expr_method_call           go to state 549
    func_addr_expr             go to state 550
    expr_field                 go to state 551
    expr_call                  go to state 552
    expr                       go to state 553
    expr_mtag                  go to state 554
    basic_type_declaration     go to state 555
    make_decl                  go to state 556
    make_struct_decl           go to state 557
    make_tuple_call            go to state 558
    make_dim_decl              go to state 559
    make_table_decl            go to state 560
    array_comprehension        go to state 561


State 382

  611 enum_list: enum_list . "end of expression"
  612          | enum_list . "name" "end of expression"
  613          | enum_list . "name" '=' expr "end of expression"
  630 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list . $@42 "end of code block"

    "name"               shift, and go to state 562
    "end of expression"  shift, and go to state 563

    $default  reduce using rule 629 ($@42)

    $@42  go to state 564


State 383

  633 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" . $@43 enum_list $@44 "end of code block"

    $default  reduce using rule 631 ($@43)

    $@43  go to state 565


State 384

  635 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 566


State 385

  638 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 638 (structure_name)


State 386

  647 optional_struct_variable_declaration_list: "begin of code block" . struct_variable_declaration_list "end of code block"

    $default  reduce using rule 551 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 567


State 387

  650 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 structure_name $@46 optional_struct_variable_declaration_list .

    $default  reduce using rule 650 (structure_declaration)


State 388

  601 global_variable_declaration_list: global_variable_declaration_list $@37 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 311
    "name"  shift, and go to state 312

    let_variable_name_with_pos_list  go to state 313
    let_variable_declaration         go to state 568


State 389

  538 optional_field_annotation: "[[" annotation_argument_list ']' . ']'

    ']'  shift, and go to state 569


State 390

  105 metadata_argument_list: metadata_argument_list '@' annotation_argument .

    $default  reduce using rule 105 (metadata_argument_list)


State 391

  590 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 574
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 392

  591 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 575


State 393

  592 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  593                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 576


State 394

  594 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options "end of expression"
  595                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  596                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr_pipe

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 577


State 395

  588 optional_ref: '&' .

    $default  reduce using rule 588 (optional_ref)


State 396

  597 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr "end of expression"
  598                         | let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 578
    ":="  shift, and go to state 579
    '='   shift, and go to state 580

    copy_or_move_or_clone  go to state 581


State 397

  717 type_declaration_no_options: "type" '<' . $@49 type_declaration '>' $@50

    $default  reduce using rule 715 ($@49)

    $@49  go to state 582


State 398

  740 type_declaration_no_options: "array" '<' . $@54 type_declaration '>' $@55

    $default  reduce using rule 738 ($@54)

    $@54  go to state 583


State 399

  743 type_declaration_no_options: "table" '<' . $@56 table_type_pair '>' $@57

    $default  reduce using rule 741 ($@56)

    $@56  go to state 584


State 400

  718 type_declaration_no_options: "typedecl" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 585
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 401

  746 type_declaration_no_options: "iterator" '<' . $@58 type_declaration '>' $@59

    $default  reduce using rule 744 ($@58)

    $@58  go to state 586


State 402

  736 type_declaration_no_options: "smart_ptr" '<' . $@52 type_declaration '>' $@53

    $default  reduce using rule 734 ($@52)

    $@52  go to state 587


State 403

  693 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 588


State 404

  702 bitfield_type_declaration: "bitfield" '<' . $@47 bitfield_bits '>' $@48

    $default  reduce using rule 700 ($@47)

    $@47  go to state 589


State 405

  750 type_declaration_no_options: "block" '<' . $@60 type_declaration '>' $@61
  753                            | "block" '<' . $@62 optional_function_argument_list optional_function_type '>' $@63

    ':'       reduce using rule 751 ($@62)
    '>'       reduce using rule 751 ($@62)
    '('       reduce using rule 751 ($@62)
    $default  reduce using rule 748 ($@60)

    $@60  go to state 590
    $@62  go to state 591


State 406

  757 type_declaration_no_options: "function" '<' . $@64 type_declaration '>' $@65
  760                            | "function" '<' . $@66 optional_function_argument_list optional_function_type '>' $@67

    ':'       reduce using rule 758 ($@66)
    '>'       reduce using rule 758 ($@66)
    '('       reduce using rule 758 ($@66)
    $default  reduce using rule 755 ($@64)

    $@64  go to state 592
    $@66  go to state 593


State 407

  764 type_declaration_no_options: "lambda" '<' . $@68 type_declaration '>' $@69
  767                            | "lambda" '<' . $@70 optional_function_argument_list optional_function_type '>' $@71

    ':'       reduce using rule 765 ($@70)
    '>'       reduce using rule 765 ($@70)
    '('       reduce using rule 765 ($@70)
    $default  reduce using rule 762 ($@68)

    $@68  go to state 594
    $@70  go to state 595


State 408

  770 type_declaration_no_options: "tuple" '<' . $@72 tuple_type_list '>' $@73

    $default  reduce using rule 768 ($@72)

    $@72  go to state 596


State 409

  773 type_declaration_no_options: "variant" '<' . $@74 variant_type_list '>' $@75

    $default  reduce using rule 771 ($@74)

    $@74  go to state 597


State 410

  694 auto_type_declaration: "$t" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 598
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 411

  719 type_declaration_no_options: '$' name_in_namespace . '(' optional_expr_list ')'
  721                            | '$' name_in_namespace . '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    '<'  shift, and go to state 599
    '('  shift, and go to state 600


State 412

  724 type_declaration_no_options: type_declaration_no_options "const" .

    $default  reduce using rule 724 (type_declaration_no_options)


State 413

  729 type_declaration_no_options: type_declaration_no_options "implicit" .

    $default  reduce using rule 729 (type_declaration_no_options)


State 414

  723 type_declaration_no_options: type_declaration_no_options "explicit" .

    $default  reduce using rule 723 (type_declaration_no_options)


State 415

  731 type_declaration_no_options: type_declaration_no_options "==" . "const"
  732                            | type_declaration_no_options "==" . '&'

    "const"  shift, and go to state 601
    '&'      shift, and go to state 602


State 416

  737 type_declaration_no_options: type_declaration_no_options "??" .

    $default  reduce using rule 737 (type_declaration_no_options)


State 417

  733 type_declaration_no_options: type_declaration_no_options '?' .

    $default  reduce using rule 733 (type_declaration_no_options)


State 418

  726 type_declaration_no_options: type_declaration_no_options '&' .

    $default  reduce using rule 726 (type_declaration_no_options)


State 419

  722 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  725                            | type_declaration_no_options '-' . "const"
  727                            | type_declaration_no_options '-' . '&'
  730                            | type_declaration_no_options '-' . '#'

    "const"  shift, and go to state 603
    '&'      shift, and go to state 604
    '['      shift, and go to state 605
    '#'      shift, and go to state 606


State 420

  707 dim_list: '[' . expr ']'
  714 type_declaration_no_options: type_declaration_no_options '[' . ']'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    ']'                               shift, and go to state 607
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 608
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 421

  728 type_declaration_no_options: type_declaration_no_options '#' .

    $default  reduce using rule 728 (type_declaration_no_options)


State 422

  708 dim_list: dim_list . '[' expr ']'
  713 type_declaration_no_options: type_declaration_no_options dim_list .

    '['  shift, and go to state 609

    '['       [reduce using rule 713 (type_declaration_no_options)]
    $default  reduce using rule 713 (type_declaration_no_options)


State 423

  775 type_declaration: type_declaration '|' . type_declaration_no_options
  776                 | type_declaration '|' . '#'

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356
    '#'          shift, and go to state 610

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 611


State 424

  698 bitfield_alias_bits: bitfield_alias_bits . "end of expression"
  699                    | bitfield_alias_bits . "name" "end of expression"
  791 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits . $@87 "end of code block"

    "name"               shift, and go to state 612
    "end of expression"  shift, and go to state 613

    $default  reduce using rule 790 ($@87)

    $@87  go to state 614


State 425

  568 tuple_alias_type_list: tuple_alias_type_list . c_or_s
  569                      | tuple_alias_type_list . tuple_type c_or_s
  781 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list . $@79 "end of code block"

    "type"               shift, and go to state 316
    "array"              shift, and go to state 317
    "table"              shift, and go to state 318
    "typedecl"           shift, and go to state 319
    "iterator"           shift, and go to state 320
    "smart_ptr"          shift, and go to state 321
    "bool"               shift, and go to state 322
    "void"               shift, and go to state 323
    "string"             shift, and go to state 324
    "auto"               shift, and go to state 325
    "int"                shift, and go to state 326
    "int2"               shift, and go to state 327
    "int3"               shift, and go to state 328
    "int4"               shift, and go to state 329
    "uint"               shift, and go to state 330
    "bitfield"           shift, and go to state 331
    "uint2"              shift, and go to state 332
    "uint3"              shift, and go to state 333
    "uint4"              shift, and go to state 334
    "float"              shift, and go to state 335
    "float2"             shift, and go to state 336
    "float3"             shift, and go to state 337
    "float4"             shift, and go to state 338
    "range"              shift, and go to state 339
    "urange"             shift, and go to state 340
    "range64"            shift, and go to state 341
    "urange64"           shift, and go to state 342
    "block"              shift, and go to state 343
    "int64"              shift, and go to state 344
    "uint64"             shift, and go to state 345
    "double"             shift, and go to state 346
    "function"           shift, and go to state 347
    "lambda"             shift, and go to state 348
    "int8"               shift, and go to state 349
    "uint8"              shift, and go to state 350
    "int16"              shift, and go to state 351
    "uint16"             shift, and go to state 352
    "tuple"              shift, and go to state 353
    "variant"            shift, and go to state 354
    "::"                 shift, and go to state 58
    "$t"                 shift, and go to state 355
    "name"               shift, and go to state 615
    "end of expression"  shift, and go to state 616
    ','                  shift, and go to state 617
    '$'                  shift, and go to state 356

    $default  reduce using rule 780 ($@79)

    name_in_namespace            go to state 357
    tuple_type                   go to state 618
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    c_or_s                       go to state 619
    type_declaration_no_options  go to state 362
    type_declaration             go to state 620
    $@79                         go to state 621


State 426

  574 variant_alias_type_list: variant_alias_type_list . c_or_s
  575                        | variant_alias_type_list . variant_type c_or_s
  786 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list . $@83 "end of code block"

    "name"               shift, and go to state 622
    "end of expression"  shift, and go to state 616
    ','                  shift, and go to state 617

    $default  reduce using rule 785 ($@83)

    variant_type  go to state 623
    c_or_s        go to state 624
    $@83          go to state 625


State 427

  188 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 188 (function_name)


State 428

  178 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 178 (function_name)


State 429

  560 function_argument_declaration: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 626
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 430

  299 kwd_let_var_or_nothing: "let" .

    $default  reduce using rule 299 (kwd_let_var_or_nothing)


State 431

  300 kwd_let_var_or_nothing: "var" .

    $default  reduce using rule 300 (kwd_let_var_or_nothing)


State 432

  559 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing . variable_declaration

    "$i"    shift, and go to state 627
    "name"  shift, and go to state 628

    variable_declaration         go to state 629
    variable_name_with_pos_list  go to state 630


State 433

  562 function_argument_list: function_argument_list "end of expression" . function_argument_declaration

    "$a"  shift, and go to state 374
    "[["  shift, and go to state 223
    '@'   shift, and go to state 224

    $default  reduce using rule 537 (optional_field_annotation)

    metadata_argument_list         go to state 225
    optional_field_annotation      go to state 376
    function_argument_declaration  go to state 631


State 434

  126 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 126 (optional_function_argument_list)


State 435

  128 optional_function_type: ':' type_declaration .
  775 type_declaration: type_declaration . '|' type_declaration_no_options
  776                 | type_declaration . '|' '#'

    '|'  shift, and go to state 423

    $default  reduce using rule 128 (optional_function_type)


State 436

  249 expressions: expressions error .

    $default  reduce using rule 249 (expressions)


State 437

  839 make_struct_decl: "struct" . '<' $@88 type_declaration_no_options '>' $@89 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 632


State 438

  842 make_struct_decl: "class" . '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 633


State 439

   79 expression_while_loop: "while" . expr expression_block

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 634
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 440

   63 if_or_static_if: "if" .

    $default  reduce using rule 63 (if_or_static_if)


State 441

   64 if_or_static_if: "static_if" .

    $default  reduce using rule 64 (if_or_static_if)


State 442

   77 expression_for_loop: "for" . $@4 variable_name_with_pos_list "in" expr_list expression_block

    $default  reduce using rule 76 ($@4)

    $@4  go to state 635


State 443

  442 expr: "true" .

    $default  reduce using rule 442 (expr)


State 444

  443 expr: "false" .

    $default  reduce using rule 443 (expr)


State 445

  279 expr_new: "new" . new_type_declaration
  280         | "new" . new_type_declaration '(' use_initializer ')'
  281         | "new" . new_type_declaration '(' expr_list ')'
  282         | "new" . new_type_declaration '(' make_struct_single ')'
  283         | "new" . new_type_declaration '(' "uninitialized" make_struct_single ')'
  284         | "new" . make_decl

    "struct"               shift, and go to state 437
    "class"                shift, and go to state 438
    "array"                shift, and go to state 448
    "table"                shift, and go to state 453
    "fixed_array"          shift, and go to state 467
    "default"              shift, and go to state 468
    "tuple"                shift, and go to state 470
    "variant"              shift, and go to state 471
    "::"                   shift, and go to state 58
    "[["                   shift, and go to state 486
    "[{"                   shift, and go to state 487
    "{{"                   shift, and go to state 488
    "name"                 shift, and go to state 59
    "begin of code block"  shift, and go to state 499
    '<'                    shift, and go to state 636
    '['                    shift, and go to state 507

    name_in_namespace           go to state 357
    new_type_declaration        go to state 637
    structure_type_declaration  go to state 638
    make_decl                   go to state 639
    make_struct_decl            go to state 557
    make_tuple_call             go to state 558
    make_dim_decl               go to state 559
    make_table_decl             go to state 560
    array_comprehension         go to state 561


State 446

  330 expr_type_info: "typeinfo" . '(' name_in_namespace expr ')'
  331               | "typeinfo" . '(' name_in_namespace '<' "name" '>' expr ')'
  332               | "typeinfo" . '(' name_in_namespace '<' "name" c_or_s "name" '>' expr ')'
  333               | "typeinfo" . name_in_namespace '(' expr ')'
  334               | "typeinfo" . name_in_namespace '<' "name" '>' '(' expr ')'
  335               | "typeinfo" . name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr ')'

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59
    '('     shift, and go to state 640

    name_in_namespace  go to state 641


State 447

  329 expr_type_decl: "type" . '<' $@19 type_declaration '>' $@20

    '<'  shift, and go to state 642


State 448

  865 make_dim_decl: "array" . "struct" '<' $@98 type_declaration_no_options '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')'
  868              | "array" . "tuple" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')'
  871              | "array" . "variant" '<' $@102 type_declaration_no_options '>' $@103 '(' make_variant_dim ')'
  872              | "array" . '(' expr_list optional_comma ')'
  875              | "array" . '<' $@104 type_declaration_no_options '>' $@105 '(' optional_expr_list ')'

    "struct"   shift, and go to state 643
    "tuple"    shift, and go to state 644
    "variant"  shift, and go to state 645
    '<'        shift, and go to state 646
    '('        shift, and go to state 647


State 449

  287 expression_return_no_pipe: "return" .
  288                          | "return" . expr_list
  289                          | "return" . "<-" expr_list
  291 expression_return: "return" . expr_pipe
  292                  | "return" . "<-" expr_pipe

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "<-"                              shift, and go to state 648
    "$ <|"                            shift, and go to state 476
    "@ <|"                            shift, and go to state 477
    "@@ <|"                           shift, and go to state 478
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    $default  reduce using rule 287 (expression_return_no_pipe)

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 523
    expression_keyword      go to state 526
    expr_pipe               go to state 649
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 650
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign             go to state 651
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 652
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 450

  436 expr: "null" .

    $default  reduce using rule 436 (expr)


State 451

  285 expression_break: "break" .

    $default  reduce using rule 285 (expression_break)


State 452

  298 expression_try_catch: "try" . expression_block "recover" expression_block

    "begin of code block"  shift, and go to state 291

    expression_block  go to state 653


State 453

  886 make_table_decl: "table" . '(' optional_expr_map_tuple_list ')'
  887                | "table" . '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  888                | "table" . '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    '<'  shift, and go to state 654
    '('  shift, and go to state 655


State 454

  273 expression_delete: "delete" . expr
  274                  | "delete" . "explicit" expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "explicit"                        shift, and go to state 656
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 657
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 455

  487 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 658


State 456

   80 expression_with: "with" . expr expression_block

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 659
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 457

   82 expression_with_alias: "assume" . "name" '=' $@5 expr

    "name"  shift, and go to state 660


State 458

  320 expr_cast: "cast" . '<' $@13 type_declaration_no_options '>' $@14 expr

    '<'  shift, and go to state 661


State 459

  323 expr_cast: "upcast" . '<' $@15 type_declaration_no_options '>' $@16 expr

    '<'  shift, and go to state 662


State 460

  488 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 663


State 461

  286 expression_continue: "continue" .

    $default  reduce using rule 286 (expression_continue)


State 462

  246 expression_any: "pass" . "end of expression"

    "end of expression"  shift, and go to state 664


State 463

  326 expr_cast: "reinterpret" . '<' $@17 type_declaration_no_options '>' $@18 expr

    '<'  shift, and go to state 665


State 464

   55 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 666


State 465

   56 expression_goto: "goto" . "label" "integer constant"
   57                | "goto" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "label"                           shift, and go to state 667
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 668
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 466

   78 expression_unsafe: "unsafe" . expression_block
  519 expr: "unsafe" . '(' expr ')'

    "begin of code block"  shift, and go to state 291
    '('                    shift, and go to state 669

    expression_block  go to state 670


State 467

  876 make_dim_decl: "fixed_array" . '(' expr_list optional_comma ')'
  879              | "fixed_array" . '<' $@106 type_declaration_no_options '>' $@107 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 671
    '('  shift, and go to state 672


State 468

  848 make_struct_decl: "default" . '<' $@94 type_declaration_no_options '>' $@95 use_initializer

    '<'  shift, and go to state 673


State 469

  682 basic_type_declaration: "bitfield" .

    $default  reduce using rule 682 (basic_type_declaration)


State 470

  854 make_tuple_call: "tuple" . '(' expr_list optional_comma ')'
  857                | "tuple" . '<' $@96 type_declaration_no_options '>' $@97 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 674
    '('  shift, and go to state 675


State 471

  845 make_struct_decl: "variant" . '<' $@92 type_declaration_no_options '>' $@93 '(' make_variant_dim ')'

    '<'  shift, and go to state 676


State 472

  225 expr_call_pipe: "generator" . '<' type_declaration_no_options '>' optional_capture_list expr_full_block_assumed_piped
  489 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  490     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'

    '<'  shift, and go to state 677


State 473

  293 expression_yield_no_pipe: "yield" . expr
  294                         | "yield" . "<-" expr
  296 expression_yield: "yield" . expr_pipe
  297                 | "yield" . "<-" expr_pipe

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "<-"                              shift, and go to state 678
    "$ <|"                            shift, and go to state 476
    "@ <|"                            shift, and go to state 477
    "@@ <|"                           shift, and go to state 478
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 523
    expression_keyword      go to state 526
    expr_pipe               go to state 679
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign             go to state 651
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 680
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 474

  472 expr: "++" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 681
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 475

  473 expr: "--" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 682
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 476

  268 expr_pipe: "$ <|" . expr_block

    "begin of code block"  shift, and go to state 291
    '$'                    shift, and go to state 509
    '@'                    shift, and go to state 683

    expression_block  go to state 684
    block_or_lambda   go to state 685
    expr_block        go to state 686


State 477

  266 expr_pipe: "@ <|" . expr_block

    "begin of code block"  shift, and go to state 291
    '$'                    shift, and go to state 509
    '@'                    shift, and go to state 683

    expression_block  go to state 684
    block_or_lambda   go to state 685
    expr_block        go to state 687


State 478

  267 expr_pipe: "@@ <|" . expr_block

    "begin of code block"  shift, and go to state 291
    '$'                    shift, and go to state 509
    '@'                    shift, and go to state 683

    expression_block  go to state 684
    block_or_lambda   go to state 685
    expr_block        go to state 688


State 479

  521 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 689


State 480

  522 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 690


State 481

  523 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 691


State 482

  524 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 692


State 483

  525 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 693


State 484

  527 expr_mtag: "$c" . '(' expr ')' '(' ')'
  528          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 694


State 485

  526 expr_mtag: "..." .

    $default  reduce using rule 526 (expr_mtag)


State 486

  831 make_struct_decl: "[[" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  832                 | "[[" . type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  833                 | "[[" . type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  834                 | "[[" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  861 make_dim_decl: "[[" . type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  895 array_comprehension: "[[" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']'

    "for"        shift, and go to state 695
    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 696


State 487

  835 make_struct_decl: "[{" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  836                 | "[{" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  862 make_dim_decl: "[{" . type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr
  896 array_comprehension: "[{" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "for"        shift, and go to state 697
    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 698


State 488

  885 make_table_decl: "{{" . make_table optional_trailing_semicolon_cur_cur
  898 array_comprehension: "{{" . "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "for"                             shift, and go to state 699
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 700
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_map_tuple          go to state 701
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table              go to state 702
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 489

  359 expr_numeric_const: "integer constant" .

    $default  reduce using rule 359 (expr_numeric_const)


State 490

  361 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 361 (expr_numeric_const)


State 491

  360 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 360 (expr_numeric_const)


State 492

  362 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 362 (expr_numeric_const)


State 493

  363 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 363 (expr_numeric_const)


State 494

  364 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 364 (expr_numeric_const)


State 495

  365 expr_numeric_const: "double constant" .

    $default  reduce using rule 365 (expr_numeric_const)


State 496

  250 expr_keyword: "keyword" . expr expression_block
  261 expression_keyword: "keyword" . '<' $@7 type_declaration_no_options_list '>' $@8 expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '<'                               shift, and go to state 703
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 704
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 497

  264 expression_keyword: "type function" . '<' $@9 type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces

    '<'  shift, and go to state 705


State 498

   32 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 29 (string_builder_body)

    string_builder_body  go to state 706


State 499

  884 make_table_decl: "begin of code block" . expr_map_tuple_list optional_comma "end of code block"
  897 array_comprehension: "begin of code block" . "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "for"                             shift, and go to state 707
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 700
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_map_tuple          go to state 708
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    expr_map_tuple_list     go to state 709
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 500

  221 expression_block: "begin of code block" expressions "end of code block" .
  222                 | "begin of code block" expressions "end of code block" . "finally" "begin of code block" expressions "end of code block"

    "finally"  shift, and go to state 710

    $default  reduce using rule 221 (expression_block)


State 501

  226 expression_any: "end of expression" .

    $default  reduce using rule 226 (expression_any)


State 502

  449 expr: '-' . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 711
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 503

  448 expr: '+' . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 712
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 504

  486 expr: '*' . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 713
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 505

  447 expr: '~' . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 714
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 506

  446 expr: '!' . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 715
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 507

  860 make_dim_decl: '[' . optional_expr_list ']'
  893 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  894                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "for"                             shift, and go to state 716
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "iterator"                        shift, and go to state 717
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    $default  reduce using rule 251 (optional_expr_list)

    string_builder          go to state 511
    expr_reader             go to state 512
    optional_expr_list      go to state 718
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 719
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 720
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 508

  476 expr: '(' . expr_list optional_comma ')'
  477     | '(' . make_struct_single ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "$f"                              shift, and go to state 721
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 722
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 723
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 720
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_fields      go to state 724
    make_struct_single      go to state 725
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 509

  341 block_or_lambda: '$' .

    $default  reduce using rule 341 (block_or_lambda)


State 510

  342 block_or_lambda: '@' .
  343                | '@' . '@'
  412 func_addr_expr: '@' . '@' func_addr_name
  415               | '@' . '@' '<' $@22 type_declaration_no_options '>' $@23 func_addr_name
  418               | '@' . '@' '<' $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name
  536 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 726

    $default  reduce using rule 342 (block_or_lambda)


State 511

  440 expr: string_builder .

    $default  reduce using rule 440 (expr)


State 512

  439 expr: expr_reader .

    $default  reduce using rule 439 (expr)


State 513

  244 expression_any: expression_label . "end of expression"

    "end of expression"  shift, and go to state 727


State 514

  245 expression_any: expression_goto . "end of expression"

    "end of expression"  shift, and go to state 728


State 515

   73 expression_if_then_else: if_or_static_if . expr expression_block expression_else

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 729
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 516

   75 expression_if_then_else: expression_if_one_liner . "if" $@3 expr expression_else_one_liner "end of expression"

    "if"  shift, and go to state 730


State 517

  242 expression_any: expression_if_then_else .

    $default  reduce using rule 242 (expression_any)


State 518

  237 expression_any: expression_for_loop .

    $default  reduce using rule 237 (expression_any)


State 519

  234 expression_any: expression_unsafe .

    $default  reduce using rule 234 (expression_any)


State 520

  233 expression_any: expression_while_loop .

    $default  reduce using rule 233 (expression_any)


State 521

  235 expression_any: expression_with .

    $default  reduce using rule 235 (expression_any)


State 522

  236 expression_any: expression_with_alias .

    $default  reduce using rule 236 (expression_any)


State 523

  269 expr_pipe: expr_call_pipe .

    $default  reduce using rule 269 (expr_pipe)


State 524

  248 expressions: expressions expression_any .

    $default  reduce using rule 248 (expressions)


State 525

  228 expression_any: expr_keyword .

    $default  reduce using rule 228 (expression_any)


State 526

  224 expr_call_pipe: expression_keyword . expr_full_block_assumed_piped
  520 expr: expression_keyword .

    '$'  shift, and go to state 509
    '@'  shift, and go to state 683

    '$'       [reduce using rule 520 (expr)]
    '@'       [reduce using rule 520 (expr)]
    $default  reduce using rule 520 (expr)

    block_or_lambda                go to state 731
    expr_full_block_assumed_piped  go to state 732


State 527

  227 expression_any: expr_pipe .

    $default  reduce using rule 227 (expression_any)


State 528

  406 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  407                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  429 expr_call: name_in_namespace . '(' ')'
  430          | name_in_namespace . '(' "uninitialized" ')'
  431          | name_in_namespace . '(' make_struct_single ')'
  432          | name_in_namespace . '(' "uninitialized" make_struct_single ')'
  433          | name_in_namespace . '(' expr_list ')'
  437 expr: name_in_namespace .
  518     | name_in_namespace . "name"

    "name"  shift, and go to state 733
    '('     shift, and go to state 734

    "name"    [reduce using rule 437 (expr)]
    '('       [reduce using rule 437 (expr)]
    $default  reduce using rule 437 (expr)


State 529

  231 expression_any: expression_delete . "end of expression"

    "end of expression"  shift, and go to state 735


State 530

  511 expr: expr_new .

    $default  reduce using rule 511 (expr)


State 531

   71 expression_if_one_liner: expression_break .
  238 expression_any: expression_break . "end of expression"

    "end of expression"  shift, and go to state 736

    $default  reduce using rule 71 (expression_if_one_liner)


State 532

   72 expression_if_one_liner: expression_continue .
  239 expression_any: expression_continue . "end of expression"

    "end of expression"  shift, and go to state 737

    $default  reduce using rule 72 (expression_if_one_liner)


State 533

   69 expression_if_one_liner: expression_return_no_pipe .
  290 expression_return: expression_return_no_pipe . "end of expression"

    "end of expression"  shift, and go to state 738

    $default  reduce using rule 69 (expression_if_one_liner)


State 534

  240 expression_any: expression_return .

    $default  reduce using rule 240 (expression_any)


State 535

   70 expression_if_one_liner: expression_yield_no_pipe .
  295 expression_yield: expression_yield_no_pipe . "end of expression"

    "end of expression"  shift, and go to state 739

    $default  reduce using rule 70 (expression_if_one_liner)


State 536

  241 expression_any: expression_yield .

    $default  reduce using rule 241 (expression_any)


State 537

  243 expression_any: expression_try_catch .

    $default  reduce using rule 243 (expression_any)


State 538

  316 expression_let: kwd_let . optional_in_scope let_variable_declaration
  317               | kwd_let . optional_in_scope tuple_expansion_variable_declaration

    "inscope"  shift, and go to state 740

    $default  reduce using rule 305 (optional_in_scope)

    optional_in_scope  go to state 741


State 539

  232 expression_any: expression_let .

    $default  reduce using rule 232 (expression_any)


State 540

  510 expr: expr_cast .

    $default  reduce using rule 510 (expr)


State 541

  509 expr: expr_type_decl .

    $default  reduce using rule 509 (expr)


State 542

  508 expr: expr_type_info .

    $default  reduce using rule 508 (expr)


State 543

  356 expr_full_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 15

    $default  reduce using rule 122 (optional_annotation_list)

    optional_annotation_list  go to state 742


State 544

  514 expr: expr_full_block .

    $default  reduce using rule 514 (expr)


State 545

  438 expr: expr_numeric_const .

    $default  reduce using rule 438 (expr)


State 546

  230 expression_any: expr_assign . "end of expression"
  265 expr_pipe: expr_assign . " <|" expr_block

    " <|"                shift, and go to state 743
    "end of expression"  shift, and go to state 744


State 547

  229 expression_any: expr_assign_pipe .

    $default  reduce using rule 229 (expression_any)


State 548

  513 expr: expr_named_call .

    $default  reduce using rule 513 (expr)


State 549

  512 expr: expr_method_call .

    $default  reduce using rule 512 (expr)


State 550

  484 expr: func_addr_expr .

    $default  reduce using rule 484 (expr)


State 551

  444 expr: expr_field .

    $default  reduce using rule 444 (expr)


State 552

  485 expr: expr_call .

    $default  reduce using rule 485 (expr)


State 553

   68 expression_if_one_liner: expr .
  223 expr_call_pipe: expr . expr_full_block_assumed_piped
  366 expr_assign: expr .
  367            | expr . '=' expr
  368            | expr . "<-" expr
  369            | expr . ":=" expr
  370            | expr . "&=" expr
  371            | expr . "|=" expr
  372            | expr . "^=" expr
  373            | expr . "&&=" expr
  374            | expr . "||=" expr
  375            | expr . "^^=" expr
  376            | expr . "+=" expr
  377            | expr . "-=" expr
  378            | expr . "*=" expr
  379            | expr . "/=" expr
  380            | expr . "%=" expr
  381            | expr . "<<=" expr
  382            | expr . ">>=" expr
  383            | expr . "<<<=" expr
  384            | expr . ">>>=" expr
  389 expr_assign_pipe: expr . '=' expr_assign_pipe_right
  390                 | expr . "<-" expr_assign_pipe_right
  391                 | expr . "&=" expr_assign_pipe_right
  392                 | expr . "|=" expr_assign_pipe_right
  393                 | expr . "^=" expr_assign_pipe_right
  394                 | expr . "&&=" expr_assign_pipe_right
  395                 | expr . "||=" expr_assign_pipe_right
  396                 | expr . "^^=" expr_assign_pipe_right
  397                 | expr . "+=" expr_assign_pipe_right
  398                 | expr . "-=" expr_assign_pipe_right
  399                 | expr . "*=" expr_assign_pipe_right
  400                 | expr . "/=" expr_assign_pipe_right
  401                 | expr . "%=" expr_assign_pipe_right
  402                 | expr . "<<=" expr_assign_pipe_right
  403                 | expr . ">>=" expr_assign_pipe_right
  404                 | expr . "<<<=" expr_assign_pipe_right
  405                 | expr . ">>>=" expr_assign_pipe_right
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 745
    "as"    shift, and go to state 746
    "+="    shift, and go to state 747
    "-="    shift, and go to state 748
    "/="    shift, and go to state 749
    "*="    shift, and go to state 750
    "%="    shift, and go to state 751
    "&="    shift, and go to state 752
    "|="    shift, and go to state 753
    "^="    shift, and go to state 754
    "<<"    shift, and go to state 755
    ">>"    shift, and go to state 756
    "++"    shift, and go to state 757
    "--"    shift, and go to state 758
    "<="    shift, and go to state 759
    "<<="   shift, and go to state 760
    ">>="   shift, and go to state 761
    ">="    shift, and go to state 762
    "=="    shift, and go to state 763
    "!="    shift, and go to state 764
    "->"    shift, and go to state 765
    "<-"    shift, and go to state 766
    "??"    shift, and go to state 767
    "?."    shift, and go to state 768
    "?["    shift, and go to state 769
    "<|"    shift, and go to state 770
    "|>"    shift, and go to state 771
    ":="    shift, and go to state 772
    "<<<"   shift, and go to state 773
    ">>>"   shift, and go to state 774
    "<<<="  shift, and go to state 775
    ">>>="  shift, and go to state 776
    "&&"    shift, and go to state 777
    "||"    shift, and go to state 778
    "^^"    shift, and go to state 779
    "&&="   shift, and go to state 780
    "||="   shift, and go to state 781
    "^^="   shift, and go to state 782
    ".."    shift, and go to state 783
    '='     shift, and go to state 784
    '?'     shift, and go to state 785
    '|'     shift, and go to state 786
    '^'     shift, and go to state 787
    '&'     shift, and go to state 788
    '<'     shift, and go to state 789
    '>'     shift, and go to state 790
    '-'     shift, and go to state 791
    '+'     shift, and go to state 792
    '*'     shift, and go to state 793
    '/'     shift, and go to state 794
    '%'     shift, and go to state 795
    '.'     shift, and go to state 796
    '['     shift, and go to state 797
    '$'     shift, and go to state 509
    '@'     shift, and go to state 683

    "if"      reduce using rule 68 (expression_if_one_liner)
    $default  reduce using rule 366 (expr_assign)

    block_or_lambda                go to state 731
    expr_full_block_assumed_piped  go to state 798


State 554

  445 expr: expr_mtag .

    $default  reduce using rule 445 (expr)


State 555

  434 expr_call: basic_type_declaration . '(' ')'
  435          | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 799


State 556

  441 expr: make_decl .

    $default  reduce using rule 441 (expr)


State 557

  792 make_decl: make_struct_decl .

    $default  reduce using rule 792 (make_decl)


State 558

  796 make_decl: make_tuple_call .

    $default  reduce using rule 796 (make_decl)


State 559

  793 make_decl: make_dim_decl .

    $default  reduce using rule 793 (make_decl)


State 560

  794 make_decl: make_table_decl .

    $default  reduce using rule 794 (make_decl)


State 561

  795 make_decl: array_comprehension .

    $default  reduce using rule 795 (make_decl)


State 562

  612 enum_list: enum_list "name" . "end of expression"
  613          | enum_list "name" . '=' expr "end of expression"

    "end of expression"  shift, and go to state 800
    '='                  shift, and go to state 801


State 563

  611 enum_list: enum_list "end of expression" .

    $default  reduce using rule 611 (enum_list)


State 564

  630 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list $@42 . "end of code block"

    "end of code block"  shift, and go to state 802


State 565

  633 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 . enum_list $@44 "end of code block"

    $default  reduce using rule 610 (enum_list)

    enum_list  go to state 803


State 566

  635 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 635 (optional_structure_parent)


State 567

  553 struct_variable_declaration_list: struct_variable_declaration_list . $@34 structure_variable_declaration "end of expression"
  555                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header "end of expression"
  557                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block
  558                                 | struct_variable_declaration_list . '[' annotation_list ']' "end of expression"
  647 optional_struct_variable_declaration_list: "begin of code block" struct_variable_declaration_list . "end of code block"

    "end of code block"  shift, and go to state 804
    '['                  shift, and go to state 805

    "def"     reduce using rule 122 (optional_annotation_list)
    $default  reduce using rule 552 ($@34)

    optional_annotation_list  go to state 806
    $@34                      go to state 807


State 568

  601 global_variable_declaration_list: global_variable_declaration_list $@37 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 601 (global_variable_declaration_list)


State 569

  538 optional_field_annotation: "[[" annotation_argument_list ']' ']' .

    $default  reduce using rule 538 (optional_field_annotation)


State 570

  519 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 669


State 571

  489 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  490     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'

    '<'  shift, and go to state 808


State 572

  261 expression_keyword: "keyword" . '<' $@7 type_declaration_no_options_list '>' $@8 expr

    '<'  shift, and go to state 703


State 573

  520 expr: expression_keyword .

    $default  reduce using rule 520 (expr)


State 574

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'
  590 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797
    ')'    shift, and go to state 809


State 575

  591 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 591 (let_variable_name_with_pos_list)


State 576

  592 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  593                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 810

    $default  reduce using rule 592 (let_variable_name_with_pos_list)


State 577

  594 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . "end of expression"
  595                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"
  596                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr_pipe
  713 type_declaration_no_options: type_declaration_no_options . dim_list
  714                            | type_declaration_no_options . '[' ']'
  722                            | type_declaration_no_options . '-' '[' ']'
  723                            | type_declaration_no_options . "explicit"
  724                            | type_declaration_no_options . "const"
  725                            | type_declaration_no_options . '-' "const"
  726                            | type_declaration_no_options . '&'
  727                            | type_declaration_no_options . '-' '&'
  728                            | type_declaration_no_options . '#'
  729                            | type_declaration_no_options . "implicit"
  730                            | type_declaration_no_options . '-' '#'
  731                            | type_declaration_no_options . "==" "const"
  732                            | type_declaration_no_options . "==" '&'
  733                            | type_declaration_no_options . '?'
  737                            | type_declaration_no_options . "??"

    "const"              shift, and go to state 412
    "implicit"           shift, and go to state 413
    "explicit"           shift, and go to state 414
    "=="                 shift, and go to state 415
    "<-"                 shift, and go to state 578
    "??"                 shift, and go to state 416
    ":="                 shift, and go to state 579
    "end of expression"  shift, and go to state 811
    '='                  shift, and go to state 580
    '?'                  shift, and go to state 417
    '&'                  shift, and go to state 418
    '-'                  shift, and go to state 419
    '['                  shift, and go to state 420
    '#'                  shift, and go to state 421

    copy_or_move_or_clone  go to state 812
    dim_list               go to state 422


State 578

  585 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 585 (copy_or_move_or_clone)


State 579

  586 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 586 (copy_or_move_or_clone)


State 580

  584 copy_or_move_or_clone: '=' .

    $default  reduce using rule 584 (copy_or_move_or_clone)


State 581

  597 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr "end of expression"
  598                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 476
    "@ <|"                            shift, and go to state 477
    "@@ <|"                           shift, and go to state 478
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 523
    expression_keyword      go to state 526
    expr_pipe               go to state 813
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign             go to state 651
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 814
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 582

  717 type_declaration_no_options: "type" '<' $@49 . type_declaration '>' $@50

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 362
    type_declaration             go to state 815


State 583

  740 type_declaration_no_options: "array" '<' $@54 . type_declaration '>' $@55

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 362
    type_declaration             go to state 816


State 584

  743 type_declaration_no_options: "table" '<' $@56 . table_type_pair '>' $@57

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    table_type_pair              go to state 817
    type_declaration_no_options  go to state 362
    type_declaration             go to state 818


State 585

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'
  718 type_declaration_no_options: "typedecl" '(' expr . ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797
    ')'    shift, and go to state 819


State 586

  746 type_declaration_no_options: "iterator" '<' $@58 . type_declaration '>' $@59

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 362
    type_declaration             go to state 820


State 587

  736 type_declaration_no_options: "smart_ptr" '<' $@52 . type_declaration '>' $@53

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 362
    type_declaration             go to state 821


State 588

  693 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 822


State 589

  702 bitfield_type_declaration: "bitfield" '<' $@47 . bitfield_bits '>' $@48

    "name"  shift, and go to state 823

    bitfield_bits  go to state 824


State 590

  750 type_declaration_no_options: "block" '<' $@60 . type_declaration '>' $@61

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 362
    type_declaration             go to state 825


State 591

  753 type_declaration_no_options: "block" '<' $@62 . optional_function_argument_list optional_function_type '>' $@63

    '('  shift, and go to state 289

    $default  reduce using rule 124 (optional_function_argument_list)

    optional_function_argument_list  go to state 826


State 592

  757 type_declaration_no_options: "function" '<' $@64 . type_declaration '>' $@65

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 362
    type_declaration             go to state 827


State 593

  760 type_declaration_no_options: "function" '<' $@66 . optional_function_argument_list optional_function_type '>' $@67

    '('  shift, and go to state 289

    $default  reduce using rule 124 (optional_function_argument_list)

    optional_function_argument_list  go to state 828


State 594

  764 type_declaration_no_options: "lambda" '<' $@68 . type_declaration '>' $@69

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 362
    type_declaration             go to state 829


State 595

  767 type_declaration_no_options: "lambda" '<' $@70 . optional_function_argument_list optional_function_type '>' $@71

    '('  shift, and go to state 289

    $default  reduce using rule 124 (optional_function_argument_list)

    optional_function_argument_list  go to state 830


State 596

  770 type_declaration_no_options: "tuple" '<' $@72 . tuple_type_list '>' $@73

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 615
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    tuple_type                   go to state 831
    tuple_type_list              go to state 832
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 362
    type_declaration             go to state 620


State 597

  773 type_declaration_no_options: "variant" '<' $@74 . variant_type_list '>' $@75

    "name"  shift, and go to state 622

    variant_type       go to state 833
    variant_type_list  go to state 834


State 598

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'
  694 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797
    ')'    shift, and go to state 835


State 599

  721 type_declaration_no_options: '$' name_in_namespace '<' . $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    $default  reduce using rule 720 ($@51)

    $@51  go to state 836


State 600

  719 type_declaration_no_options: '$' name_in_namespace '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    $default  reduce using rule 251 (optional_expr_list)

    string_builder          go to state 511
    expr_reader             go to state 512
    optional_expr_list      go to state 837
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 719
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 720
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 601

  731 type_declaration_no_options: type_declaration_no_options "==" "const" .

    $default  reduce using rule 731 (type_declaration_no_options)


State 602

  732 type_declaration_no_options: type_declaration_no_options "==" '&' .

    $default  reduce using rule 732 (type_declaration_no_options)


State 603

  725 type_declaration_no_options: type_declaration_no_options '-' "const" .

    $default  reduce using rule 725 (type_declaration_no_options)


State 604

  727 type_declaration_no_options: type_declaration_no_options '-' '&' .

    $default  reduce using rule 727 (type_declaration_no_options)


State 605

  722 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'

    ']'  shift, and go to state 838


State 606

  730 type_declaration_no_options: type_declaration_no_options '-' '#' .

    $default  reduce using rule 730 (type_declaration_no_options)


State 607

  714 type_declaration_no_options: type_declaration_no_options '[' ']' .

    $default  reduce using rule 714 (type_declaration_no_options)


State 608

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'
  707 dim_list: '[' expr . ']'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797
    ']'    shift, and go to state 839


State 609

  708 dim_list: dim_list '[' . expr ']'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 840
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 610

  776 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 776 (type_declaration)


State 611

  713 type_declaration_no_options: type_declaration_no_options . dim_list
  714                            | type_declaration_no_options . '[' ']'
  722                            | type_declaration_no_options . '-' '[' ']'
  723                            | type_declaration_no_options . "explicit"
  724                            | type_declaration_no_options . "const"
  725                            | type_declaration_no_options . '-' "const"
  726                            | type_declaration_no_options . '&'
  727                            | type_declaration_no_options . '-' '&'
  728                            | type_declaration_no_options . '#'
  729                            | type_declaration_no_options . "implicit"
  730                            | type_declaration_no_options . '-' '#'
  731                            | type_declaration_no_options . "==" "const"
  732                            | type_declaration_no_options . "==" '&'
  733                            | type_declaration_no_options . '?'
  737                            | type_declaration_no_options . "??"
  775 type_declaration: type_declaration '|' type_declaration_no_options .

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "??"        shift, and go to state 416
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    $default  reduce using rule 775 (type_declaration)

    dim_list  go to state 422


State 612

  699 bitfield_alias_bits: bitfield_alias_bits "name" . "end of expression"

    "end of expression"  shift, and go to state 841


State 613

  698 bitfield_alias_bits: bitfield_alias_bits "end of expression" .

    $default  reduce using rule 698 (bitfield_alias_bits)


State 614

  791 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 . "end of code block"

    "end of code block"  shift, and go to state 842


State 615

  270 name_in_namespace: "name" .
  271                  | "name" . "::" "name"
  564 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 100
    ':'   shift, and go to state 843

    $default  reduce using rule 270 (name_in_namespace)


State 616

  704 c_or_s: "end of expression" .

    $default  reduce using rule 704 (c_or_s)


State 617

  703 c_or_s: ',' .

    $default  reduce using rule 703 (c_or_s)


State 618

  569 tuple_alias_type_list: tuple_alias_type_list tuple_type . c_or_s

    "end of expression"  shift, and go to state 616
    ','                  shift, and go to state 617

    c_or_s  go to state 844


State 619

  568 tuple_alias_type_list: tuple_alias_type_list c_or_s .

    $default  reduce using rule 568 (tuple_alias_type_list)


State 620

  563 tuple_type: type_declaration .
  775 type_declaration: type_declaration . '|' type_declaration_no_options
  776                 | type_declaration . '|' '#'

    '|'  shift, and go to state 423

    $default  reduce using rule 563 (tuple_type)


State 621

  781 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 . "end of code block"

    "end of code block"  shift, and go to state 845


State 622

  570 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 846


State 623

  575 variant_alias_type_list: variant_alias_type_list variant_type . c_or_s

    "end of expression"  shift, and go to state 616
    ','                  shift, and go to state 617

    c_or_s  go to state 847


State 624

  574 variant_alias_type_list: variant_alias_type_list c_or_s .

    $default  reduce using rule 574 (variant_alias_type_list)


State 625

  786 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 . "end of code block"

    "end of code block"  shift, and go to state 848


State 626

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'
  560 function_argument_declaration: "$a" '(' expr . ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797
    ')'    shift, and go to state 849


State 627

  652 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 850


State 628

  651 variable_name_with_pos_list: "name" .
  653                            | "name" . "aka" "name"

    "aka"  shift, and go to state 851

    $default  reduce using rule 651 (variable_name_with_pos_list)


State 629

  559 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration .

    $default  reduce using rule 559 (function_argument_declaration)


State 630

  578 variable_declaration: variable_name_with_pos_list .
  579                     | variable_name_with_pos_list . '&'
  580                     | variable_name_with_pos_list . ':' type_declaration
  581                     | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  582                     | variable_name_with_pos_list . copy_or_move expr
  583                     | variable_name_with_pos_list . copy_or_move expr_pipe
  654 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  655                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 852
    ','   shift, and go to state 853
    '='   shift, and go to state 854
    ':'   shift, and go to state 855
    '&'   shift, and go to state 856

    $default  reduce using rule 578 (variable_declaration)

    copy_or_move  go to state 857


State 631

  562 function_argument_list: function_argument_list "end of expression" function_argument_declaration .

    $default  reduce using rule 562 (function_argument_list)


State 632

  839 make_struct_decl: "struct" '<' . $@88 type_declaration_no_options '>' $@89 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 837 ($@88)

    $@88  go to state 858


State 633

  842 make_struct_decl: "class" '<' . $@90 type_declaration_no_options '>' $@91 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 840 ($@90)

    $@90  go to state 859


State 634

   79 expression_while_loop: "while" expr . expression_block
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 745
    "as"                   shift, and go to state 746
    "<<"                   shift, and go to state 755
    ">>"                   shift, and go to state 756
    "++"                   shift, and go to state 757
    "--"                   shift, and go to state 758
    "<="                   shift, and go to state 759
    ">="                   shift, and go to state 762
    "=="                   shift, and go to state 763
    "!="                   shift, and go to state 764
    "->"                   shift, and go to state 765
    "??"                   shift, and go to state 767
    "?."                   shift, and go to state 768
    "?["                   shift, and go to state 769
    "<|"                   shift, and go to state 770
    "|>"                   shift, and go to state 771
    "<<<"                  shift, and go to state 773
    ">>>"                  shift, and go to state 774
    "&&"                   shift, and go to state 777
    "||"                   shift, and go to state 778
    "^^"                   shift, and go to state 779
    ".."                   shift, and go to state 783
    "begin of code block"  shift, and go to state 291
    '?'                    shift, and go to state 785
    '|'                    shift, and go to state 786
    '^'                    shift, and go to state 787
    '&'                    shift, and go to state 788
    '<'                    shift, and go to state 789
    '>'                    shift, and go to state 790
    '-'                    shift, and go to state 791
    '+'                    shift, and go to state 792
    '*'                    shift, and go to state 793
    '/'                    shift, and go to state 794
    '%'                    shift, and go to state 795
    '.'                    shift, and go to state 796
    '['                    shift, and go to state 797

    expression_block  go to state 860


State 635

   77 expression_for_loop: "for" $@4 . variable_name_with_pos_list "in" expr_list expression_block

    "$i"    shift, and go to state 627
    "name"  shift, and go to state 628

    variable_name_with_pos_list  go to state 861


State 636

  277 new_type_declaration: '<' . $@11 type_declaration '>' $@12

    $default  reduce using rule 275 ($@11)

    $@11  go to state 862


State 637

  279 expr_new: "new" new_type_declaration .
  280         | "new" new_type_declaration . '(' use_initializer ')'
  281         | "new" new_type_declaration . '(' expr_list ')'
  282         | "new" new_type_declaration . '(' make_struct_single ')'
  283         | "new" new_type_declaration . '(' "uninitialized" make_struct_single ')'

    '('  shift, and go to state 863

    '('       [reduce using rule 279 (expr_new)]
    $default  reduce using rule 279 (expr_new)


State 638

  278 new_type_declaration: structure_type_declaration .

    $default  reduce using rule 278 (new_type_declaration)


State 639

  284 expr_new: "new" make_decl .

    $default  reduce using rule 284 (expr_new)


State 640

  330 expr_type_info: "typeinfo" '(' . name_in_namespace expr ')'
  331               | "typeinfo" '(' . name_in_namespace '<' "name" '>' expr ')'
  332               | "typeinfo" '(' . name_in_namespace '<' "name" c_or_s "name" '>' expr ')'

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 864


State 641

  333 expr_type_info: "typeinfo" name_in_namespace . '(' expr ')'
  334               | "typeinfo" name_in_namespace . '<' "name" '>' '(' expr ')'
  335               | "typeinfo" name_in_namespace . '<' "name" "end of expression" "name" '>' '(' expr ')'

    '<'  shift, and go to state 865
    '('  shift, and go to state 866


State 642

  329 expr_type_decl: "type" '<' . $@19 type_declaration '>' $@20

    $default  reduce using rule 327 ($@19)

    $@19  go to state 867


State 643

  865 make_dim_decl: "array" "struct" . '<' $@98 type_declaration_no_options '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 868


State 644

  868 make_dim_decl: "array" "tuple" . '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 869


State 645

  871 make_dim_decl: "array" "variant" . '<' $@102 type_declaration_no_options '>' $@103 '(' make_variant_dim ')'

    '<'  shift, and go to state 870


State 646

  875 make_dim_decl: "array" '<' . $@104 type_declaration_no_options '>' $@105 '(' optional_expr_list ')'

    $default  reduce using rule 873 ($@104)

    $@104  go to state 871


State 647

  872 make_dim_decl: "array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 872
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 720
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 648

  289 expression_return_no_pipe: "return" "<-" . expr_list
  292 expression_return: "return" "<-" . expr_pipe

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 476
    "@ <|"                            shift, and go to state 477
    "@@ <|"                           shift, and go to state 478
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 523
    expression_keyword      go to state 526
    expr_pipe               go to state 873
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 874
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign             go to state 651
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 652
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 649

  291 expression_return: "return" expr_pipe .

    $default  reduce using rule 291 (expression_return)


State 650

  288 expression_return_no_pipe: "return" expr_list .
  337 expr_list: expr_list . ',' expr

    ','  shift, and go to state 875

    $default  reduce using rule 288 (expression_return_no_pipe)


State 651

  265 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 743


State 652

  223 expr_call_pipe: expr . expr_full_block_assumed_piped
  336 expr_list: expr .
  366 expr_assign: expr .
  367            | expr . '=' expr
  368            | expr . "<-" expr
  369            | expr . ":=" expr
  370            | expr . "&=" expr
  371            | expr . "|=" expr
  372            | expr . "^=" expr
  373            | expr . "&&=" expr
  374            | expr . "||=" expr
  375            | expr . "^^=" expr
  376            | expr . "+=" expr
  377            | expr . "-=" expr
  378            | expr . "*=" expr
  379            | expr . "/=" expr
  380            | expr . "%=" expr
  381            | expr . "<<=" expr
  382            | expr . ">>=" expr
  383            | expr . "<<<=" expr
  384            | expr . ">>>=" expr
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 745
    "as"    shift, and go to state 746
    "+="    shift, and go to state 876
    "-="    shift, and go to state 877
    "/="    shift, and go to state 878
    "*="    shift, and go to state 879
    "%="    shift, and go to state 880
    "&="    shift, and go to state 881
    "|="    shift, and go to state 882
    "^="    shift, and go to state 883
    "<<"    shift, and go to state 755
    ">>"    shift, and go to state 756
    "++"    shift, and go to state 757
    "--"    shift, and go to state 758
    "<="    shift, and go to state 759
    "<<="   shift, and go to state 884
    ">>="   shift, and go to state 885
    ">="    shift, and go to state 762
    "=="    shift, and go to state 763
    "!="    shift, and go to state 764
    "->"    shift, and go to state 765
    "<-"    shift, and go to state 886
    "??"    shift, and go to state 767
    "?."    shift, and go to state 768
    "?["    shift, and go to state 769
    "<|"    shift, and go to state 770
    "|>"    shift, and go to state 771
    ":="    shift, and go to state 772
    "<<<"   shift, and go to state 773
    ">>>"   shift, and go to state 774
    "<<<="  shift, and go to state 887
    ">>>="  shift, and go to state 888
    "&&"    shift, and go to state 777
    "||"    shift, and go to state 778
    "^^"    shift, and go to state 779
    "&&="   shift, and go to state 889
    "||="   shift, and go to state 890
    "^^="   shift, and go to state 891
    ".."    shift, and go to state 783
    '='     shift, and go to state 892
    '?'     shift, and go to state 785
    '|'     shift, and go to state 786
    '^'     shift, and go to state 787
    '&'     shift, and go to state 788
    '<'     shift, and go to state 789
    '>'     shift, and go to state 790
    '-'     shift, and go to state 791
    '+'     shift, and go to state 792
    '*'     shift, and go to state 793
    '/'     shift, and go to state 794
    '%'     shift, and go to state 795
    '.'     shift, and go to state 796
    '['     shift, and go to state 797
    '$'     shift, and go to state 509
    '@'     shift, and go to state 683

    " <|"     reduce using rule 366 (expr_assign)
    $default  reduce using rule 336 (expr_list)

    block_or_lambda                go to state 731
    expr_full_block_assumed_piped  go to state 798


State 653

  298 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 893


State 654

  887 make_table_decl: "table" '<' . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  888                | "table" '<' . type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 894


State 655

  886 make_table_decl: "table" '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    $default  reduce using rule 255 (optional_expr_map_tuple_list)

    string_builder                go to state 511
    expr_reader                   go to state 512
    optional_expr_map_tuple_list  go to state 895
    expression_keyword            go to state 573
    name_in_namespace             go to state 528
    expr_new                      go to state 530
    expr_cast                     go to state 540
    expr_type_decl                go to state 541
    expr_type_info                go to state 542
    block_or_lambda               go to state 543
    expr_full_block               go to state 544
    expr_numeric_const            go to state 545
    expr_named_call               go to state 548
    expr_method_call              go to state 549
    func_addr_expr                go to state 550
    expr_field                    go to state 551
    expr_call                     go to state 552
    expr                          go to state 700
    expr_mtag                     go to state 554
    basic_type_declaration        go to state 555
    make_decl                     go to state 556
    make_struct_decl              go to state 557
    make_map_tuple                go to state 708
    make_tuple_call               go to state 558
    make_dim_decl                 go to state 559
    expr_map_tuple_list           go to state 896
    make_table_decl               go to state 560
    array_comprehension           go to state 561


State 656

  274 expression_delete: "delete" "explicit" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 897
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 657

  273 expression_delete: "delete" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797

    $default  reduce using rule 273 (expression_delete)


State 658

  487 expr: "deref" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 898
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 659

   80 expression_with: "with" expr . expression_block
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 745
    "as"                   shift, and go to state 746
    "<<"                   shift, and go to state 755
    ">>"                   shift, and go to state 756
    "++"                   shift, and go to state 757
    "--"                   shift, and go to state 758
    "<="                   shift, and go to state 759
    ">="                   shift, and go to state 762
    "=="                   shift, and go to state 763
    "!="                   shift, and go to state 764
    "->"                   shift, and go to state 765
    "??"                   shift, and go to state 767
    "?."                   shift, and go to state 768
    "?["                   shift, and go to state 769
    "<|"                   shift, and go to state 770
    "|>"                   shift, and go to state 771
    "<<<"                  shift, and go to state 773
    ">>>"                  shift, and go to state 774
    "&&"                   shift, and go to state 777
    "||"                   shift, and go to state 778
    "^^"                   shift, and go to state 779
    ".."                   shift, and go to state 783
    "begin of code block"  shift, and go to state 291
    '?'                    shift, and go to state 785
    '|'                    shift, and go to state 786
    '^'                    shift, and go to state 787
    '&'                    shift, and go to state 788
    '<'                    shift, and go to state 789
    '>'                    shift, and go to state 790
    '-'                    shift, and go to state 791
    '+'                    shift, and go to state 792
    '*'                    shift, and go to state 793
    '/'                    shift, and go to state 794
    '%'                    shift, and go to state 795
    '.'                    shift, and go to state 796
    '['                    shift, and go to state 797

    expression_block  go to state 899


State 660

   82 expression_with_alias: "assume" "name" . '=' $@5 expr

    '='  shift, and go to state 900


State 661

  320 expr_cast: "cast" '<' . $@13 type_declaration_no_options '>' $@14 expr

    $default  reduce using rule 318 ($@13)

    $@13  go to state 901


State 662

  323 expr_cast: "upcast" '<' . $@15 type_declaration_no_options '>' $@16 expr

    $default  reduce using rule 321 ($@15)

    $@15  go to state 902


State 663

  488 expr: "addr" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 903
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 664

  246 expression_any: "pass" "end of expression" .

    $default  reduce using rule 246 (expression_any)


State 665

  326 expr_cast: "reinterpret" '<' . $@17 type_declaration_no_options '>' $@18 expr

    $default  reduce using rule 324 ($@17)

    $@17  go to state 904


State 666

   55 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 905


State 667

   56 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 906


State 668

   57 expression_goto: "goto" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797

    $default  reduce using rule 57 (expression_goto)


State 669

  519 expr: "unsafe" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 907
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 670

   78 expression_unsafe: "unsafe" expression_block .

    $default  reduce using rule 78 (expression_unsafe)


State 671

  879 make_dim_decl: "fixed_array" '<' . $@106 type_declaration_no_options '>' $@107 '(' expr_list optional_comma ')'

    $default  reduce using rule 877 ($@106)

    $@106  go to state 908


State 672

  876 make_dim_decl: "fixed_array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 909
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 720
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 673

  848 make_struct_decl: "default" '<' . $@94 type_declaration_no_options '>' $@95 use_initializer

    $default  reduce using rule 846 ($@94)

    $@94  go to state 910


State 674

  857 make_tuple_call: "tuple" '<' . $@96 type_declaration_no_options '>' $@97 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 855 ($@96)

    $@96  go to state 911


State 675

  854 make_tuple_call: "tuple" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 912
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 720
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 676

  845 make_struct_decl: "variant" '<' . $@92 type_declaration_no_options '>' $@93 '(' make_variant_dim ')'

    $default  reduce using rule 843 ($@92)

    $@92  go to state 913


State 677

  225 expr_call_pipe: "generator" '<' . type_declaration_no_options '>' optional_capture_list expr_full_block_assumed_piped
  489 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  490     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 914


State 678

  294 expression_yield_no_pipe: "yield" "<-" . expr
  297 expression_yield: "yield" "<-" . expr_pipe

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 476
    "@ <|"                            shift, and go to state 477
    "@@ <|"                           shift, and go to state 478
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 523
    expression_keyword      go to state 526
    expr_pipe               go to state 915
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign             go to state 651
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 916
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 679

  296 expression_yield: "yield" expr_pipe .

    $default  reduce using rule 296 (expression_yield)


State 680

  223 expr_call_pipe: expr . expr_full_block_assumed_piped
  293 expression_yield_no_pipe: "yield" expr .
  366 expr_assign: expr .
  367            | expr . '=' expr
  368            | expr . "<-" expr
  369            | expr . ":=" expr
  370            | expr . "&=" expr
  371            | expr . "|=" expr
  372            | expr . "^=" expr
  373            | expr . "&&=" expr
  374            | expr . "||=" expr
  375            | expr . "^^=" expr
  376            | expr . "+=" expr
  377            | expr . "-=" expr
  378            | expr . "*=" expr
  379            | expr . "/=" expr
  380            | expr . "%=" expr
  381            | expr . "<<=" expr
  382            | expr . ">>=" expr
  383            | expr . "<<<=" expr
  384            | expr . ">>>=" expr
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 745
    "as"    shift, and go to state 746
    "+="    shift, and go to state 876
    "-="    shift, and go to state 877
    "/="    shift, and go to state 878
    "*="    shift, and go to state 879
    "%="    shift, and go to state 880
    "&="    shift, and go to state 881
    "|="    shift, and go to state 882
    "^="    shift, and go to state 883
    "<<"    shift, and go to state 755
    ">>"    shift, and go to state 756
    "++"    shift, and go to state 757
    "--"    shift, and go to state 758
    "<="    shift, and go to state 759
    "<<="   shift, and go to state 884
    ">>="   shift, and go to state 885
    ">="    shift, and go to state 762
    "=="    shift, and go to state 763
    "!="    shift, and go to state 764
    "->"    shift, and go to state 765
    "<-"    shift, and go to state 886
    "??"    shift, and go to state 767
    "?."    shift, and go to state 768
    "?["    shift, and go to state 769
    "<|"    shift, and go to state 770
    "|>"    shift, and go to state 771
    ":="    shift, and go to state 772
    "<<<"   shift, and go to state 773
    ">>>"   shift, and go to state 774
    "<<<="  shift, and go to state 887
    ">>>="  shift, and go to state 888
    "&&"    shift, and go to state 777
    "||"    shift, and go to state 778
    "^^"    shift, and go to state 779
    "&&="   shift, and go to state 889
    "||="   shift, and go to state 890
    "^^="   shift, and go to state 891
    ".."    shift, and go to state 783
    '='     shift, and go to state 892
    '?'     shift, and go to state 785
    '|'     shift, and go to state 786
    '^'     shift, and go to state 787
    '&'     shift, and go to state 788
    '<'     shift, and go to state 789
    '>'     shift, and go to state 790
    '-'     shift, and go to state 791
    '+'     shift, and go to state 792
    '*'     shift, and go to state 793
    '/'     shift, and go to state 794
    '%'     shift, and go to state 795
    '.'     shift, and go to state 796
    '['     shift, and go to state 797
    '$'     shift, and go to state 509
    '@'     shift, and go to state 683

    " <|"     reduce using rule 366 (expr_assign)
    $default  reduce using rule 293 (expression_yield_no_pipe)

    block_or_lambda                go to state 731
    expr_full_block_assumed_piped  go to state 798


State 681

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  472     | "++" expr .
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 745
    "as"  shift, and go to state 746
    "++"  shift, and go to state 757
    "--"  shift, and go to state 758
    "->"  shift, and go to state 765
    "?."  shift, and go to state 768
    "?["  shift, and go to state 769
    "<|"  shift, and go to state 770
    "|>"  shift, and go to state 771
    '.'   shift, and go to state 796
    '['   shift, and go to state 797

    $default  reduce using rule 472 (expr)


State 682

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  473     | "--" expr .
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 745
    "as"  shift, and go to state 746
    "++"  shift, and go to state 757
    "--"  shift, and go to state 758
    "->"  shift, and go to state 765
    "?."  shift, and go to state 768
    "?["  shift, and go to state 769
    "<|"  shift, and go to state 770
    "|>"  shift, and go to state 771
    '.'   shift, and go to state 796
    '['   shift, and go to state 797

    $default  reduce using rule 473 (expr)


State 683

  342 block_or_lambda: '@' .
  343                | '@' . '@'

    '@'  shift, and go to state 917

    $default  reduce using rule 342 (block_or_lambda)


State 684

  354 expr_block: expression_block .

    $default  reduce using rule 354 (expr_block)


State 685

  355 expr_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 15

    $default  reduce using rule 122 (optional_annotation_list)

    optional_annotation_list  go to state 918


State 686

  268 expr_pipe: "$ <|" expr_block .

    $default  reduce using rule 268 (expr_pipe)


State 687

  266 expr_pipe: "@ <|" expr_block .

    $default  reduce using rule 266 (expr_pipe)


State 688

  267 expr_pipe: "@@ <|" expr_block .

    $default  reduce using rule 267 (expr_pipe)


State 689

  521 expr_mtag: "$$" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 919
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 690

  522 expr_mtag: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 920
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 691

  523 expr_mtag: "$v" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 921
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 692

  524 expr_mtag: "$b" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 922
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 693

  525 expr_mtag: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 923
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 694

  527 expr_mtag: "$c" '(' . expr ')' '(' ')'
  528          | "$c" '(' . expr ')' '(' expr_list ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 924
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 695

  895 array_comprehension: "[[" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']'

    "$i"    shift, and go to state 627
    "name"  shift, and go to state 628

    variable_name_with_pos_list  go to state 925


State 696

  713 type_declaration_no_options: type_declaration_no_options . dim_list
  714                            | type_declaration_no_options . '[' ']'
  722                            | type_declaration_no_options . '-' '[' ']'
  723                            | type_declaration_no_options . "explicit"
  724                            | type_declaration_no_options . "const"
  725                            | type_declaration_no_options . '-' "const"
  726                            | type_declaration_no_options . '&'
  727                            | type_declaration_no_options . '-' '&'
  728                            | type_declaration_no_options . '#'
  729                            | type_declaration_no_options . "implicit"
  730                            | type_declaration_no_options . '-' '#'
  731                            | type_declaration_no_options . "==" "const"
  732                            | type_declaration_no_options . "==" '&'
  733                            | type_declaration_no_options . '?'
  737                            | type_declaration_no_options . "??"
  831 make_struct_decl: "[[" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  832                 | "[[" type_declaration_no_options . optional_block optional_trailing_delim_sqr_sqr
  833                 | "[[" type_declaration_no_options . '(' ')' optional_block optional_trailing_delim_sqr_sqr
  834                 | "[[" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  861 make_dim_decl: "[[" type_declaration_no_options . make_dim optional_trailing_semicolon_sqr_sqr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "const"                           shift, and go to state 412
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "where"                           shift, and go to state 926
    "reinterpret"                     shift, and go to state 463
    "implicit"                        shift, and go to state 413
    "explicit"                        shift, and go to state 414
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "=="                              shift, and go to state 415
    "??"                              shift, and go to state 416
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "$f"                              shift, and go to state 721
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 722
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '?'                               shift, and go to state 417
    '&'                               shift, and go to state 418
    '-'                               shift, and go to state 927
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 928
    '('                               shift, and go to state 929
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510
    '#'                               shift, and go to state 421

    $default  reduce using rule 815 (optional_block)

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 930
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    dim_list                go to state 422
    make_decl               go to state 556
    make_struct_fields      go to state 931
    make_struct_dim         go to state 932
    optional_block          go to state 933
    make_struct_decl        go to state 557
    make_tuple              go to state 934
    make_tuple_call         go to state 558
    make_dim                go to state 935
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 697

  896 array_comprehension: "[{" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "$i"    shift, and go to state 627
    "name"  shift, and go to state 628

    variable_name_with_pos_list  go to state 936


State 698

  713 type_declaration_no_options: type_declaration_no_options . dim_list
  714                            | type_declaration_no_options . '[' ']'
  722                            | type_declaration_no_options . '-' '[' ']'
  723                            | type_declaration_no_options . "explicit"
  724                            | type_declaration_no_options . "const"
  725                            | type_declaration_no_options . '-' "const"
  726                            | type_declaration_no_options . '&'
  727                            | type_declaration_no_options . '-' '&'
  728                            | type_declaration_no_options . '#'
  729                            | type_declaration_no_options . "implicit"
  730                            | type_declaration_no_options . '-' '#'
  731                            | type_declaration_no_options . "==" "const"
  732                            | type_declaration_no_options . "==" '&'
  733                            | type_declaration_no_options . '?'
  737                            | type_declaration_no_options . "??"
  835 make_struct_decl: "[{" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_cur_sqr
  836                 | "[{" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  862 make_dim_decl: "[{" type_declaration_no_options . make_dim optional_trailing_semicolon_cur_sqr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "const"                           shift, and go to state 412
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "implicit"                        shift, and go to state 413
    "explicit"                        shift, and go to state 414
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "=="                              shift, and go to state 415
    "??"                              shift, and go to state 416
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "$f"                              shift, and go to state 721
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 722
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '?'                               shift, and go to state 417
    '&'                               shift, and go to state 418
    '-'                               shift, and go to state 927
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 928
    '('                               shift, and go to state 937
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510
    '#'                               shift, and go to state 421

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 930
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    dim_list                go to state 422
    make_decl               go to state 556
    make_struct_fields      go to state 931
    make_struct_dim         go to state 938
    make_struct_decl        go to state 557
    make_tuple              go to state 934
    make_tuple_call         go to state 558
    make_dim                go to state 939
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 699

  898 array_comprehension: "{{" "for" . variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "$i"    shift, and go to state 627
    "name"  shift, and go to state 628

    variable_name_with_pos_list  go to state 940


State 700

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'
  852 make_map_tuple: expr . "=>" expr
  853               | expr .

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "=>"   shift, and go to state 941
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797

    $default  reduce using rule 853 (make_map_tuple)


State 701

  880 make_table: make_map_tuple .

    $default  reduce using rule 880 (make_table)


State 702

  881 make_table: make_table . "end of expression" make_map_tuple
  885 make_table_decl: "{{" make_table . optional_trailing_semicolon_cur_cur

    "end of code block"  shift, and go to state 942
    "end of expression"  shift, and go to state 943
    ";}}"                shift, and go to state 944

    optional_trailing_semicolon_cur_cur  go to state 945


State 703

  261 expression_keyword: "keyword" '<' . $@7 type_declaration_no_options_list '>' $@8 expr

    $default  reduce using rule 259 ($@7)

    $@7  go to state 946


State 704

  250 expr_keyword: "keyword" expr . expression_block
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 745
    "as"                   shift, and go to state 746
    "<<"                   shift, and go to state 755
    ">>"                   shift, and go to state 756
    "++"                   shift, and go to state 757
    "--"                   shift, and go to state 758
    "<="                   shift, and go to state 759
    ">="                   shift, and go to state 762
    "=="                   shift, and go to state 763
    "!="                   shift, and go to state 764
    "->"                   shift, and go to state 765
    "??"                   shift, and go to state 767
    "?."                   shift, and go to state 768
    "?["                   shift, and go to state 769
    "<|"                   shift, and go to state 770
    "|>"                   shift, and go to state 771
    "<<<"                  shift, and go to state 773
    ">>>"                  shift, and go to state 774
    "&&"                   shift, and go to state 777
    "||"                   shift, and go to state 778
    "^^"                   shift, and go to state 779
    ".."                   shift, and go to state 783
    "begin of code block"  shift, and go to state 291
    '?'                    shift, and go to state 785
    '|'                    shift, and go to state 786
    '^'                    shift, and go to state 787
    '&'                    shift, and go to state 788
    '<'                    shift, and go to state 789
    '>'                    shift, and go to state 790
    '-'                    shift, and go to state 791
    '+'                    shift, and go to state 792
    '*'                    shift, and go to state 793
    '/'                    shift, and go to state 794
    '%'                    shift, and go to state 795
    '.'                    shift, and go to state 796
    '['                    shift, and go to state 797

    expression_block  go to state 947


State 705

  264 expression_keyword: "type function" '<' . $@9 type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces

    $default  reduce using rule 262 ($@9)

    $@9  go to state 948


State 706

   30 string_builder_body: string_builder_body . character_sequence
   31                    | string_builder_body . "{" expr "}"
   32 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 166
    STRING_CHARACTER_ESC  shift, and go to state 167
    "end of the string"   shift, and go to state 949
    "{"                   shift, and go to state 950

    character_sequence  go to state 951


State 707

  897 array_comprehension: "begin of code block" "for" . variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "$i"    shift, and go to state 627
    "name"  shift, and go to state 628

    variable_name_with_pos_list  go to state 952


State 708

  882 expr_map_tuple_list: make_map_tuple .

    $default  reduce using rule 882 (expr_map_tuple_list)


State 709

  883 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  884 make_table_decl: "begin of code block" expr_map_tuple_list . optional_comma "end of code block"

    ','  shift, and go to state 953

    $default  reduce using rule 891 (optional_comma)

    optional_comma  go to state 954


State 710

  222 expression_block: "begin of code block" expressions "end of code block" "finally" . "begin of code block" expressions "end of code block"

    "begin of code block"  shift, and go to state 955


State 711

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  449 expr: '-' expr .
  450     | expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 745
    "as"  shift, and go to state 746
    "++"  shift, and go to state 757
    "--"  shift, and go to state 758
    "->"  shift, and go to state 765
    "?."  shift, and go to state 768
    "?["  shift, and go to state 769
    "<|"  shift, and go to state 770
    "|>"  shift, and go to state 771
    '.'   shift, and go to state 796
    '['   shift, and go to state 797

    $default  reduce using rule 449 (expr)


State 712

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  448 expr: '+' expr .
  450     | expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 745
    "as"  shift, and go to state 746
    "++"  shift, and go to state 757
    "--"  shift, and go to state 758
    "->"  shift, and go to state 765
    "?."  shift, and go to state 768
    "?["  shift, and go to state 769
    "<|"  shift, and go to state 770
    "|>"  shift, and go to state 771
    '.'   shift, and go to state 796
    '['   shift, and go to state 797

    $default  reduce using rule 448 (expr)


State 713

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  486     | '*' expr .
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 768
    "?["  shift, and go to state 769
    '.'   shift, and go to state 796
    '['   shift, and go to state 797

    $default  reduce using rule 486 (expr)


State 714

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  447 expr: '~' expr .
  450     | expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 745
    "as"  shift, and go to state 746
    "++"  shift, and go to state 757
    "--"  shift, and go to state 758
    "->"  shift, and go to state 765
    "?."  shift, and go to state 768
    "?["  shift, and go to state 769
    "<|"  shift, and go to state 770
    "|>"  shift, and go to state 771
    '.'   shift, and go to state 796
    '['   shift, and go to state 797

    $default  reduce using rule 447 (expr)


State 715

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  446 expr: '!' expr .
  450     | expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 745
    "as"  shift, and go to state 746
    "++"  shift, and go to state 757
    "--"  shift, and go to state 758
    "->"  shift, and go to state 765
    "?."  shift, and go to state 768
    "?["  shift, and go to state 769
    "<|"  shift, and go to state 770
    "|>"  shift, and go to state 771
    '.'   shift, and go to state 796
    '['   shift, and go to state 797

    $default  reduce using rule 446 (expr)


State 716

  893 array_comprehension: '[' "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 627
    "name"  shift, and go to state 628

    variable_name_with_pos_list  go to state 956


State 717

  894 array_comprehension: '[' "iterator" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "for"  shift, and go to state 957


State 718

  860 make_dim_decl: '[' optional_expr_list . ']'

    ']'  shift, and go to state 958


State 719

  252 optional_expr_list: expr_list . optional_comma
  337 expr_list: expr_list . ',' expr

    ','  shift, and go to state 959

    ','       [reduce using rule 891 (optional_comma)]
    $default  reduce using rule 891 (optional_comma)

    optional_comma  go to state 960


State 720

  336 expr_list: expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797

    $default  reduce using rule 336 (expr_list)


State 721

  801 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  802                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 961


State 722

  270 name_in_namespace: "name" .
  271                  | "name" . "::" "name"
  797 make_struct_fields: "name" . copy_or_move expr
  798                   | "name" . ":=" expr

    "<-"  shift, and go to state 852
    ":="  shift, and go to state 962
    "::"  shift, and go to state 100
    '='   shift, and go to state 854

    $default  reduce using rule 270 (name_in_namespace)

    copy_or_move  go to state 963


State 723

  337 expr_list: expr_list . ',' expr
  476 expr: '(' expr_list . optional_comma ')'

    ','  shift, and go to state 959

    $default  reduce using rule 891 (optional_comma)

    optional_comma  go to state 964


State 724

  799 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  800                   | make_struct_fields . ',' "name" ":=" expr
  803                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  804                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  806 make_struct_single: make_struct_fields .

    ','  shift, and go to state 965

    $default  reduce using rule 806 (make_struct_single)


State 725

  477 expr: '(' make_struct_single . ')'

    ')'  shift, and go to state 966


State 726

  343 block_or_lambda: '@' '@' .
  412 func_addr_expr: '@' '@' . func_addr_name
  415               | '@' '@' . '<' $@22 type_declaration_no_options '>' $@23 func_addr_name
  418               | '@' '@' . '<' $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name
  536 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 967
    "$c"    shift, and go to state 968
    "name"  shift, and go to state 59
    '<'     shift, and go to state 969

    $default  reduce using rule 343 (block_or_lambda)

    name_in_namespace  go to state 970
    func_addr_name     go to state 971


State 727

  244 expression_any: expression_label "end of expression" .

    $default  reduce using rule 244 (expression_any)


State 728

  245 expression_any: expression_goto "end of expression" .

    $default  reduce using rule 245 (expression_any)


State 729

   73 expression_if_then_else: if_or_static_if expr . expression_block expression_else
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 745
    "as"                   shift, and go to state 746
    "<<"                   shift, and go to state 755
    ">>"                   shift, and go to state 756
    "++"                   shift, and go to state 757
    "--"                   shift, and go to state 758
    "<="                   shift, and go to state 759
    ">="                   shift, and go to state 762
    "=="                   shift, and go to state 763
    "!="                   shift, and go to state 764
    "->"                   shift, and go to state 765
    "??"                   shift, and go to state 767
    "?."                   shift, and go to state 768
    "?["                   shift, and go to state 769
    "<|"                   shift, and go to state 770
    "|>"                   shift, and go to state 771
    "<<<"                  shift, and go to state 773
    ">>>"                  shift, and go to state 774
    "&&"                   shift, and go to state 777
    "||"                   shift, and go to state 778
    "^^"                   shift, and go to state 779
    ".."                   shift, and go to state 783
    "begin of code block"  shift, and go to state 291
    '?'                    shift, and go to state 785
    '|'                    shift, and go to state 786
    '^'                    shift, and go to state 787
    '&'                    shift, and go to state 788
    '<'                    shift, and go to state 789
    '>'                    shift, and go to state 790
    '-'                    shift, and go to state 791
    '+'                    shift, and go to state 792
    '*'                    shift, and go to state 793
    '/'                    shift, and go to state 794
    '%'                    shift, and go to state 795
    '.'                    shift, and go to state 796
    '['                    shift, and go to state 797

    expression_block  go to state 972


State 730

   75 expression_if_then_else: expression_if_one_liner "if" . $@3 expr expression_else_one_liner "end of expression"

    $default  reduce using rule 74 ($@3)

    $@3  go to state 973


State 731

  358 expr_full_block_assumed_piped: block_or_lambda . $@21 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

    $default  reduce using rule 357 ($@21)

    $@21  go to state 974


State 732

  224 expr_call_pipe: expression_keyword expr_full_block_assumed_piped .

    $default  reduce using rule 224 (expr_call_pipe)


State 733

  518 expr: name_in_namespace "name" .

    $default  reduce using rule 518 (expr)


State 734

  406 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  407                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  429 expr_call: name_in_namespace '(' . ')'
  430          | name_in_namespace '(' . "uninitialized" ')'
  431          | name_in_namespace '(' . make_struct_single ')'
  432          | name_in_namespace '(' . "uninitialized" make_struct_single ')'
  433          | name_in_namespace '(' . expr_list ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "uninitialized"                   shift, and go to state 975
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "$f"                              shift, and go to state 721
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 722
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 976
    '('                               shift, and go to state 508
    ')'                               shift, and go to state 977
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 978
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 720
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_fields      go to state 724
    make_struct_single      go to state 979
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 735

  231 expression_any: expression_delete "end of expression" .

    $default  reduce using rule 231 (expression_any)


State 736

  238 expression_any: expression_break "end of expression" .

    $default  reduce using rule 238 (expression_any)


State 737

  239 expression_any: expression_continue "end of expression" .

    $default  reduce using rule 239 (expression_any)


State 738

  290 expression_return: expression_return_no_pipe "end of expression" .

    $default  reduce using rule 290 (expression_return)


State 739

  295 expression_yield: expression_yield_no_pipe "end of expression" .

    $default  reduce using rule 295 (expression_yield)


State 740

  304 optional_in_scope: "inscope" .

    $default  reduce using rule 304 (optional_in_scope)


State 741

  316 expression_let: kwd_let optional_in_scope . let_variable_declaration
  317               | kwd_let optional_in_scope . tuple_expansion_variable_declaration

    "$i"    shift, and go to state 311
    "[["    shift, and go to state 980
    "name"  shift, and go to state 312
    '('     shift, and go to state 981

    tuple_expansion_variable_declaration  go to state 982
    let_variable_name_with_pos_list       go to state 313
    let_variable_declaration              go to state 983


State 742

  356 expr_full_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "capture"  shift, and go to state 984
    "[["       shift, and go to state 985

    $default  reduce using rule 351 (optional_capture_list)

    optional_capture_list  go to state 986


State 743

  265 expr_pipe: expr_assign " <|" . expr_block

    "begin of code block"  shift, and go to state 291
    '$'                    shift, and go to state 509
    '@'                    shift, and go to state 683

    expression_block  go to state 684
    block_or_lambda   go to state 685
    expr_block        go to state 987


State 744

  230 expression_any: expr_assign "end of expression" .

    $default  reduce using rule 230 (expression_any)


State 745

  495 expr: expr "is" . "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr "is" . basic_type_declaration
  497     | expr "is" . "name"
  535 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 988
    "bool"      shift, and go to state 322
    "void"      shift, and go to state 323
    "string"    shift, and go to state 324
    "int"       shift, and go to state 326
    "int2"      shift, and go to state 327
    "int3"      shift, and go to state 328
    "int4"      shift, and go to state 329
    "uint"      shift, and go to state 330
    "bitfield"  shift, and go to state 469
    "uint2"     shift, and go to state 332
    "uint3"     shift, and go to state 333
    "uint4"     shift, and go to state 334
    "float"     shift, and go to state 335
    "float2"    shift, and go to state 336
    "float3"    shift, and go to state 337
    "float4"    shift, and go to state 338
    "range"     shift, and go to state 339
    "urange"    shift, and go to state 340
    "range64"   shift, and go to state 341
    "urange64"  shift, and go to state 342
    "int64"     shift, and go to state 344
    "uint64"    shift, and go to state 345
    "double"    shift, and go to state 346
    "int8"      shift, and go to state 349
    "uint8"     shift, and go to state 350
    "int16"     shift, and go to state 351
    "uint16"    shift, and go to state 352
    "$f"        shift, and go to state 989
    "name"      shift, and go to state 990

    basic_type_declaration  go to state 991


State 746

  498 expr: expr "as" . "name"
  501     | expr "as" . "type" '<' $@30 type_declaration '>' $@31
  502     | expr "as" . basic_type_declaration
  533 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 992
    "bool"      shift, and go to state 322
    "void"      shift, and go to state 323
    "string"    shift, and go to state 324
    "int"       shift, and go to state 326
    "int2"      shift, and go to state 327
    "int3"      shift, and go to state 328
    "int4"      shift, and go to state 329
    "uint"      shift, and go to state 330
    "bitfield"  shift, and go to state 469
    "uint2"     shift, and go to state 332
    "uint3"     shift, and go to state 333
    "uint4"     shift, and go to state 334
    "float"     shift, and go to state 335
    "float2"    shift, and go to state 336
    "float3"    shift, and go to state 337
    "float4"    shift, and go to state 338
    "range"     shift, and go to state 339
    "urange"    shift, and go to state 340
    "range64"   shift, and go to state 341
    "urange64"  shift, and go to state 342
    "int64"     shift, and go to state 344
    "uint64"    shift, and go to state 345
    "double"    shift, and go to state 346
    "int8"      shift, and go to state 349
    "uint8"     shift, and go to state 350
    "int16"     shift, and go to state 351
    "uint16"    shift, and go to state 352
    "$f"        shift, and go to state 993
    "name"      shift, and go to state 994

    basic_type_declaration  go to state 995


State 747

  376 expr_assign: expr "+=" . expr
  397 expr_assign_pipe: expr "+=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 996
    "@ <|"                            shift, and go to state 997
    "@@ <|"                           shift, and go to state 998
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 999
    expression_keyword      go to state 526
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign_pipe_right  go to state 1000
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1001
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 748

  377 expr_assign: expr "-=" . expr
  398 expr_assign_pipe: expr "-=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 996
    "@ <|"                            shift, and go to state 997
    "@@ <|"                           shift, and go to state 998
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 999
    expression_keyword      go to state 526
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign_pipe_right  go to state 1002
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1003
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 749

  379 expr_assign: expr "/=" . expr
  400 expr_assign_pipe: expr "/=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 996
    "@ <|"                            shift, and go to state 997
    "@@ <|"                           shift, and go to state 998
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 999
    expression_keyword      go to state 526
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign_pipe_right  go to state 1004
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1005
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 750

  378 expr_assign: expr "*=" . expr
  399 expr_assign_pipe: expr "*=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 996
    "@ <|"                            shift, and go to state 997
    "@@ <|"                           shift, and go to state 998
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 999
    expression_keyword      go to state 526
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign_pipe_right  go to state 1006
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1007
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 751

  380 expr_assign: expr "%=" . expr
  401 expr_assign_pipe: expr "%=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 996
    "@ <|"                            shift, and go to state 997
    "@@ <|"                           shift, and go to state 998
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 999
    expression_keyword      go to state 526
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign_pipe_right  go to state 1008
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1009
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 752

  370 expr_assign: expr "&=" . expr
  391 expr_assign_pipe: expr "&=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 996
    "@ <|"                            shift, and go to state 997
    "@@ <|"                           shift, and go to state 998
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 999
    expression_keyword      go to state 526
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign_pipe_right  go to state 1010
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1011
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 753

  371 expr_assign: expr "|=" . expr
  392 expr_assign_pipe: expr "|=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 996
    "@ <|"                            shift, and go to state 997
    "@@ <|"                           shift, and go to state 998
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 999
    expression_keyword      go to state 526
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign_pipe_right  go to state 1012
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1013
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 754

  372 expr_assign: expr "^=" . expr
  393 expr_assign_pipe: expr "^=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 996
    "@ <|"                            shift, and go to state 997
    "@@ <|"                           shift, and go to state 998
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 999
    expression_keyword      go to state 526
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign_pipe_right  go to state 1014
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1015
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 755

  450 expr: expr "<<" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1016
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 756

  451 expr: expr ">>" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1017
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 757

  474 expr: expr "++" .

    $default  reduce using rule 474 (expr)


State 758

  475 expr: expr "--" .

    $default  reduce using rule 475 (expr)


State 759

  463 expr: expr "<=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1018
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 760

  381 expr_assign: expr "<<=" . expr
  402 expr_assign_pipe: expr "<<=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 996
    "@ <|"                            shift, and go to state 997
    "@@ <|"                           shift, and go to state 998
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 999
    expression_keyword      go to state 526
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign_pipe_right  go to state 1019
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1020
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 761

  382 expr_assign: expr ">>=" . expr
  403 expr_assign_pipe: expr ">>=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 996
    "@ <|"                            shift, and go to state 997
    "@@ <|"                           shift, and go to state 998
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 999
    expression_keyword      go to state 526
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign_pipe_right  go to state 1021
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1022
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 762

  464 expr: expr ">=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1023
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 763

  461 expr: expr "==" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1024
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 764

  462 expr: expr "!=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1025
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 765

  408 expr_method_call: expr "->" . "name" '(' ')'
  409                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 1026


State 766

  368 expr_assign: expr "<-" . expr
  390 expr_assign_pipe: expr "<-" . expr_assign_pipe_right

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 996
    "@ <|"                            shift, and go to state 997
    "@@ <|"                           shift, and go to state 998
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 999
    expression_keyword      go to state 526
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign_pipe_right  go to state 1027
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1028
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 767

  491 expr: expr "??" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1029
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 768

  482 expr: expr "?." . "name"
  530 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1030
    "name"  shift, and go to state 1031


State 769

  480 expr: expr "?[" . expr ']'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1032
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 770

  515 expr: expr "<|" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1033
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 771

  516 expr: expr "|>" . expr
  517     | expr "|>" . basic_type_declaration

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1034
    expr_mtag               go to state 554
    basic_type_declaration  go to state 1035
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 772

  369 expr_assign: expr ":=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1036
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 773

  452 expr: expr "<<<" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1037
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 774

  453 expr: expr ">>>" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1038
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 775

  383 expr_assign: expr "<<<=" . expr
  404 expr_assign_pipe: expr "<<<=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 996
    "@ <|"                            shift, and go to state 997
    "@@ <|"                           shift, and go to state 998
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 999
    expression_keyword      go to state 526
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign_pipe_right  go to state 1039
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1040
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 776

  384 expr_assign: expr ">>>=" . expr
  405 expr_assign_pipe: expr ">>>=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 996
    "@ <|"                            shift, and go to state 997
    "@@ <|"                           shift, and go to state 998
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 999
    expression_keyword      go to state 526
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign_pipe_right  go to state 1041
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1042
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 777

  468 expr: expr "&&" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1043
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 778

  469 expr: expr "||" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1044
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 779

  470 expr: expr "^^" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1045
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 780

  373 expr_assign: expr "&&=" . expr
  394 expr_assign_pipe: expr "&&=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 996
    "@ <|"                            shift, and go to state 997
    "@@ <|"                           shift, and go to state 998
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 999
    expression_keyword      go to state 526
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign_pipe_right  go to state 1046
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1047
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 781

  374 expr_assign: expr "||=" . expr
  395 expr_assign_pipe: expr "||=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 996
    "@ <|"                            shift, and go to state 997
    "@@ <|"                           shift, and go to state 998
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 999
    expression_keyword      go to state 526
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign_pipe_right  go to state 1048
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1049
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 782

  375 expr_assign: expr "^^=" . expr
  396 expr_assign_pipe: expr "^^=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 996
    "@ <|"                            shift, and go to state 997
    "@@ <|"                           shift, and go to state 998
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 999
    expression_keyword      go to state 526
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign_pipe_right  go to state 1050
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1051
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 783

  471 expr: expr ".." . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1052
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 784

  367 expr_assign: expr '=' . expr
  389 expr_assign_pipe: expr '=' . expr_assign_pipe_right

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 996
    "@ <|"                            shift, and go to state 997
    "@@ <|"                           shift, and go to state 998
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 999
    expression_keyword      go to state 526
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign_pipe_right  go to state 1053
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1054
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 785

  492 expr: expr '?' . expr ':' expr
  503     | expr '?' . "as" "name"
  506     | expr '?' . "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr '?' . "as" basic_type_declaration
  534 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "as"                              shift, and go to state 1055
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1056
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 786

  466 expr: expr '|' . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1057
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 787

  467 expr: expr '^' . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1058
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 788

  465 expr: expr '&' . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1059
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 789

  459 expr: expr '<' . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1060
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 790

  460 expr: expr '>' . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1061
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 791

  455 expr: expr '-' . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1062
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 792

  454 expr: expr '+' . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1063
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 793

  456 expr: expr '*' . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1064
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 794

  457 expr: expr '/' . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1065
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 795

  458 expr: expr '%' . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1066
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 796

  419 expr_field: expr '.' . "name"
  420           | expr '.' . '.' "name"
  421           | expr '.' . "name" '(' ')'
  422           | expr '.' . "name" '(' expr_list ')'
  423           | expr '.' . "name" '(' '[' make_struct_fields ']' ')'
  424           | expr '.' . basic_type_declaration '(' ')'
  425           | expr '.' . basic_type_declaration '(' expr_list ')'
  428           | expr '.' . $@26 error $@27
  479 expr: expr '.' . '[' expr ']'
  481     | expr '.' . "?[" expr ']'
  483     | expr '.' . "?." "name"
  529 expr_mtag: expr '.' . "$f" '(' expr ')'
  531          | expr '.' . '.' "$f" '(' expr ')'
  532          | expr '.' . "?." "$f" '(' expr ')'

    "bool"      shift, and go to state 322
    "void"      shift, and go to state 323
    "string"    shift, and go to state 324
    "int"       shift, and go to state 326
    "int2"      shift, and go to state 327
    "int3"      shift, and go to state 328
    "int4"      shift, and go to state 329
    "uint"      shift, and go to state 330
    "bitfield"  shift, and go to state 469
    "uint2"     shift, and go to state 332
    "uint3"     shift, and go to state 333
    "uint4"     shift, and go to state 334
    "float"     shift, and go to state 335
    "float2"    shift, and go to state 336
    "float3"    shift, and go to state 337
    "float4"    shift, and go to state 338
    "range"     shift, and go to state 339
    "urange"    shift, and go to state 340
    "range64"   shift, and go to state 341
    "urange64"  shift, and go to state 342
    "int64"     shift, and go to state 344
    "uint64"    shift, and go to state 345
    "double"    shift, and go to state 346
    "int8"      shift, and go to state 349
    "uint8"     shift, and go to state 350
    "int16"     shift, and go to state 351
    "uint16"    shift, and go to state 352
    "?."        shift, and go to state 1067
    "?["        shift, and go to state 1068
    "$f"        shift, and go to state 1069
    "name"      shift, and go to state 1070
    '.'         shift, and go to state 1071
    '['         shift, and go to state 1072

    $default  reduce using rule 426 ($@26)

    $@26                    go to state 1073
    basic_type_declaration  go to state 1074


State 797

  478 expr: expr '[' . expr ']'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1075
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 798

  223 expr_call_pipe: expr expr_full_block_assumed_piped .

    $default  reduce using rule 223 (expr_call_pipe)


State 799

  434 expr_call: basic_type_declaration '(' . ')'
  435          | basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    ')'                               shift, and go to state 1076
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 1077
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 720
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 800

  612 enum_list: enum_list "name" "end of expression" .

    $default  reduce using rule 612 (enum_list)


State 801

  613 enum_list: enum_list "name" '=' . expr "end of expression"

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1078
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 802

  630 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list $@42 "end of code block" .

    $default  reduce using rule 630 (enum_declaration)


State 803

  611 enum_list: enum_list . "end of expression"
  612          | enum_list . "name" "end of expression"
  613          | enum_list . "name" '=' expr "end of expression"
  633 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list . $@44 "end of code block"

    "name"               shift, and go to state 562
    "end of expression"  shift, and go to state 563

    $default  reduce using rule 632 ($@44)

    $@44  go to state 1079


State 804

  647 optional_struct_variable_declaration_list: "begin of code block" struct_variable_declaration_list "end of code block" .

    $default  reduce using rule 647 (optional_struct_variable_declaration_list)


State 805

  123 optional_annotation_list: '[' . annotation_list ']'
  558 struct_variable_declaration_list: struct_variable_declaration_list '[' . annotation_list ']' "end of expression"

    "require"   shift, and go to state 61
    "private"   shift, and go to state 62
    "template"  shift, and go to state 63
    "|>"        shift, and go to state 64
    "::"        shift, and go to state 58
    "name"      shift, and go to state 59
    '!'         shift, and go to state 65
    '('         shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 69
    annotation_list               go to state 1080
    name_in_namespace             go to state 71


State 806

  555 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header "end of expression"
  557                                 | struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block

    "def"  shift, and go to state 1081


State 807

  553 struct_variable_declaration_list: struct_variable_declaration_list $@34 . structure_variable_declaration "end of expression"

    "[["  shift, and go to state 223
    '@'   shift, and go to state 224

    $default  reduce using rule 537 (optional_field_annotation)

    metadata_argument_list          go to state 225
    optional_field_annotation       go to state 1082
    structure_variable_declaration  go to state 1083


State 808

  489 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  490     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 1084


State 809

  590 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 590 (let_variable_name_with_pos_list)


State 810

  593 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1085


State 811

  594 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression" .

    $default  reduce using rule 594 (let_variable_declaration)


State 812

  595 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"
  596                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 476
    "@ <|"                            shift, and go to state 477
    "@@ <|"                           shift, and go to state 478
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 523
    expression_keyword      go to state 526
    expr_pipe               go to state 1086
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign             go to state 651
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1087
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 813

  598 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 598 (let_variable_declaration)


State 814

  223 expr_call_pipe: expr . expr_full_block_assumed_piped
  366 expr_assign: expr .
  367            | expr . '=' expr
  368            | expr . "<-" expr
  369            | expr . ":=" expr
  370            | expr . "&=" expr
  371            | expr . "|=" expr
  372            | expr . "^=" expr
  373            | expr . "&&=" expr
  374            | expr . "||=" expr
  375            | expr . "^^=" expr
  376            | expr . "+=" expr
  377            | expr . "-=" expr
  378            | expr . "*=" expr
  379            | expr . "/=" expr
  380            | expr . "%=" expr
  381            | expr . "<<=" expr
  382            | expr . ">>=" expr
  383            | expr . "<<<=" expr
  384            | expr . ">>>=" expr
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'
  597 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 745
    "as"                 shift, and go to state 746
    "+="                 shift, and go to state 876
    "-="                 shift, and go to state 877
    "/="                 shift, and go to state 878
    "*="                 shift, and go to state 879
    "%="                 shift, and go to state 880
    "&="                 shift, and go to state 881
    "|="                 shift, and go to state 882
    "^="                 shift, and go to state 883
    "<<"                 shift, and go to state 755
    ">>"                 shift, and go to state 756
    "++"                 shift, and go to state 757
    "--"                 shift, and go to state 758
    "<="                 shift, and go to state 759
    "<<="                shift, and go to state 884
    ">>="                shift, and go to state 885
    ">="                 shift, and go to state 762
    "=="                 shift, and go to state 763
    "!="                 shift, and go to state 764
    "->"                 shift, and go to state 765
    "<-"                 shift, and go to state 886
    "??"                 shift, and go to state 767
    "?."                 shift, and go to state 768
    "?["                 shift, and go to state 769
    "<|"                 shift, and go to state 770
    "|>"                 shift, and go to state 771
    ":="                 shift, and go to state 772
    "<<<"                shift, and go to state 773
    ">>>"                shift, and go to state 774
    "<<<="               shift, and go to state 887
    ">>>="               shift, and go to state 888
    "&&"                 shift, and go to state 777
    "||"                 shift, and go to state 778
    "^^"                 shift, and go to state 779
    "&&="                shift, and go to state 889
    "||="                shift, and go to state 890
    "^^="                shift, and go to state 891
    ".."                 shift, and go to state 783
    "end of expression"  shift, and go to state 1088
    '='                  shift, and go to state 892
    '?'                  shift, and go to state 785
    '|'                  shift, and go to state 786
    '^'                  shift, and go to state 787
    '&'                  shift, and go to state 788
    '<'                  shift, and go to state 789
    '>'                  shift, and go to state 790
    '-'                  shift, and go to state 791
    '+'                  shift, and go to state 792
    '*'                  shift, and go to state 793
    '/'                  shift, and go to state 794
    '%'                  shift, and go to state 795
    '.'                  shift, and go to state 796
    '['                  shift, and go to state 797
    '$'                  shift, and go to state 509
    '@'                  shift, and go to state 683

    $default  reduce using rule 366 (expr_assign)

    block_or_lambda                go to state 731
    expr_full_block_assumed_piped  go to state 798


State 815

  717 type_declaration_no_options: "type" '<' $@49 type_declaration . '>' $@50
  775 type_declaration: type_declaration . '|' type_declaration_no_options
  776                 | type_declaration . '|' '#'

    '|'  shift, and go to state 423
    '>'  shift, and go to state 1089


State 816

  740 type_declaration_no_options: "array" '<' $@54 type_declaration . '>' $@55
  775 type_declaration: type_declaration . '|' type_declaration_no_options
  776                 | type_declaration . '|' '#'

    '|'  shift, and go to state 423
    '>'  shift, and go to state 1090


State 817

  743 type_declaration_no_options: "table" '<' $@56 table_type_pair . '>' $@57

    '>'  shift, and go to state 1091


State 818

  705 table_type_pair: type_declaration .
  706                | type_declaration . c_or_s type_declaration
  775 type_declaration: type_declaration . '|' type_declaration_no_options
  776                 | type_declaration . '|' '#'

    "end of expression"  shift, and go to state 616
    ','                  shift, and go to state 617
    '|'                  shift, and go to state 423

    $default  reduce using rule 705 (table_type_pair)

    c_or_s  go to state 1092


State 819

  718 type_declaration_no_options: "typedecl" '(' expr ')' .

    $default  reduce using rule 718 (type_declaration_no_options)


State 820

  746 type_declaration_no_options: "iterator" '<' $@58 type_declaration . '>' $@59
  775 type_declaration: type_declaration . '|' type_declaration_no_options
  776                 | type_declaration . '|' '#'

    '|'  shift, and go to state 423
    '>'  shift, and go to state 1093


State 821

  736 type_declaration_no_options: "smart_ptr" '<' $@52 type_declaration . '>' $@53
  775 type_declaration: type_declaration . '|' type_declaration_no_options
  776                 | type_declaration . '|' '#'

    '|'  shift, and go to state 423
    '>'  shift, and go to state 1094


State 822

  693 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 693 (auto_type_declaration)


State 823

  695 bitfield_bits: "name" .

    $default  reduce using rule 695 (bitfield_bits)


State 824

  696 bitfield_bits: bitfield_bits . "end of expression" "name"
  702 bitfield_type_declaration: "bitfield" '<' $@47 bitfield_bits . '>' $@48

    "end of expression"  shift, and go to state 1095
    '>'                  shift, and go to state 1096


State 825

  750 type_declaration_no_options: "block" '<' $@60 type_declaration . '>' $@61
  775 type_declaration: type_declaration . '|' type_declaration_no_options
  776                 | type_declaration . '|' '#'

    '|'  shift, and go to state 423
    '>'  shift, and go to state 1097


State 826

  753 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list . optional_function_type '>' $@63

    ':'  shift, and go to state 379

    $default  reduce using rule 127 (optional_function_type)

    optional_function_type  go to state 1098


State 827

  757 type_declaration_no_options: "function" '<' $@64 type_declaration . '>' $@65
  775 type_declaration: type_declaration . '|' type_declaration_no_options
  776                 | type_declaration . '|' '#'

    '|'  shift, and go to state 423
    '>'  shift, and go to state 1099


State 828

  760 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list . optional_function_type '>' $@67

    ':'  shift, and go to state 379

    $default  reduce using rule 127 (optional_function_type)

    optional_function_type  go to state 1100


State 829

  764 type_declaration_no_options: "lambda" '<' $@68 type_declaration . '>' $@69
  775 type_declaration: type_declaration . '|' type_declaration_no_options
  776                 | type_declaration . '|' '#'

    '|'  shift, and go to state 423
    '>'  shift, and go to state 1101


State 830

  767 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list . optional_function_type '>' $@71

    ':'  shift, and go to state 379

    $default  reduce using rule 127 (optional_function_type)

    optional_function_type  go to state 1102


State 831

  565 tuple_type_list: tuple_type .

    $default  reduce using rule 565 (tuple_type_list)


State 832

  566 tuple_type_list: tuple_type_list . c_or_s tuple_type
  770 type_declaration_no_options: "tuple" '<' $@72 tuple_type_list . '>' $@73

    "end of expression"  shift, and go to state 616
    ','                  shift, and go to state 617
    '>'                  shift, and go to state 1103

    c_or_s  go to state 1104


State 833

  571 variant_type_list: variant_type .

    $default  reduce using rule 571 (variant_type_list)


State 834

  572 variant_type_list: variant_type_list . c_or_s variant_type
  773 type_declaration_no_options: "variant" '<' $@74 variant_type_list . '>' $@75

    "end of expression"  shift, and go to state 616
    ','                  shift, and go to state 617
    '>'                  shift, and go to state 1105

    c_or_s  go to state 1106


State 835

  694 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 694 (auto_type_declaration)


State 836

  721 type_declaration_no_options: '$' name_in_namespace '<' $@51 . type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    type_declaration_no_options_list  go to state 1107
    name_in_namespace                 go to state 357
    basic_type_declaration            go to state 358
    structure_type_declaration        go to state 359
    auto_type_declaration             go to state 360
    bitfield_type_declaration         go to state 361
    type_declaration_no_options       go to state 362
    type_declaration                  go to state 1108


State 837

  719 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list . ')'

    ')'  shift, and go to state 1109


State 838

  722 type_declaration_no_options: type_declaration_no_options '-' '[' ']' .

    $default  reduce using rule 722 (type_declaration_no_options)


State 839

  707 dim_list: '[' expr ']' .

    $default  reduce using rule 707 (dim_list)


State 840

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'
  708 dim_list: dim_list '[' expr . ']'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797
    ']'    shift, and go to state 1110


State 841

  699 bitfield_alias_bits: bitfield_alias_bits "name" "end of expression" .

    $default  reduce using rule 699 (bitfield_alias_bits)


State 842

  791 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block" .

    $default  reduce using rule 791 (bitfield_alias_declaration)


State 843

  564 tuple_type: "name" ':' . type_declaration

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 362
    type_declaration             go to state 1111


State 844

  569 tuple_alias_type_list: tuple_alias_type_list tuple_type c_or_s .

    $default  reduce using rule 569 (tuple_alias_type_list)


State 845

  781 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block" .

    $default  reduce using rule 781 (tuple_alias_declaration)


State 846

  570 variant_type: "name" ':' . type_declaration

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 362
    type_declaration             go to state 1112


State 847

  575 variant_alias_type_list: variant_alias_type_list variant_type c_or_s .

    $default  reduce using rule 575 (variant_alias_type_list)


State 848

  786 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block" .

    $default  reduce using rule 786 (variant_alias_declaration)


State 849

  560 function_argument_declaration: "$a" '(' expr ')' .

    $default  reduce using rule 560 (function_argument_declaration)


State 850

  652 variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1113
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 851

  653 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1114


State 852

  577 copy_or_move: "<-" .

    $default  reduce using rule 577 (copy_or_move)


State 853

  654 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  655                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 1115


State 854

  576 copy_or_move: '=' .

    $default  reduce using rule 576 (copy_or_move)


State 855

  580 variable_declaration: variable_name_with_pos_list ':' . type_declaration
  581                     | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 362
    type_declaration             go to state 1116


State 856

  579 variable_declaration: variable_name_with_pos_list '&' .

    $default  reduce using rule 579 (variable_declaration)


State 857

  582 variable_declaration: variable_name_with_pos_list copy_or_move . expr
  583                     | variable_name_with_pos_list copy_or_move . expr_pipe

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 476
    "@ <|"                            shift, and go to state 477
    "@@ <|"                           shift, and go to state 478
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 523
    expression_keyword      go to state 526
    expr_pipe               go to state 1117
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign             go to state 651
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1118
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 858

  839 make_struct_decl: "struct" '<' $@88 . type_declaration_no_options '>' $@89 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 1119


State 859

  842 make_struct_decl: "class" '<' $@90 . type_declaration_no_options '>' $@91 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 1120


State 860

   79 expression_while_loop: "while" expr expression_block .

    $default  reduce using rule 79 (expression_while_loop)


State 861

   77 expression_for_loop: "for" $@4 variable_name_with_pos_list . "in" expr_list expression_block
  654 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  655                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 1121
    ','   shift, and go to state 853


State 862

  277 new_type_declaration: '<' $@11 . type_declaration '>' $@12

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 362
    type_declaration             go to state 1122


State 863

  280 expr_new: "new" new_type_declaration '(' . use_initializer ')'
  281         | "new" new_type_declaration '(' . expr_list ')'
  282         | "new" new_type_declaration '(' . make_struct_single ')'
  283         | "new" new_type_declaration '(' . "uninitialized" make_struct_single ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "uninitialized"                   shift, and go to state 1123
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "$f"                              shift, and go to state 721
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 722
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    $default  reduce using rule 829 (use_initializer)

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 1124
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 720
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_fields      go to state 724
    make_struct_single      go to state 1125
    use_initializer         go to state 1126
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 864

  330 expr_type_info: "typeinfo" '(' name_in_namespace . expr ')'
  331               | "typeinfo" '(' name_in_namespace . '<' "name" '>' expr ')'
  332               | "typeinfo" '(' name_in_namespace . '<' "name" c_or_s "name" '>' expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '<'                               shift, and go to state 1127
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1128
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 865

  334 expr_type_info: "typeinfo" name_in_namespace '<' . "name" '>' '(' expr ')'
  335               | "typeinfo" name_in_namespace '<' . "name" "end of expression" "name" '>' '(' expr ')'

    "name"  shift, and go to state 1129


State 866

  333 expr_type_info: "typeinfo" name_in_namespace '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1130
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 867

  329 expr_type_decl: "type" '<' $@19 . type_declaration '>' $@20

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 362
    type_declaration             go to state 1131


State 868

  865 make_dim_decl: "array" "struct" '<' . $@98 type_declaration_no_options '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 863 ($@98)

    $@98  go to state 1132


State 869

  868 make_dim_decl: "array" "tuple" '<' . $@100 type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 866 ($@100)

    $@100  go to state 1133


State 870

  871 make_dim_decl: "array" "variant" '<' . $@102 type_declaration_no_options '>' $@103 '(' make_variant_dim ')'

    $default  reduce using rule 869 ($@102)

    $@102  go to state 1134


State 871

  875 make_dim_decl: "array" '<' $@104 . type_declaration_no_options '>' $@105 '(' optional_expr_list ')'

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 1135


State 872

  337 expr_list: expr_list . ',' expr
  872 make_dim_decl: "array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 959

    $default  reduce using rule 891 (optional_comma)

    optional_comma  go to state 1136


State 873

  292 expression_return: "return" "<-" expr_pipe .

    $default  reduce using rule 292 (expression_return)


State 874

  289 expression_return_no_pipe: "return" "<-" expr_list .
  337 expr_list: expr_list . ',' expr

    ','  shift, and go to state 875

    $default  reduce using rule 289 (expression_return_no_pipe)


State 875

  337 expr_list: expr_list ',' . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1137
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 876

  376 expr_assign: expr "+=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1138
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 877

  377 expr_assign: expr "-=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1139
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 878

  379 expr_assign: expr "/=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1140
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 879

  378 expr_assign: expr "*=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1141
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 880

  380 expr_assign: expr "%=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1142
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 881

  370 expr_assign: expr "&=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1143
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 882

  371 expr_assign: expr "|=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1144
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 883

  372 expr_assign: expr "^=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1145
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 884

  381 expr_assign: expr "<<=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1146
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 885

  382 expr_assign: expr ">>=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1147
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 886

  368 expr_assign: expr "<-" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1148
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 887

  383 expr_assign: expr "<<<=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1149
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 888

  384 expr_assign: expr ">>>=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1150
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 889

  373 expr_assign: expr "&&=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1151
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 890

  374 expr_assign: expr "||=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1152
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 891

  375 expr_assign: expr "^^=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1153
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 892

  367 expr_assign: expr '=' . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1154
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 893

  298 expression_try_catch: "try" expression_block "recover" . expression_block

    "begin of code block"  shift, and go to state 291

    expression_block  go to state 1155


State 894

  713 type_declaration_no_options: type_declaration_no_options . dim_list
  714                            | type_declaration_no_options . '[' ']'
  722                            | type_declaration_no_options . '-' '[' ']'
  723                            | type_declaration_no_options . "explicit"
  724                            | type_declaration_no_options . "const"
  725                            | type_declaration_no_options . '-' "const"
  726                            | type_declaration_no_options . '&'
  727                            | type_declaration_no_options . '-' '&'
  728                            | type_declaration_no_options . '#'
  729                            | type_declaration_no_options . "implicit"
  730                            | type_declaration_no_options . '-' '#'
  731                            | type_declaration_no_options . "==" "const"
  732                            | type_declaration_no_options . "==" '&'
  733                            | type_declaration_no_options . '?'
  737                            | type_declaration_no_options . "??"
  887 make_table_decl: "table" '<' type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'
  888                | "table" '<' type_declaration_no_options . c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "const"              shift, and go to state 412
    "implicit"           shift, and go to state 413
    "explicit"           shift, and go to state 414
    "=="                 shift, and go to state 415
    "??"                 shift, and go to state 416
    "end of expression"  shift, and go to state 616
    ','                  shift, and go to state 617
    '?'                  shift, and go to state 417
    '&'                  shift, and go to state 418
    '>'                  shift, and go to state 1156
    '-'                  shift, and go to state 419
    '['                  shift, and go to state 420
    '#'                  shift, and go to state 421

    c_or_s    go to state 1157
    dim_list  go to state 422


State 895

  886 make_table_decl: "table" '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1158


State 896

  256 optional_expr_map_tuple_list: expr_map_tuple_list . optional_comma
  883 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple

    ','  shift, and go to state 953

    $default  reduce using rule 891 (optional_comma)

    optional_comma  go to state 1159


State 897

  274 expression_delete: "delete" "explicit" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797

    $default  reduce using rule 274 (expression_delete)


State 898

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  487     | "deref" '(' expr . ')'
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797
    ')'    shift, and go to state 1160


State 899

   80 expression_with: "with" expr expression_block .

    $default  reduce using rule 80 (expression_with)


State 900

   82 expression_with_alias: "assume" "name" '=' . $@5 expr

    $default  reduce using rule 81 ($@5)

    $@5  go to state 1161


State 901

  320 expr_cast: "cast" '<' $@13 . type_declaration_no_options '>' $@14 expr

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 1162


State 902

  323 expr_cast: "upcast" '<' $@15 . type_declaration_no_options '>' $@16 expr

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 1163


State 903

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  488     | "addr" '(' expr . ')'
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797
    ')'    shift, and go to state 1164


State 904

  326 expr_cast: "reinterpret" '<' $@17 . type_declaration_no_options '>' $@18 expr

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 1165


State 905

   55 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 55 (expression_label)


State 906

   56 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 56 (expression_goto)


State 907

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  519     | "unsafe" '(' expr . ')'
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797
    ')'    shift, and go to state 1166


State 908

  879 make_dim_decl: "fixed_array" '<' $@106 . type_declaration_no_options '>' $@107 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 1167


State 909

  337 expr_list: expr_list . ',' expr
  876 make_dim_decl: "fixed_array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 959

    $default  reduce using rule 891 (optional_comma)

    optional_comma  go to state 1168


State 910

  848 make_struct_decl: "default" '<' $@94 . type_declaration_no_options '>' $@95 use_initializer

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 1169


State 911

  857 make_tuple_call: "tuple" '<' $@96 . type_declaration_no_options '>' $@97 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 1170


State 912

  337 expr_list: expr_list . ',' expr
  854 make_tuple_call: "tuple" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 959

    $default  reduce using rule 891 (optional_comma)

    optional_comma  go to state 1171


State 913

  845 make_struct_decl: "variant" '<' $@92 . type_declaration_no_options '>' $@93 '(' make_variant_dim ')'

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 1172


State 914

  225 expr_call_pipe: "generator" '<' type_declaration_no_options . '>' optional_capture_list expr_full_block_assumed_piped
  489 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  490     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  713 type_declaration_no_options: type_declaration_no_options . dim_list
  714                            | type_declaration_no_options . '[' ']'
  722                            | type_declaration_no_options . '-' '[' ']'
  723                            | type_declaration_no_options . "explicit"
  724                            | type_declaration_no_options . "const"
  725                            | type_declaration_no_options . '-' "const"
  726                            | type_declaration_no_options . '&'
  727                            | type_declaration_no_options . '-' '&'
  728                            | type_declaration_no_options . '#'
  729                            | type_declaration_no_options . "implicit"
  730                            | type_declaration_no_options . '-' '#'
  731                            | type_declaration_no_options . "==" "const"
  732                            | type_declaration_no_options . "==" '&'
  733                            | type_declaration_no_options . '?'
  737                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "??"        shift, and go to state 416
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '>'         shift, and go to state 1173
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    dim_list  go to state 422


State 915

  297 expression_yield: "yield" "<-" expr_pipe .

    $default  reduce using rule 297 (expression_yield)


State 916

  223 expr_call_pipe: expr . expr_full_block_assumed_piped
  294 expression_yield_no_pipe: "yield" "<-" expr .
  366 expr_assign: expr .
  367            | expr . '=' expr
  368            | expr . "<-" expr
  369            | expr . ":=" expr
  370            | expr . "&=" expr
  371            | expr . "|=" expr
  372            | expr . "^=" expr
  373            | expr . "&&=" expr
  374            | expr . "||=" expr
  375            | expr . "^^=" expr
  376            | expr . "+=" expr
  377            | expr . "-=" expr
  378            | expr . "*=" expr
  379            | expr . "/=" expr
  380            | expr . "%=" expr
  381            | expr . "<<=" expr
  382            | expr . ">>=" expr
  383            | expr . "<<<=" expr
  384            | expr . ">>>=" expr
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 745
    "as"    shift, and go to state 746
    "+="    shift, and go to state 876
    "-="    shift, and go to state 877
    "/="    shift, and go to state 878
    "*="    shift, and go to state 879
    "%="    shift, and go to state 880
    "&="    shift, and go to state 881
    "|="    shift, and go to state 882
    "^="    shift, and go to state 883
    "<<"    shift, and go to state 755
    ">>"    shift, and go to state 756
    "++"    shift, and go to state 757
    "--"    shift, and go to state 758
    "<="    shift, and go to state 759
    "<<="   shift, and go to state 884
    ">>="   shift, and go to state 885
    ">="    shift, and go to state 762
    "=="    shift, and go to state 763
    "!="    shift, and go to state 764
    "->"    shift, and go to state 765
    "<-"    shift, and go to state 886
    "??"    shift, and go to state 767
    "?."    shift, and go to state 768
    "?["    shift, and go to state 769
    "<|"    shift, and go to state 770
    "|>"    shift, and go to state 771
    ":="    shift, and go to state 772
    "<<<"   shift, and go to state 773
    ">>>"   shift, and go to state 774
    "<<<="  shift, and go to state 887
    ">>>="  shift, and go to state 888
    "&&"    shift, and go to state 777
    "||"    shift, and go to state 778
    "^^"    shift, and go to state 779
    "&&="   shift, and go to state 889
    "||="   shift, and go to state 890
    "^^="   shift, and go to state 891
    ".."    shift, and go to state 783
    '='     shift, and go to state 892
    '?'     shift, and go to state 785
    '|'     shift, and go to state 786
    '^'     shift, and go to state 787
    '&'     shift, and go to state 788
    '<'     shift, and go to state 789
    '>'     shift, and go to state 790
    '-'     shift, and go to state 791
    '+'     shift, and go to state 792
    '*'     shift, and go to state 793
    '/'     shift, and go to state 794
    '%'     shift, and go to state 795
    '.'     shift, and go to state 796
    '['     shift, and go to state 797
    '$'     shift, and go to state 509
    '@'     shift, and go to state 683

    " <|"     reduce using rule 366 (expr_assign)
    $default  reduce using rule 294 (expression_yield_no_pipe)

    block_or_lambda                go to state 731
    expr_full_block_assumed_piped  go to state 798


State 917

  343 block_or_lambda: '@' '@' .

    $default  reduce using rule 343 (block_or_lambda)


State 918

  355 expr_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "capture"  shift, and go to state 984
    "[["       shift, and go to state 985

    $default  reduce using rule 351 (optional_capture_list)

    optional_capture_list  go to state 1174


State 919

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  521 expr_mtag: "$$" '(' expr . ')'
  529          | expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797
    ')'    shift, and go to state 1175


State 920

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  522 expr_mtag: "$i" '(' expr . ')'
  529          | expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797
    ')'    shift, and go to state 1176


State 921

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  523 expr_mtag: "$v" '(' expr . ')'
  529          | expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797
    ')'    shift, and go to state 1177


State 922

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  524 expr_mtag: "$b" '(' expr . ')'
  529          | expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797
    ')'    shift, and go to state 1178


State 923

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  525 expr_mtag: "$a" '(' expr . ')'
  529          | expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797
    ')'    shift, and go to state 1179


State 924

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  527 expr_mtag: "$c" '(' expr . ')' '(' ')'
  528          | "$c" '(' expr . ')' '(' expr_list ')'
  529          | expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797
    ')'    shift, and go to state 1180


State 925

  654 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  655                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  895 array_comprehension: "[[" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']' ']'

    "in"  shift, and go to state 1181
    ','   shift, and go to state 853


State 926

  816 optional_block: "where" . expr_block

    "begin of code block"  shift, and go to state 291
    '$'                    shift, and go to state 509
    '@'                    shift, and go to state 683

    expression_block  go to state 684
    block_or_lambda   go to state 685
    expr_block        go to state 1182


State 927

  449 expr: '-' . expr
  722 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  725                            | type_declaration_no_options '-' . "const"
  727                            | type_declaration_no_options '-' . '&'
  730                            | type_declaration_no_options '-' . '#'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "const"                           shift, and go to state 603
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '&'                               shift, and go to state 604
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 1183
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510
    '#'                               shift, and go to state 606

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 711
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 928

  707 dim_list: '[' . expr ']'
  714 type_declaration_no_options: type_declaration_no_options '[' . ']'
  860 make_dim_decl: '[' . optional_expr_list ']'
  893 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  894                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "for"                             shift, and go to state 716
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "iterator"                        shift, and go to state 717
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    ']'                               shift, and go to state 607
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    ']'  [reduce using rule 251 (optional_expr_list)]

    string_builder          go to state 511
    expr_reader             go to state 512
    optional_expr_list      go to state 718
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 719
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1184
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 929

  476 expr: '(' . expr_list optional_comma ')'
  477     | '(' . make_struct_single ')'
  833 make_struct_decl: "[[" type_declaration_no_options '(' . ')' optional_block optional_trailing_delim_sqr_sqr
  834                 | "[[" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "$f"                              shift, and go to state 721
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 722
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    ')'                               shift, and go to state 1185
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 723
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 720
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_fields      go to state 724
    make_struct_single      go to state 725
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 930

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'
  849 make_tuple: expr .
  850           | expr . "=>" expr

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "=>"   shift, and go to state 1186
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797

    $default  reduce using rule 849 (make_tuple)


State 931

  799 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  800                   | make_struct_fields . ',' "name" ":=" expr
  803                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  804                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  807 make_struct_dim: make_struct_fields .

    ','  shift, and go to state 965

    $default  reduce using rule 807 (make_struct_dim)


State 932

  808 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  831 make_struct_decl: "[[" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"              shift, and go to state 926
    "end of expression"  shift, and go to state 1187

    $default  reduce using rule 815 (optional_block)

    optional_block  go to state 1188


State 933

  832 make_struct_decl: "[[" type_declaration_no_options optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1189
    ",]]"  shift, and go to state 1190
    ']'    shift, and go to state 1191

    optional_trailing_delim_sqr_sqr  go to state 1192


State 934

  851 make_tuple: make_tuple . ',' expr
  858 make_dim: make_tuple .

    ','  shift, and go to state 1193

    $default  reduce using rule 858 (make_dim)


State 935

  859 make_dim: make_dim . "end of expression" make_tuple
  861 make_dim_decl: "[[" type_declaration_no_options make_dim . optional_trailing_semicolon_sqr_sqr

    "end of expression"  shift, and go to state 1194
    ";]]"                shift, and go to state 1195
    ']'                  shift, and go to state 1196

    optional_trailing_semicolon_sqr_sqr  go to state 1197


State 936

  654 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  655                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  896 array_comprehension: "[{" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "in"  shift, and go to state 1198
    ','   shift, and go to state 853


State 937

  476 expr: '(' . expr_list optional_comma ')'
  477     | '(' . make_struct_single ')'
  836 make_struct_decl: "[{" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "$f"                              shift, and go to state 721
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 722
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    ')'                               shift, and go to state 1199
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 723
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 720
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_fields      go to state 724
    make_struct_single      go to state 725
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 938

  808 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  835 make_struct_decl: "[{" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"              shift, and go to state 926
    "end of expression"  shift, and go to state 1187

    $default  reduce using rule 815 (optional_block)

    optional_block  go to state 1200


State 939

  859 make_dim: make_dim . "end of expression" make_tuple
  862 make_dim_decl: "[{" type_declaration_no_options make_dim . optional_trailing_semicolon_cur_sqr

    "end of code block"  shift, and go to state 1201
    "end of expression"  shift, and go to state 1194
    ";}]"                shift, and go to state 1202

    optional_trailing_semicolon_cur_sqr  go to state 1203


State 940

  654 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  655                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  898 array_comprehension: "{{" "for" variable_name_with_pos_list . "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "in"  shift, and go to state 1204
    ','   shift, and go to state 853


State 941

  852 make_map_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1205
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 942

  817 optional_trailing_semicolon_cur_cur: "end of code block" . "end of code block"

    "end of code block"  shift, and go to state 1206


State 943

  881 make_table: make_table "end of expression" . make_map_tuple

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 700
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_map_tuple          go to state 1207
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 944

  818 optional_trailing_semicolon_cur_cur: ";}}" .

    $default  reduce using rule 818 (optional_trailing_semicolon_cur_cur)


State 945

  885 make_table_decl: "{{" make_table optional_trailing_semicolon_cur_cur .

    $default  reduce using rule 885 (make_table_decl)


State 946

  261 expression_keyword: "keyword" '<' $@7 . type_declaration_no_options_list '>' $@8 expr

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    type_declaration_no_options_list  go to state 1208
    name_in_namespace                 go to state 357
    basic_type_declaration            go to state 358
    structure_type_declaration        go to state 359
    auto_type_declaration             go to state 360
    bitfield_type_declaration         go to state 361
    type_declaration_no_options       go to state 362
    type_declaration                  go to state 1108


State 947

  250 expr_keyword: "keyword" expr expression_block .

    $default  reduce using rule 250 (expr_keyword)


State 948

  264 expression_keyword: "type function" '<' $@9 . type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    type_declaration_no_options_list  go to state 1209
    name_in_namespace                 go to state 357
    basic_type_declaration            go to state 358
    structure_type_declaration        go to state 359
    auto_type_declaration             go to state 360
    bitfield_type_declaration         go to state 361
    type_declaration_no_options       go to state 362
    type_declaration                  go to state 1108


State 949

   32 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 32 (string_builder)


State 950

   31 string_builder_body: string_builder_body "{" . expr "}"

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1210
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 951

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   30 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 227
    STRING_CHARACTER_ESC  shift, and go to state 228

    $default  reduce using rule 30 (string_builder_body)


State 952

  654 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  655                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  897 array_comprehension: "begin of code block" "for" variable_name_with_pos_list . "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "in"  shift, and go to state 1211
    ','   shift, and go to state 853


State 953

  883 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple
  892 optional_comma: ',' .

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    $default  reduce using rule 892 (optional_comma)

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 700
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_map_tuple          go to state 1212
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 954

  884 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma . "end of code block"

    "end of code block"  shift, and go to state 1213


State 955

  222 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" . expressions "end of code block"

    $default  reduce using rule 247 (expressions)

    expressions  go to state 1214


State 956

  654 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  655                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  893 array_comprehension: '[' "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1215
    ','   shift, and go to state 853


State 957

  894 array_comprehension: '[' "iterator" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 627
    "name"  shift, and go to state 628

    variable_name_with_pos_list  go to state 1216


State 958

  860 make_dim_decl: '[' optional_expr_list ']' .

    $default  reduce using rule 860 (make_dim_decl)


State 959

  337 expr_list: expr_list ',' . expr
  892 optional_comma: ',' .

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    $default  reduce using rule 892 (optional_comma)

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1137
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 960

  252 optional_expr_list: expr_list optional_comma .

    $default  reduce using rule 252 (optional_expr_list)


State 961

  801 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  802                   | "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1217
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 962

  798 make_struct_fields: "name" ":=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1218
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 963

  797 make_struct_fields: "name" copy_or_move . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1219
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 964

  476 expr: '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1220


State 965

  799 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  800                   | make_struct_fields ',' . "name" ":=" expr
  803                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  804                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 1221
    "name"  shift, and go to state 1222


State 966

  477 expr: '(' make_struct_single ')' .

    $default  reduce using rule 477 (expr)


State 967

  411 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 1223


State 968

  536 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 1224


State 969

  415 func_addr_expr: '@' '@' '<' . $@22 type_declaration_no_options '>' $@23 func_addr_name
  418               | '@' '@' '<' . $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name

    ':'       reduce using rule 416 ($@24)
    '>'       reduce using rule 416 ($@24)
    '('       reduce using rule 416 ($@24)
    $default  reduce using rule 413 ($@22)

    $@22  go to state 1225
    $@24  go to state 1226


State 970

  410 func_addr_name: name_in_namespace .

    $default  reduce using rule 410 (func_addr_name)


State 971

  412 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 412 (func_addr_expr)


State 972

   73 expression_if_then_else: if_or_static_if expr expression_block . expression_else

    "else"         shift, and go to state 1227
    "elif"         shift, and go to state 1228
    "static_elif"  shift, and go to state 1229

    $default  reduce using rule 60 (expression_else)

    elif_or_static_elif  go to state 1230
    expression_else      go to state 1231


State 973

   75 expression_if_then_else: expression_if_one_liner "if" $@3 . expr expression_else_one_liner "end of expression"

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1232
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 974

  358 expr_full_block_assumed_piped: block_or_lambda $@21 . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

    '['  shift, and go to state 15

    $default  reduce using rule 122 (optional_annotation_list)

    optional_annotation_list  go to state 1233


State 975

  430 expr_call: name_in_namespace '(' "uninitialized" . ')'
  432          | name_in_namespace '(' "uninitialized" . make_struct_single ')'

    "$f"    shift, and go to state 721
    "name"  shift, and go to state 1234
    ')'     shift, and go to state 1235

    make_struct_fields  go to state 724
    make_struct_single  go to state 1236


State 976

  406 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'
  860 make_dim_decl: '[' . optional_expr_list ']'
  893 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  894                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "for"                             shift, and go to state 716
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "iterator"                        shift, and go to state 717
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "$f"                              shift, and go to state 721
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 722
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    $default  reduce using rule 251 (optional_expr_list)

    string_builder          go to state 511
    expr_reader             go to state 512
    optional_expr_list      go to state 718
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 719
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 720
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_fields      go to state 1237
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 977

  429 expr_call: name_in_namespace '(' ')' .

    $default  reduce using rule 429 (expr_call)


State 978

  337 expr_list: expr_list . ',' expr
  407 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  433 expr_call: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 1238
    ')'  shift, and go to state 1239


State 979

  431 expr_call: name_in_namespace '(' make_struct_single . ')'

    ')'  shift, and go to state 1240


State 980

  308 tuple_expansion_variable_declaration: "[[" . tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  309                                     | "[[" . tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  312                                     | "[[" . tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr "end of expression"
  313                                     | "[[" . tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr_pipe

    "name"  shift, and go to state 1241

    tuple_expansion  go to state 1242


State 981

  310 tuple_expansion_variable_declaration: '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  311                                     | '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  314                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression"
  315                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr_pipe

    "name"  shift, and go to state 1241

    tuple_expansion  go to state 1243


State 982

  317 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 317 (expression_let)


State 983

  316 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 316 (expression_let)


State 984

  353 optional_capture_list: "capture" . '(' capture_list ')'

    '('  shift, and go to state 1244


State 985

  352 optional_capture_list: "[[" . capture_list ']' ']'

    "<-"    shift, and go to state 1245
    ":="    shift, and go to state 1246
    "name"  shift, and go to state 1247
    '='     shift, and go to state 1248
    '&'     shift, and go to state 1249

    capture_entry  go to state 1250
    capture_list   go to state 1251


State 986

  356 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 289

    $default  reduce using rule 124 (optional_function_argument_list)

    optional_function_argument_list  go to state 1252


State 987

  265 expr_pipe: expr_assign " <|" expr_block .

    $default  reduce using rule 265 (expr_pipe)


State 988

  495 expr: expr "is" "type" . '<' $@28 type_declaration_no_options '>' $@29

    '<'  shift, and go to state 1253


State 989

  535 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 1254


State 990

  497 expr: expr "is" "name" .

    $default  reduce using rule 497 (expr)


State 991

  496 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 496 (expr)


State 992

  501 expr: expr "as" "type" . '<' $@30 type_declaration '>' $@31

    '<'  shift, and go to state 1255


State 993

  533 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1256


State 994

  498 expr: expr "as" "name" .

    $default  reduce using rule 498 (expr)


State 995

  502 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 502 (expr)


State 996

  387 expr_assign_pipe_right: "$ <|" . expr_block

    "begin of code block"  shift, and go to state 291
    '$'                    shift, and go to state 509
    '@'                    shift, and go to state 683

    expression_block  go to state 684
    block_or_lambda   go to state 685
    expr_block        go to state 1257


State 997

  385 expr_assign_pipe_right: "@ <|" . expr_block

    "begin of code block"  shift, and go to state 291
    '$'                    shift, and go to state 509
    '@'                    shift, and go to state 683

    expression_block  go to state 684
    block_or_lambda   go to state 685
    expr_block        go to state 1258


State 998

  386 expr_assign_pipe_right: "@@ <|" . expr_block

    "begin of code block"  shift, and go to state 291
    '$'                    shift, and go to state 509
    '@'                    shift, and go to state 683

    expression_block  go to state 684
    block_or_lambda   go to state 685
    expr_block        go to state 1259


State 999

  388 expr_assign_pipe_right: expr_call_pipe .

    $default  reduce using rule 388 (expr_assign_pipe_right)


State 1000

  397 expr_assign_pipe: expr "+=" expr_assign_pipe_right .

    $default  reduce using rule 397 (expr_assign_pipe)


State 1001

  223 expr_call_pipe: expr . expr_full_block_assumed_piped
  376 expr_assign: expr "+=" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797
    '$'    shift, and go to state 509
    '@'    shift, and go to state 683

    $default  reduce using rule 376 (expr_assign)

    block_or_lambda                go to state 731
    expr_full_block_assumed_piped  go to state 798


State 1002

  398 expr_assign_pipe: expr "-=" expr_assign_pipe_right .

    $default  reduce using rule 398 (expr_assign_pipe)


State 1003

  223 expr_call_pipe: expr . expr_full_block_assumed_piped
  377 expr_assign: expr "-=" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797
    '$'    shift, and go to state 509
    '@'    shift, and go to state 683

    $default  reduce using rule 377 (expr_assign)

    block_or_lambda                go to state 731
    expr_full_block_assumed_piped  go to state 798


State 1004

  400 expr_assign_pipe: expr "/=" expr_assign_pipe_right .

    $default  reduce using rule 400 (expr_assign_pipe)


State 1005

  223 expr_call_pipe: expr . expr_full_block_assumed_piped
  379 expr_assign: expr "/=" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797
    '$'    shift, and go to state 509
    '@'    shift, and go to state 683

    $default  reduce using rule 379 (expr_assign)

    block_or_lambda                go to state 731
    expr_full_block_assumed_piped  go to state 798


State 1006

  399 expr_assign_pipe: expr "*=" expr_assign_pipe_right .

    $default  reduce using rule 399 (expr_assign_pipe)


State 1007

  223 expr_call_pipe: expr . expr_full_block_assumed_piped
  378 expr_assign: expr "*=" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797
    '$'    shift, and go to state 509
    '@'    shift, and go to state 683

    $default  reduce using rule 378 (expr_assign)

    block_or_lambda                go to state 731
    expr_full_block_assumed_piped  go to state 798


State 1008

  401 expr_assign_pipe: expr "%=" expr_assign_pipe_right .

    $default  reduce using rule 401 (expr_assign_pipe)


State 1009

  223 expr_call_pipe: expr . expr_full_block_assumed_piped
  380 expr_assign: expr "%=" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797
    '$'    shift, and go to state 509
    '@'    shift, and go to state 683

    $default  reduce using rule 380 (expr_assign)

    block_or_lambda                go to state 731
    expr_full_block_assumed_piped  go to state 798


State 1010

  391 expr_assign_pipe: expr "&=" expr_assign_pipe_right .

    $default  reduce using rule 391 (expr_assign_pipe)


State 1011

  223 expr_call_pipe: expr . expr_full_block_assumed_piped
  370 expr_assign: expr "&=" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797
    '$'    shift, and go to state 509
    '@'    shift, and go to state 683

    $default  reduce using rule 370 (expr_assign)

    block_or_lambda                go to state 731
    expr_full_block_assumed_piped  go to state 798


State 1012

  392 expr_assign_pipe: expr "|=" expr_assign_pipe_right .

    $default  reduce using rule 392 (expr_assign_pipe)


State 1013

  223 expr_call_pipe: expr . expr_full_block_assumed_piped
  371 expr_assign: expr "|=" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797
    '$'    shift, and go to state 509
    '@'    shift, and go to state 683

    $default  reduce using rule 371 (expr_assign)

    block_or_lambda                go to state 731
    expr_full_block_assumed_piped  go to state 798


State 1014

  393 expr_assign_pipe: expr "^=" expr_assign_pipe_right .

    $default  reduce using rule 393 (expr_assign_pipe)


State 1015

  223 expr_call_pipe: expr . expr_full_block_assumed_piped
  372 expr_assign: expr "^=" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797
    '$'    shift, and go to state 509
    '@'    shift, and go to state 683

    $default  reduce using rule 372 (expr_assign)

    block_or_lambda                go to state 731
    expr_full_block_assumed_piped  go to state 798


State 1016

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  450     | expr "<<" expr .
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 745
    "as"  shift, and go to state 746
    "++"  shift, and go to state 757
    "--"  shift, and go to state 758
    "->"  shift, and go to state 765
    "??"  shift, and go to state 767
    "?."  shift, and go to state 768
    "?["  shift, and go to state 769
    "<|"  shift, and go to state 770
    "|>"  shift, and go to state 771
    '-'   shift, and go to state 791
    '+'   shift, and go to state 792
    '*'   shift, and go to state 793
    '/'   shift, and go to state 794
    '%'   shift, and go to state 795
    '.'   shift, and go to state 796
    '['   shift, and go to state 797

    $default  reduce using rule 450 (expr)


State 1017

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  451     | expr ">>" expr .
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 745
    "as"  shift, and go to state 746
    "++"  shift, and go to state 757
    "--"  shift, and go to state 758
    "->"  shift, and go to state 765
    "??"  shift, and go to state 767
    "?."  shift, and go to state 768
    "?["  shift, and go to state 769
    "<|"  shift, and go to state 770
    "|>"  shift, and go to state 771
    '-'   shift, and go to state 791
    '+'   shift, and go to state 792
    '*'   shift, and go to state 793
    '/'   shift, and go to state 794
    '%'   shift, and go to state 795
    '.'   shift, and go to state 796
    '['   shift, and go to state 797

    $default  reduce using rule 451 (expr)


State 1018

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  463     | expr "<=" expr .
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797

    $default  reduce using rule 463 (expr)


State 1019

  402 expr_assign_pipe: expr "<<=" expr_assign_pipe_right .

    $default  reduce using rule 402 (expr_assign_pipe)


State 1020

  223 expr_call_pipe: expr . expr_full_block_assumed_piped
  381 expr_assign: expr "<<=" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797
    '$'    shift, and go to state 509
    '@'    shift, and go to state 683

    $default  reduce using rule 381 (expr_assign)

    block_or_lambda                go to state 731
    expr_full_block_assumed_piped  go to state 798


State 1021

  403 expr_assign_pipe: expr ">>=" expr_assign_pipe_right .

    $default  reduce using rule 403 (expr_assign_pipe)


State 1022

  223 expr_call_pipe: expr . expr_full_block_assumed_piped
  382 expr_assign: expr ">>=" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797
    '$'    shift, and go to state 509
    '@'    shift, and go to state 683

    $default  reduce using rule 382 (expr_assign)

    block_or_lambda                go to state 731
    expr_full_block_assumed_piped  go to state 798


State 1023

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  464     | expr ">=" expr .
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797

    $default  reduce using rule 464 (expr)


State 1024

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  461     | expr "==" expr .
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797

    $default  reduce using rule 461 (expr)


State 1025

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  462     | expr "!=" expr .
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797

    $default  reduce using rule 462 (expr)


State 1026

  408 expr_method_call: expr "->" "name" . '(' ')'
  409                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 1260


State 1027

  390 expr_assign_pipe: expr "<-" expr_assign_pipe_right .

    $default  reduce using rule 390 (expr_assign_pipe)


State 1028

  223 expr_call_pipe: expr . expr_full_block_assumed_piped
  368 expr_assign: expr "<-" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797
    '$'    shift, and go to state 509
    '@'    shift, and go to state 683

    $default  reduce using rule 368 (expr_assign)

    block_or_lambda                go to state 731
    expr_full_block_assumed_piped  go to state 798


State 1029

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  491     | expr "??" expr .
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 745
    "as"  shift, and go to state 746
    "++"  shift, and go to state 757
    "--"  shift, and go to state 758
    "->"  shift, and go to state 765
    "??"  shift, and go to state 767
    "?."  shift, and go to state 768
    "?["  shift, and go to state 769
    "<|"  shift, and go to state 770
    "|>"  shift, and go to state 771
    '.'   shift, and go to state 796
    '['   shift, and go to state 797

    $default  reduce using rule 491 (expr)


State 1030

  530 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1261


State 1031

  482 expr: expr "?." "name" .

    $default  reduce using rule 482 (expr)


State 1032

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  480     | expr "?[" expr . ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797
    ']'    shift, and go to state 1262


State 1033

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  515     | expr "<|" expr .
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 765
    "?."  shift, and go to state 768
    "?["  shift, and go to state 769
    '.'   shift, and go to state 796
    '['   shift, and go to state 797

    $default  reduce using rule 515 (expr)


State 1034

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  516     | expr "|>" expr .
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 765
    "?."  shift, and go to state 768
    "?["  shift, and go to state 769
    '.'   shift, and go to state 796
    '['   shift, and go to state 797

    $default  reduce using rule 516 (expr)


State 1035

  434 expr_call: basic_type_declaration . '(' ')'
  435          | basic_type_declaration . '(' expr_list ')'
  517 expr: expr "|>" basic_type_declaration .

    '('  shift, and go to state 799

    $default  reduce using rule 517 (expr)


State 1036

  369 expr_assign: expr ":=" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797

    $default  reduce using rule 369 (expr_assign)


State 1037

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  452     | expr "<<<" expr .
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 745
    "as"  shift, and go to state 746
    "++"  shift, and go to state 757
    "--"  shift, and go to state 758
    "->"  shift, and go to state 765
    "??"  shift, and go to state 767
    "?."  shift, and go to state 768
    "?["  shift, and go to state 769
    "<|"  shift, and go to state 770
    "|>"  shift, and go to state 771
    '-'   shift, and go to state 791
    '+'   shift, and go to state 792
    '*'   shift, and go to state 793
    '/'   shift, and go to state 794
    '%'   shift, and go to state 795
    '.'   shift, and go to state 796
    '['   shift, and go to state 797

    $default  reduce using rule 452 (expr)


State 1038

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  453     | expr ">>>" expr .
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 745
    "as"  shift, and go to state 746
    "++"  shift, and go to state 757
    "--"  shift, and go to state 758
    "->"  shift, and go to state 765
    "??"  shift, and go to state 767
    "?."  shift, and go to state 768
    "?["  shift, and go to state 769
    "<|"  shift, and go to state 770
    "|>"  shift, and go to state 771
    '-'   shift, and go to state 791
    '+'   shift, and go to state 792
    '*'   shift, and go to state 793
    '/'   shift, and go to state 794
    '%'   shift, and go to state 795
    '.'   shift, and go to state 796
    '['   shift, and go to state 797

    $default  reduce using rule 453 (expr)


State 1039

  404 expr_assign_pipe: expr "<<<=" expr_assign_pipe_right .

    $default  reduce using rule 404 (expr_assign_pipe)


State 1040

  223 expr_call_pipe: expr . expr_full_block_assumed_piped
  383 expr_assign: expr "<<<=" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797
    '$'    shift, and go to state 509
    '@'    shift, and go to state 683

    $default  reduce using rule 383 (expr_assign)

    block_or_lambda                go to state 731
    expr_full_block_assumed_piped  go to state 798


State 1041

  405 expr_assign_pipe: expr ">>>=" expr_assign_pipe_right .

    $default  reduce using rule 405 (expr_assign_pipe)


State 1042

  223 expr_call_pipe: expr . expr_full_block_assumed_piped
  384 expr_assign: expr ">>>=" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797
    '$'    shift, and go to state 509
    '@'    shift, and go to state 683

    $default  reduce using rule 384 (expr_assign)

    block_or_lambda                go to state 731
    expr_full_block_assumed_piped  go to state 798


State 1043

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  468     | expr "&&" expr .
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797

    $default  reduce using rule 468 (expr)


State 1044

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  469     | expr "||" expr .
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "^^"   shift, and go to state 779
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797

    $default  reduce using rule 469 (expr)


State 1045

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  470     | expr "^^" expr .
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797

    $default  reduce using rule 470 (expr)


State 1046

  394 expr_assign_pipe: expr "&&=" expr_assign_pipe_right .

    $default  reduce using rule 394 (expr_assign_pipe)


State 1047

  223 expr_call_pipe: expr . expr_full_block_assumed_piped
  373 expr_assign: expr "&&=" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797
    '$'    shift, and go to state 509
    '@'    shift, and go to state 683

    $default  reduce using rule 373 (expr_assign)

    block_or_lambda                go to state 731
    expr_full_block_assumed_piped  go to state 798


State 1048

  395 expr_assign_pipe: expr "||=" expr_assign_pipe_right .

    $default  reduce using rule 395 (expr_assign_pipe)


State 1049

  223 expr_call_pipe: expr . expr_full_block_assumed_piped
  374 expr_assign: expr "||=" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797
    '$'    shift, and go to state 509
    '@'    shift, and go to state 683

    $default  reduce using rule 374 (expr_assign)

    block_or_lambda                go to state 731
    expr_full_block_assumed_piped  go to state 798


State 1050

  396 expr_assign_pipe: expr "^^=" expr_assign_pipe_right .

    $default  reduce using rule 396 (expr_assign_pipe)


State 1051

  223 expr_call_pipe: expr . expr_full_block_assumed_piped
  375 expr_assign: expr "^^=" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797
    '$'    shift, and go to state 509
    '@'    shift, and go to state 683

    $default  reduce using rule 375 (expr_assign)

    block_or_lambda                go to state 731
    expr_full_block_assumed_piped  go to state 798


State 1052

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  471     | expr ".." expr .
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797

    ".."  error (nonassociative)

    $default  reduce using rule 471 (expr)


State 1053

  389 expr_assign_pipe: expr '=' expr_assign_pipe_right .

    $default  reduce using rule 389 (expr_assign_pipe)


State 1054

  223 expr_call_pipe: expr . expr_full_block_assumed_piped
  367 expr_assign: expr '=' expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797
    '$'    shift, and go to state 509
    '@'    shift, and go to state 683

    $default  reduce using rule 367 (expr_assign)

    block_or_lambda                go to state 731
    expr_full_block_assumed_piped  go to state 798


State 1055

  503 expr: expr '?' "as" . "name"
  506     | expr '?' "as" . "type" '<' $@32 type_declaration '>' $@33
  507     | expr '?' "as" . basic_type_declaration
  534 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1263
    "bool"      shift, and go to state 322
    "void"      shift, and go to state 323
    "string"    shift, and go to state 324
    "int"       shift, and go to state 326
    "int2"      shift, and go to state 327
    "int3"      shift, and go to state 328
    "int4"      shift, and go to state 329
    "uint"      shift, and go to state 330
    "bitfield"  shift, and go to state 469
    "uint2"     shift, and go to state 332
    "uint3"     shift, and go to state 333
    "uint4"     shift, and go to state 334
    "float"     shift, and go to state 335
    "float2"    shift, and go to state 336
    "float3"    shift, and go to state 337
    "float4"    shift, and go to state 338
    "range"     shift, and go to state 339
    "urange"    shift, and go to state 340
    "range64"   shift, and go to state 341
    "urange64"  shift, and go to state 342
    "int64"     shift, and go to state 344
    "uint64"    shift, and go to state 345
    "double"    shift, and go to state 346
    "int8"      shift, and go to state 349
    "uint8"     shift, and go to state 350
    "int16"     shift, and go to state 351
    "uint16"    shift, and go to state 352
    "$f"        shift, and go to state 1264
    "name"      shift, and go to state 1265

    basic_type_declaration  go to state 1266


State 1056

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  492     | expr '?' expr . ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    ':'    shift, and go to state 1267
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797


State 1057

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  466     | expr '|' expr .
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797

    $default  reduce using rule 466 (expr)


State 1058

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  467     | expr '^' expr .
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797

    $default  reduce using rule 467 (expr)


State 1059

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  465     | expr '&' expr .
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797

    $default  reduce using rule 465 (expr)


State 1060

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  459     | expr '<' expr .
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797

    $default  reduce using rule 459 (expr)


State 1061

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  460     | expr '>' expr .
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797

    $default  reduce using rule 460 (expr)


State 1062

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  455     | expr '-' expr .
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 745
    "as"  shift, and go to state 746
    "++"  shift, and go to state 757
    "--"  shift, and go to state 758
    "->"  shift, and go to state 765
    "??"  shift, and go to state 767
    "?."  shift, and go to state 768
    "?["  shift, and go to state 769
    "<|"  shift, and go to state 770
    "|>"  shift, and go to state 771
    '*'   shift, and go to state 793
    '/'   shift, and go to state 794
    '%'   shift, and go to state 795
    '.'   shift, and go to state 796
    '['   shift, and go to state 797

    $default  reduce using rule 455 (expr)


State 1063

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  454     | expr '+' expr .
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 745
    "as"  shift, and go to state 746
    "++"  shift, and go to state 757
    "--"  shift, and go to state 758
    "->"  shift, and go to state 765
    "??"  shift, and go to state 767
    "?."  shift, and go to state 768
    "?["  shift, and go to state 769
    "<|"  shift, and go to state 770
    "|>"  shift, and go to state 771
    '*'   shift, and go to state 793
    '/'   shift, and go to state 794
    '%'   shift, and go to state 795
    '.'   shift, and go to state 796
    '['   shift, and go to state 797

    $default  reduce using rule 454 (expr)


State 1064

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  456     | expr '*' expr .
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 745
    "as"  shift, and go to state 746
    "++"  shift, and go to state 757
    "--"  shift, and go to state 758
    "->"  shift, and go to state 765
    "??"  shift, and go to state 767
    "?."  shift, and go to state 768
    "?["  shift, and go to state 769
    "<|"  shift, and go to state 770
    "|>"  shift, and go to state 771
    '.'   shift, and go to state 796
    '['   shift, and go to state 797

    $default  reduce using rule 456 (expr)


State 1065

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  457     | expr '/' expr .
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 745
    "as"  shift, and go to state 746
    "++"  shift, and go to state 757
    "--"  shift, and go to state 758
    "->"  shift, and go to state 765
    "??"  shift, and go to state 767
    "?."  shift, and go to state 768
    "?["  shift, and go to state 769
    "<|"  shift, and go to state 770
    "|>"  shift, and go to state 771
    '.'   shift, and go to state 796
    '['   shift, and go to state 797

    $default  reduce using rule 457 (expr)


State 1066

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  458     | expr '%' expr .
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 745
    "as"  shift, and go to state 746
    "++"  shift, and go to state 757
    "--"  shift, and go to state 758
    "->"  shift, and go to state 765
    "??"  shift, and go to state 767
    "?."  shift, and go to state 768
    "?["  shift, and go to state 769
    "<|"  shift, and go to state 770
    "|>"  shift, and go to state 771
    '.'   shift, and go to state 796
    '['   shift, and go to state 797

    $default  reduce using rule 458 (expr)


State 1067

  483 expr: expr '.' "?." . "name"
  532 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1268
    "name"  shift, and go to state 1269


State 1068

  481 expr: expr '.' "?[" . expr ']'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1270
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1069

  529 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1271


State 1070

  419 expr_field: expr '.' "name" .
  421           | expr '.' "name" . '(' ')'
  422           | expr '.' "name" . '(' expr_list ')'
  423           | expr '.' "name" . '(' '[' make_struct_fields ']' ')'

    '('  shift, and go to state 1272

    '('       [reduce using rule 419 (expr_field)]
    $default  reduce using rule 419 (expr_field)


State 1071

  420 expr_field: expr '.' '.' . "name"
  531 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1273
    "name"  shift, and go to state 1274


State 1072

  479 expr: expr '.' '[' . expr ']'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1275
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1073

  428 expr_field: expr '.' $@26 . error $@27

    error  shift, and go to state 1276


State 1074

  424 expr_field: expr '.' basic_type_declaration . '(' ')'
  425           | expr '.' basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 1277


State 1075

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  478     | expr '[' expr . ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797
    ']'    shift, and go to state 1278


State 1076

  434 expr_call: basic_type_declaration '(' ')' .

    $default  reduce using rule 434 (expr_call)


State 1077

  337 expr_list: expr_list . ',' expr
  435 expr_call: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 875
    ')'  shift, and go to state 1279


State 1078

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'
  613 enum_list: enum_list "name" '=' expr . "end of expression"

    "is"                 shift, and go to state 745
    "as"                 shift, and go to state 746
    "<<"                 shift, and go to state 755
    ">>"                 shift, and go to state 756
    "++"                 shift, and go to state 757
    "--"                 shift, and go to state 758
    "<="                 shift, and go to state 759
    ">="                 shift, and go to state 762
    "=="                 shift, and go to state 763
    "!="                 shift, and go to state 764
    "->"                 shift, and go to state 765
    "??"                 shift, and go to state 767
    "?."                 shift, and go to state 768
    "?["                 shift, and go to state 769
    "<|"                 shift, and go to state 770
    "|>"                 shift, and go to state 771
    "<<<"                shift, and go to state 773
    ">>>"                shift, and go to state 774
    "&&"                 shift, and go to state 777
    "||"                 shift, and go to state 778
    "^^"                 shift, and go to state 779
    ".."                 shift, and go to state 783
    "end of expression"  shift, and go to state 1280
    '?'                  shift, and go to state 785
    '|'                  shift, and go to state 786
    '^'                  shift, and go to state 787
    '&'                  shift, and go to state 788
    '<'                  shift, and go to state 789
    '>'                  shift, and go to state 790
    '-'                  shift, and go to state 791
    '+'                  shift, and go to state 792
    '*'                  shift, and go to state 793
    '/'                  shift, and go to state 794
    '%'                  shift, and go to state 795
    '.'                  shift, and go to state 796
    '['                  shift, and go to state 797


State 1079

  633 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 . "end of code block"

    "end of code block"  shift, and go to state 1281


State 1080

  121 annotation_list: annotation_list . ',' annotation_declaration
  123 optional_annotation_list: '[' annotation_list . ']'
  558 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list . ']' "end of expression"

    ','  shift, and go to state 109
    ']'  shift, and go to state 1282


State 1081

  555 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header "end of expression"
  557                                 | struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block

    "public"   shift, and go to state 1283
    "private"  shift, and go to state 1284

    $default  reduce using rule 545 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1285


State 1082

  550 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1286

    $default  reduce using rule 548 (optional_static_member_variable)

    optional_static_member_variable  go to state 1287


State 1083

  553 struct_variable_declaration_list: struct_variable_declaration_list $@34 structure_variable_declaration . "end of expression"

    "end of expression"  shift, and go to state 1288


State 1084

  489 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  490     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  713 type_declaration_no_options: type_declaration_no_options . dim_list
  714                            | type_declaration_no_options . '[' ']'
  722                            | type_declaration_no_options . '-' '[' ']'
  723                            | type_declaration_no_options . "explicit"
  724                            | type_declaration_no_options . "const"
  725                            | type_declaration_no_options . '-' "const"
  726                            | type_declaration_no_options . '&'
  727                            | type_declaration_no_options . '-' '&'
  728                            | type_declaration_no_options . '#'
  729                            | type_declaration_no_options . "implicit"
  730                            | type_declaration_no_options . '-' '#'
  731                            | type_declaration_no_options . "==" "const"
  732                            | type_declaration_no_options . "==" '&'
  733                            | type_declaration_no_options . '?'
  737                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "??"        shift, and go to state 416
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '>'         shift, and go to state 1289
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    dim_list  go to state 422


State 1085

  593 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 593 (let_variable_name_with_pos_list)


State 1086

  596 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 596 (let_variable_declaration)


State 1087

  223 expr_call_pipe: expr . expr_full_block_assumed_piped
  366 expr_assign: expr .
  367            | expr . '=' expr
  368            | expr . "<-" expr
  369            | expr . ":=" expr
  370            | expr . "&=" expr
  371            | expr . "|=" expr
  372            | expr . "^=" expr
  373            | expr . "&&=" expr
  374            | expr . "||=" expr
  375            | expr . "^^=" expr
  376            | expr . "+=" expr
  377            | expr . "-=" expr
  378            | expr . "*=" expr
  379            | expr . "/=" expr
  380            | expr . "%=" expr
  381            | expr . "<<=" expr
  382            | expr . ">>=" expr
  383            | expr . "<<<=" expr
  384            | expr . ">>>=" expr
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'
  595 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 745
    "as"                 shift, and go to state 746
    "+="                 shift, and go to state 876
    "-="                 shift, and go to state 877
    "/="                 shift, and go to state 878
    "*="                 shift, and go to state 879
    "%="                 shift, and go to state 880
    "&="                 shift, and go to state 881
    "|="                 shift, and go to state 882
    "^="                 shift, and go to state 883
    "<<"                 shift, and go to state 755
    ">>"                 shift, and go to state 756
    "++"                 shift, and go to state 757
    "--"                 shift, and go to state 758
    "<="                 shift, and go to state 759
    "<<="                shift, and go to state 884
    ">>="                shift, and go to state 885
    ">="                 shift, and go to state 762
    "=="                 shift, and go to state 763
    "!="                 shift, and go to state 764
    "->"                 shift, and go to state 765
    "<-"                 shift, and go to state 886
    "??"                 shift, and go to state 767
    "?."                 shift, and go to state 768
    "?["                 shift, and go to state 769
    "<|"                 shift, and go to state 770
    "|>"                 shift, and go to state 771
    ":="                 shift, and go to state 772
    "<<<"                shift, and go to state 773
    ">>>"                shift, and go to state 774
    "<<<="               shift, and go to state 887
    ">>>="               shift, and go to state 888
    "&&"                 shift, and go to state 777
    "||"                 shift, and go to state 778
    "^^"                 shift, and go to state 779
    "&&="                shift, and go to state 889
    "||="                shift, and go to state 890
    "^^="                shift, and go to state 891
    ".."                 shift, and go to state 783
    "end of expression"  shift, and go to state 1290
    '='                  shift, and go to state 892
    '?'                  shift, and go to state 785
    '|'                  shift, and go to state 786
    '^'                  shift, and go to state 787
    '&'                  shift, and go to state 788
    '<'                  shift, and go to state 789
    '>'                  shift, and go to state 790
    '-'                  shift, and go to state 791
    '+'                  shift, and go to state 792
    '*'                  shift, and go to state 793
    '/'                  shift, and go to state 794
    '%'                  shift, and go to state 795
    '.'                  shift, and go to state 796
    '['                  shift, and go to state 797
    '$'                  shift, and go to state 509
    '@'                  shift, and go to state 683

    $default  reduce using rule 366 (expr_assign)

    block_or_lambda                go to state 731
    expr_full_block_assumed_piped  go to state 798


State 1088

  597 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 597 (let_variable_declaration)


State 1089

  717 type_declaration_no_options: "type" '<' $@49 type_declaration '>' . $@50

    $default  reduce using rule 716 ($@50)

    $@50  go to state 1291


State 1090

  740 type_declaration_no_options: "array" '<' $@54 type_declaration '>' . $@55

    $default  reduce using rule 739 ($@55)

    $@55  go to state 1292


State 1091

  743 type_declaration_no_options: "table" '<' $@56 table_type_pair '>' . $@57

    $default  reduce using rule 742 ($@57)

    $@57  go to state 1293


State 1092

  706 table_type_pair: type_declaration c_or_s . type_declaration

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 362
    type_declaration             go to state 1294


State 1093

  746 type_declaration_no_options: "iterator" '<' $@58 type_declaration '>' . $@59

    $default  reduce using rule 745 ($@59)

    $@59  go to state 1295


State 1094

  736 type_declaration_no_options: "smart_ptr" '<' $@52 type_declaration '>' . $@53

    $default  reduce using rule 735 ($@53)

    $@53  go to state 1296


State 1095

  696 bitfield_bits: bitfield_bits "end of expression" . "name"

    "name"  shift, and go to state 1297


State 1096

  702 bitfield_type_declaration: "bitfield" '<' $@47 bitfield_bits '>' . $@48

    $default  reduce using rule 701 ($@48)

    $@48  go to state 1298


State 1097

  750 type_declaration_no_options: "block" '<' $@60 type_declaration '>' . $@61

    $default  reduce using rule 749 ($@61)

    $@61  go to state 1299


State 1098

  753 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list optional_function_type . '>' $@63

    '>'  shift, and go to state 1300


State 1099

  757 type_declaration_no_options: "function" '<' $@64 type_declaration '>' . $@65

    $default  reduce using rule 756 ($@65)

    $@65  go to state 1301


State 1100

  760 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list optional_function_type . '>' $@67

    '>'  shift, and go to state 1302


State 1101

  764 type_declaration_no_options: "lambda" '<' $@68 type_declaration '>' . $@69

    $default  reduce using rule 763 ($@69)

    $@69  go to state 1303


State 1102

  767 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list optional_function_type . '>' $@71

    '>'  shift, and go to state 1304


State 1103

  770 type_declaration_no_options: "tuple" '<' $@72 tuple_type_list '>' . $@73

    $default  reduce using rule 769 ($@73)

    $@73  go to state 1305


State 1104

  566 tuple_type_list: tuple_type_list c_or_s . tuple_type

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 615
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    tuple_type                   go to state 1306
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 362
    type_declaration             go to state 620


State 1105

  773 type_declaration_no_options: "variant" '<' $@74 variant_type_list '>' . $@75

    $default  reduce using rule 772 ($@75)

    $@75  go to state 1307


State 1106

  572 variant_type_list: variant_type_list c_or_s . variant_type

    "name"  shift, and go to state 622

    variant_type  go to state 1308


State 1107

  258 type_declaration_no_options_list: type_declaration_no_options_list . c_or_s type_declaration
  721 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list . '>' '(' optional_expr_list ')'

    "end of expression"  shift, and go to state 616
    ','                  shift, and go to state 617
    '>'                  shift, and go to state 1309

    c_or_s  go to state 1310


State 1108

  257 type_declaration_no_options_list: type_declaration .
  775 type_declaration: type_declaration . '|' type_declaration_no_options
  776                 | type_declaration . '|' '#'

    '|'  shift, and go to state 423

    $default  reduce using rule 257 (type_declaration_no_options_list)


State 1109

  719 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list ')' .

    $default  reduce using rule 719 (type_declaration_no_options)


State 1110

  708 dim_list: dim_list '[' expr ']' .

    $default  reduce using rule 708 (dim_list)


State 1111

  564 tuple_type: "name" ':' type_declaration .
  775 type_declaration: type_declaration . '|' type_declaration_no_options
  776                 | type_declaration . '|' '#'

    '|'  shift, and go to state 423

    $default  reduce using rule 564 (tuple_type)


State 1112

  570 variant_type: "name" ':' type_declaration .
  775 type_declaration: type_declaration . '|' type_declaration_no_options
  776                 | type_declaration . '|' '#'

    '|'  shift, and go to state 423

    $default  reduce using rule 570 (variant_type)


State 1113

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'
  652 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797
    ')'    shift, and go to state 1311


State 1114

  653 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 653 (variable_name_with_pos_list)


State 1115

  654 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  655                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1312

    $default  reduce using rule 654 (variable_name_with_pos_list)


State 1116

  580 variable_declaration: variable_name_with_pos_list ':' type_declaration .
  581                     | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  775 type_declaration: type_declaration . '|' type_declaration_no_options
  776                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 852
    '='   shift, and go to state 854
    '|'   shift, and go to state 423

    $default  reduce using rule 580 (variable_declaration)

    copy_or_move  go to state 1313


State 1117

  583 variable_declaration: variable_name_with_pos_list copy_or_move expr_pipe .

    $default  reduce using rule 583 (variable_declaration)


State 1118

  223 expr_call_pipe: expr . expr_full_block_assumed_piped
  366 expr_assign: expr .
  367            | expr . '=' expr
  368            | expr . "<-" expr
  369            | expr . ":=" expr
  370            | expr . "&=" expr
  371            | expr . "|=" expr
  372            | expr . "^=" expr
  373            | expr . "&&=" expr
  374            | expr . "||=" expr
  375            | expr . "^^=" expr
  376            | expr . "+=" expr
  377            | expr . "-=" expr
  378            | expr . "*=" expr
  379            | expr . "/=" expr
  380            | expr . "%=" expr
  381            | expr . "<<=" expr
  382            | expr . ">>=" expr
  383            | expr . "<<<=" expr
  384            | expr . ">>>=" expr
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'
  582 variable_declaration: variable_name_with_pos_list copy_or_move expr .

    "is"    shift, and go to state 745
    "as"    shift, and go to state 746
    "+="    shift, and go to state 876
    "-="    shift, and go to state 877
    "/="    shift, and go to state 878
    "*="    shift, and go to state 879
    "%="    shift, and go to state 880
    "&="    shift, and go to state 881
    "|="    shift, and go to state 882
    "^="    shift, and go to state 883
    "<<"    shift, and go to state 755
    ">>"    shift, and go to state 756
    "++"    shift, and go to state 757
    "--"    shift, and go to state 758
    "<="    shift, and go to state 759
    "<<="   shift, and go to state 884
    ">>="   shift, and go to state 885
    ">="    shift, and go to state 762
    "=="    shift, and go to state 763
    "!="    shift, and go to state 764
    "->"    shift, and go to state 765
    "<-"    shift, and go to state 886
    "??"    shift, and go to state 767
    "?."    shift, and go to state 768
    "?["    shift, and go to state 769
    "<|"    shift, and go to state 770
    "|>"    shift, and go to state 771
    ":="    shift, and go to state 772
    "<<<"   shift, and go to state 773
    ">>>"   shift, and go to state 774
    "<<<="  shift, and go to state 887
    ">>>="  shift, and go to state 888
    "&&"    shift, and go to state 777
    "||"    shift, and go to state 778
    "^^"    shift, and go to state 779
    "&&="   shift, and go to state 889
    "||="   shift, and go to state 890
    "^^="   shift, and go to state 891
    ".."    shift, and go to state 783
    '='     shift, and go to state 892
    '?'     shift, and go to state 785
    '|'     shift, and go to state 786
    '^'     shift, and go to state 787
    '&'     shift, and go to state 788
    '<'     shift, and go to state 789
    '>'     shift, and go to state 790
    '-'     shift, and go to state 791
    '+'     shift, and go to state 792
    '*'     shift, and go to state 793
    '/'     shift, and go to state 794
    '%'     shift, and go to state 795
    '.'     shift, and go to state 796
    '['     shift, and go to state 797
    '$'     shift, and go to state 509
    '@'     shift, and go to state 683

    " <|"     reduce using rule 366 (expr_assign)
    $default  reduce using rule 582 (variable_declaration)

    block_or_lambda                go to state 731
    expr_full_block_assumed_piped  go to state 798


State 1119

  713 type_declaration_no_options: type_declaration_no_options . dim_list
  714                            | type_declaration_no_options . '[' ']'
  722                            | type_declaration_no_options . '-' '[' ']'
  723                            | type_declaration_no_options . "explicit"
  724                            | type_declaration_no_options . "const"
  725                            | type_declaration_no_options . '-' "const"
  726                            | type_declaration_no_options . '&'
  727                            | type_declaration_no_options . '-' '&'
  728                            | type_declaration_no_options . '#'
  729                            | type_declaration_no_options . "implicit"
  730                            | type_declaration_no_options . '-' '#'
  731                            | type_declaration_no_options . "==" "const"
  732                            | type_declaration_no_options . "==" '&'
  733                            | type_declaration_no_options . '?'
  737                            | type_declaration_no_options . "??"
  839 make_struct_decl: "struct" '<' $@88 type_declaration_no_options . '>' $@89 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "??"        shift, and go to state 416
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '>'         shift, and go to state 1314
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    dim_list  go to state 422


State 1120

  713 type_declaration_no_options: type_declaration_no_options . dim_list
  714                            | type_declaration_no_options . '[' ']'
  722                            | type_declaration_no_options . '-' '[' ']'
  723                            | type_declaration_no_options . "explicit"
  724                            | type_declaration_no_options . "const"
  725                            | type_declaration_no_options . '-' "const"
  726                            | type_declaration_no_options . '&'
  727                            | type_declaration_no_options . '-' '&'
  728                            | type_declaration_no_options . '#'
  729                            | type_declaration_no_options . "implicit"
  730                            | type_declaration_no_options . '-' '#'
  731                            | type_declaration_no_options . "==" "const"
  732                            | type_declaration_no_options . "==" '&'
  733                            | type_declaration_no_options . '?'
  737                            | type_declaration_no_options . "??"
  842 make_struct_decl: "class" '<' $@90 type_declaration_no_options . '>' $@91 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "??"        shift, and go to state 416
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '>'         shift, and go to state 1315
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    dim_list  go to state 422


State 1121

   77 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" . expr_list expression_block

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 1316
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 720
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1122

  277 new_type_declaration: '<' $@11 type_declaration . '>' $@12
  775 type_declaration: type_declaration . '|' type_declaration_no_options
  776                 | type_declaration . '|' '#'

    '|'  shift, and go to state 423
    '>'  shift, and go to state 1317


State 1123

  283 expr_new: "new" new_type_declaration '(' "uninitialized" . make_struct_single ')'
  830 use_initializer: "uninitialized" .

    "$f"    shift, and go to state 721
    "name"  shift, and go to state 1234

    $default  reduce using rule 830 (use_initializer)

    make_struct_fields  go to state 724
    make_struct_single  go to state 1318


State 1124

  281 expr_new: "new" new_type_declaration '(' expr_list . ')'
  337 expr_list: expr_list . ',' expr

    ','  shift, and go to state 875
    ')'  shift, and go to state 1319


State 1125

  282 expr_new: "new" new_type_declaration '(' make_struct_single . ')'

    ')'  shift, and go to state 1320


State 1126

  280 expr_new: "new" new_type_declaration '(' use_initializer . ')'

    ')'  shift, and go to state 1321


State 1127

  331 expr_type_info: "typeinfo" '(' name_in_namespace '<' . "name" '>' expr ')'
  332               | "typeinfo" '(' name_in_namespace '<' . "name" c_or_s "name" '>' expr ')'

    "name"  shift, and go to state 1322


State 1128

  330 expr_type_info: "typeinfo" '(' name_in_namespace expr . ')'
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797
    ')'    shift, and go to state 1323


State 1129

  334 expr_type_info: "typeinfo" name_in_namespace '<' "name" . '>' '(' expr ')'
  335               | "typeinfo" name_in_namespace '<' "name" . "end of expression" "name" '>' '(' expr ')'

    "end of expression"  shift, and go to state 1324
    '>'                  shift, and go to state 1325


State 1130

  333 expr_type_info: "typeinfo" name_in_namespace '(' expr . ')'
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797
    ')'    shift, and go to state 1326


State 1131

  329 expr_type_decl: "type" '<' $@19 type_declaration . '>' $@20
  775 type_declaration: type_declaration . '|' type_declaration_no_options
  776                 | type_declaration . '|' '#'

    '|'  shift, and go to state 423
    '>'  shift, and go to state 1327


State 1132

  865 make_dim_decl: "array" "struct" '<' $@98 . type_declaration_no_options '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 1328


State 1133

  868 make_dim_decl: "array" "tuple" '<' $@100 . type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 1329


State 1134

  871 make_dim_decl: "array" "variant" '<' $@102 . type_declaration_no_options '>' $@103 '(' make_variant_dim ')'

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 1330


State 1135

  713 type_declaration_no_options: type_declaration_no_options . dim_list
  714                            | type_declaration_no_options . '[' ']'
  722                            | type_declaration_no_options . '-' '[' ']'
  723                            | type_declaration_no_options . "explicit"
  724                            | type_declaration_no_options . "const"
  725                            | type_declaration_no_options . '-' "const"
  726                            | type_declaration_no_options . '&'
  727                            | type_declaration_no_options . '-' '&'
  728                            | type_declaration_no_options . '#'
  729                            | type_declaration_no_options . "implicit"
  730                            | type_declaration_no_options . '-' '#'
  731                            | type_declaration_no_options . "==" "const"
  732                            | type_declaration_no_options . "==" '&'
  733                            | type_declaration_no_options . '?'
  737                            | type_declaration_no_options . "??"
  875 make_dim_decl: "array" '<' $@104 type_declaration_no_options . '>' $@105 '(' optional_expr_list ')'

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "??"        shift, and go to state 416
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '>'         shift, and go to state 1331
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    dim_list  go to state 422


State 1136

  872 make_dim_decl: "array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1332


State 1137

  337 expr_list: expr_list ',' expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797

    $default  reduce using rule 337 (expr_list)


State 1138

  376 expr_assign: expr "+=" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797

    $default  reduce using rule 376 (expr_assign)


State 1139

  377 expr_assign: expr "-=" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797

    $default  reduce using rule 377 (expr_assign)


State 1140

  379 expr_assign: expr "/=" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797

    $default  reduce using rule 379 (expr_assign)


State 1141

  378 expr_assign: expr "*=" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797

    $default  reduce using rule 378 (expr_assign)


State 1142

  380 expr_assign: expr "%=" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797

    $default  reduce using rule 380 (expr_assign)


State 1143

  370 expr_assign: expr "&=" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797

    $default  reduce using rule 370 (expr_assign)


State 1144

  371 expr_assign: expr "|=" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797

    $default  reduce using rule 371 (expr_assign)


State 1145

  372 expr_assign: expr "^=" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797

    $default  reduce using rule 372 (expr_assign)


State 1146

  381 expr_assign: expr "<<=" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797

    $default  reduce using rule 381 (expr_assign)


State 1147

  382 expr_assign: expr ">>=" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797

    $default  reduce using rule 382 (expr_assign)


State 1148

  368 expr_assign: expr "<-" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797

    $default  reduce using rule 368 (expr_assign)


State 1149

  383 expr_assign: expr "<<<=" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797

    $default  reduce using rule 383 (expr_assign)


State 1150

  384 expr_assign: expr ">>>=" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797

    $default  reduce using rule 384 (expr_assign)


State 1151

  373 expr_assign: expr "&&=" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797

    $default  reduce using rule 373 (expr_assign)


State 1152

  374 expr_assign: expr "||=" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797

    $default  reduce using rule 374 (expr_assign)


State 1153

  375 expr_assign: expr "^^=" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797

    $default  reduce using rule 375 (expr_assign)


State 1154

  367 expr_assign: expr '=' expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797

    $default  reduce using rule 367 (expr_assign)


State 1155

  298 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 298 (expression_try_catch)


State 1156

  887 make_table_decl: "table" '<' type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1333


State 1157

  888 make_table_decl: "table" '<' type_declaration_no_options c_or_s . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 1334


State 1158

  886 make_table_decl: "table" '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 886 (make_table_decl)


State 1159

  256 optional_expr_map_tuple_list: expr_map_tuple_list optional_comma .

    $default  reduce using rule 256 (optional_expr_map_tuple_list)


State 1160

  487 expr: "deref" '(' expr ')' .

    $default  reduce using rule 487 (expr)


State 1161

   82 expression_with_alias: "assume" "name" '=' $@5 . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1335
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1162

  320 expr_cast: "cast" '<' $@13 type_declaration_no_options . '>' $@14 expr
  713 type_declaration_no_options: type_declaration_no_options . dim_list
  714                            | type_declaration_no_options . '[' ']'
  722                            | type_declaration_no_options . '-' '[' ']'
  723                            | type_declaration_no_options . "explicit"
  724                            | type_declaration_no_options . "const"
  725                            | type_declaration_no_options . '-' "const"
  726                            | type_declaration_no_options . '&'
  727                            | type_declaration_no_options . '-' '&'
  728                            | type_declaration_no_options . '#'
  729                            | type_declaration_no_options . "implicit"
  730                            | type_declaration_no_options . '-' '#'
  731                            | type_declaration_no_options . "==" "const"
  732                            | type_declaration_no_options . "==" '&'
  733                            | type_declaration_no_options . '?'
  737                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "??"        shift, and go to state 416
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '>'         shift, and go to state 1336
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    dim_list  go to state 422


State 1163

  323 expr_cast: "upcast" '<' $@15 type_declaration_no_options . '>' $@16 expr
  713 type_declaration_no_options: type_declaration_no_options . dim_list
  714                            | type_declaration_no_options . '[' ']'
  722                            | type_declaration_no_options . '-' '[' ']'
  723                            | type_declaration_no_options . "explicit"
  724                            | type_declaration_no_options . "const"
  725                            | type_declaration_no_options . '-' "const"
  726                            | type_declaration_no_options . '&'
  727                            | type_declaration_no_options . '-' '&'
  728                            | type_declaration_no_options . '#'
  729                            | type_declaration_no_options . "implicit"
  730                            | type_declaration_no_options . '-' '#'
  731                            | type_declaration_no_options . "==" "const"
  732                            | type_declaration_no_options . "==" '&'
  733                            | type_declaration_no_options . '?'
  737                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "??"        shift, and go to state 416
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '>'         shift, and go to state 1337
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    dim_list  go to state 422


State 1164

  488 expr: "addr" '(' expr ')' .

    $default  reduce using rule 488 (expr)


State 1165

  326 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options . '>' $@18 expr
  713 type_declaration_no_options: type_declaration_no_options . dim_list
  714                            | type_declaration_no_options . '[' ']'
  722                            | type_declaration_no_options . '-' '[' ']'
  723                            | type_declaration_no_options . "explicit"
  724                            | type_declaration_no_options . "const"
  725                            | type_declaration_no_options . '-' "const"
  726                            | type_declaration_no_options . '&'
  727                            | type_declaration_no_options . '-' '&'
  728                            | type_declaration_no_options . '#'
  729                            | type_declaration_no_options . "implicit"
  730                            | type_declaration_no_options . '-' '#'
  731                            | type_declaration_no_options . "==" "const"
  732                            | type_declaration_no_options . "==" '&'
  733                            | type_declaration_no_options . '?'
  737                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "??"        shift, and go to state 416
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '>'         shift, and go to state 1338
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    dim_list  go to state 422


State 1166

  519 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 519 (expr)


State 1167

  713 type_declaration_no_options: type_declaration_no_options . dim_list
  714                            | type_declaration_no_options . '[' ']'
  722                            | type_declaration_no_options . '-' '[' ']'
  723                            | type_declaration_no_options . "explicit"
  724                            | type_declaration_no_options . "const"
  725                            | type_declaration_no_options . '-' "const"
  726                            | type_declaration_no_options . '&'
  727                            | type_declaration_no_options . '-' '&'
  728                            | type_declaration_no_options . '#'
  729                            | type_declaration_no_options . "implicit"
  730                            | type_declaration_no_options . '-' '#'
  731                            | type_declaration_no_options . "==" "const"
  732                            | type_declaration_no_options . "==" '&'
  733                            | type_declaration_no_options . '?'
  737                            | type_declaration_no_options . "??"
  879 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options . '>' $@107 '(' expr_list optional_comma ')'

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "??"        shift, and go to state 416
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '>'         shift, and go to state 1339
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    dim_list  go to state 422


State 1168

  876 make_dim_decl: "fixed_array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1340


State 1169

  713 type_declaration_no_options: type_declaration_no_options . dim_list
  714                            | type_declaration_no_options . '[' ']'
  722                            | type_declaration_no_options . '-' '[' ']'
  723                            | type_declaration_no_options . "explicit"
  724                            | type_declaration_no_options . "const"
  725                            | type_declaration_no_options . '-' "const"
  726                            | type_declaration_no_options . '&'
  727                            | type_declaration_no_options . '-' '&'
  728                            | type_declaration_no_options . '#'
  729                            | type_declaration_no_options . "implicit"
  730                            | type_declaration_no_options . '-' '#'
  731                            | type_declaration_no_options . "==" "const"
  732                            | type_declaration_no_options . "==" '&'
  733                            | type_declaration_no_options . '?'
  737                            | type_declaration_no_options . "??"
  848 make_struct_decl: "default" '<' $@94 type_declaration_no_options . '>' $@95 use_initializer

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "??"        shift, and go to state 416
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '>'         shift, and go to state 1341
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    dim_list  go to state 422


State 1170

  713 type_declaration_no_options: type_declaration_no_options . dim_list
  714                            | type_declaration_no_options . '[' ']'
  722                            | type_declaration_no_options . '-' '[' ']'
  723                            | type_declaration_no_options . "explicit"
  724                            | type_declaration_no_options . "const"
  725                            | type_declaration_no_options . '-' "const"
  726                            | type_declaration_no_options . '&'
  727                            | type_declaration_no_options . '-' '&'
  728                            | type_declaration_no_options . '#'
  729                            | type_declaration_no_options . "implicit"
  730                            | type_declaration_no_options . '-' '#'
  731                            | type_declaration_no_options . "==" "const"
  732                            | type_declaration_no_options . "==" '&'
  733                            | type_declaration_no_options . '?'
  737                            | type_declaration_no_options . "??"
  857 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options . '>' $@97 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "??"        shift, and go to state 416
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '>'         shift, and go to state 1342
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    dim_list  go to state 422


State 1171

  854 make_tuple_call: "tuple" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1343


State 1172

  713 type_declaration_no_options: type_declaration_no_options . dim_list
  714                            | type_declaration_no_options . '[' ']'
  722                            | type_declaration_no_options . '-' '[' ']'
  723                            | type_declaration_no_options . "explicit"
  724                            | type_declaration_no_options . "const"
  725                            | type_declaration_no_options . '-' "const"
  726                            | type_declaration_no_options . '&'
  727                            | type_declaration_no_options . '-' '&'
  728                            | type_declaration_no_options . '#'
  729                            | type_declaration_no_options . "implicit"
  730                            | type_declaration_no_options . '-' '#'
  731                            | type_declaration_no_options . "==" "const"
  732                            | type_declaration_no_options . "==" '&'
  733                            | type_declaration_no_options . '?'
  737                            | type_declaration_no_options . "??"
  845 make_struct_decl: "variant" '<' $@92 type_declaration_no_options . '>' $@93 '(' make_variant_dim ')'

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "??"        shift, and go to state 416
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '>'         shift, and go to state 1344
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    dim_list  go to state 422


State 1173

  225 expr_call_pipe: "generator" '<' type_declaration_no_options '>' . optional_capture_list expr_full_block_assumed_piped
  489 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  490     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'

    "capture"  shift, and go to state 984
    "[["       shift, and go to state 985

    $default  reduce using rule 351 (optional_capture_list)

    optional_capture_list  go to state 1345


State 1174

  355 expr_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 289

    $default  reduce using rule 124 (optional_function_argument_list)

    optional_function_argument_list  go to state 1346


State 1175

  521 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 521 (expr_mtag)


State 1176

  522 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 522 (expr_mtag)


State 1177

  523 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 523 (expr_mtag)


State 1178

  524 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 524 (expr_mtag)


State 1179

  525 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 525 (expr_mtag)


State 1180

  527 expr_mtag: "$c" '(' expr ')' . '(' ')'
  528          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1347


State 1181

  895 array_comprehension: "[[" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']' ']'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 1348
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 720
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1182

  816 optional_block: "where" expr_block .

    $default  reduce using rule 816 (optional_block)


State 1183

  722 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'
  860 make_dim_decl: '[' . optional_expr_list ']'
  893 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  894                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "for"                             shift, and go to state 716
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "iterator"                        shift, and go to state 717
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    ']'                               shift, and go to state 838
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    ']'  [reduce using rule 251 (optional_expr_list)]

    string_builder          go to state 511
    expr_reader             go to state 512
    optional_expr_list      go to state 718
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 719
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 720
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1184

  336 expr_list: expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'
  707 dim_list: '[' expr . ']'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797
    ']'    shift, and go to state 839

    ']'       [reduce using rule 336 (expr_list)]
    $default  reduce using rule 336 (expr_list)


State 1185

  833 make_struct_decl: "[[" type_declaration_no_options '(' ')' . optional_block optional_trailing_delim_sqr_sqr
  834                 | "[[" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "where"  shift, and go to state 926
    "$f"     shift, and go to state 721
    "name"   shift, and go to state 1234

    $default  reduce using rule 815 (optional_block)

    make_struct_fields  go to state 931
    make_struct_dim     go to state 1349
    optional_block      go to state 1350


State 1186

  850 make_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1351
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1187

  808 make_struct_dim: make_struct_dim "end of expression" . make_struct_fields

    "$f"    shift, and go to state 721
    "name"  shift, and go to state 1234

    make_struct_fields  go to state 1352


State 1188

  831 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1189
    ",]]"  shift, and go to state 1190
    ']'    shift, and go to state 1191

    optional_trailing_delim_sqr_sqr  go to state 1353


State 1189

  824 optional_trailing_delim_sqr_sqr: ";]]" .

    $default  reduce using rule 824 (optional_trailing_delim_sqr_sqr)


State 1190

  825 optional_trailing_delim_sqr_sqr: ",]]" .

    $default  reduce using rule 825 (optional_trailing_delim_sqr_sqr)


State 1191

  823 optional_trailing_delim_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1354


State 1192

  832 make_struct_decl: "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 832 (make_struct_decl)


State 1193

  851 make_tuple: make_tuple ',' . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1355
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1194

  859 make_dim: make_dim "end of expression" . make_tuple

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 930
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple              go to state 1356
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1195

  822 optional_trailing_semicolon_sqr_sqr: ";]]" .

    $default  reduce using rule 822 (optional_trailing_semicolon_sqr_sqr)


State 1196

  821 optional_trailing_semicolon_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1357


State 1197

  861 make_dim_decl: "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr .

    $default  reduce using rule 861 (make_dim_decl)


State 1198

  896 array_comprehension: "[{" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 1358
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 720
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1199

  836 make_struct_decl: "[{" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "$f"    shift, and go to state 721
    "name"  shift, and go to state 1234

    make_struct_fields  go to state 931
    make_struct_dim     go to state 1359


State 1200

  835 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    "end of code block"  shift, and go to state 1360
    ";}]"                shift, and go to state 1361
    ",}]"                shift, and go to state 1362

    optional_trailing_delim_cur_sqr  go to state 1363


State 1201

  819 optional_trailing_semicolon_cur_sqr: "end of code block" . ']'

    ']'  shift, and go to state 1364


State 1202

  820 optional_trailing_semicolon_cur_sqr: ";}]" .

    $default  reduce using rule 820 (optional_trailing_semicolon_cur_sqr)


State 1203

  862 make_dim_decl: "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr .

    $default  reduce using rule 862 (make_dim_decl)


State 1204

  898 array_comprehension: "{{" "for" variable_name_with_pos_list "in" . expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 1365
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 720
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1205

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'
  852 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797

    $default  reduce using rule 852 (make_map_tuple)


State 1206

  817 optional_trailing_semicolon_cur_cur: "end of code block" "end of code block" .

    $default  reduce using rule 817 (optional_trailing_semicolon_cur_cur)


State 1207

  881 make_table: make_table "end of expression" make_map_tuple .

    $default  reduce using rule 881 (make_table)


State 1208

  258 type_declaration_no_options_list: type_declaration_no_options_list . c_or_s type_declaration
  261 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list . '>' $@8 expr

    "end of expression"  shift, and go to state 616
    ','                  shift, and go to state 617
    '>'                  shift, and go to state 1366

    c_or_s  go to state 1310


State 1209

  258 type_declaration_no_options_list: type_declaration_no_options_list . c_or_s type_declaration
  264 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list . '>' $@10 optional_expr_list_in_braces

    "end of expression"  shift, and go to state 616
    ','                  shift, and go to state 617
    '>'                  shift, and go to state 1367

    c_or_s  go to state 1310


State 1210

   31 string_builder_body: string_builder_body "{" expr . "}"
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    "}"    shift, and go to state 1368
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797


State 1211

  897 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" . expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 1369
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 720
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1212

  883 expr_map_tuple_list: expr_map_tuple_list ',' make_map_tuple .

    $default  reduce using rule 883 (expr_map_tuple_list)


State 1213

  884 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma "end of code block" .

    $default  reduce using rule 884 (make_table_decl)


State 1214

  222 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions . "end of code block"
  248 expressions: expressions . expression_any
  249            | expressions . error

    error                             shift, and go to state 436
    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 439
    "if"                              shift, and go to state 440
    "static_if"                       shift, and go to state 441
    "for"                             shift, and go to state 442
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "return"                          shift, and go to state 449
    "null"                            shift, and go to state 450
    "break"                           shift, and go to state 451
    "try"                             shift, and go to state 452
    "table"                           shift, and go to state 453
    "delete"                          shift, and go to state 454
    "deref"                           shift, and go to state 455
    "with"                            shift, and go to state 456
    "assume"                          shift, and go to state 457
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 460
    "continue"                        shift, and go to state 461
    "pass"                            shift, and go to state 462
    "reinterpret"                     shift, and go to state 463
    "label"                           shift, and go to state 464
    "goto"                            shift, and go to state 465
    "unsafe"                          shift, and go to state 466
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "yield"                           shift, and go to state 473
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 476
    "@ <|"                            shift, and go to state 477
    "@@ <|"                           shift, and go to state 478
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 496
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    "end of code block"               shift, and go to state 1370
    "end of expression"               shift, and go to state 501
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder             go to state 511
    expr_reader                go to state 512
    expression_label           go to state 513
    expression_goto            go to state 514
    if_or_static_if            go to state 515
    expression_if_one_liner    go to state 516
    expression_if_then_else    go to state 517
    expression_for_loop        go to state 518
    expression_unsafe          go to state 519
    expression_while_loop      go to state 520
    expression_with            go to state 521
    expression_with_alias      go to state 522
    expr_call_pipe             go to state 523
    expression_any             go to state 524
    expr_keyword               go to state 525
    expression_keyword         go to state 526
    expr_pipe                  go to state 527
    name_in_namespace          go to state 528
    expression_delete          go to state 529
    expr_new                   go to state 530
    expression_break           go to state 531
    expression_continue        go to state 532
    expression_return_no_pipe  go to state 533
    expression_return          go to state 534
    expression_yield_no_pipe   go to state 535
    expression_yield           go to state 536
    expression_try_catch       go to state 537
    kwd_let                    go to state 538
    expression_let             go to state 539
    expr_cast                  go to state 540
    expr_type_decl             go to state 541
    expr_type_info             go to state 542
    block_or_lambda            go to state 543
    expr_full_block            go to state 544
    expr_numeric_const         go to state 545
    expr_assign                go to state 546
    expr_assign_pipe           go to state 547
    expr_named_call            go to state 548
    expr_method_call           go to state 549
    func_addr_expr             go to state 550
    expr_field                 go to state 551
    expr_call                  go to state 552
    expr                       go to state 553
    expr_mtag                  go to state 554
    basic_type_declaration     go to state 555
    make_decl                  go to state 556
    make_struct_decl           go to state 557
    make_tuple_call            go to state 558
    make_dim_decl              go to state 559
    make_table_decl            go to state 560
    array_comprehension        go to state 561


State 1215

  893 array_comprehension: '[' "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 1371
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 720
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1216

  654 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  655                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  894 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1372
    ','   shift, and go to state 853


State 1217

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'
  801 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  802                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797
    ')'    shift, and go to state 1373


State 1218

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'
  798 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797

    $default  reduce using rule 798 (make_struct_fields)


State 1219

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'
  797 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797

    $default  reduce using rule 797 (make_struct_fields)


State 1220

  476 expr: '(' expr_list optional_comma ')' .

    $default  reduce using rule 476 (expr)


State 1221

  803 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  804                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1374


State 1222

  799 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  800                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 852
    ":="  shift, and go to state 1375
    '='   shift, and go to state 854

    copy_or_move  go to state 1376


State 1223

  411 func_addr_name: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1377
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1224

  536 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1378
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1225

  415 func_addr_expr: '@' '@' '<' $@22 . type_declaration_no_options '>' $@23 func_addr_name

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 1379


State 1226

  418 func_addr_expr: '@' '@' '<' $@24 . optional_function_argument_list optional_function_type '>' $@25 func_addr_name

    '('  shift, and go to state 289

    $default  reduce using rule 124 (optional_function_argument_list)

    optional_function_argument_list  go to state 1380


State 1227

   61 expression_else: "else" . expression_block

    "begin of code block"  shift, and go to state 291

    expression_block  go to state 1381


State 1228

   58 elif_or_static_elif: "elif" .

    $default  reduce using rule 58 (elif_or_static_elif)


State 1229

   59 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 59 (elif_or_static_elif)


State 1230

   62 expression_else: elif_or_static_elif . expr expression_block expression_else

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1382
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1231

   73 expression_if_then_else: if_or_static_if expr expression_block expression_else .

    $default  reduce using rule 73 (expression_if_then_else)


State 1232

   75 expression_if_then_else: expression_if_one_liner "if" $@3 expr . expression_else_one_liner "end of expression"
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "else"  shift, and go to state 1383
    "is"    shift, and go to state 745
    "as"    shift, and go to state 746
    "<<"    shift, and go to state 755
    ">>"    shift, and go to state 756
    "++"    shift, and go to state 757
    "--"    shift, and go to state 758
    "<="    shift, and go to state 759
    ">="    shift, and go to state 762
    "=="    shift, and go to state 763
    "!="    shift, and go to state 764
    "->"    shift, and go to state 765
    "??"    shift, and go to state 767
    "?."    shift, and go to state 768
    "?["    shift, and go to state 769
    "<|"    shift, and go to state 770
    "|>"    shift, and go to state 771
    "<<<"   shift, and go to state 773
    ">>>"   shift, and go to state 774
    "&&"    shift, and go to state 777
    "||"    shift, and go to state 778
    "^^"    shift, and go to state 779
    ".."    shift, and go to state 783
    '?'     shift, and go to state 785
    '|'     shift, and go to state 786
    '^'     shift, and go to state 787
    '&'     shift, and go to state 788
    '<'     shift, and go to state 789
    '>'     shift, and go to state 790
    '-'     shift, and go to state 791
    '+'     shift, and go to state 792
    '*'     shift, and go to state 793
    '/'     shift, and go to state 794
    '%'     shift, and go to state 795
    '.'     shift, and go to state 796
    '['     shift, and go to state 797

    $default  reduce using rule 65 (expression_else_one_liner)

    expression_else_one_liner  go to state 1384


State 1233

  358 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type expression_block

    "capture"  shift, and go to state 984
    "[["       shift, and go to state 985

    $default  reduce using rule 351 (optional_capture_list)

    optional_capture_list  go to state 1385


State 1234

  797 make_struct_fields: "name" . copy_or_move expr
  798                   | "name" . ":=" expr

    "<-"  shift, and go to state 852
    ":="  shift, and go to state 962
    '='   shift, and go to state 854

    copy_or_move  go to state 963


State 1235

  430 expr_call: name_in_namespace '(' "uninitialized" ')' .

    $default  reduce using rule 430 (expr_call)


State 1236

  432 expr_call: name_in_namespace '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1386


State 1237

  406 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  799 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  800                   | make_struct_fields . ',' "name" ":=" expr
  803                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  804                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 965
    ']'  shift, and go to state 1387


State 1238

  337 expr_list: expr_list ',' . expr
  407 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 1388
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1137
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1239

  433 expr_call: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 433 (expr_call)


State 1240

  431 expr_call: name_in_namespace '(' make_struct_single ')' .

    $default  reduce using rule 431 (expr_call)


State 1241

  306 tuple_expansion: "name" .

    $default  reduce using rule 306 (tuple_expansion)


State 1242

  307 tuple_expansion: tuple_expansion . ',' "name"
  308 tuple_expansion_variable_declaration: "[[" tuple_expansion . ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  309                                     | "[[" tuple_expansion . ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  312                                     | "[[" tuple_expansion . ']' ']' optional_ref copy_or_move_or_clone expr "end of expression"
  313                                     | "[[" tuple_expansion . ']' ']' optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 1389
    ']'  shift, and go to state 1390


State 1243

  307 tuple_expansion: tuple_expansion . ',' "name"
  310 tuple_expansion_variable_declaration: '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  311                                     | '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  314                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr "end of expression"
  315                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 1389
    ')'  shift, and go to state 1391


State 1244

  353 optional_capture_list: "capture" '(' . capture_list ')'

    "<-"    shift, and go to state 1245
    ":="    shift, and go to state 1246
    "name"  shift, and go to state 1247
    '='     shift, and go to state 1248
    '&'     shift, and go to state 1249

    capture_entry  go to state 1250
    capture_list   go to state 1392


State 1245

  346 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1393


State 1246

  347 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1394


State 1247

  348 capture_entry: "name" . '(' "name" ')'

    '('  shift, and go to state 1395


State 1248

  345 capture_entry: '=' . "name"

    "name"  shift, and go to state 1396


State 1249

  344 capture_entry: '&' . "name"

    "name"  shift, and go to state 1397


State 1250

  349 capture_list: capture_entry .

    $default  reduce using rule 349 (capture_list)


State 1251

  350 capture_list: capture_list . ',' capture_entry
  352 optional_capture_list: "[[" capture_list . ']' ']'

    ','  shift, and go to state 1398
    ']'  shift, and go to state 1399


State 1252

  356 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 379

    $default  reduce using rule 127 (optional_function_type)

    optional_function_type  go to state 1400


State 1253

  495 expr: expr "is" "type" '<' . $@28 type_declaration_no_options '>' $@29

    $default  reduce using rule 493 ($@28)

    $@28  go to state 1401


State 1254

  535 expr_mtag: expr "is" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1402
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1255

  501 expr: expr "as" "type" '<' . $@30 type_declaration '>' $@31

    $default  reduce using rule 499 ($@30)

    $@30  go to state 1403


State 1256

  533 expr_mtag: expr "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1404
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1257

  387 expr_assign_pipe_right: "$ <|" expr_block .

    $default  reduce using rule 387 (expr_assign_pipe_right)


State 1258

  385 expr_assign_pipe_right: "@ <|" expr_block .

    $default  reduce using rule 385 (expr_assign_pipe_right)


State 1259

  386 expr_assign_pipe_right: "@@ <|" expr_block .

    $default  reduce using rule 386 (expr_assign_pipe_right)


State 1260

  408 expr_method_call: expr "->" "name" '(' . ')'
  409                 | expr "->" "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    ')'                               shift, and go to state 1405
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 1406
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 720
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1261

  530 expr_mtag: expr "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1407
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1262

  480 expr: expr "?[" expr ']' .

    $default  reduce using rule 480 (expr)


State 1263

  506 expr: expr '?' "as" "type" . '<' $@32 type_declaration '>' $@33

    '<'  shift, and go to state 1408


State 1264

  534 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1409


State 1265

  503 expr: expr '?' "as" "name" .

    $default  reduce using rule 503 (expr)


State 1266

  507 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 507 (expr)


State 1267

  492 expr: expr '?' expr ':' . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1410
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1268

  532 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1411


State 1269

  483 expr: expr '.' "?." "name" .

    $default  reduce using rule 483 (expr)


State 1270

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  481     | expr '.' "?[" expr . ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797
    ']'    shift, and go to state 1412


State 1271

  529 expr_mtag: expr '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1413
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1272

  421 expr_field: expr '.' "name" '(' . ')'
  422           | expr '.' "name" '(' . expr_list ')'
  423           | expr '.' "name" '(' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 1414
    '('                               shift, and go to state 508
    ')'                               shift, and go to state 1415
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 1416
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 720
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1273

  531 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1417


State 1274

  420 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 420 (expr_field)


State 1275

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  479     | expr '.' '[' expr . ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797
    ']'    shift, and go to state 1418


State 1276

  428 expr_field: expr '.' $@26 error . $@27

    $default  reduce using rule 427 ($@27)

    $@27  go to state 1419


State 1277

  424 expr_field: expr '.' basic_type_declaration '(' . ')'
  425           | expr '.' basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    ')'                               shift, and go to state 1420
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 1421
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 720
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1278

  478 expr: expr '[' expr ']' .

    $default  reduce using rule 478 (expr)


State 1279

  435 expr_call: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 435 (expr_call)


State 1280

  613 enum_list: enum_list "name" '=' expr "end of expression" .

    $default  reduce using rule 613 (enum_list)


State 1281

  633 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block" .

    $default  reduce using rule 633 (enum_declaration)


State 1282

  123 optional_annotation_list: '[' annotation_list ']' .
  558 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' . "end of expression"

    "end of expression"  shift, and go to state 1422

    $default  reduce using rule 123 (optional_annotation_list)


State 1283

  546 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 546 (optional_public_or_private_member_variable)


State 1284

  547 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 547 (optional_public_or_private_member_variable)


State 1285

  555 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . "abstract" optional_constant $@35 function_declaration_header "end of expression"
  557                                 | struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block

    "abstract"  shift, and go to state 1423
    "static"    shift, and go to state 1286

    $default  reduce using rule 548 (optional_static_member_variable)

    optional_static_member_variable  go to state 1424


State 1286

  549 optional_static_member_variable: "static" .

    $default  reduce using rule 549 (optional_static_member_variable)


State 1287

  550 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1425
    "sealed"    shift, and go to state 1426

    $default  reduce using rule 540 (optional_override)

    optional_override  go to state 1427


State 1288

  553 struct_variable_declaration_list: struct_variable_declaration_list $@34 structure_variable_declaration "end of expression" .

    $default  reduce using rule 553 (struct_variable_declaration_list)


State 1289

  489 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  490     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'

    "capture"  shift, and go to state 984
    "[["       shift, and go to state 985

    $default  reduce using rule 351 (optional_capture_list)

    optional_capture_list  go to state 1428


State 1290

  595 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 595 (let_variable_declaration)


State 1291

  717 type_declaration_no_options: "type" '<' $@49 type_declaration '>' $@50 .

    $default  reduce using rule 717 (type_declaration_no_options)


State 1292

  740 type_declaration_no_options: "array" '<' $@54 type_declaration '>' $@55 .

    $default  reduce using rule 740 (type_declaration_no_options)


State 1293

  743 type_declaration_no_options: "table" '<' $@56 table_type_pair '>' $@57 .

    $default  reduce using rule 743 (type_declaration_no_options)


State 1294

  706 table_type_pair: type_declaration c_or_s type_declaration .
  775 type_declaration: type_declaration . '|' type_declaration_no_options
  776                 | type_declaration . '|' '#'

    '|'  shift, and go to state 423

    $default  reduce using rule 706 (table_type_pair)


State 1295

  746 type_declaration_no_options: "iterator" '<' $@58 type_declaration '>' $@59 .

    $default  reduce using rule 746 (type_declaration_no_options)


State 1296

  736 type_declaration_no_options: "smart_ptr" '<' $@52 type_declaration '>' $@53 .

    $default  reduce using rule 736 (type_declaration_no_options)


State 1297

  696 bitfield_bits: bitfield_bits "end of expression" "name" .

    $default  reduce using rule 696 (bitfield_bits)


State 1298

  702 bitfield_type_declaration: "bitfield" '<' $@47 bitfield_bits '>' $@48 .

    $default  reduce using rule 702 (bitfield_type_declaration)


State 1299

  750 type_declaration_no_options: "block" '<' $@60 type_declaration '>' $@61 .

    $default  reduce using rule 750 (type_declaration_no_options)


State 1300

  753 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list optional_function_type '>' . $@63

    $default  reduce using rule 752 ($@63)

    $@63  go to state 1429


State 1301

  757 type_declaration_no_options: "function" '<' $@64 type_declaration '>' $@65 .

    $default  reduce using rule 757 (type_declaration_no_options)


State 1302

  760 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list optional_function_type '>' . $@67

    $default  reduce using rule 759 ($@67)

    $@67  go to state 1430


State 1303

  764 type_declaration_no_options: "lambda" '<' $@68 type_declaration '>' $@69 .

    $default  reduce using rule 764 (type_declaration_no_options)


State 1304

  767 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list optional_function_type '>' . $@71

    $default  reduce using rule 766 ($@71)

    $@71  go to state 1431


State 1305

  770 type_declaration_no_options: "tuple" '<' $@72 tuple_type_list '>' $@73 .

    $default  reduce using rule 770 (type_declaration_no_options)


State 1306

  566 tuple_type_list: tuple_type_list c_or_s tuple_type .

    $default  reduce using rule 566 (tuple_type_list)


State 1307

  773 type_declaration_no_options: "variant" '<' $@74 variant_type_list '>' $@75 .

    $default  reduce using rule 773 (type_declaration_no_options)


State 1308

  572 variant_type_list: variant_type_list c_or_s variant_type .

    $default  reduce using rule 572 (variant_type_list)


State 1309

  721 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' . '(' optional_expr_list ')'

    '('  shift, and go to state 1432


State 1310

  258 type_declaration_no_options_list: type_declaration_no_options_list c_or_s . type_declaration

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 362
    type_declaration             go to state 1433


State 1311

  652 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 652 (variable_name_with_pos_list)


State 1312

  655 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1434


State 1313

  581 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1435
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1314

  839 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' . $@89 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 838 ($@89)

    $@89  go to state 1436


State 1315

  842 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' . $@91 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 841 ($@91)

    $@91  go to state 1437


State 1316

   77 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" expr_list . expression_block
  337 expr_list: expr_list . ',' expr

    "begin of code block"  shift, and go to state 291
    ','                    shift, and go to state 875

    expression_block  go to state 1438


State 1317

  277 new_type_declaration: '<' $@11 type_declaration '>' . $@12

    $default  reduce using rule 276 ($@12)

    $@12  go to state 1439


State 1318

  283 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1440


State 1319

  281 expr_new: "new" new_type_declaration '(' expr_list ')' .

    $default  reduce using rule 281 (expr_new)


State 1320

  282 expr_new: "new" new_type_declaration '(' make_struct_single ')' .

    $default  reduce using rule 282 (expr_new)


State 1321

  280 expr_new: "new" new_type_declaration '(' use_initializer ')' .

    $default  reduce using rule 280 (expr_new)


State 1322

  331 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" . '>' expr ')'
  332               | "typeinfo" '(' name_in_namespace '<' "name" . c_or_s "name" '>' expr ')'

    "end of expression"  shift, and go to state 616
    ','                  shift, and go to state 617
    '>'                  shift, and go to state 1441

    c_or_s  go to state 1442


State 1323

  330 expr_type_info: "typeinfo" '(' name_in_namespace expr ')' .

    $default  reduce using rule 330 (expr_type_info)


State 1324

  335 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" . "name" '>' '(' expr ')'

    "name"  shift, and go to state 1443


State 1325

  334 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' . '(' expr ')'

    '('  shift, and go to state 1444


State 1326

  333 expr_type_info: "typeinfo" name_in_namespace '(' expr ')' .

    $default  reduce using rule 333 (expr_type_info)


State 1327

  329 expr_type_decl: "type" '<' $@19 type_declaration '>' . $@20

    $default  reduce using rule 328 ($@20)

    $@20  go to state 1445


State 1328

  713 type_declaration_no_options: type_declaration_no_options . dim_list
  714                            | type_declaration_no_options . '[' ']'
  722                            | type_declaration_no_options . '-' '[' ']'
  723                            | type_declaration_no_options . "explicit"
  724                            | type_declaration_no_options . "const"
  725                            | type_declaration_no_options . '-' "const"
  726                            | type_declaration_no_options . '&'
  727                            | type_declaration_no_options . '-' '&'
  728                            | type_declaration_no_options . '#'
  729                            | type_declaration_no_options . "implicit"
  730                            | type_declaration_no_options . '-' '#'
  731                            | type_declaration_no_options . "==" "const"
  732                            | type_declaration_no_options . "==" '&'
  733                            | type_declaration_no_options . '?'
  737                            | type_declaration_no_options . "??"
  865 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options . '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "??"        shift, and go to state 416
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '>'         shift, and go to state 1446
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    dim_list  go to state 422


State 1329

  713 type_declaration_no_options: type_declaration_no_options . dim_list
  714                            | type_declaration_no_options . '[' ']'
  722                            | type_declaration_no_options . '-' '[' ']'
  723                            | type_declaration_no_options . "explicit"
  724                            | type_declaration_no_options . "const"
  725                            | type_declaration_no_options . '-' "const"
  726                            | type_declaration_no_options . '&'
  727                            | type_declaration_no_options . '-' '&'
  728                            | type_declaration_no_options . '#'
  729                            | type_declaration_no_options . "implicit"
  730                            | type_declaration_no_options . '-' '#'
  731                            | type_declaration_no_options . "==" "const"
  732                            | type_declaration_no_options . "==" '&'
  733                            | type_declaration_no_options . '?'
  737                            | type_declaration_no_options . "??"
  868 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options . '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "??"        shift, and go to state 416
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '>'         shift, and go to state 1447
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    dim_list  go to state 422


State 1330

  713 type_declaration_no_options: type_declaration_no_options . dim_list
  714                            | type_declaration_no_options . '[' ']'
  722                            | type_declaration_no_options . '-' '[' ']'
  723                            | type_declaration_no_options . "explicit"
  724                            | type_declaration_no_options . "const"
  725                            | type_declaration_no_options . '-' "const"
  726                            | type_declaration_no_options . '&'
  727                            | type_declaration_no_options . '-' '&'
  728                            | type_declaration_no_options . '#'
  729                            | type_declaration_no_options . "implicit"
  730                            | type_declaration_no_options . '-' '#'
  731                            | type_declaration_no_options . "==" "const"
  732                            | type_declaration_no_options . "==" '&'
  733                            | type_declaration_no_options . '?'
  737                            | type_declaration_no_options . "??"
  871 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options . '>' $@103 '(' make_variant_dim ')'

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "??"        shift, and go to state 416
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '>'         shift, and go to state 1448
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    dim_list  go to state 422


State 1331

  875 make_dim_decl: "array" '<' $@104 type_declaration_no_options '>' . $@105 '(' optional_expr_list ')'

    $default  reduce using rule 874 ($@105)

    $@105  go to state 1449


State 1332

  872 make_dim_decl: "array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 872 (make_dim_decl)


State 1333

  887 make_table_decl: "table" '<' type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    $default  reduce using rule 255 (optional_expr_map_tuple_list)

    string_builder                go to state 511
    expr_reader                   go to state 512
    optional_expr_map_tuple_list  go to state 1450
    expression_keyword            go to state 573
    name_in_namespace             go to state 528
    expr_new                      go to state 530
    expr_cast                     go to state 540
    expr_type_decl                go to state 541
    expr_type_info                go to state 542
    block_or_lambda               go to state 543
    expr_full_block               go to state 544
    expr_numeric_const            go to state 545
    expr_named_call               go to state 548
    expr_method_call              go to state 549
    func_addr_expr                go to state 550
    expr_field                    go to state 551
    expr_call                     go to state 552
    expr                          go to state 700
    expr_mtag                     go to state 554
    basic_type_declaration        go to state 555
    make_decl                     go to state 556
    make_struct_decl              go to state 557
    make_map_tuple                go to state 708
    make_tuple_call               go to state 558
    make_dim_decl                 go to state 559
    expr_map_tuple_list           go to state 896
    make_table_decl               go to state 560
    array_comprehension           go to state 561


State 1334

  713 type_declaration_no_options: type_declaration_no_options . dim_list
  714                            | type_declaration_no_options . '[' ']'
  722                            | type_declaration_no_options . '-' '[' ']'
  723                            | type_declaration_no_options . "explicit"
  724                            | type_declaration_no_options . "const"
  725                            | type_declaration_no_options . '-' "const"
  726                            | type_declaration_no_options . '&'
  727                            | type_declaration_no_options . '-' '&'
  728                            | type_declaration_no_options . '#'
  729                            | type_declaration_no_options . "implicit"
  730                            | type_declaration_no_options . '-' '#'
  731                            | type_declaration_no_options . "==" "const"
  732                            | type_declaration_no_options . "==" '&'
  733                            | type_declaration_no_options . '?'
  737                            | type_declaration_no_options . "??"
  888 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "??"        shift, and go to state 416
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '>'         shift, and go to state 1451
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    dim_list  go to state 422


State 1335

   82 expression_with_alias: "assume" "name" '=' $@5 expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797

    $default  reduce using rule 82 (expression_with_alias)


State 1336

  320 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' . $@14 expr

    $default  reduce using rule 319 ($@14)

    $@14  go to state 1452


State 1337

  323 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' . $@16 expr

    $default  reduce using rule 322 ($@16)

    $@16  go to state 1453


State 1338

  326 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' . $@18 expr

    $default  reduce using rule 325 ($@18)

    $@18  go to state 1454


State 1339

  879 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' . $@107 '(' expr_list optional_comma ')'

    $default  reduce using rule 878 ($@107)

    $@107  go to state 1455


State 1340

  876 make_dim_decl: "fixed_array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 876 (make_dim_decl)


State 1341

  848 make_struct_decl: "default" '<' $@94 type_declaration_no_options '>' . $@95 use_initializer

    $default  reduce using rule 847 ($@95)

    $@95  go to state 1456


State 1342

  857 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' . $@97 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 856 ($@97)

    $@97  go to state 1457


State 1343

  854 make_tuple_call: "tuple" '(' expr_list optional_comma ')' .

    $default  reduce using rule 854 (make_tuple_call)


State 1344

  845 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' . $@93 '(' make_variant_dim ')'

    $default  reduce using rule 844 ($@93)

    $@93  go to state 1458


State 1345

  225 expr_call_pipe: "generator" '<' type_declaration_no_options '>' optional_capture_list . expr_full_block_assumed_piped
  489 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  490     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'

    '('  shift, and go to state 1459
    '$'  shift, and go to state 509
    '@'  shift, and go to state 683

    block_or_lambda                go to state 731
    expr_full_block_assumed_piped  go to state 1460


State 1346

  355 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 379

    $default  reduce using rule 127 (optional_function_type)

    optional_function_type  go to state 1461


State 1347

  527 expr_mtag: "$c" '(' expr ')' '(' . ')'
  528          | "$c" '(' expr ')' '(' . expr_list ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    ')'                               shift, and go to state 1462
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 1463
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 720
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1348

  337 expr_list: expr_list . ',' expr
  895 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']' ']'

    "end of expression"  shift, and go to state 1464
    ','                  shift, and go to state 875


State 1349

  808 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  834 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"              shift, and go to state 926
    "end of expression"  shift, and go to state 1187

    $default  reduce using rule 815 (optional_block)

    optional_block  go to state 1465


State 1350

  833 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1189
    ",]]"  shift, and go to state 1190
    ']'    shift, and go to state 1191

    optional_trailing_delim_sqr_sqr  go to state 1466


State 1351

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'
  850 make_tuple: expr "=>" expr .

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797

    $default  reduce using rule 850 (make_tuple)


State 1352

  799 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  800                   | make_struct_fields . ',' "name" ":=" expr
  803                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  804                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  808 make_struct_dim: make_struct_dim "end of expression" make_struct_fields .

    ','  shift, and go to state 965

    $default  reduce using rule 808 (make_struct_dim)


State 1353

  831 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 831 (make_struct_decl)


State 1354

  823 optional_trailing_delim_sqr_sqr: ']' ']' .

    $default  reduce using rule 823 (optional_trailing_delim_sqr_sqr)


State 1355

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'
  851 make_tuple: make_tuple ',' expr .

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797

    $default  reduce using rule 851 (make_tuple)


State 1356

  851 make_tuple: make_tuple . ',' expr
  859 make_dim: make_dim "end of expression" make_tuple .

    ','  shift, and go to state 1193

    $default  reduce using rule 859 (make_dim)


State 1357

  821 optional_trailing_semicolon_sqr_sqr: ']' ']' .

    $default  reduce using rule 821 (optional_trailing_semicolon_sqr_sqr)


State 1358

  337 expr_list: expr_list . ',' expr
  896 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where "end of code block" ']'

    "end of expression"  shift, and go to state 1467
    ','                  shift, and go to state 875


State 1359

  808 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  836 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"              shift, and go to state 926
    "end of expression"  shift, and go to state 1187

    $default  reduce using rule 815 (optional_block)

    optional_block  go to state 1468


State 1360

  826 optional_trailing_delim_cur_sqr: "end of code block" . ']'

    ']'  shift, and go to state 1469


State 1361

  827 optional_trailing_delim_cur_sqr: ";}]" .

    $default  reduce using rule 827 (optional_trailing_delim_cur_sqr)


State 1362

  828 optional_trailing_delim_cur_sqr: ",}]" .

    $default  reduce using rule 828 (optional_trailing_delim_cur_sqr)


State 1363

  835 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 835 (make_struct_decl)


State 1364

  819 optional_trailing_semicolon_cur_sqr: "end of code block" ']' .

    $default  reduce using rule 819 (optional_trailing_semicolon_cur_sqr)


State 1365

  337 expr_list: expr_list . ',' expr
  898 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list . "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "end of expression"  shift, and go to state 1470
    ','                  shift, and go to state 875


State 1366

  261 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list '>' . $@8 expr

    $default  reduce using rule 260 ($@8)

    $@8  go to state 1471


State 1367

  264 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list '>' . $@10 optional_expr_list_in_braces

    $default  reduce using rule 263 ($@10)

    $@10  go to state 1472


State 1368

   31 string_builder_body: string_builder_body "{" expr "}" .

    $default  reduce using rule 31 (string_builder_body)


State 1369

  337 expr_list: expr_list . ',' expr
  897 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list . "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1473
    ','                  shift, and go to state 875


State 1370

  222 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions "end of code block" .

    $default  reduce using rule 222 (expression_block)


State 1371

  337 expr_list: expr_list . ',' expr
  893 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1474
    ','                  shift, and go to state 875


State 1372

  894 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 1475
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 720
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1373

  801 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  802                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 852
    ":="  shift, and go to state 1476
    '='   shift, and go to state 854

    copy_or_move  go to state 1477


State 1374

  803 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  804                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1478
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1375

  800 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1479
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1376

  799 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1480
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1377

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  411 func_addr_name: "$i" '(' expr . ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797
    ')'    shift, and go to state 1481


State 1378

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'
  536          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797
    ')'    shift, and go to state 1482


State 1379

  415 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options . '>' $@23 func_addr_name
  713 type_declaration_no_options: type_declaration_no_options . dim_list
  714                            | type_declaration_no_options . '[' ']'
  722                            | type_declaration_no_options . '-' '[' ']'
  723                            | type_declaration_no_options . "explicit"
  724                            | type_declaration_no_options . "const"
  725                            | type_declaration_no_options . '-' "const"
  726                            | type_declaration_no_options . '&'
  727                            | type_declaration_no_options . '-' '&'
  728                            | type_declaration_no_options . '#'
  729                            | type_declaration_no_options . "implicit"
  730                            | type_declaration_no_options . '-' '#'
  731                            | type_declaration_no_options . "==" "const"
  732                            | type_declaration_no_options . "==" '&'
  733                            | type_declaration_no_options . '?'
  737                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "??"        shift, and go to state 416
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '>'         shift, and go to state 1483
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    dim_list  go to state 422


State 1380

  418 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list . optional_function_type '>' $@25 func_addr_name

    ':'  shift, and go to state 379

    $default  reduce using rule 127 (optional_function_type)

    optional_function_type  go to state 1484


State 1381

   61 expression_else: "else" expression_block .

    $default  reduce using rule 61 (expression_else)


State 1382

   62 expression_else: elif_or_static_elif expr . expression_block expression_else
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 745
    "as"                   shift, and go to state 746
    "<<"                   shift, and go to state 755
    ">>"                   shift, and go to state 756
    "++"                   shift, and go to state 757
    "--"                   shift, and go to state 758
    "<="                   shift, and go to state 759
    ">="                   shift, and go to state 762
    "=="                   shift, and go to state 763
    "!="                   shift, and go to state 764
    "->"                   shift, and go to state 765
    "??"                   shift, and go to state 767
    "?."                   shift, and go to state 768
    "?["                   shift, and go to state 769
    "<|"                   shift, and go to state 770
    "|>"                   shift, and go to state 771
    "<<<"                  shift, and go to state 773
    ">>>"                  shift, and go to state 774
    "&&"                   shift, and go to state 777
    "||"                   shift, and go to state 778
    "^^"                   shift, and go to state 779
    ".."                   shift, and go to state 783
    "begin of code block"  shift, and go to state 291
    '?'                    shift, and go to state 785
    '|'                    shift, and go to state 786
    '^'                    shift, and go to state 787
    '&'                    shift, and go to state 788
    '<'                    shift, and go to state 789
    '>'                    shift, and go to state 790
    '-'                    shift, and go to state 791
    '+'                    shift, and go to state 792
    '*'                    shift, and go to state 793
    '/'                    shift, and go to state 794
    '%'                    shift, and go to state 795
    '.'                    shift, and go to state 796
    '['                    shift, and go to state 797

    expression_block  go to state 1485


State 1383

   67 expression_else_one_liner: "else" . $@2 expression_if_one_liner

    $default  reduce using rule 66 ($@2)

    $@2  go to state 1486


State 1384

   75 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner . "end of expression"

    "end of expression"  shift, and go to state 1487


State 1385

  358 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type expression_block

    '('  shift, and go to state 289

    $default  reduce using rule 124 (optional_function_argument_list)

    optional_function_argument_list  go to state 1488


State 1386

  432 expr_call: name_in_namespace '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 432 (expr_call)


State 1387

  406 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1489


State 1388

  407 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'
  860 make_dim_decl: '[' . optional_expr_list ']'
  893 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  894                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "for"                             shift, and go to state 716
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "iterator"                        shift, and go to state 717
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "$f"                              shift, and go to state 721
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 722
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    $default  reduce using rule 251 (optional_expr_list)

    string_builder          go to state 511
    expr_reader             go to state 512
    optional_expr_list      go to state 718
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 719
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 720
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_fields      go to state 1490
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1389

  307 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1491


State 1390

  308 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' . ']' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  309                                     | "[[" tuple_expansion ']' . ']' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  312                                     | "[[" tuple_expansion ']' . ']' optional_ref copy_or_move_or_clone expr "end of expression"
  313                                     | "[[" tuple_expansion ']' . ']' optional_ref copy_or_move_or_clone expr_pipe

    ']'  shift, and go to state 1492


State 1391

  310 tuple_expansion_variable_declaration: '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  311                                     | '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  314                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr "end of expression"
  315                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr_pipe

    ':'  shift, and go to state 1493
    '&'  shift, and go to state 395

    $default  reduce using rule 587 (optional_ref)

    optional_ref  go to state 1494


State 1392

  350 capture_list: capture_list . ',' capture_entry
  353 optional_capture_list: "capture" '(' capture_list . ')'

    ','  shift, and go to state 1398
    ')'  shift, and go to state 1495


State 1393

  346 capture_entry: "<-" "name" .

    $default  reduce using rule 346 (capture_entry)


State 1394

  347 capture_entry: ":=" "name" .

    $default  reduce using rule 347 (capture_entry)


State 1395

  348 capture_entry: "name" '(' . "name" ')'

    "name"  shift, and go to state 1496


State 1396

  345 capture_entry: '=' "name" .

    $default  reduce using rule 345 (capture_entry)


State 1397

  344 capture_entry: '&' "name" .

    $default  reduce using rule 344 (capture_entry)


State 1398

  350 capture_list: capture_list ',' . capture_entry

    "<-"    shift, and go to state 1245
    ":="    shift, and go to state 1246
    "name"  shift, and go to state 1247
    '='     shift, and go to state 1248
    '&'     shift, and go to state 1249

    capture_entry  go to state 1497


State 1399

  352 optional_capture_list: "[[" capture_list ']' . ']'

    ']'  shift, and go to state 1498


State 1400

  356 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"                   shift, and go to state 1499
    "begin of code block"  shift, and go to state 291

    expression_block       go to state 1500
    block_or_simple_block  go to state 1501


State 1401

  495 expr: expr "is" "type" '<' $@28 . type_declaration_no_options '>' $@29

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 1502


State 1402

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'
  535          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797
    ')'    shift, and go to state 1503


State 1403

  501 expr: expr "as" "type" '<' $@30 . type_declaration '>' $@31

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 362
    type_declaration             go to state 1504


State 1404

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  533          | expr "as" "$f" '(' expr . ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797
    ')'    shift, and go to state 1505


State 1405

  408 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 408 (expr_method_call)


State 1406

  337 expr_list: expr_list . ',' expr
  409 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 875
    ')'  shift, and go to state 1506


State 1407

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  530          | expr "?." "$f" '(' expr . ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797
    ')'    shift, and go to state 1507


State 1408

  506 expr: expr '?' "as" "type" '<' . $@32 type_declaration '>' $@33

    $default  reduce using rule 504 ($@32)

    $@32  go to state 1508


State 1409

  534 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1509
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1410

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  492     | expr '?' expr ':' expr .
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797

    $default  reduce using rule 492 (expr)


State 1411

  532 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1510
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1412

  481 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 481 (expr)


State 1413

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr '.' "$f" '(' expr . ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797
    ')'    shift, and go to state 1511


State 1414

  423 expr_field: expr '.' "name" '(' '[' . make_struct_fields ']' ')'
  860 make_dim_decl: '[' . optional_expr_list ']'
  893 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  894                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "for"                             shift, and go to state 716
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "iterator"                        shift, and go to state 717
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "$f"                              shift, and go to state 721
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 722
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    $default  reduce using rule 251 (optional_expr_list)

    string_builder          go to state 511
    expr_reader             go to state 512
    optional_expr_list      go to state 718
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 719
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 720
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_fields      go to state 1512
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1415

  421 expr_field: expr '.' "name" '(' ')' .

    $default  reduce using rule 421 (expr_field)


State 1416

  337 expr_list: expr_list . ',' expr
  422 expr_field: expr '.' "name" '(' expr_list . ')'

    ','  shift, and go to state 875
    ')'  shift, and go to state 1513


State 1417

  531 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1514
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1418

  479 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 479 (expr)


State 1419

  428 expr_field: expr '.' $@26 error $@27 .

    $default  reduce using rule 428 (expr_field)


State 1420

  424 expr_field: expr '.' basic_type_declaration '(' ')' .

    $default  reduce using rule 424 (expr_field)


State 1421

  337 expr_list: expr_list . ',' expr
  425 expr_field: expr '.' basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 875
    ')'  shift, and go to state 1515


State 1422

  558 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' "end of expression" .

    $default  reduce using rule 558 (struct_variable_declaration_list)


State 1423

  555 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" . optional_constant $@35 function_declaration_header "end of expression"

    "const"  shift, and go to state 1516

    $default  reduce using rule 543 (optional_constant)

    optional_constant  go to state 1517


State 1424

  557 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@36 function_declaration_header expression_block

    "override"  shift, and go to state 1425
    "sealed"    shift, and go to state 1426

    $default  reduce using rule 540 (optional_override)

    optional_override  go to state 1518


State 1425

  541 optional_override: "override" .

    $default  reduce using rule 541 (optional_override)


State 1426

  542 optional_override: "sealed" .

    $default  reduce using rule 542 (optional_override)


State 1427

  550 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1283
    "private"  shift, and go to state 1284

    $default  reduce using rule 545 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1519


State 1428

  489 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  490     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'

    '('  shift, and go to state 1459


State 1429

  753 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list optional_function_type '>' $@63 .

    $default  reduce using rule 753 (type_declaration_no_options)


State 1430

  760 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list optional_function_type '>' $@67 .

    $default  reduce using rule 760 (type_declaration_no_options)


State 1431

  767 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list optional_function_type '>' $@71 .

    $default  reduce using rule 767 (type_declaration_no_options)


State 1432

  721 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    $default  reduce using rule 251 (optional_expr_list)

    string_builder          go to state 511
    expr_reader             go to state 512
    optional_expr_list      go to state 1520
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 719
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 720
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1433

  258 type_declaration_no_options_list: type_declaration_no_options_list c_or_s type_declaration .
  775 type_declaration: type_declaration . '|' type_declaration_no_options
  776                 | type_declaration . '|' '#'

    '|'  shift, and go to state 423

    $default  reduce using rule 258 (type_declaration_no_options_list)


State 1434

  655 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 655 (variable_name_with_pos_list)


State 1435

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'
  581 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797

    $default  reduce using rule 581 (variable_declaration)


State 1436

  839 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1521


State 1437

  842 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1522


State 1438

   77 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" expr_list expression_block .

    $default  reduce using rule 77 (expression_for_loop)


State 1439

  277 new_type_declaration: '<' $@11 type_declaration '>' $@12 .

    $default  reduce using rule 277 (new_type_declaration)


State 1440

  283 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 283 (expr_new)


State 1441

  331 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1523
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1442

  332 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s . "name" '>' expr ')'

    "name"  shift, and go to state 1524


State 1443

  335 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" . '>' '(' expr ')'

    '>'  shift, and go to state 1525


State 1444

  334 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1526
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1445

  329 expr_type_decl: "type" '<' $@19 type_declaration '>' $@20 .

    $default  reduce using rule 329 (expr_type_decl)


State 1446

  865 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' . $@99 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 864 ($@99)

    $@99  go to state 1527


State 1447

  868 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' . $@101 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 867 ($@101)

    $@101  go to state 1528


State 1448

  871 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options '>' . $@103 '(' make_variant_dim ')'

    $default  reduce using rule 870 ($@103)

    $@103  go to state 1529


State 1449

  875 make_dim_decl: "array" '<' $@104 type_declaration_no_options '>' $@105 . '(' optional_expr_list ')'

    '('  shift, and go to state 1530


State 1450

  887 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1531


State 1451

  888 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1532


State 1452

  320 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1533
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1453

  323 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1534
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1454

  326 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1535
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1455

  879 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' $@107 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1536


State 1456

  848 make_struct_decl: "default" '<' $@94 type_declaration_no_options '>' $@95 . use_initializer

    "uninitialized"  shift, and go to state 1537

    $default  reduce using rule 829 (use_initializer)

    use_initializer  go to state 1538


State 1457

  857 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1539


State 1458

  845 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 . '(' make_variant_dim ')'

    '('  shift, and go to state 1540


State 1459

  489 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  490     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    ')'                               shift, and go to state 1541
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1542
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1460

  225 expr_call_pipe: "generator" '<' type_declaration_no_options '>' optional_capture_list expr_full_block_assumed_piped .

    $default  reduce using rule 225 (expr_call_pipe)


State 1461

  355 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"                   shift, and go to state 1499
    "begin of code block"  shift, and go to state 291

    expression_block       go to state 1500
    block_or_simple_block  go to state 1543


State 1462

  527 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 527 (expr_mtag)


State 1463

  337 expr_list: expr_list . ',' expr
  528 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 875
    ')'  shift, and go to state 1544


State 1464

  895 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']' ']'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1545
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1465

  834 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1189
    ",]]"  shift, and go to state 1190
    ']'    shift, and go to state 1191

    optional_trailing_delim_sqr_sqr  go to state 1546


State 1466

  833 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 833 (make_struct_decl)


State 1467

  896 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where "end of code block" ']'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1547
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1468

  836 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    "end of code block"  shift, and go to state 1360
    ";}]"                shift, and go to state 1361
    ",}]"                shift, and go to state 1362

    optional_trailing_delim_cur_sqr  go to state 1548


State 1469

  826 optional_trailing_delim_cur_sqr: "end of code block" ']' .

    $default  reduce using rule 826 (optional_trailing_delim_cur_sqr)


State 1470

  898 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" . make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 700
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_map_tuple          go to state 1549
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1471

  261 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list '>' $@8 . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1550
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1472

  264 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list '>' $@10 . optional_expr_list_in_braces

    '('  shift, and go to state 1551

    '('       [reduce using rule 253 (optional_expr_list_in_braces)]
    $default  reduce using rule 253 (optional_expr_list_in_braces)

    optional_expr_list_in_braces  go to state 1552


State 1473

  897 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" . make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 700
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_map_tuple          go to state 1553
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1474

  893 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1554
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1475

  337 expr_list: expr_list . ',' expr
  894 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1555
    ','                  shift, and go to state 875


State 1476

  802 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1556
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1477

  801 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1557
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1478

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'
  803 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  804                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797
    ')'    shift, and go to state 1558


State 1479

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'
  800 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797

    $default  reduce using rule 800 (make_struct_fields)


State 1480

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'
  799 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797

    $default  reduce using rule 799 (make_struct_fields)


State 1481

  411 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 411 (func_addr_name)


State 1482

  536 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 536 (expr_mtag)


State 1483

  415 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options '>' . $@23 func_addr_name

    $default  reduce using rule 414 ($@23)

    $@23  go to state 1559


State 1484

  418 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type . '>' $@25 func_addr_name

    '>'  shift, and go to state 1560


State 1485

   62 expression_else: elif_or_static_elif expr expression_block . expression_else

    "else"         shift, and go to state 1227
    "elif"         shift, and go to state 1228
    "static_elif"  shift, and go to state 1229

    $default  reduce using rule 60 (expression_else)

    elif_or_static_elif  go to state 1230
    expression_else      go to state 1561


State 1486

   67 expression_else_one_liner: "else" $@2 . expression_if_one_liner

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "return"                          shift, and go to state 1562
    "null"                            shift, and go to state 450
    "break"                           shift, and go to state 451
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "continue"                        shift, and go to state 461
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "yield"                           shift, and go to state 1563
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder             go to state 511
    expr_reader                go to state 512
    expression_if_one_liner    go to state 1564
    expression_keyword         go to state 573
    name_in_namespace          go to state 528
    expr_new                   go to state 530
    expression_break           go to state 1565
    expression_continue        go to state 1566
    expression_return_no_pipe  go to state 1567
    expression_yield_no_pipe   go to state 1568
    expr_cast                  go to state 540
    expr_type_decl             go to state 541
    expr_type_info             go to state 542
    block_or_lambda            go to state 543
    expr_full_block            go to state 544
    expr_numeric_const         go to state 545
    expr_named_call            go to state 548
    expr_method_call           go to state 549
    func_addr_expr             go to state 550
    expr_field                 go to state 551
    expr_call                  go to state 552
    expr                       go to state 1569
    expr_mtag                  go to state 554
    basic_type_declaration     go to state 555
    make_decl                  go to state 556
    make_struct_decl           go to state 557
    make_tuple_call            go to state 558
    make_dim_decl              go to state 559
    make_table_decl            go to state 560
    array_comprehension        go to state 561


State 1487

   75 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner "end of expression" .

    $default  reduce using rule 75 (expression_if_then_else)


State 1488

  358 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type expression_block

    ':'  shift, and go to state 379

    $default  reduce using rule 127 (optional_function_type)

    optional_function_type  go to state 1570


State 1489

  406 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 406 (expr_named_call)


State 1490

  407 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  799 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  800                   | make_struct_fields . ',' "name" ":=" expr
  803                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  804                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 965
    ']'  shift, and go to state 1571


State 1491

  307 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 307 (tuple_expansion)


State 1492

  308 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  309                                     | "[[" tuple_expansion ']' ']' . ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  312                                     | "[[" tuple_expansion ']' ']' . optional_ref copy_or_move_or_clone expr "end of expression"
  313                                     | "[[" tuple_expansion ']' ']' . optional_ref copy_or_move_or_clone expr_pipe

    ':'  shift, and go to state 1572
    '&'  shift, and go to state 395

    $default  reduce using rule 587 (optional_ref)

    optional_ref  go to state 1573


State 1493

  310 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  311                                     | '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr_pipe

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 1574


State 1494

  314 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr "end of expression"
  315                                     | '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 578
    ":="  shift, and go to state 579
    '='   shift, and go to state 580

    copy_or_move_or_clone  go to state 1575


State 1495

  353 optional_capture_list: "capture" '(' capture_list ')' .

    $default  reduce using rule 353 (optional_capture_list)


State 1496

  348 capture_entry: "name" '(' "name" . ')'

    ')'  shift, and go to state 1576


State 1497

  350 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 350 (capture_list)


State 1498

  352 optional_capture_list: "[[" capture_list ']' ']' .

    $default  reduce using rule 352 (optional_capture_list)


State 1499

  339 block_or_simple_block: "=>" . expr
  340                      | "=>" . "<-" expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "<-"                              shift, and go to state 1577
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1578
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1500

  338 block_or_simple_block: expression_block .

    $default  reduce using rule 338 (block_or_simple_block)


State 1501

  356 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 356 (expr_full_block)


State 1502

  495 expr: expr "is" "type" '<' $@28 type_declaration_no_options . '>' $@29
  713 type_declaration_no_options: type_declaration_no_options . dim_list
  714                            | type_declaration_no_options . '[' ']'
  722                            | type_declaration_no_options . '-' '[' ']'
  723                            | type_declaration_no_options . "explicit"
  724                            | type_declaration_no_options . "const"
  725                            | type_declaration_no_options . '-' "const"
  726                            | type_declaration_no_options . '&'
  727                            | type_declaration_no_options . '-' '&'
  728                            | type_declaration_no_options . '#'
  729                            | type_declaration_no_options . "implicit"
  730                            | type_declaration_no_options . '-' '#'
  731                            | type_declaration_no_options . "==" "const"
  732                            | type_declaration_no_options . "==" '&'
  733                            | type_declaration_no_options . '?'
  737                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "??"        shift, and go to state 416
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '>'         shift, and go to state 1579
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    dim_list  go to state 422


State 1503

  535 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 535 (expr_mtag)


State 1504

  501 expr: expr "as" "type" '<' $@30 type_declaration . '>' $@31
  775 type_declaration: type_declaration . '|' type_declaration_no_options
  776                 | type_declaration . '|' '#'

    '|'  shift, and go to state 423
    '>'  shift, and go to state 1580


State 1505

  533 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 533 (expr_mtag)


State 1506

  409 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 409 (expr_method_call)


State 1507

  530 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 530 (expr_mtag)


State 1508

  506 expr: expr '?' "as" "type" '<' $@32 . type_declaration '>' $@33

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 362
    type_declaration             go to state 1581


State 1509

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr '?' "as" "$f" '(' expr . ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797
    ')'    shift, and go to state 1582


State 1510

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr '.' "?." "$f" '(' expr . ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797
    ')'    shift, and go to state 1583


State 1511

  529 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 529 (expr_mtag)


State 1512

  423 expr_field: expr '.' "name" '(' '[' make_struct_fields . ']' ')'
  799 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  800                   | make_struct_fields . ',' "name" ":=" expr
  803                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  804                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 965
    ']'  shift, and go to state 1584


State 1513

  422 expr_field: expr '.' "name" '(' expr_list ')' .

    $default  reduce using rule 422 (expr_field)


State 1514

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr '.' '.' "$f" '(' expr . ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797
    ')'    shift, and go to state 1585


State 1515

  425 expr_field: expr '.' basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 425 (expr_field)


State 1516

  544 optional_constant: "const" .

    $default  reduce using rule 544 (optional_constant)


State 1517

  555 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant . $@35 function_declaration_header "end of expression"

    $default  reduce using rule 554 ($@35)

    $@35  go to state 1586


State 1518

  557 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@36 function_declaration_header expression_block

    "const"  shift, and go to state 1516

    $default  reduce using rule 543 (optional_constant)

    optional_constant  go to state 1587


State 1519

  550 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 627
    "name"  shift, and go to state 628

    variable_declaration         go to state 1588
    variable_name_with_pos_list  go to state 630


State 1520

  721 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list . ')'

    ')'  shift, and go to state 1589


State 1521

  839 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1537

    $default  reduce using rule 829 (use_initializer)

    use_initializer  go to state 1590


State 1522

  842 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1537

    $default  reduce using rule 829 (use_initializer)

    use_initializer  go to state 1591


State 1523

  331 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr . ')'
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797
    ')'    shift, and go to state 1592


State 1524

  332 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" . '>' expr ')'

    '>'  shift, and go to state 1593


State 1525

  335 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' . '(' expr ')'

    '('  shift, and go to state 1594


State 1526

  334 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr . ')'
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797
    ')'    shift, and go to state 1595


State 1527

  865 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' $@99 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1596


State 1528

  868 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' $@101 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1597


State 1529

  871 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options '>' $@103 . '(' make_variant_dim ')'

    '('  shift, and go to state 1598


State 1530

  875 make_dim_decl: "array" '<' $@104 type_declaration_no_options '>' $@105 '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    $default  reduce using rule 251 (optional_expr_list)

    string_builder          go to state 511
    expr_reader             go to state 512
    optional_expr_list      go to state 1599
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 719
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 720
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1531

  887 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 887 (make_table_decl)


State 1532

  888 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    $default  reduce using rule 255 (optional_expr_map_tuple_list)

    string_builder                go to state 511
    expr_reader                   go to state 512
    optional_expr_map_tuple_list  go to state 1600
    expression_keyword            go to state 573
    name_in_namespace             go to state 528
    expr_new                      go to state 530
    expr_cast                     go to state 540
    expr_type_decl                go to state 541
    expr_type_info                go to state 542
    block_or_lambda               go to state 543
    expr_full_block               go to state 544
    expr_numeric_const            go to state 545
    expr_named_call               go to state 548
    expr_method_call              go to state 549
    func_addr_expr                go to state 550
    expr_field                    go to state 551
    expr_call                     go to state 552
    expr                          go to state 700
    expr_mtag                     go to state 554
    basic_type_declaration        go to state 555
    make_decl                     go to state 556
    make_struct_decl              go to state 557
    make_map_tuple                go to state 708
    make_tuple_call               go to state 558
    make_dim_decl                 go to state 559
    expr_map_tuple_list           go to state 896
    make_table_decl               go to state 560
    array_comprehension           go to state 561


State 1533

  320 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797

    $default  reduce using rule 320 (expr_cast)


State 1534

  323 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797

    $default  reduce using rule 323 (expr_cast)


State 1535

  326 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797

    $default  reduce using rule 326 (expr_cast)


State 1536

  879 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' $@107 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 1601
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 720
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1537

  830 use_initializer: "uninitialized" .

    $default  reduce using rule 830 (use_initializer)


State 1538

  848 make_struct_decl: "default" '<' $@94 type_declaration_no_options '>' $@95 use_initializer .

    $default  reduce using rule 848 (make_struct_decl)


State 1539

  857 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1537

    $default  reduce using rule 829 (use_initializer)

    use_initializer  go to state 1602


State 1540

  845 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 '(' . make_variant_dim ')'

    "$f"    shift, and go to state 721
    "name"  shift, and go to state 1234

    make_struct_fields  go to state 1603
    make_variant_dim    go to state 1604


State 1541

  489 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 489 (expr)


State 1542

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  490     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797
    ')'    shift, and go to state 1605


State 1543

  355 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 355 (expr_block)


State 1544

  528 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 528 (expr_mtag)


State 1545

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'
  895 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']' ']'

    "is"                 shift, and go to state 745
    "as"                 shift, and go to state 746
    "<<"                 shift, and go to state 755
    ">>"                 shift, and go to state 756
    "++"                 shift, and go to state 757
    "--"                 shift, and go to state 758
    "<="                 shift, and go to state 759
    ">="                 shift, and go to state 762
    "=="                 shift, and go to state 763
    "!="                 shift, and go to state 764
    "->"                 shift, and go to state 765
    "??"                 shift, and go to state 767
    "?."                 shift, and go to state 768
    "?["                 shift, and go to state 769
    "<|"                 shift, and go to state 770
    "|>"                 shift, and go to state 771
    "<<<"                shift, and go to state 773
    ">>>"                shift, and go to state 774
    "&&"                 shift, and go to state 777
    "||"                 shift, and go to state 778
    "^^"                 shift, and go to state 779
    ".."                 shift, and go to state 783
    "end of expression"  shift, and go to state 1606
    '?'                  shift, and go to state 785
    '|'                  shift, and go to state 786
    '^'                  shift, and go to state 787
    '&'                  shift, and go to state 788
    '<'                  shift, and go to state 789
    '>'                  shift, and go to state 790
    '-'                  shift, and go to state 791
    '+'                  shift, and go to state 792
    '*'                  shift, and go to state 793
    '/'                  shift, and go to state 794
    '%'                  shift, and go to state 795
    '.'                  shift, and go to state 796
    '['                  shift, and go to state 797

    $default  reduce using rule 889 (array_comprehension_where)

    array_comprehension_where  go to state 1607


State 1546

  834 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 834 (make_struct_decl)


State 1547

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'
  896 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where "end of code block" ']'

    "is"                 shift, and go to state 745
    "as"                 shift, and go to state 746
    "<<"                 shift, and go to state 755
    ">>"                 shift, and go to state 756
    "++"                 shift, and go to state 757
    "--"                 shift, and go to state 758
    "<="                 shift, and go to state 759
    ">="                 shift, and go to state 762
    "=="                 shift, and go to state 763
    "!="                 shift, and go to state 764
    "->"                 shift, and go to state 765
    "??"                 shift, and go to state 767
    "?."                 shift, and go to state 768
    "?["                 shift, and go to state 769
    "<|"                 shift, and go to state 770
    "|>"                 shift, and go to state 771
    "<<<"                shift, and go to state 773
    ">>>"                shift, and go to state 774
    "&&"                 shift, and go to state 777
    "||"                 shift, and go to state 778
    "^^"                 shift, and go to state 779
    ".."                 shift, and go to state 783
    "end of expression"  shift, and go to state 1606
    '?'                  shift, and go to state 785
    '|'                  shift, and go to state 786
    '^'                  shift, and go to state 787
    '&'                  shift, and go to state 788
    '<'                  shift, and go to state 789
    '>'                  shift, and go to state 790
    '-'                  shift, and go to state 791
    '+'                  shift, and go to state 792
    '*'                  shift, and go to state 793
    '/'                  shift, and go to state 794
    '%'                  shift, and go to state 795
    '.'                  shift, and go to state 796
    '['                  shift, and go to state 797

    $default  reduce using rule 889 (array_comprehension_where)

    array_comprehension_where  go to state 1608


State 1548

  836 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 836 (make_struct_decl)


State 1549

  898 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple . array_comprehension_where "end of code block" "end of code block"

    "end of expression"  shift, and go to state 1606

    $default  reduce using rule 889 (array_comprehension_where)

    array_comprehension_where  go to state 1609


State 1550

  261 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list '>' $@8 expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797

    $default  reduce using rule 261 (expression_keyword)


State 1551

  254 optional_expr_list_in_braces: '(' . optional_expr_list optional_comma ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    $default  reduce using rule 251 (optional_expr_list)

    string_builder          go to state 511
    expr_reader             go to state 512
    optional_expr_list      go to state 1610
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 719
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 720
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1552

  264 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces .

    $default  reduce using rule 264 (expression_keyword)


State 1553

  897 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple . array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1606

    $default  reduce using rule 889 (array_comprehension_where)

    array_comprehension_where  go to state 1611


State 1554

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'
  893 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 745
    "as"                 shift, and go to state 746
    "<<"                 shift, and go to state 755
    ">>"                 shift, and go to state 756
    "++"                 shift, and go to state 757
    "--"                 shift, and go to state 758
    "<="                 shift, and go to state 759
    ">="                 shift, and go to state 762
    "=="                 shift, and go to state 763
    "!="                 shift, and go to state 764
    "->"                 shift, and go to state 765
    "??"                 shift, and go to state 767
    "?."                 shift, and go to state 768
    "?["                 shift, and go to state 769
    "<|"                 shift, and go to state 770
    "|>"                 shift, and go to state 771
    "<<<"                shift, and go to state 773
    ">>>"                shift, and go to state 774
    "&&"                 shift, and go to state 777
    "||"                 shift, and go to state 778
    "^^"                 shift, and go to state 779
    ".."                 shift, and go to state 783
    "end of expression"  shift, and go to state 1606
    '?'                  shift, and go to state 785
    '|'                  shift, and go to state 786
    '^'                  shift, and go to state 787
    '&'                  shift, and go to state 788
    '<'                  shift, and go to state 789
    '>'                  shift, and go to state 790
    '-'                  shift, and go to state 791
    '+'                  shift, and go to state 792
    '*'                  shift, and go to state 793
    '/'                  shift, and go to state 794
    '%'                  shift, and go to state 795
    '.'                  shift, and go to state 796
    '['                  shift, and go to state 797

    $default  reduce using rule 889 (array_comprehension_where)

    array_comprehension_where  go to state 1612


State 1555

  894 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1613
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1556

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'
  802 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797

    $default  reduce using rule 802 (make_struct_fields)


State 1557

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'
  801 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797

    $default  reduce using rule 801 (make_struct_fields)


State 1558

  803 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  804                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 852
    ":="  shift, and go to state 1614
    '='   shift, and go to state 854

    copy_or_move  go to state 1615


State 1559

  415 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options '>' $@23 . func_addr_name

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 967
    "name"  shift, and go to state 59

    name_in_namespace  go to state 970
    func_addr_name     go to state 1616


State 1560

  418 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type '>' . $@25 func_addr_name

    $default  reduce using rule 417 ($@25)

    $@25  go to state 1617


State 1561

   62 expression_else: elif_or_static_elif expr expression_block expression_else .

    $default  reduce using rule 62 (expression_else)


State 1562

  287 expression_return_no_pipe: "return" .
  288                          | "return" . expr_list
  289                          | "return" . "<-" expr_list

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "<-"                              shift, and go to state 1618
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    $default  reduce using rule 287 (expression_return_no_pipe)

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 650
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 720
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1563

  293 expression_yield_no_pipe: "yield" . expr
  294                         | "yield" . "<-" expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "<-"                              shift, and go to state 1619
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1620
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1564

   67 expression_else_one_liner: "else" $@2 expression_if_one_liner .

    $default  reduce using rule 67 (expression_else_one_liner)


State 1565

   71 expression_if_one_liner: expression_break .

    $default  reduce using rule 71 (expression_if_one_liner)


State 1566

   72 expression_if_one_liner: expression_continue .

    $default  reduce using rule 72 (expression_if_one_liner)


State 1567

   69 expression_if_one_liner: expression_return_no_pipe .

    $default  reduce using rule 69 (expression_if_one_liner)


State 1568

   70 expression_if_one_liner: expression_yield_no_pipe .

    $default  reduce using rule 70 (expression_if_one_liner)


State 1569

   68 expression_if_one_liner: expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797

    $default  reduce using rule 68 (expression_if_one_liner)


State 1570

  358 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . expression_block

    "begin of code block"  shift, and go to state 291

    expression_block  go to state 1621


State 1571

  407 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1622


State 1572

  308 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  309                                     | "[[" tuple_expansion ']' ']' ':' . type_declaration_no_options copy_or_move_or_clone expr_pipe

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 1623


State 1573

  312 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref . copy_or_move_or_clone expr "end of expression"
  313                                     | "[[" tuple_expansion ']' ']' optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 578
    ":="  shift, and go to state 579
    '='   shift, and go to state 580

    copy_or_move_or_clone  go to state 1624


State 1574

  310 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"
  311                                     | '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr_pipe
  713 type_declaration_no_options: type_declaration_no_options . dim_list
  714                            | type_declaration_no_options . '[' ']'
  722                            | type_declaration_no_options . '-' '[' ']'
  723                            | type_declaration_no_options . "explicit"
  724                            | type_declaration_no_options . "const"
  725                            | type_declaration_no_options . '-' "const"
  726                            | type_declaration_no_options . '&'
  727                            | type_declaration_no_options . '-' '&'
  728                            | type_declaration_no_options . '#'
  729                            | type_declaration_no_options . "implicit"
  730                            | type_declaration_no_options . '-' '#'
  731                            | type_declaration_no_options . "==" "const"
  732                            | type_declaration_no_options . "==" '&'
  733                            | type_declaration_no_options . '?'
  737                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "<-"        shift, and go to state 578
    "??"        shift, and go to state 416
    ":="        shift, and go to state 579
    '='         shift, and go to state 580
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    copy_or_move_or_clone  go to state 1625
    dim_list               go to state 422


State 1575

  314 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr "end of expression"
  315                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 476
    "@ <|"                            shift, and go to state 477
    "@@ <|"                           shift, and go to state 478
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 523
    expression_keyword      go to state 526
    expr_pipe               go to state 1626
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign             go to state 651
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1627
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1576

  348 capture_entry: "name" '(' "name" ')' .

    $default  reduce using rule 348 (capture_entry)


State 1577

  340 block_or_simple_block: "=>" "<-" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1628
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1578

  339 block_or_simple_block: "=>" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797

    ".."  error (nonassociative)

    $default  reduce using rule 339 (block_or_simple_block)


State 1579

  495 expr: expr "is" "type" '<' $@28 type_declaration_no_options '>' . $@29

    $default  reduce using rule 494 ($@29)

    $@29  go to state 1629


State 1580

  501 expr: expr "as" "type" '<' $@30 type_declaration '>' . $@31

    $default  reduce using rule 500 ($@31)

    $@31  go to state 1630


State 1581

  506 expr: expr '?' "as" "type" '<' $@32 type_declaration . '>' $@33
  775 type_declaration: type_declaration . '|' type_declaration_no_options
  776                 | type_declaration . '|' '#'

    '|'  shift, and go to state 423
    '>'  shift, and go to state 1631


State 1582

  534 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 534 (expr_mtag)


State 1583

  532 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 532 (expr_mtag)


State 1584

  423 expr_field: expr '.' "name" '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1632


State 1585

  531 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 531 (expr_mtag)


State 1586

  555 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 . function_declaration_header "end of expression"

    "operator"  shift, and go to state 186
    "bool"      shift, and go to state 187
    "string"    shift, and go to state 188
    "int"       shift, and go to state 189
    "int2"      shift, and go to state 190
    "int3"      shift, and go to state 191
    "int4"      shift, and go to state 192
    "uint"      shift, and go to state 193
    "uint2"     shift, and go to state 194
    "uint3"     shift, and go to state 195
    "uint4"     shift, and go to state 196
    "float"     shift, and go to state 197
    "float2"    shift, and go to state 198
    "float3"    shift, and go to state 199
    "float4"    shift, and go to state 200
    "range"     shift, and go to state 201
    "urange"    shift, and go to state 202
    "range64"   shift, and go to state 203
    "urange64"  shift, and go to state 204
    "int64"     shift, and go to state 205
    "uint64"    shift, and go to state 206
    "double"    shift, and go to state 207
    "int8"      shift, and go to state 208
    "uint8"     shift, and go to state 209
    "int16"     shift, and go to state 210
    "uint16"    shift, and go to state 211
    "++"        shift, and go to state 212
    "--"        shift, and go to state 213
    "name"      shift, and go to state 214

    function_name                go to state 215
    function_declaration_header  go to state 1633


State 1587

  557 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@36 function_declaration_header expression_block

    $default  reduce using rule 556 ($@36)

    $@36  go to state 1634


State 1588

  550 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 550 (structure_variable_declaration)


State 1589

  721 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')' .

    $default  reduce using rule 721 (type_declaration_no_options)


State 1590

  839 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 721
    "name"  shift, and go to state 1234
    '('     shift, and go to state 1635

    $default  reduce using rule 814 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1636
    make_struct_dim_list           go to state 1637
    make_struct_dim_decl           go to state 1638
    optional_make_struct_dim_decl  go to state 1639


State 1591

  842 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 721
    "name"  shift, and go to state 1234
    '('     shift, and go to state 1635

    $default  reduce using rule 814 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1636
    make_struct_dim_list           go to state 1637
    make_struct_dim_decl           go to state 1638
    optional_make_struct_dim_decl  go to state 1640


State 1592

  331 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')' .

    $default  reduce using rule 331 (expr_type_info)


State 1593

  332 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" '>' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1641
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1594

  335 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1642
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1595

  334 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')' .

    $default  reduce using rule 334 (expr_type_info)


State 1596

  865 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' $@99 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1537

    $default  reduce using rule 829 (use_initializer)

    use_initializer  go to state 1643


State 1597

  868 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' $@101 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1537

    $default  reduce using rule 829 (use_initializer)

    use_initializer  go to state 1644


State 1598

  871 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options '>' $@103 '(' . make_variant_dim ')'

    "$f"    shift, and go to state 721
    "name"  shift, and go to state 1234

    make_struct_fields  go to state 1603
    make_variant_dim    go to state 1645


State 1599

  875 make_dim_decl: "array" '<' $@104 type_declaration_no_options '>' $@105 '(' optional_expr_list . ')'

    ')'  shift, and go to state 1646


State 1600

  888 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1647


State 1601

  337 expr_list: expr_list . ',' expr
  879 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' $@107 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 959

    $default  reduce using rule 891 (optional_comma)

    optional_comma  go to state 1648


State 1602

  857 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 721
    "name"  shift, and go to state 1234
    '('     shift, and go to state 1635

    $default  reduce using rule 814 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1636
    make_struct_dim_list           go to state 1637
    make_struct_dim_decl           go to state 1638
    optional_make_struct_dim_decl  go to state 1649


State 1603

  799 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  800                   | make_struct_fields . ',' "name" ":=" expr
  803                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  804                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  805 make_variant_dim: make_struct_fields .

    ','  shift, and go to state 965

    $default  reduce using rule 805 (make_variant_dim)


State 1604

  845 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 '(' make_variant_dim . ')'

    ')'  shift, and go to state 1650


State 1605

  490 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 490 (expr)


State 1606

  890 array_comprehension_where: "end of expression" . "where" expr

    "where"  shift, and go to state 1651


State 1607

  895 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']' ']'

    ']'  shift, and go to state 1652


State 1608

  896 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . "end of code block" ']'

    "end of code block"  shift, and go to state 1653


State 1609

  898 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where . "end of code block" "end of code block"

    "end of code block"  shift, and go to state 1654


State 1610

  254 optional_expr_list_in_braces: '(' optional_expr_list . optional_comma ')'

    ','  shift, and go to state 1655

    $default  reduce using rule 891 (optional_comma)

    optional_comma  go to state 1656


State 1611

  897 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where . "end of code block"

    "end of code block"  shift, and go to state 1657


State 1612

  893 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1658


State 1613

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'
  894 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 745
    "as"                 shift, and go to state 746
    "<<"                 shift, and go to state 755
    ">>"                 shift, and go to state 756
    "++"                 shift, and go to state 757
    "--"                 shift, and go to state 758
    "<="                 shift, and go to state 759
    ">="                 shift, and go to state 762
    "=="                 shift, and go to state 763
    "!="                 shift, and go to state 764
    "->"                 shift, and go to state 765
    "??"                 shift, and go to state 767
    "?."                 shift, and go to state 768
    "?["                 shift, and go to state 769
    "<|"                 shift, and go to state 770
    "|>"                 shift, and go to state 771
    "<<<"                shift, and go to state 773
    ">>>"                shift, and go to state 774
    "&&"                 shift, and go to state 777
    "||"                 shift, and go to state 778
    "^^"                 shift, and go to state 779
    ".."                 shift, and go to state 783
    "end of expression"  shift, and go to state 1606
    '?'                  shift, and go to state 785
    '|'                  shift, and go to state 786
    '^'                  shift, and go to state 787
    '&'                  shift, and go to state 788
    '<'                  shift, and go to state 789
    '>'                  shift, and go to state 790
    '-'                  shift, and go to state 791
    '+'                  shift, and go to state 792
    '*'                  shift, and go to state 793
    '/'                  shift, and go to state 794
    '%'                  shift, and go to state 795
    '.'                  shift, and go to state 796
    '['                  shift, and go to state 797

    $default  reduce using rule 889 (array_comprehension_where)

    array_comprehension_where  go to state 1659


State 1614

  804 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1660
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1615

  803 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1661
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1616

  415 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options '>' $@23 func_addr_name .

    $default  reduce using rule 415 (func_addr_expr)


State 1617

  418 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type '>' $@25 . func_addr_name

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 967
    "name"  shift, and go to state 59

    name_in_namespace  go to state 970
    func_addr_name     go to state 1662


State 1618

  289 expression_return_no_pipe: "return" "<-" . expr_list

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 874
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 720
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1619

  294 expression_yield_no_pipe: "yield" "<-" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1663
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1620

  293 expression_yield_no_pipe: "yield" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797

    $default  reduce using rule 293 (expression_yield_no_pipe)


State 1621

  358 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block .

    $default  reduce using rule 358 (expr_full_block_assumed_piped)


State 1622

  407 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 407 (expr_named_call)


State 1623

  308 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"
  309                                     | "[[" tuple_expansion ']' ']' ':' type_declaration_no_options . copy_or_move_or_clone expr_pipe
  713 type_declaration_no_options: type_declaration_no_options . dim_list
  714                            | type_declaration_no_options . '[' ']'
  722                            | type_declaration_no_options . '-' '[' ']'
  723                            | type_declaration_no_options . "explicit"
  724                            | type_declaration_no_options . "const"
  725                            | type_declaration_no_options . '-' "const"
  726                            | type_declaration_no_options . '&'
  727                            | type_declaration_no_options . '-' '&'
  728                            | type_declaration_no_options . '#'
  729                            | type_declaration_no_options . "implicit"
  730                            | type_declaration_no_options . '-' '#'
  731                            | type_declaration_no_options . "==" "const"
  732                            | type_declaration_no_options . "==" '&'
  733                            | type_declaration_no_options . '?'
  737                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "<-"        shift, and go to state 578
    "??"        shift, and go to state 416
    ":="        shift, and go to state 579
    '='         shift, and go to state 580
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    copy_or_move_or_clone  go to state 1664
    dim_list               go to state 422


State 1624

  312 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone . expr "end of expression"
  313                                     | "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 476
    "@ <|"                            shift, and go to state 477
    "@@ <|"                           shift, and go to state 478
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 523
    expression_keyword      go to state 526
    expr_pipe               go to state 1665
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign             go to state 651
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1666
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1625

  310 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"
  311                                     | '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 476
    "@ <|"                            shift, and go to state 477
    "@@ <|"                           shift, and go to state 478
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 523
    expression_keyword      go to state 526
    expr_pipe               go to state 1667
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign             go to state 651
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1668
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1626

  315 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 315 (tuple_expansion_variable_declaration)


State 1627

  223 expr_call_pipe: expr . expr_full_block_assumed_piped
  314 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr . "end of expression"
  366 expr_assign: expr .
  367            | expr . '=' expr
  368            | expr . "<-" expr
  369            | expr . ":=" expr
  370            | expr . "&=" expr
  371            | expr . "|=" expr
  372            | expr . "^=" expr
  373            | expr . "&&=" expr
  374            | expr . "||=" expr
  375            | expr . "^^=" expr
  376            | expr . "+=" expr
  377            | expr . "-=" expr
  378            | expr . "*=" expr
  379            | expr . "/=" expr
  380            | expr . "%=" expr
  381            | expr . "<<=" expr
  382            | expr . ">>=" expr
  383            | expr . "<<<=" expr
  384            | expr . ">>>=" expr
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 745
    "as"                 shift, and go to state 746
    "+="                 shift, and go to state 876
    "-="                 shift, and go to state 877
    "/="                 shift, and go to state 878
    "*="                 shift, and go to state 879
    "%="                 shift, and go to state 880
    "&="                 shift, and go to state 881
    "|="                 shift, and go to state 882
    "^="                 shift, and go to state 883
    "<<"                 shift, and go to state 755
    ">>"                 shift, and go to state 756
    "++"                 shift, and go to state 757
    "--"                 shift, and go to state 758
    "<="                 shift, and go to state 759
    "<<="                shift, and go to state 884
    ">>="                shift, and go to state 885
    ">="                 shift, and go to state 762
    "=="                 shift, and go to state 763
    "!="                 shift, and go to state 764
    "->"                 shift, and go to state 765
    "<-"                 shift, and go to state 886
    "??"                 shift, and go to state 767
    "?."                 shift, and go to state 768
    "?["                 shift, and go to state 769
    "<|"                 shift, and go to state 770
    "|>"                 shift, and go to state 771
    ":="                 shift, and go to state 772
    "<<<"                shift, and go to state 773
    ">>>"                shift, and go to state 774
    "<<<="               shift, and go to state 887
    ">>>="               shift, and go to state 888
    "&&"                 shift, and go to state 777
    "||"                 shift, and go to state 778
    "^^"                 shift, and go to state 779
    "&&="                shift, and go to state 889
    "||="                shift, and go to state 890
    "^^="                shift, and go to state 891
    ".."                 shift, and go to state 783
    "end of expression"  shift, and go to state 1669
    '='                  shift, and go to state 892
    '?'                  shift, and go to state 785
    '|'                  shift, and go to state 786
    '^'                  shift, and go to state 787
    '&'                  shift, and go to state 788
    '<'                  shift, and go to state 789
    '>'                  shift, and go to state 790
    '-'                  shift, and go to state 791
    '+'                  shift, and go to state 792
    '*'                  shift, and go to state 793
    '/'                  shift, and go to state 794
    '%'                  shift, and go to state 795
    '.'                  shift, and go to state 796
    '['                  shift, and go to state 797
    '$'                  shift, and go to state 509
    '@'                  shift, and go to state 683

    $default  reduce using rule 366 (expr_assign)

    block_or_lambda                go to state 731
    expr_full_block_assumed_piped  go to state 798


State 1628

  340 block_or_simple_block: "=>" "<-" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797

    $default  reduce using rule 340 (block_or_simple_block)


State 1629

  495 expr: expr "is" "type" '<' $@28 type_declaration_no_options '>' $@29 .

    $default  reduce using rule 495 (expr)


State 1630

  501 expr: expr "as" "type" '<' $@30 type_declaration '>' $@31 .

    $default  reduce using rule 501 (expr)


State 1631

  506 expr: expr '?' "as" "type" '<' $@32 type_declaration '>' . $@33

    $default  reduce using rule 505 ($@33)

    $@33  go to state 1670


State 1632

  423 expr_field: expr '.' "name" '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 423 (expr_field)


State 1633

  555 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header . "end of expression"

    "end of expression"  shift, and go to state 1671


State 1634

  557 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 . function_declaration_header expression_block

    "operator"  shift, and go to state 186
    "bool"      shift, and go to state 187
    "string"    shift, and go to state 188
    "int"       shift, and go to state 189
    "int2"      shift, and go to state 190
    "int3"      shift, and go to state 191
    "int4"      shift, and go to state 192
    "uint"      shift, and go to state 193
    "uint2"     shift, and go to state 194
    "uint3"     shift, and go to state 195
    "uint4"     shift, and go to state 196
    "float"     shift, and go to state 197
    "float2"    shift, and go to state 198
    "float3"    shift, and go to state 199
    "float4"    shift, and go to state 200
    "range"     shift, and go to state 201
    "urange"    shift, and go to state 202
    "range64"   shift, and go to state 203
    "urange64"  shift, and go to state 204
    "int64"     shift, and go to state 205
    "uint64"    shift, and go to state 206
    "double"    shift, and go to state 207
    "int8"      shift, and go to state 208
    "uint8"     shift, and go to state 209
    "int16"     shift, and go to state 210
    "uint16"    shift, and go to state 211
    "++"        shift, and go to state 212
    "--"        shift, and go to state 213
    "name"      shift, and go to state 214

    function_name                go to state 215
    function_declaration_header  go to state 1672


State 1635

  809 make_struct_dim_list: '(' . make_struct_fields ')'

    "$f"    shift, and go to state 721
    "name"  shift, and go to state 1234

    make_struct_fields  go to state 1673


State 1636

  799 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  800                   | make_struct_fields . ',' "name" ":=" expr
  803                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  804                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  811 make_struct_dim_decl: make_struct_fields .

    ','  shift, and go to state 965

    $default  reduce using rule 811 (make_struct_dim_decl)


State 1637

  810 make_struct_dim_list: make_struct_dim_list . ',' '(' make_struct_fields ')'
  812 make_struct_dim_decl: make_struct_dim_list . optional_comma

    ','  shift, and go to state 1674

    $default  reduce using rule 891 (optional_comma)

    optional_comma  go to state 1675


State 1638

  813 optional_make_struct_dim_decl: make_struct_dim_decl .

    $default  reduce using rule 813 (optional_make_struct_dim_decl)


State 1639

  839 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1676


State 1640

  842 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1677


State 1641

  332 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" '>' expr . ')'
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797
    ')'    shift, and go to state 1678


State 1642

  335 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr . ')'
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797
    ')'    shift, and go to state 1679


State 1643

  865 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' $@99 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 721
    "name"  shift, and go to state 1234
    '('     shift, and go to state 1635

    $default  reduce using rule 814 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1636
    make_struct_dim_list           go to state 1637
    make_struct_dim_decl           go to state 1638
    optional_make_struct_dim_decl  go to state 1680


State 1644

  868 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 721
    "name"  shift, and go to state 1234
    '('     shift, and go to state 1635

    $default  reduce using rule 814 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1636
    make_struct_dim_list           go to state 1637
    make_struct_dim_decl           go to state 1638
    optional_make_struct_dim_decl  go to state 1681


State 1645

  871 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options '>' $@103 '(' make_variant_dim . ')'

    ')'  shift, and go to state 1682


State 1646

  875 make_dim_decl: "array" '<' $@104 type_declaration_no_options '>' $@105 '(' optional_expr_list ')' .

    $default  reduce using rule 875 (make_dim_decl)


State 1647

  888 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 888 (make_table_decl)


State 1648

  879 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' $@107 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1683


State 1649

  857 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1684


State 1650

  845 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 '(' make_variant_dim ')' .

    $default  reduce using rule 845 (make_struct_decl)


State 1651

  890 array_comprehension_where: "end of expression" "where" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1685
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1652

  895 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' . ']'

    ']'  shift, and go to state 1686


State 1653

  896 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" . ']'

    ']'  shift, and go to state 1687


State 1654

  898 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" . "end of code block"

    "end of code block"  shift, and go to state 1688


State 1655

  892 optional_comma: ',' .

    $default  reduce using rule 892 (optional_comma)


State 1656

  254 optional_expr_list_in_braces: '(' optional_expr_list optional_comma . ')'

    ')'  shift, and go to state 1689


State 1657

  897 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" .

    $default  reduce using rule 897 (array_comprehension)


State 1658

  893 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 893 (array_comprehension)


State 1659

  894 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1690


State 1660

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'
  804 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797

    $default  reduce using rule 804 (make_struct_fields)


State 1661

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'
  803 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797

    $default  reduce using rule 803 (make_struct_fields)


State 1662

  418 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name .

    $default  reduce using rule 418 (func_addr_expr)


State 1663

  294 expression_yield_no_pipe: "yield" "<-" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797

    $default  reduce using rule 294 (expression_yield_no_pipe)


State 1664

  308 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"
  309                                     | "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 476
    "@ <|"                            shift, and go to state 477
    "@@ <|"                           shift, and go to state 478
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 523
    expression_keyword      go to state 526
    expr_pipe               go to state 1691
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign             go to state 651
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1692
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1665

  313 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 313 (tuple_expansion_variable_declaration)


State 1666

  223 expr_call_pipe: expr . expr_full_block_assumed_piped
  312 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr . "end of expression"
  366 expr_assign: expr .
  367            | expr . '=' expr
  368            | expr . "<-" expr
  369            | expr . ":=" expr
  370            | expr . "&=" expr
  371            | expr . "|=" expr
  372            | expr . "^=" expr
  373            | expr . "&&=" expr
  374            | expr . "||=" expr
  375            | expr . "^^=" expr
  376            | expr . "+=" expr
  377            | expr . "-=" expr
  378            | expr . "*=" expr
  379            | expr . "/=" expr
  380            | expr . "%=" expr
  381            | expr . "<<=" expr
  382            | expr . ">>=" expr
  383            | expr . "<<<=" expr
  384            | expr . ">>>=" expr
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 745
    "as"                 shift, and go to state 746
    "+="                 shift, and go to state 876
    "-="                 shift, and go to state 877
    "/="                 shift, and go to state 878
    "*="                 shift, and go to state 879
    "%="                 shift, and go to state 880
    "&="                 shift, and go to state 881
    "|="                 shift, and go to state 882
    "^="                 shift, and go to state 883
    "<<"                 shift, and go to state 755
    ">>"                 shift, and go to state 756
    "++"                 shift, and go to state 757
    "--"                 shift, and go to state 758
    "<="                 shift, and go to state 759
    "<<="                shift, and go to state 884
    ">>="                shift, and go to state 885
    ">="                 shift, and go to state 762
    "=="                 shift, and go to state 763
    "!="                 shift, and go to state 764
    "->"                 shift, and go to state 765
    "<-"                 shift, and go to state 886
    "??"                 shift, and go to state 767
    "?."                 shift, and go to state 768
    "?["                 shift, and go to state 769
    "<|"                 shift, and go to state 770
    "|>"                 shift, and go to state 771
    ":="                 shift, and go to state 772
    "<<<"                shift, and go to state 773
    ">>>"                shift, and go to state 774
    "<<<="               shift, and go to state 887
    ">>>="               shift, and go to state 888
    "&&"                 shift, and go to state 777
    "||"                 shift, and go to state 778
    "^^"                 shift, and go to state 779
    "&&="                shift, and go to state 889
    "||="                shift, and go to state 890
    "^^="                shift, and go to state 891
    ".."                 shift, and go to state 783
    "end of expression"  shift, and go to state 1693
    '='                  shift, and go to state 892
    '?'                  shift, and go to state 785
    '|'                  shift, and go to state 786
    '^'                  shift, and go to state 787
    '&'                  shift, and go to state 788
    '<'                  shift, and go to state 789
    '>'                  shift, and go to state 790
    '-'                  shift, and go to state 791
    '+'                  shift, and go to state 792
    '*'                  shift, and go to state 793
    '/'                  shift, and go to state 794
    '%'                  shift, and go to state 795
    '.'                  shift, and go to state 796
    '['                  shift, and go to state 797
    '$'                  shift, and go to state 509
    '@'                  shift, and go to state 683

    $default  reduce using rule 366 (expr_assign)

    block_or_lambda                go to state 731
    expr_full_block_assumed_piped  go to state 798


State 1667

  311 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 311 (tuple_expansion_variable_declaration)


State 1668

  223 expr_call_pipe: expr . expr_full_block_assumed_piped
  310 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"
  366 expr_assign: expr .
  367            | expr . '=' expr
  368            | expr . "<-" expr
  369            | expr . ":=" expr
  370            | expr . "&=" expr
  371            | expr . "|=" expr
  372            | expr . "^=" expr
  373            | expr . "&&=" expr
  374            | expr . "||=" expr
  375            | expr . "^^=" expr
  376            | expr . "+=" expr
  377            | expr . "-=" expr
  378            | expr . "*=" expr
  379            | expr . "/=" expr
  380            | expr . "%=" expr
  381            | expr . "<<=" expr
  382            | expr . ">>=" expr
  383            | expr . "<<<=" expr
  384            | expr . ">>>=" expr
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 745
    "as"                 shift, and go to state 746
    "+="                 shift, and go to state 876
    "-="                 shift, and go to state 877
    "/="                 shift, and go to state 878
    "*="                 shift, and go to state 879
    "%="                 shift, and go to state 880
    "&="                 shift, and go to state 881
    "|="                 shift, and go to state 882
    "^="                 shift, and go to state 883
    "<<"                 shift, and go to state 755
    ">>"                 shift, and go to state 756
    "++"                 shift, and go to state 757
    "--"                 shift, and go to state 758
    "<="                 shift, and go to state 759
    "<<="                shift, and go to state 884
    ">>="                shift, and go to state 885
    ">="                 shift, and go to state 762
    "=="                 shift, and go to state 763
    "!="                 shift, and go to state 764
    "->"                 shift, and go to state 765
    "<-"                 shift, and go to state 886
    "??"                 shift, and go to state 767
    "?."                 shift, and go to state 768
    "?["                 shift, and go to state 769
    "<|"                 shift, and go to state 770
    "|>"                 shift, and go to state 771
    ":="                 shift, and go to state 772
    "<<<"                shift, and go to state 773
    ">>>"                shift, and go to state 774
    "<<<="               shift, and go to state 887
    ">>>="               shift, and go to state 888
    "&&"                 shift, and go to state 777
    "||"                 shift, and go to state 778
    "^^"                 shift, and go to state 779
    "&&="                shift, and go to state 889
    "||="                shift, and go to state 890
    "^^="                shift, and go to state 891
    ".."                 shift, and go to state 783
    "end of expression"  shift, and go to state 1694
    '='                  shift, and go to state 892
    '?'                  shift, and go to state 785
    '|'                  shift, and go to state 786
    '^'                  shift, and go to state 787
    '&'                  shift, and go to state 788
    '<'                  shift, and go to state 789
    '>'                  shift, and go to state 790
    '-'                  shift, and go to state 791
    '+'                  shift, and go to state 792
    '*'                  shift, and go to state 793
    '/'                  shift, and go to state 794
    '%'                  shift, and go to state 795
    '.'                  shift, and go to state 796
    '['                  shift, and go to state 797
    '$'                  shift, and go to state 509
    '@'                  shift, and go to state 683

    $default  reduce using rule 366 (expr_assign)

    block_or_lambda                go to state 731
    expr_full_block_assumed_piped  go to state 798


State 1669

  314 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 314 (tuple_expansion_variable_declaration)


State 1670

  506 expr: expr '?' "as" "type" '<' $@32 type_declaration '>' $@33 .

    $default  reduce using rule 506 (expr)


State 1671

  555 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header "end of expression" .

    $default  reduce using rule 555 (struct_variable_declaration_list)


State 1672

  557 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header . expression_block

    "begin of code block"  shift, and go to state 291

    expression_block  go to state 1695


State 1673

  799 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  800                   | make_struct_fields . ',' "name" ":=" expr
  803                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  804                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  809 make_struct_dim_list: '(' make_struct_fields . ')'

    ','  shift, and go to state 965
    ')'  shift, and go to state 1696


State 1674

  810 make_struct_dim_list: make_struct_dim_list ',' . '(' make_struct_fields ')'
  892 optional_comma: ',' .

    '('  shift, and go to state 1697

    $default  reduce using rule 892 (optional_comma)


State 1675

  812 make_struct_dim_decl: make_struct_dim_list optional_comma .

    $default  reduce using rule 812 (make_struct_dim_decl)


State 1676

  839 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 839 (make_struct_decl)


State 1677

  842 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 842 (make_struct_decl)


State 1678

  332 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" '>' expr ')' .

    $default  reduce using rule 332 (expr_type_info)


State 1679

  335 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr ')' .

    $default  reduce using rule 335 (expr_type_info)


State 1680

  865 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' $@99 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1698


State 1681

  868 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1699


State 1682

  871 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options '>' $@103 '(' make_variant_dim ')' .

    $default  reduce using rule 871 (make_dim_decl)


State 1683

  879 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' $@107 '(' expr_list optional_comma ')' .

    $default  reduce using rule 879 (make_dim_decl)


State 1684

  857 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 857 (make_tuple_call)


State 1685

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'
  890 array_comprehension_where: "end of expression" "where" expr .

    "is"   shift, and go to state 745
    "as"   shift, and go to state 746
    "<<"   shift, and go to state 755
    ">>"   shift, and go to state 756
    "++"   shift, and go to state 757
    "--"   shift, and go to state 758
    "<="   shift, and go to state 759
    ">="   shift, and go to state 762
    "=="   shift, and go to state 763
    "!="   shift, and go to state 764
    "->"   shift, and go to state 765
    "??"   shift, and go to state 767
    "?."   shift, and go to state 768
    "?["   shift, and go to state 769
    "<|"   shift, and go to state 770
    "|>"   shift, and go to state 771
    "<<<"  shift, and go to state 773
    ">>>"  shift, and go to state 774
    "&&"   shift, and go to state 777
    "||"   shift, and go to state 778
    "^^"   shift, and go to state 779
    ".."   shift, and go to state 783
    '?'    shift, and go to state 785
    '|'    shift, and go to state 786
    '^'    shift, and go to state 787
    '&'    shift, and go to state 788
    '<'    shift, and go to state 789
    '>'    shift, and go to state 790
    '-'    shift, and go to state 791
    '+'    shift, and go to state 792
    '*'    shift, and go to state 793
    '/'    shift, and go to state 794
    '%'    shift, and go to state 795
    '.'    shift, and go to state 796
    '['    shift, and go to state 797

    $default  reduce using rule 890 (array_comprehension_where)


State 1686

  895 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']' .

    $default  reduce using rule 895 (array_comprehension)


State 1687

  896 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']' .

    $default  reduce using rule 896 (array_comprehension)


State 1688

  898 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block" .

    $default  reduce using rule 898 (array_comprehension)


State 1689

  254 optional_expr_list_in_braces: '(' optional_expr_list optional_comma ')' .

    $default  reduce using rule 254 (optional_expr_list_in_braces)


State 1690

  894 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 894 (array_comprehension)


State 1691

  309 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 309 (tuple_expansion_variable_declaration)


State 1692

  223 expr_call_pipe: expr . expr_full_block_assumed_piped
  308 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"
  366 expr_assign: expr .
  367            | expr . '=' expr
  368            | expr . "<-" expr
  369            | expr . ":=" expr
  370            | expr . "&=" expr
  371            | expr . "|=" expr
  372            | expr . "^=" expr
  373            | expr . "&&=" expr
  374            | expr . "||=" expr
  375            | expr . "^^=" expr
  376            | expr . "+=" expr
  377            | expr . "-=" expr
  378            | expr . "*=" expr
  379            | expr . "/=" expr
  380            | expr . "%=" expr
  381            | expr . "<<=" expr
  382            | expr . ">>=" expr
  383            | expr . "<<<=" expr
  384            | expr . ">>>=" expr
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  478     | expr . '[' expr ']'
  479     | expr . '.' '[' expr ']'
  480     | expr . "?[" expr ']'
  481     | expr . '.' "?[" expr ']'
  482     | expr . "?." "name"
  483     | expr . '.' "?." "name"
  491     | expr . "??" expr
  492     | expr . '?' expr ':' expr
  495     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  496     | expr . "is" basic_type_declaration
  497     | expr . "is" "name"
  498     | expr . "as" "name"
  501     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  502     | expr . "as" basic_type_declaration
  503     | expr . '?' "as" "name"
  506     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  507     | expr . '?' "as" basic_type_declaration
  515     | expr . "<|" expr
  516     | expr . "|>" expr
  517     | expr . "|>" basic_type_declaration
  529 expr_mtag: expr . '.' "$f" '(' expr ')'
  530          | expr . "?." "$f" '(' expr ')'
  531          | expr . '.' '.' "$f" '(' expr ')'
  532          | expr . '.' "?." "$f" '(' expr ')'
  533          | expr . "as" "$f" '(' expr ')'
  534          | expr . '?' "as" "$f" '(' expr ')'
  535          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 745
    "as"                 shift, and go to state 746
    "+="                 shift, and go to state 876
    "-="                 shift, and go to state 877
    "/="                 shift, and go to state 878
    "*="                 shift, and go to state 879
    "%="                 shift, and go to state 880
    "&="                 shift, and go to state 881
    "|="                 shift, and go to state 882
    "^="                 shift, and go to state 883
    "<<"                 shift, and go to state 755
    ">>"                 shift, and go to state 756
    "++"                 shift, and go to state 757
    "--"                 shift, and go to state 758
    "<="                 shift, and go to state 759
    "<<="                shift, and go to state 884
    ">>="                shift, and go to state 885
    ">="                 shift, and go to state 762
    "=="                 shift, and go to state 763
    "!="                 shift, and go to state 764
    "->"                 shift, and go to state 765
    "<-"                 shift, and go to state 886
    "??"                 shift, and go to state 767
    "?."                 shift, and go to state 768
    "?["                 shift, and go to state 769
    "<|"                 shift, and go to state 770
    "|>"                 shift, and go to state 771
    ":="                 shift, and go to state 772
    "<<<"                shift, and go to state 773
    ">>>"                shift, and go to state 774
    "<<<="               shift, and go to state 887
    ">>>="               shift, and go to state 888
    "&&"                 shift, and go to state 777
    "||"                 shift, and go to state 778
    "^^"                 shift, and go to state 779
    "&&="                shift, and go to state 889
    "||="                shift, and go to state 890
    "^^="                shift, and go to state 891
    ".."                 shift, and go to state 783
    "end of expression"  shift, and go to state 1700
    '='                  shift, and go to state 892
    '?'                  shift, and go to state 785
    '|'                  shift, and go to state 786
    '^'                  shift, and go to state 787
    '&'                  shift, and go to state 788
    '<'                  shift, and go to state 789
    '>'                  shift, and go to state 790
    '-'                  shift, and go to state 791
    '+'                  shift, and go to state 792
    '*'                  shift, and go to state 793
    '/'                  shift, and go to state 794
    '%'                  shift, and go to state 795
    '.'                  shift, and go to state 796
    '['                  shift, and go to state 797
    '$'                  shift, and go to state 509
    '@'                  shift, and go to state 683

    $default  reduce using rule 366 (expr_assign)

    block_or_lambda                go to state 731
    expr_full_block_assumed_piped  go to state 798


State 1693

  312 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 312 (tuple_expansion_variable_declaration)


State 1694

  310 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 310 (tuple_expansion_variable_declaration)


State 1695

  557 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block .

    $default  reduce using rule 557 (struct_variable_declaration_list)


State 1696

  809 make_struct_dim_list: '(' make_struct_fields ')' .

    $default  reduce using rule 809 (make_struct_dim_list)


State 1697

  810 make_struct_dim_list: make_struct_dim_list ',' '(' . make_struct_fields ')'

    "$f"    shift, and go to state 721
    "name"  shift, and go to state 1234

    make_struct_fields  go to state 1701


State 1698

  865 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 865 (make_dim_decl)


State 1699

  868 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 868 (make_dim_decl)


State 1700

  308 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 308 (tuple_expansion_variable_declaration)


State 1701

  799 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  800                   | make_struct_fields . ',' "name" ":=" expr
  803                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  804                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  810 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields . ')'

    ','  shift, and go to state 965
    ')'  shift, and go to state 1702


State 1702

  810 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields ')' .

    $default  reduce using rule 810 (make_struct_dim_list)
