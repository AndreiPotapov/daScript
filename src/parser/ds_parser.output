Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"


State 59 conflicts: 1 shift/reduce
State 320 conflicts: 1 shift/reduce
State 417 conflicts: 1 shift/reduce
State 521 conflicts: 2 shift/reduce
State 523 conflicts: 2 shift/reduce
State 632 conflicts: 1 shift/reduce
State 828 conflicts: 1 shift/reduce
State 1058 conflicts: 1 shift/reduce
State 1175 conflicts: 1 shift/reduce
State 1461 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration
    9        | program options_declaration
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program tuple_alias_declaration
   13        | program bitfield_alias_declaration
   14        | program top_level_reader_macro
   15        | program "end of expression"

   16 top_level_reader_macro: expr_reader "end of expression"

   17 optional_public_or_private_module: %empty
   18                                  | "public"
   19                                  | "private"

   20 module_name: '$'
   21            | "name"

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   23 character_sequence: STRING_CHARACTER
   24                   | STRING_CHARACTER_ESC
   25                   | character_sequence STRING_CHARACTER
   26                   | character_sequence STRING_CHARACTER_ESC

   27 string_constant: "start of the string" character_sequence "end of the string"

   28 string_builder_body: %empty
   29                    | string_builder_body character_sequence
   30                    | string_builder_body "{" expr "}"

   31 string_builder: "start of the string" string_builder_body "end of the string"

   32 reader_character_sequence: STRING_CHARACTER
   33                          | reader_character_sequence STRING_CHARACTER

   34 $@1: %empty

   35 expr_reader: '%' name_in_namespace $@1 reader_character_sequence

   36 options_declaration: "options" annotation_argument_list

   37 require_declaration: "require" require_module

   38 keyword_or_name: "name"
   39                | "keyword"
   40                | "type function"

   41 require_module_name: keyword_or_name
   42                    | '%' require_module_name
   43                    | require_module_name '.' keyword_or_name
   44                    | require_module_name '/' keyword_or_name

   45 require_module: require_module_name is_public_module
   46               | require_module_name "as" "name" is_public_module

   47 is_public_module: %empty
   48                 | "public"

   49 expect_declaration: "expect" expect_list

   50 expect_list: expect_error
   51            | expect_list ',' expect_error

   52 expect_error: "integer constant"
   53             | "integer constant" ':' "integer constant"

   54 expression_label: "label" "integer constant" ':'

   55 expression_goto: "goto" "label" "integer constant"
   56                | "goto" expr

   57 elif_or_static_elif: "elif"
   58                    | "static_elif"

   59 expression_else: %empty
   60                | "else" expression_block
   61                | elif_or_static_elif expr expression_block expression_else

   62 if_or_static_if: "if"
   63                | "static_if"

   64 expression_else_one_liner: %empty

   65 $@2: %empty

   66 expression_else_one_liner: "else" $@2 expression_if_one_liner

   67 expression_if_one_liner: expr
   68                        | expression_return_no_pipe
   69                        | expression_yield_no_pipe
   70                        | expression_break
   71                        | expression_continue

   72 expression_if_then_else: if_or_static_if expr expression_block expression_else

   73 $@3: %empty

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner "end of expression"

   75 $@4: %empty

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" expr_list expression_block

   77 expression_unsafe: "unsafe" expression_block

   78 expression_while_loop: "while" expr expression_block

   79 expression_with: "with" expr expression_block

   80 $@5: %empty

   81 expression_with_alias: "assume" "name" '=' $@5 expr

   82 annotation_argument_value: string_constant
   83                          | "name"
   84                          | "integer constant"
   85                          | "floating point constant"
   86                          | "true"
   87                          | "false"

   88 annotation_argument_value_list: annotation_argument_value
   89                               | annotation_argument_value_list ',' annotation_argument_value

   90 annotation_argument_name: "name"
   91                         | "type"
   92                         | "in"

   93 annotation_argument: annotation_argument_name '=' string_constant
   94                    | annotation_argument_name '=' "name"
   95                    | annotation_argument_name '=' "integer constant"
   96                    | annotation_argument_name '=' "floating point constant"
   97                    | annotation_argument_name '=' "true"
   98                    | annotation_argument_name '=' "false"
   99                    | annotation_argument_name
  100                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

  101 annotation_argument_list: annotation_argument
  102                         | annotation_argument_list ',' annotation_argument

  103 metadata_argument_list: '@' annotation_argument
  104                       | metadata_argument_list '@' annotation_argument
  105                       | metadata_argument_list "end of expression"

  106 annotation_declaration_name: name_in_namespace
  107                            | "require"
  108                            | "private"

  109 annotation_declaration_basic: annotation_declaration_name
  110                             | annotation_declaration_name '(' annotation_argument_list ')'

  111 annotation_declaration: annotation_declaration_basic
  112                       | '!' annotation_declaration
  113                       | annotation_declaration "&&" annotation_declaration
  114                       | annotation_declaration "||" annotation_declaration
  115                       | annotation_declaration "^^" annotation_declaration
  116                       | '(' annotation_declaration ')'
  117                       | "|>" annotation_declaration

  118 annotation_list: annotation_declaration
  119                | annotation_list ',' annotation_declaration

  120 optional_annotation_list: %empty
  121                         | '[' annotation_list ']'

  122 optional_function_argument_list: %empty
  123                                | '(' ')'
  124                                | '(' function_argument_list ')'

  125 optional_function_type: %empty
  126                       | ':' type_declaration

  127 function_name: "name"
  128              | "operator" '!'
  129              | "operator" '~'
  130              | "operator" "+="
  131              | "operator" "-="
  132              | "operator" "*="
  133              | "operator" "/="
  134              | "operator" "%="
  135              | "operator" "&="
  136              | "operator" "|="
  137              | "operator" "^="
  138              | "operator" "&&="
  139              | "operator" "||="
  140              | "operator" "^^="
  141              | "operator" "&&"
  142              | "operator" "||"
  143              | "operator" "^^"
  144              | "operator" '+'
  145              | "operator" '-'
  146              | "operator" '*'
  147              | "operator" '/'
  148              | "operator" '%'
  149              | "operator" '<'
  150              | "operator" '>'
  151              | "operator" ".."
  152              | "operator" "=="
  153              | "operator" "!="
  154              | "operator" "<="
  155              | "operator" ">="
  156              | "operator" '&'
  157              | "operator" '|'
  158              | "operator" '^'
  159              | "++" "operator"
  160              | "--" "operator"
  161              | "operator" "++"
  162              | "operator" "--"
  163              | "operator" "<<"
  164              | "operator" ">>"
  165              | "operator" "<<="
  166              | "operator" ">>="
  167              | "operator" "<<<"
  168              | "operator" ">>>"
  169              | "operator" "<<<="
  170              | "operator" ">>>="
  171              | "operator" '[' ']'
  172              | "operator" "?[" ']'
  173              | "operator" '.'
  174              | "operator" "?."
  175              | "operator" '.' "name"
  176              | "operator" '.' "name" ":="
  177              | "operator" "?." "name"
  178              | "operator" ":="
  179              | "operator" "delete"
  180              | "operator" "??"
  181              | "operator" "is"
  182              | "operator" "as"
  183              | "operator" "is" "name"
  184              | "operator" "as" "name"
  185              | "operator" '?' "as"
  186              | "operator" '?' "as" "name"
  187              | "bool"
  188              | "string"
  189              | "int"
  190              | "int2"
  191              | "int3"
  192              | "int4"
  193              | "uint"
  194              | "uint2"
  195              | "uint3"
  196              | "uint4"
  197              | "float"
  198              | "float2"
  199              | "float3"
  200              | "float4"
  201              | "range"
  202              | "urange"
  203              | "range64"
  204              | "urange64"
  205              | "int64"
  206              | "uint64"
  207              | "double"
  208              | "int8"
  209              | "uint8"
  210              | "int16"
  211              | "uint16"

  212 global_function_declaration: optional_annotation_list "def" function_declaration

  213 optional_public_or_private_function: %empty
  214                                    | "private"
  215                                    | "public"

  216 function_declaration_header: function_name optional_function_argument_list optional_function_type

  217 $@6: %empty

  218 function_declaration: optional_public_or_private_function $@6 function_declaration_header expression_block

  219 expression_block: "begin of code block" expressions "end of code block"
  220                 | "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions "end of code block"

  221 expr_call_pipe: expr expr_full_block_assumed_piped
  222               | expression_keyword expr_full_block_assumed_piped
  223               | "generator" '<' type_declaration_no_options '>' optional_capture_list expr_full_block_assumed_piped

  224 expression_any: "end of expression"
  225               | expr_pipe
  226               | expr_keyword
  227               | expr_assign_pipe
  228               | expr_assign "end of expression"
  229               | expression_delete "end of expression"
  230               | expression_let
  231               | expression_while_loop
  232               | expression_unsafe
  233               | expression_with
  234               | expression_with_alias
  235               | expression_for_loop
  236               | expression_break "end of expression"
  237               | expression_continue "end of expression"
  238               | expression_return
  239               | expression_yield
  240               | expression_if_then_else
  241               | expression_try_catch
  242               | expression_label "end of expression"
  243               | expression_goto "end of expression"
  244               | "pass" "end of expression"

  245 expressions: %empty
  246            | expressions expression_any
  247            | expressions error

  248 expr_keyword: "keyword" expr expression_block

  249 optional_expr_list: %empty
  250                   | expr_list optional_comma

  251 optional_expr_list_in_braces: %empty
  252                             | '(' optional_expr_list optional_comma ')'

  253 optional_expr_map_tuple_list: %empty
  254                             | expr_map_tuple_list optional_comma

  255 type_declaration_no_options_list: type_declaration
  256                                 | type_declaration_no_options_list c_or_s type_declaration

  257 $@7: %empty

  258 $@8: %empty

  259 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list '>' $@8 expr

  260 $@9: %empty

  261 $@10: %empty

  262 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces

  263 expr_pipe: expr_assign " <|" expr_block
  264          | "@ <|" expr_block
  265          | "@@ <|" expr_block
  266          | "$ <|" expr_block
  267          | expr_call_pipe

  268 name_in_namespace: "name"
  269                  | "name" "::" "name"
  270                  | "::" "name"

  271 expression_delete: "delete" expr
  272                  | "delete" "explicit" expr

  273 $@11: %empty

  274 $@12: %empty

  275 new_type_declaration: '<' $@11 type_declaration '>' $@12
  276                     | structure_type_declaration

  277 expr_new: "new" new_type_declaration
  278         | "new" new_type_declaration '(' use_initializer ')'
  279         | "new" new_type_declaration '(' expr_list ')'
  280         | "new" new_type_declaration '(' make_struct_single ')'
  281         | "new" new_type_declaration '(' "uninitialized" make_struct_single ')'
  282         | "new" make_decl

  283 expression_break: "break"

  284 expression_continue: "continue"

  285 expression_return_no_pipe: "return"
  286                          | "return" expr_list
  287                          | "return" "<-" expr_list

  288 expression_return: expression_return_no_pipe "end of expression"
  289                  | "return" expr_pipe
  290                  | "return" "<-" expr_pipe

  291 expression_yield_no_pipe: "yield" expr
  292                         | "yield" "<-" expr

  293 expression_yield: expression_yield_no_pipe "end of expression"
  294                 | "yield" expr_pipe
  295                 | "yield" "<-" expr_pipe

  296 expression_try_catch: "try" expression_block "recover" expression_block

  297 kwd_let_var_or_nothing: "let"
  298                       | "var"
  299                       | %empty

  300 kwd_let: "let"
  301        | "var"

  302 optional_in_scope: "inscope"
  303                  | %empty

  304 tuple_expansion: "name"
  305                | tuple_expansion ',' "name"

  306 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  307                                     | '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  308                                     | "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr "end of expression"
  309                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression"

  310 expression_let: kwd_let optional_in_scope let_variable_declaration
  311               | kwd_let optional_in_scope tuple_expansion_variable_declaration

  312 $@13: %empty

  313 $@14: %empty

  314 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 expr

  315 $@15: %empty

  316 $@16: %empty

  317 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 expr

  318 $@17: %empty

  319 $@18: %empty

  320 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 expr

  321 $@19: %empty

  322 $@20: %empty

  323 expr_type_decl: "type" '<' $@19 type_declaration '>' $@20

  324 expr_type_info: "typeinfo" '(' name_in_namespace expr ')'
  325               | "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')'
  326               | "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" '>' expr ')'
  327               | "typeinfo" name_in_namespace '(' expr ')'
  328               | "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')'
  329               | "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr ')'

  330 expr_list: expr
  331          | expr_list ',' expr

  332 block_or_simple_block: expression_block
  333                      | "=>" expr
  334                      | "=>" "<-" expr

  335 block_or_lambda: '$'
  336                | '@'
  337                | '@' '@'

  338 capture_entry: '&' "name"
  339              | '=' "name"
  340              | "<-" "name"
  341              | ":=" "name"
  342              | "name" '(' "name" ')'

  343 capture_list: capture_entry
  344             | capture_list ',' capture_entry

  345 optional_capture_list: %empty
  346                      | "[[" capture_list ']' ']'
  347                      | "capture" '(' capture_list ')'

  348 expr_block: expression_block
  349           | block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  350 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  351 $@21: %empty

  352 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

  353 expr_numeric_const: "integer constant"
  354                   | "unsigned integer constant"
  355                   | "long integer constant"
  356                   | "unsigned long integer constant"
  357                   | "unsigned int8 constant"
  358                   | "floating point constant"
  359                   | "double constant"

  360 expr_assign: expr
  361            | expr '=' expr
  362            | expr "<-" expr
  363            | expr ":=" expr
  364            | expr "&=" expr
  365            | expr "|=" expr
  366            | expr "^=" expr
  367            | expr "&&=" expr
  368            | expr "||=" expr
  369            | expr "^^=" expr
  370            | expr "+=" expr
  371            | expr "-=" expr
  372            | expr "*=" expr
  373            | expr "/=" expr
  374            | expr "%=" expr
  375            | expr "<<=" expr
  376            | expr ">>=" expr
  377            | expr "<<<=" expr
  378            | expr ">>>=" expr

  379 expr_assign_pipe_right: "@ <|" expr_block
  380                       | "@@ <|" expr_block
  381                       | "$ <|" expr_block
  382                       | expr_call_pipe

  383 expr_assign_pipe: expr '=' expr_assign_pipe_right
  384                 | expr "<-" expr_assign_pipe_right
  385                 | expr "&=" expr_assign_pipe_right
  386                 | expr "|=" expr_assign_pipe_right
  387                 | expr "^=" expr_assign_pipe_right
  388                 | expr "&&=" expr_assign_pipe_right
  389                 | expr "||=" expr_assign_pipe_right
  390                 | expr "^^=" expr_assign_pipe_right
  391                 | expr "+=" expr_assign_pipe_right
  392                 | expr "-=" expr_assign_pipe_right
  393                 | expr "*=" expr_assign_pipe_right
  394                 | expr "/=" expr_assign_pipe_right
  395                 | expr "%=" expr_assign_pipe_right
  396                 | expr "<<=" expr_assign_pipe_right
  397                 | expr ">>=" expr_assign_pipe_right
  398                 | expr "<<<=" expr_assign_pipe_right
  399                 | expr ">>>=" expr_assign_pipe_right

  400 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  401                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  402 expr_method_call: expr "->" "name" '(' ')'
  403                 | expr "->" "name" '(' expr_list ')'

  404 func_addr_name: name_in_namespace
  405               | "$i" '(' expr ')'

  406 func_addr_expr: '@' '@' func_addr_name

  407 $@22: %empty

  408 $@23: %empty

  409 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options '>' $@23 func_addr_name

  410 $@24: %empty

  411 $@25: %empty

  412 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name

  413 expr_field: expr '.' "name"
  414           | expr '.' '.' "name"
  415           | expr '.' "name" '(' ')'
  416           | expr '.' "name" '(' expr_list ')'

  417 $@26: %empty

  418 $@27: %empty

  419 expr_field: expr '.' $@26 error $@27

  420 expr_call: name_in_namespace '(' ')'
  421          | name_in_namespace '(' "uninitialized" ')'
  422          | name_in_namespace '(' make_struct_single ')'
  423          | name_in_namespace '(' "uninitialized" make_struct_single ')'
  424          | name_in_namespace '(' expr_list ')'
  425          | basic_type_declaration '(' ')'
  426          | basic_type_declaration '(' expr_list ')'

  427 expr: "null"
  428     | name_in_namespace
  429     | expr_numeric_const
  430     | expr_reader
  431     | string_builder
  432     | make_decl
  433     | "true"
  434     | "false"
  435     | expr_field
  436     | expr_mtag
  437     | '!' expr
  438     | '~' expr
  439     | '+' expr
  440     | '-' expr
  441     | expr "<<" expr
  442     | expr ">>" expr
  443     | expr "<<<" expr
  444     | expr ">>>" expr
  445     | expr '+' expr
  446     | expr '-' expr
  447     | expr '*' expr
  448     | expr '/' expr
  449     | expr '%' expr
  450     | expr '<' expr
  451     | expr '>' expr
  452     | expr "==" expr
  453     | expr "!=" expr
  454     | expr "<=" expr
  455     | expr ">=" expr
  456     | expr '&' expr
  457     | expr '|' expr
  458     | expr '^' expr
  459     | expr "&&" expr
  460     | expr "||" expr
  461     | expr "^^" expr
  462     | expr ".." expr
  463     | "++" expr
  464     | "--" expr
  465     | expr "++"
  466     | expr "--"
  467     | '(' expr_list optional_comma ')'
  468     | expr '[' expr ']'
  469     | expr '.' '[' expr ']'
  470     | expr "?[" expr ']'
  471     | expr '.' "?[" expr ']'
  472     | expr "?." "name"
  473     | expr '.' "?." "name"
  474     | func_addr_expr
  475     | expr_call
  476     | '*' expr
  477     | "deref" '(' expr ')'
  478     | "addr" '(' expr ')'
  479     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  480     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  481     | expr "??" expr
  482     | expr '?' expr ':' expr

  483 $@28: %empty

  484 $@29: %empty

  485 expr: expr "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr "is" basic_type_declaration
  487     | expr "is" "name"
  488     | expr "as" "name"

  489 $@30: %empty

  490 $@31: %empty

  491 expr: expr "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr "as" basic_type_declaration
  493     | expr '?' "as" "name"

  494 $@32: %empty

  495 $@33: %empty

  496 expr: expr '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr '?' "as" basic_type_declaration
  498     | expr_type_info
  499     | expr_type_decl
  500     | expr_cast
  501     | expr_new
  502     | expr_method_call
  503     | expr_named_call
  504     | expr_full_block
  505     | expr "<|" expr
  506     | expr "|>" expr
  507     | expr "|>" basic_type_declaration
  508     | name_in_namespace "name"
  509     | "unsafe" '(' expr ')'
  510     | expression_keyword

  511 expr_mtag: "$$" '(' expr ')'
  512          | "$i" '(' expr ')'
  513          | "$v" '(' expr ')'
  514          | "$b" '(' expr ')'
  515          | "$a" '(' expr ')'
  516          | "..."
  517          | "$c" '(' expr ')' '(' ')'
  518          | "$c" '(' expr ')' '(' expr_list ')'
  519          | expr '.' "$f" '(' expr ')'
  520          | expr "?." "$f" '(' expr ')'
  521          | expr '.' '.' "$f" '(' expr ')'
  522          | expr '.' "?." "$f" '(' expr ')'
  523          | expr "as" "$f" '(' expr ')'
  524          | expr '?' "as" "$f" '(' expr ')'
  525          | expr "is" "$f" '(' expr ')'
  526          | '@' '@' "$c" '(' expr ')'

  527 optional_field_annotation: %empty
  528                          | "[[" annotation_argument_list ']' ']'
  529                          | metadata_argument_list

  530 optional_override: %empty
  531                  | "override"
  532                  | "sealed"

  533 optional_constant: %empty
  534                  | "const"

  535 optional_public_or_private_member_variable: %empty
  536                                           | "public"
  537                                           | "private"

  538 optional_static_member_variable: %empty
  539                                | "static"

  540 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  541 struct_variable_declaration_list: %empty

  542 $@34: %empty

  543 struct_variable_declaration_list: struct_variable_declaration_list $@34 structure_variable_declaration "end of expression"

  544 $@35: %empty

  545 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header "end of expression"

  546 $@36: %empty

  547 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block
  548                                 | struct_variable_declaration_list '[' annotation_list ']' "end of expression"

  549 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration
  550                              | "$a" '(' expr ')'

  551 function_argument_list: function_argument_declaration
  552                       | function_argument_list "end of expression" function_argument_declaration

  553 tuple_type: type_declaration
  554           | "name" ':' type_declaration

  555 tuple_type_list: tuple_type
  556                | tuple_type_list c_or_s tuple_type

  557 tuple_alias_type_list: %empty
  558                      | tuple_alias_type_list c_or_s
  559                      | tuple_alias_type_list tuple_type c_or_s

  560 variant_type: "name" ':' type_declaration

  561 variant_type_list: variant_type
  562                  | variant_type_list c_or_s variant_type

  563 variant_alias_type_list: %empty
  564                        | variant_alias_type_list c_or_s
  565                        | variant_alias_type_list variant_type c_or_s

  566 copy_or_move: '='
  567             | "<-"

  568 variable_declaration: variable_name_with_pos_list
  569                     | variable_name_with_pos_list '&'
  570                     | variable_name_with_pos_list ':' type_declaration
  571                     | variable_name_with_pos_list ':' type_declaration copy_or_move expr
  572                     | variable_name_with_pos_list copy_or_move expr
  573                     | variable_name_with_pos_list copy_or_move expr_pipe

  574 copy_or_move_or_clone: '='
  575                      | "<-"
  576                      | ":="

  577 optional_ref: %empty
  578             | '&'

  579 let_variable_name_with_pos_list: "name"
  580                                | "$i" '(' expr ')'
  581                                | "name" "aka" "name"
  582                                | let_variable_name_with_pos_list ',' "name"
  583                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  584 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression"
  585                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  586                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  587                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression"
  588                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe

  589 global_variable_declaration_list: %empty

  590 $@37: %empty

  591 global_variable_declaration_list: global_variable_declaration_list $@37 optional_field_annotation let_variable_declaration

  592 optional_shared: %empty
  593                | "shared"

  594 optional_public_or_private_variable: %empty
  595                                    | "private"
  596                                    | "public"

  597 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"

  598 $@38: %empty

  599 global_let: kwd_let optional_shared optional_public_or_private_variable $@38 optional_field_annotation let_variable_declaration

  600 enum_list: %empty
  601          | enum_list "end of expression"
  602          | enum_list "name" "end of expression"
  603          | enum_list "name" '=' expr "end of expression"

  604 optional_public_or_private_alias: %empty
  605                                 | "private"
  606                                 | "public"

  607 $@39: %empty

  608 single_alias: optional_public_or_private_alias "name" $@39 '=' type_declaration

  609 alias_list: single_alias "end of expression"
  610           | alias_list single_alias "end of expression"

  611 alias_declaration: "typedef" "begin of code block" alias_list "end of code block"

  612 $@40: %empty

  613 alias_declaration: "typedef" $@40 single_alias "end of expression"

  614 optional_public_or_private_enum: %empty
  615                                | "private"
  616                                | "public"

  617 enum_name: "name"

  618 $@41: %empty

  619 $@42: %empty

  620 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list $@42 "end of code block"

  621 $@43: %empty

  622 $@44: %empty

  623 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"

  624 optional_structure_parent: %empty
  625                          | ':' name_in_namespace

  626 optional_sealed: %empty
  627                | "sealed"

  628 structure_name: optional_sealed "name" optional_structure_parent

  629 class_or_struct: "class"
  630                | "struct"

  631 optional_public_or_private_structure: %empty
  632                                     | "private"
  633                                     | "public"

  634 optional_struct_variable_declaration_list: %empty
  635                                          | "begin of code block" struct_variable_declaration_list "end of code block"

  636 $@45: %empty

  637 $@46: %empty

  638 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 structure_name $@46 optional_struct_variable_declaration_list

  639 variable_name_with_pos_list: "name"
  640                            | "$i" '(' expr ')'
  641                            | "name" "aka" "name"
  642                            | variable_name_with_pos_list ',' "name"
  643                            | variable_name_with_pos_list ',' "name" "aka" "name"

  644 basic_type_declaration: "bool"
  645                       | "string"
  646                       | "int"
  647                       | "int8"
  648                       | "int16"
  649                       | "int64"
  650                       | "int2"
  651                       | "int3"
  652                       | "int4"
  653                       | "uint"
  654                       | "uint8"
  655                       | "uint16"
  656                       | "uint64"
  657                       | "uint2"
  658                       | "uint3"
  659                       | "uint4"
  660                       | "float"
  661                       | "float2"
  662                       | "float3"
  663                       | "float4"
  664                       | "void"
  665                       | "range"
  666                       | "urange"
  667                       | "range64"
  668                       | "urange64"
  669                       | "double"
  670                       | "bitfield"

  671 enum_basic_type_declaration: "int"
  672                            | "int8"
  673                            | "int16"
  674                            | "uint"
  675                            | "uint8"
  676                            | "uint16"
  677                            | "int64"
  678                            | "uint64"

  679 structure_type_declaration: name_in_namespace

  680 auto_type_declaration: "auto"
  681                      | "auto" '(' "name" ')'
  682                      | "$t" '(' expr ')'

  683 bitfield_bits: "name"
  684              | bitfield_bits "end of expression" "name"

  685 bitfield_alias_bits: %empty
  686                    | bitfield_alias_bits "end of expression"
  687                    | bitfield_alias_bits "name" "end of expression"

  688 $@47: %empty

  689 $@48: %empty

  690 bitfield_type_declaration: "bitfield" '<' $@47 bitfield_bits '>' $@48

  691 c_or_s: ','
  692       | "end of expression"

  693 table_type_pair: type_declaration
  694                | type_declaration c_or_s type_declaration

  695 dim_list: '[' expr ']'
  696         | dim_list '[' expr ']'

  697 type_declaration_no_options: basic_type_declaration
  698                            | auto_type_declaration
  699                            | bitfield_type_declaration
  700                            | structure_type_declaration
  701                            | type_declaration_no_options dim_list
  702                            | type_declaration_no_options '[' ']'

  703 $@49: %empty

  704 $@50: %empty

  705 type_declaration_no_options: "type" '<' $@49 type_declaration '>' $@50
  706                            | "typedecl" '(' expr ')'
  707                            | '$' name_in_namespace '(' optional_expr_list ')'

  708 $@51: %empty

  709 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')'
  710                            | type_declaration_no_options '-' '[' ']'
  711                            | type_declaration_no_options "explicit"
  712                            | type_declaration_no_options "const"
  713                            | type_declaration_no_options '-' "const"
  714                            | type_declaration_no_options '&'
  715                            | type_declaration_no_options '-' '&'
  716                            | type_declaration_no_options '#'
  717                            | type_declaration_no_options "implicit"
  718                            | type_declaration_no_options '-' '#'
  719                            | type_declaration_no_options "==" "const"
  720                            | type_declaration_no_options "==" '&'
  721                            | type_declaration_no_options '?'

  722 $@52: %empty

  723 $@53: %empty

  724 type_declaration_no_options: "smart_ptr" '<' $@52 type_declaration '>' $@53
  725                            | type_declaration_no_options "??"

  726 $@54: %empty

  727 $@55: %empty

  728 type_declaration_no_options: "array" '<' $@54 type_declaration '>' $@55

  729 $@56: %empty

  730 $@57: %empty

  731 type_declaration_no_options: "table" '<' $@56 table_type_pair '>' $@57

  732 $@58: %empty

  733 $@59: %empty

  734 type_declaration_no_options: "iterator" '<' $@58 type_declaration '>' $@59
  735                            | "block"

  736 $@60: %empty

  737 $@61: %empty

  738 type_declaration_no_options: "block" '<' $@60 type_declaration '>' $@61

  739 $@62: %empty

  740 $@63: %empty

  741 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list optional_function_type '>' $@63
  742                            | "function"

  743 $@64: %empty

  744 $@65: %empty

  745 type_declaration_no_options: "function" '<' $@64 type_declaration '>' $@65

  746 $@66: %empty

  747 $@67: %empty

  748 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list optional_function_type '>' $@67
  749                            | "lambda"

  750 $@68: %empty

  751 $@69: %empty

  752 type_declaration_no_options: "lambda" '<' $@68 type_declaration '>' $@69

  753 $@70: %empty

  754 $@71: %empty

  755 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list optional_function_type '>' $@71

  756 $@72: %empty

  757 $@73: %empty

  758 type_declaration_no_options: "tuple" '<' $@72 tuple_type_list '>' $@73

  759 $@74: %empty

  760 $@75: %empty

  761 type_declaration_no_options: "variant" '<' $@74 variant_type_list '>' $@75

  762 type_declaration: type_declaration_no_options
  763                 | type_declaration '|' type_declaration_no_options
  764                 | type_declaration '|' '#'

  765 $@76: %empty

  766 $@77: %empty

  767 $@78: %empty

  768 $@79: %empty

  769 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

  770 $@80: %empty

  771 $@81: %empty

  772 $@82: %empty

  773 $@83: %empty

  774 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

  775 $@84: %empty

  776 $@85: %empty

  777 $@86: %empty

  778 $@87: %empty

  779 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

  780 make_decl: make_struct_decl
  781          | make_dim_decl
  782          | make_table_decl
  783          | array_comprehension
  784          | make_tuple_call

  785 make_struct_fields: "name" copy_or_move expr
  786                   | "name" ":=" expr
  787                   | make_struct_fields ',' "name" copy_or_move expr
  788                   | make_struct_fields ',' "name" ":=" expr
  789                   | "$f" '(' expr ')' copy_or_move expr
  790                   | "$f" '(' expr ')' ":=" expr
  791                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  792                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  793 make_variant_dim: make_struct_fields

  794 make_struct_single: make_struct_fields

  795 make_struct_dim: make_struct_fields
  796                | make_struct_dim "end of expression" make_struct_fields

  797 make_struct_dim_list: '(' make_struct_fields ')'
  798                     | make_struct_dim_list ',' '(' make_struct_fields ')'

  799 make_struct_dim_decl: make_struct_fields
  800                     | make_struct_dim_list optional_comma

  801 optional_make_struct_dim_decl: make_struct_dim_decl
  802                              | %empty

  803 optional_block: %empty
  804               | "where" expr_block

  805 optional_trailing_semicolon_cur_cur: "end of code block" "end of code block"
  806                                    | ";}}"

  807 optional_trailing_semicolon_cur_sqr: "end of code block" ']'
  808                                    | ";}]"

  809 optional_trailing_semicolon_sqr_sqr: ']' ']'
  810                                    | ";]]"

  811 optional_trailing_delim_sqr_sqr: ']' ']'
  812                                | ";]]"
  813                                | ",]]"

  814 optional_trailing_delim_cur_sqr: "end of code block" ']'
  815                                | ";}]"
  816                                | ",}]"

  817 use_initializer: %empty
  818                | "uninitialized"

  819 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  820                 | "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  821                 | "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  822                 | "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  823                 | "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  824                 | "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

  825 $@88: %empty

  826 $@89: %empty

  827 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' use_initializer optional_make_struct_dim_decl ')'

  828 $@90: %empty

  829 $@91: %empty

  830 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer optional_make_struct_dim_decl ')'

  831 $@92: %empty

  832 $@93: %empty

  833 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 '(' make_variant_dim ')'

  834 $@94: %empty

  835 $@95: %empty

  836 make_struct_decl: "default" '<' $@94 type_declaration_no_options '>' $@95 use_initializer

  837 make_tuple: expr
  838           | expr "=>" expr
  839           | make_tuple ',' expr

  840 make_map_tuple: expr "=>" expr
  841               | expr

  842 make_tuple_call: "tuple" '(' expr_list optional_comma ')'

  843 $@96: %empty

  844 $@97: %empty

  845 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' use_initializer optional_make_struct_dim_decl ')'

  846 make_dim: make_tuple
  847         | make_dim "end of expression" make_tuple

  848 make_dim_decl: '[' expr_list optional_comma ']'
  849              | "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  850              | "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr

  851 $@98: %empty

  852 $@99: %empty

  853 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')'

  854 $@100: %empty

  855 $@101: %empty

  856 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')'

  857 $@102: %empty

  858 $@103: %empty

  859 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options '>' $@103 '(' make_variant_dim ')'
  860              | "array" '(' expr_list optional_comma ')'

  861 $@104: %empty

  862 $@105: %empty

  863 make_dim_decl: "array" '<' $@104 type_declaration_no_options '>' $@105 '(' optional_expr_list ')'
  864              | "fixed_array" '(' expr_list optional_comma ')'

  865 $@106: %empty

  866 $@107: %empty

  867 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' $@107 '(' expr_list optional_comma ')'

  868 make_table: make_map_tuple
  869           | make_table "end of expression" make_map_tuple

  870 expr_map_tuple_list: make_map_tuple
  871                    | expr_map_tuple_list ',' make_map_tuple

  872 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma "end of code block"
  873                | "{{" make_table optional_trailing_semicolon_cur_cur
  874                | "table" '(' optional_expr_map_tuple_list ')'
  875                | "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  876                | "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

  877 array_comprehension_where: %empty
  878                          | "end of expression" "where" expr

  879 optional_comma: %empty
  880               | ','

  881 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  882                    | '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  883                    | "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']'
  884                    | "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'
  885                    | "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"
  886                    | "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 112 128 437
    '#' (35) 716 718 764
    '$' (36) 20 335 707 709
    '%' (37) 35 42 148 449
    '&' (38) 156 338 456 569 578 714 715 720
    '(' (40) 100 110 116 123 124 252 278 279 280 281 307 309 324 325 326 327 328 329 342 347 400 401 402 403 405 415 416 420 421 422 423 424 425 426 467 477 478 479 480 509 511 512 513 514 515 517 518 519 520 521 522 523 524 525 526 550 580 640 681 682 706 707 709 789 790 791 792 797 798 821 822 824 827 830 833 842 845 853 856 859 860 863 864 867 874 875 876
    ')' (41) 100 110 116 123 124 252 278 279 280 281 307 309 324 325 326 327 328 329 342 347 400 401 402 403 405 415 416 420 421 422 423 424 425 426 467 477 478 479 480 509 511 512 513 514 515 517 518 519 520 521 522 523 524 525 526 550 580 640 681 682 706 707 709 789 790 791 792 797 798 821 822 824 827 830 833 842 845 853 856 859 860 863 864 867 874 875 876
    '*' (42) 146 447 476
    '+' (43) 144 439 445
    ',' (44) 51 89 102 119 305 331 344 401 582 583 642 643 691 787 788 791 792 798 839 871 880
    '-' (45) 145 440 446 710 713 715 718
    '.' (46) 43 173 175 176 413 414 415 416 419 469 471 473 519 521 522
    '/' (47) 44 147 448
    ':' (58) 53 54 126 306 307 482 554 560 570 571 584 585 586 623 625
    "end of expression" (59) 15 16 74 105 224 228 229 236 237 242 243 244 288 293 306 307 308 309 329 543 545 548 552 584 585 587 601 602 603 609 610 613 684 686 687 692 796 847 869 878 881 882 883 884 885 886
    '<' (60) 149 223 259 262 275 314 317 320 323 325 326 328 329 409 412 450 479 480 485 491 496 690 705 709 724 728 731 734 738 741 745 748 752 755 758 761 827 830 833 836 845 853 856 859 863 867 875 876
    '=' (61) 81 93 94 95 96 97 98 100 339 361 383 566 574 603 608
    '>' (62) 150 223 259 262 275 314 317 320 323 325 326 328 329 409 412 451 479 480 485 491 496 690 705 709 724 728 731 734 738 741 745 748 752 755 758 761 827 830 833 836 845 853 856 859 863 867 875 876
    '?' (63) 185 186 482 493 496 497 524 721
    '@' (64) 103 104 336 337 406 409 412 526
    '[' (91) 121 171 400 401 468 469 548 695 696 702 710 848 881 882
    ']' (93) 121 171 172 306 308 346 400 401 468 469 470 471 528 548 695 696 702 710 807 809 811 814 848 881 882 883 884
    '^' (94) 158 458
    "begin of code block" (123) 219 220 597 611 620 623 635 769 774 779 872 885
    '|' (124) 157 457 763 764
    "end of code block" (125) 219 220 597 611 620 623 635 769 774 779 805 807 814 872 884 885 886
    '~' (126) 129 438
    error (256) 247 419
    "lexer error" (258)
    "capture" (259) 347
    "struct" (260) 630 827 853
    "class" (261) 629 830
    "let" (262) 297 300
    "def" (263) 212 545 547
    "while" (264) 78
    "if" (265) 62 74
    "static_if" (266) 63
    "else" (267) 60 66
    "for" (268) 76 881 882 883 884 885 886
    "recover" (269) 296
    "true" (270) 86 97 433
    "false" (271) 87 98 434
    "new" (272) 277 278 279 280 281 282
    "typeinfo" (273) 324 325 326 327 328 329
    "type" (274) 91 323 485 491 496 705
    "in" (275) 76 92 881 882 883 884 885 886
    "is" (276) 181 183 485 486 487 525
    "as" (277) 46 182 184 185 186 488 491 492 493 496 497 523 524
    "elif" (278) 57
    "static_elif" (279) 58
    "array" (280) 728 853 856 859 860 863
    "return" (281) 285 286 287 289 290
    "null" (282) 427
    "break" (283) 283
    "try" (284) 296
    "options" (285) 36
    "table" (286) 731 874 875 876
    "expect" (287) 49
    "const" (288) 534 712 713 719
    "require" (289) 37 107
    "operator" (290) 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186
    "enum" (291) 620 623
    "finally" (292) 220
    "delete" (293) 179 271 272
    "deref" (294) 477
    "typedef" (295) 611 613
    "typedecl" (296) 706
    "with" (297) 79
    "aka" (298) 581 583 641 643
    "assume" (299) 81
    "cast" (300) 314
    "override" (301) 531
    "abstract" (302) 545
    "upcast" (303) 317
    "iterator" (304) 734 882
    "var" (305) 298 301
    "addr" (306) 478
    "continue" (307) 284
    "where" (308) 804 878
    "pass" (309) 244
    "reinterpret" (310) 320
    "module" (311) 22
    "public" (312) 18 48 215 536 596 606 616 633
    "label" (313) 54 55
    "goto" (314) 55 56
    "implicit" (315) 717
    "explicit" (316) 272 711
    "shared" (317) 593
    "private" (318) 19 108 214 537 595 605 615 632
    "smart_ptr" (319) 724
    "unsafe" (320) 77 509
    "inscope" (321) 302
    "static" (322) 539
    "fixed_array" (323) 864 867
    "default" (324) 836
    "uninitialized" (325) 281 421 423 818
    "bool" (326) 187 644
    "void" (327) 664
    "string" (328) 188 645
    "auto" (329) 680 681
    "int" (330) 189 646 671
    "int2" (331) 190 650
    "int3" (332) 191 651
    "int4" (333) 192 652
    "uint" (334) 193 653 674
    "bitfield" (335) 670 690 779
    "uint2" (336) 194 657
    "uint3" (337) 195 658
    "uint4" (338) 196 659
    "float" (339) 197 660
    "float2" (340) 198 661
    "float3" (341) 199 662
    "float4" (342) 200 663
    "range" (343) 201 665
    "urange" (344) 202 666
    "range64" (345) 203 667
    "urange64" (346) 204 668
    "block" (347) 735 738 741
    "int64" (348) 205 649 677
    "uint64" (349) 206 656 678
    "double" (350) 207 669
    "function" (351) 742 745 748
    "lambda" (352) 749 752 755
    "int8" (353) 208 647 672
    "uint8" (354) 209 654 675
    "int16" (355) 210 648 673
    "uint16" (356) 211 655 676
    "tuple" (357) 758 769 842 845 856
    "variant" (358) 761 774 833 859
    "generator" (359) 223 479 480
    "yield" (360) 291 292 294 295
    "sealed" (361) 532 627
    "+=" (362) 130 370 391
    "-=" (363) 131 371 392
    "/=" (364) 133 373 394
    "*=" (365) 132 372 393
    "%=" (366) 134 374 395
    "&=" (367) 135 364 385
    "|=" (368) 136 365 386
    "^=" (369) 137 366 387
    "<<" (370) 163 441
    ">>" (371) 164 442
    "++" (372) 159 161 463 465
    "--" (373) 160 162 464 466
    "<=" (374) 154 454
    "<<=" (375) 165 375 396
    ">>=" (376) 166 376 397
    ">=" (377) 155 455
    "==" (378) 152 452 719 720
    "!=" (379) 153 453
    "->" (380) 402 403
    "<-" (381) 287 290 292 295 334 340 362 384 567 575
    "??" (382) 180 481 725
    "?." (383) 174 177 472 473 520 522
    "?[" (384) 172 470 471
    "<|" (385) 505
    " <|" (386) 263
    "$ <|" (387) 266 381
    "@ <|" (388) 264 379
    "@@ <|" (389) 265 380
    "|>" (390) 117 506 507
    ":=" (391) 176 178 341 363 576 786 788 790 792
    "<<<" (392) 167 443
    ">>>" (393) 168 444
    "<<<=" (394) 169 377 398
    ">>>=" (395) 170 378 399
    "=>" (396) 333 334 838 840
    "::" (397) 269 270
    "&&" (398) 113 141 459
    "||" (399) 114 142 460
    "^^" (400) 115 143 461
    "&&=" (401) 138 367 388
    "||=" (402) 139 368 389
    "^^=" (403) 140 369 390
    ".." (404) 151 462
    "$$" (405) 511
    "$i" (406) 405 512 580 640
    "$v" (407) 513
    "$b" (408) 514
    "$a" (409) 515 550
    "$t" (410) 682
    "$c" (411) 517 518 526
    "$f" (412) 519 520 521 522 523 524 525 789 790 791 792
    "..." (413) 516
    "[[" (414) 306 308 346 528 819 820 821 822 849 883
    "[{" (415) 823 824 850 884
    "{{" (416) 873 886
    "integer constant" <i> (417) 52 53 54 55 84 95 353
    "long integer constant" <i64> (418) 355
    "unsigned integer constant" <ui> (419) 354
    "unsigned long integer constant" <ui64> (420) 356
    "unsigned int8 constant" <ui> (421) 357
    "floating point constant" <fd> (422) 85 96 358
    "double constant" <d> (423) 359
    "name" <s> (424) 21 38 46 81 83 90 94 127 175 176 177 183 184 186 268 269 270 304 305 325 326 328 329 338 339 340 341 342 402 403 413 414 415 416 472 473 487 488 493 508 554 560 579 581 582 583 602 603 608 617 628 639 641 642 643 681 683 684 687 769 774 779 785 786 787 788
    "keyword" <s> (425) 39 248 259
    "type function" <s> (426) 40 262
    "start of the string" (427) 27 31
    STRING_CHARACTER <ch> (428) 23 25 32 33
    STRING_CHARACTER_ESC (429) 24 26
    "end of the string" (430) 27 31
    "{" (431) 30
    "}" (432) 30
    "end of failed eader macro" (433)
    ";}}" (434) 806
    ";}]" (435) 808 815
    ";]]" (436) 810 812
    ",]]" (437) 813
    ",}]" (438) 816
    UNARY_MINUS (439)
    UNARY_PLUS (440)
    PRE_INC (441)
    PRE_DEC (442)
    POST_INC (443)
    POST_DEC (444)
    DEREF (445)


Nonterminals, with rules where they appear

    $accept (218)
        on left: 0
    program (219)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    top_level_reader_macro (220)
        on left: 16
        on right: 14
    optional_public_or_private_module <b> (221)
        on left: 17 18 19
        on right: 22
    module_name <s> (222)
        on left: 20 21
        on right: 22
    module_declaration (223)
        on left: 22
        on right: 2
    character_sequence <s> (224)
        on left: 23 24 25 26
        on right: 25 26 27 29
    string_constant <s> (225)
        on left: 27
        on right: 82 93
    string_builder_body <pExpression> (226)
        on left: 28 29 30
        on right: 29 30 31
    string_builder <pExpression> (227)
        on left: 31
        on right: 431
    reader_character_sequence (228)
        on left: 32 33
        on right: 33 35
    expr_reader <pExpression> (229)
        on left: 35
        on right: 16 430
    $@1 (230)
        on left: 34
        on right: 35
    options_declaration (231)
        on left: 36
        on right: 9
    require_declaration (232)
        on left: 37
        on right: 8
    keyword_or_name <s> (233)
        on left: 38 39 40
        on right: 41 43 44
    require_module_name <s> (234)
        on left: 41 42 43 44
        on right: 42 43 44 45 46
    require_module (235)
        on left: 45 46
        on right: 37
    is_public_module <b> (236)
        on left: 47 48
        on right: 45 46
    expect_declaration (237)
        on left: 49
        on right: 7
    expect_list (238)
        on left: 50 51
        on right: 49 51
    expect_error (239)
        on left: 52 53
        on right: 50 51
    expression_label <pExpression> (240)
        on left: 54
        on right: 242
    expression_goto <pExpression> (241)
        on left: 55 56
        on right: 243
    elif_or_static_elif <b> (242)
        on left: 57 58
        on right: 61
    expression_else <pExpression> (243)
        on left: 59 60 61
        on right: 61 72
    if_or_static_if <b> (244)
        on left: 62 63
        on right: 72
    expression_else_one_liner <pExpression> (245)
        on left: 64 66
        on right: 74
    $@2 (246)
        on left: 65
        on right: 66
    expression_if_one_liner <pExpression> (247)
        on left: 67 68 69 70 71
        on right: 66 74
    expression_if_then_else <pExpression> (248)
        on left: 72 74
        on right: 240
    $@3 (249)
        on left: 73
        on right: 74
    expression_for_loop <pExpression> (250)
        on left: 76
        on right: 235
    $@4 (251)
        on left: 75
        on right: 76
    expression_unsafe <pExpression> (252)
        on left: 77
        on right: 232
    expression_while_loop <pExpression> (253)
        on left: 78
        on right: 231
    expression_with <pExpression> (254)
        on left: 79
        on right: 233
    expression_with_alias <pExpression> (255)
        on left: 81
        on right: 234
    $@5 (256)
        on left: 80
        on right: 81
    annotation_argument_value <aa> (257)
        on left: 82 83 84 85 86 87
        on right: 88 89
    annotation_argument_value_list <aaList> (258)
        on left: 88 89
        on right: 89 100
    annotation_argument_name <s> (259)
        on left: 90 91 92
        on right: 93 94 95 96 97 98 99 100
    annotation_argument <aa> (260)
        on left: 93 94 95 96 97 98 99 100
        on right: 101 102 103 104
    annotation_argument_list <aaList> (261)
        on left: 101 102
        on right: 36 102 110 528
    metadata_argument_list <aaList> (262)
        on left: 103 104 105
        on right: 104 105 529
    annotation_declaration_name <s> (263)
        on left: 106 107 108
        on right: 109 110
    annotation_declaration_basic <fa> (264)
        on left: 109 110
        on right: 111
    annotation_declaration <fa> (265)
        on left: 111 112 113 114 115 116 117
        on right: 112 113 114 115 116 117 118 119
    annotation_list <faList> (266)
        on left: 118 119
        on right: 119 121 548
    optional_annotation_list <faList> (267)
        on left: 120 121
        on right: 212 349 350 352 545 547 620 623 638
    optional_function_argument_list <pVarDeclList> (268)
        on left: 122 123 124
        on right: 216 349 350 352 412 741 748 755
    optional_function_type <pTypeDecl> (269)
        on left: 125 126
        on right: 216 349 350 352 412 741 748 755
    function_name <s> (270)
        on left: 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211
        on right: 216
    global_function_declaration (271)
        on left: 212
        on right: 6
    optional_public_or_private_function <b> (272)
        on left: 213 214 215
        on right: 218
    function_declaration_header <pFuncDecl> (273)
        on left: 216
        on right: 218 545 547
    function_declaration <pFuncDecl> (274)
        on left: 218
        on right: 212
    $@6 (275)
        on left: 217
        on right: 218
    expression_block <pExpression> (276)
        on left: 219 220
        on right: 60 61 72 76 77 78 79 218 248 296 332 348 352 547
    expr_call_pipe <pExpression> (277)
        on left: 221 222 223
        on right: 267 382
    expression_any <pExpression> (278)
        on left: 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244
        on right: 246
    expressions <pExpression> (279)
        on left: 245 246 247
        on right: 219 220 246 247
    expr_keyword <pExpression> (280)
        on left: 248
        on right: 226
    optional_expr_list <pExpression> (281)
        on left: 249 250
        on right: 252 707 709 863
    optional_expr_list_in_braces <pExpression> (282)
        on left: 251 252
        on right: 262
    optional_expr_map_tuple_list <pExpression> (283)
        on left: 253 254
        on right: 874 875 876
    type_declaration_no_options_list <pTypeDeclList> (284)
        on left: 255 256
        on right: 256 259 262 709
    expression_keyword <pExpression> (285)
        on left: 259 262
        on right: 222 510
    $@7 (286)
        on left: 257
        on right: 259
    $@8 (287)
        on left: 258
        on right: 259
    $@9 (288)
        on left: 260
        on right: 262
    $@10 (289)
        on left: 261
        on right: 262
    expr_pipe <pExpression> (290)
        on left: 263 264 265 266 267
        on right: 225 289 290 294 295 573 586 588
    name_in_namespace <s> (291)
        on left: 268 269 270
        on right: 35 106 324 325 326 327 328 329 400 401 404 420 421 422 423 424 428 508 625 679 707 709
    expression_delete <pExpression> (292)
        on left: 271 272
        on right: 229
    new_type_declaration <pTypeDecl> (293)
        on left: 275 276
        on right: 277 278 279 280 281
    $@11 (294)
        on left: 273
        on right: 275
    $@12 (295)
        on left: 274
        on right: 275
    expr_new <pExpression> (296)
        on left: 277 278 279 280 281 282
        on right: 501
    expression_break <pExpression> (297)
        on left: 283
        on right: 70 236
    expression_continue <pExpression> (298)
        on left: 284
        on right: 71 237
    expression_return_no_pipe <pExpression> (299)
        on left: 285 286 287
        on right: 68 288
    expression_return <pExpression> (300)
        on left: 288 289 290
        on right: 238
    expression_yield_no_pipe <pExpression> (301)
        on left: 291 292
        on right: 69 293
    expression_yield <pExpression> (302)
        on left: 293 294 295
        on right: 239
    expression_try_catch <pExpression> (303)
        on left: 296
        on right: 241
    kwd_let_var_or_nothing <b> (304)
        on left: 297 298 299
        on right: 549
    kwd_let <b> (305)
        on left: 300 301
        on right: 310 311 597 599
    optional_in_scope <b> (306)
        on left: 302 303
        on right: 310 311
    tuple_expansion <pNameList> (307)
        on left: 304 305
        on right: 305 306 307 308 309
    tuple_expansion_variable_declaration <pVarDecl> (308)
        on left: 306 307 308 309
        on right: 311
    expression_let <pExpression> (309)
        on left: 310 311
        on right: 230
    expr_cast <pExpression> (310)
        on left: 314 317 320
        on right: 500
    $@13 (311)
        on left: 312
        on right: 314
    $@14 (312)
        on left: 313
        on right: 314
    $@15 (313)
        on left: 315
        on right: 317
    $@16 (314)
        on left: 316
        on right: 317
    $@17 (315)
        on left: 318
        on right: 320
    $@18 (316)
        on left: 319
        on right: 320
    expr_type_decl <pExpression> (317)
        on left: 323
        on right: 499
    $@19 (318)
        on left: 321
        on right: 323
    $@20 (319)
        on left: 322
        on right: 323
    expr_type_info <pExpression> (320)
        on left: 324 325 326 327 328 329
        on right: 498
    expr_list <pExpression> (321)
        on left: 330 331
        on right: 76 250 279 286 287 331 401 403 416 424 426 467 518 842 848 860 864 867 881 882 883 884 885 886
    block_or_simple_block <pExpression> (322)
        on left: 332 333 334
        on right: 349 350
    block_or_lambda <i> (323)
        on left: 335 336 337
        on right: 349 350 352
    capture_entry <pCapt> (324)
        on left: 338 339 340 341 342
        on right: 343 344
    capture_list <pCaptList> (325)
        on left: 343 344
        on right: 344 346 347
    optional_capture_list <pCaptList> (326)
        on left: 345 346 347
        on right: 223 349 350 352 479 480
    expr_block <pExpression> (327)
        on left: 348 349
        on right: 263 264 265 266 379 380 381 804
    expr_full_block <pExpression> (328)
        on left: 350
        on right: 504
    expr_full_block_assumed_piped <pExpression> (329)
        on left: 352
        on right: 221 222 223
    $@21 (330)
        on left: 351
        on right: 352
    expr_numeric_const <pExpression> (331)
        on left: 353 354 355 356 357 358 359
        on right: 429
    expr_assign <pExpression> (332)
        on left: 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378
        on right: 228 263
    expr_assign_pipe_right <pExpression> (333)
        on left: 379 380 381 382
        on right: 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399
    expr_assign_pipe <pExpression> (334)
        on left: 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399
        on right: 227
    expr_named_call <pExpression> (335)
        on left: 400 401
        on right: 503
    expr_method_call <pExpression> (336)
        on left: 402 403
        on right: 502
    func_addr_name <pExpression> (337)
        on left: 404 405
        on right: 406 409 412
    func_addr_expr <pExpression> (338)
        on left: 406 409 412
        on right: 474
    $@22 (339)
        on left: 407
        on right: 409
    $@23 (340)
        on left: 408
        on right: 409
    $@24 (341)
        on left: 410
        on right: 412
    $@25 (342)
        on left: 411
        on right: 412
    expr_field <pExpression> (343)
        on left: 413 414 415 416 419
        on right: 435
    $@26 (344)
        on left: 417
        on right: 419
    $@27 (345)
        on left: 418
        on right: 419
    expr_call <pExpression> (346)
        on left: 420 421 422 423 424 425 426
        on right: 475
    expr <pExpression> (347)
        on left: 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 485 486 487 488 491 492 493 496 497 498 499 500 501 502 503 504 505 506 507 508 509 510
        on right
    $@28 (348)
        on left: 483
        on right: 485
    $@29 (349)
        on left: 484
        on right: 485
    $@30 (350)
        on left: 489
        on right: 491
    $@31 (351)
        on left: 490
        on right: 491
    $@32 (352)
        on left: 494
        on right: 496
    $@33 (353)
        on left: 495
        on right: 496
    expr_mtag <pExpression> (354)
        on left: 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526
        on right: 436
    optional_field_annotation <aaList> (355)
        on left: 527 528 529
        on right: 540 549 591 599
    optional_override <i> (356)
        on left: 530 531 532
        on right: 540 547
    optional_constant <b> (357)
        on left: 533 534
        on right: 545 547
    optional_public_or_private_member_variable <b> (358)
        on left: 535 536 537
        on right: 540 545 547
    optional_static_member_variable <b> (359)
        on left: 538 539
        on right: 540 547
    structure_variable_declaration <pVarDecl> (360)
        on left: 540
        on right: 543
    struct_variable_declaration_list <pVarDeclList> (361)
        on left: 541 543 545 547 548
        on right: 543 545 547 548 635
    $@34 (362)
        on left: 542
        on right: 543
    $@35 (363)
        on left: 544
        on right: 545
    $@36 (364)
        on left: 546
        on right: 547
    function_argument_declaration <pVarDecl> (365)
        on left: 549 550
        on right: 551 552
    function_argument_list <pVarDeclList> (366)
        on left: 551 552
        on right: 124 552
    tuple_type <pVarDecl> (367)
        on left: 553 554
        on right: 555 556 559
    tuple_type_list <pVarDeclList> (368)
        on left: 555 556
        on right: 556 758
    tuple_alias_type_list <pVarDeclList> (369)
        on left: 557 558 559
        on right: 558 559 769
    variant_type <pVarDecl> (370)
        on left: 560
        on right: 561 562 565
    variant_type_list <pVarDeclList> (371)
        on left: 561 562
        on right: 562 761
    variant_alias_type_list <pVarDeclList> (372)
        on left: 563 564 565
        on right: 564 565 774
    copy_or_move <b> (373)
        on left: 566 567
        on right: 571 572 573 785 787 789 791
    variable_declaration <pVarDecl> (374)
        on left: 568 569 570 571 572 573
        on right: 540 549
    copy_or_move_or_clone <i> (375)
        on left: 574 575 576
        on right: 306 307 308 309 585 586 587 588
    optional_ref <b> (376)
        on left: 577 578
        on right: 308 309 587 588
    let_variable_name_with_pos_list <pNameWithPosList> (377)
        on left: 579 580 581 582 583
        on right: 582 583 584 585 586 587 588
    let_variable_declaration <pVarDecl> (378)
        on left: 584 585 586 587 588
        on right: 310 591 599
    global_variable_declaration_list <pVarDeclList> (379)
        on left: 589 591
        on right: 591 597
    $@37 (380)
        on left: 590
        on right: 591
    optional_shared <b> (381)
        on left: 592 593
        on right: 22 597 599
    optional_public_or_private_variable <b> (382)
        on left: 594 595 596
        on right: 597 599
    global_let (383)
        on left: 597 599
        on right: 5
    $@38 (384)
        on left: 598
        on right: 599
    enum_list <pEnum> (385)
        on left: 600 601 602 603
        on right: 601 602 603 620 623
    optional_public_or_private_alias <b> (386)
        on left: 604 605 606
        on right: 608 769 774 779
    single_alias (387)
        on left: 608
        on right: 609 610 613
    $@39 (388)
        on left: 607
        on right: 608
    alias_list (389)
        on left: 609 610
        on right: 610 611
    alias_declaration (390)
        on left: 611 613
        on right: 10
    $@40 (391)
        on left: 612
        on right: 613
    optional_public_or_private_enum <b> (392)
        on left: 614 615 616
        on right: 620 623
    enum_name <pEnum> (393)
        on left: 617
        on right: 620 623
    enum_declaration (394)
        on left: 620 623
        on right: 4
    $@41 (395)
        on left: 618
        on right: 620
    $@42 (396)
        on left: 619
        on right: 620
    $@43 (397)
        on left: 621
        on right: 623
    $@44 (398)
        on left: 622
        on right: 623
    optional_structure_parent <s> (399)
        on left: 624 625
        on right: 628
    optional_sealed <b> (400)
        on left: 626 627
        on right: 628
    structure_name <pStructure> (401)
        on left: 628
        on right: 638
    class_or_struct <b> (402)
        on left: 629 630
        on right: 638
    optional_public_or_private_structure <b> (403)
        on left: 631 632 633
        on right: 638
    optional_struct_variable_declaration_list <pVarDeclList> (404)
        on left: 634 635
        on right: 638
    structure_declaration (405)
        on left: 638
        on right: 3
    $@45 (406)
        on left: 636
        on right: 638
    $@46 (407)
        on left: 637
        on right: 638
    variable_name_with_pos_list <pNameWithPosList> (408)
        on left: 639 640 641 642 643
        on right: 76 568 569 570 571 572 573 642 643 881 882 883 884 885 886
    basic_type_declaration <type> (409)
        on left: 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670
        on right: 425 426 486 492 497 507 697
    enum_basic_type_declaration <type> (410)
        on left: 671 672 673 674 675 676 677 678
        on right: 623
    structure_type_declaration <pTypeDecl> (411)
        on left: 679
        on right: 276 700
    auto_type_declaration <pTypeDecl> (412)
        on left: 680 681 682
        on right: 698
    bitfield_bits <pNameList> (413)
        on left: 683 684
        on right: 684 690
    bitfield_alias_bits <pNameList> (414)
        on left: 685 686 687
        on right: 686 687 779
    bitfield_type_declaration <pTypeDecl> (415)
        on left: 690
        on right: 699
    $@47 (416)
        on left: 688
        on right: 690
    $@48 (417)
        on left: 689
        on right: 690
    c_or_s (418)
        on left: 691 692
        on right: 256 326 556 558 559 562 564 565 694 876
    table_type_pair <aTypePair> (419)
        on left: 693 694
        on right: 731
    dim_list <pTypeDecl> (420)
        on left: 695 696
        on right: 696 701
    type_declaration_no_options <pTypeDecl> (421)
        on left: 697 698 699 700 701 702 705 706 707 709 710 711 712 713 714 715 716 717 718 719 720 721 724 725 728 731 734 735 738 741 742 745 748 749 752 755 758 761
        on right: 223 306 307 314 317 320 409 479 480 485 584 585 586 701 702 710 711 712 713 714 715 716 717 718 719 720 721 725 762 763 819 820 821 822 823 824 827 830 833 836 845 849 850 853 856 859 863 867 875 876
    $@49 (422)
        on left: 703
        on right: 705
    $@50 (423)
        on left: 704
        on right: 705
    $@51 (424)
        on left: 708
        on right: 709
    $@52 (425)
        on left: 722
        on right: 724
    $@53 (426)
        on left: 723
        on right: 724
    $@54 (427)
        on left: 726
        on right: 728
    $@55 (428)
        on left: 727
        on right: 728
    $@56 (429)
        on left: 729
        on right: 731
    $@57 (430)
        on left: 730
        on right: 731
    $@58 (431)
        on left: 732
        on right: 734
    $@59 (432)
        on left: 733
        on right: 734
    $@60 (433)
        on left: 736
        on right: 738
    $@61 (434)
        on left: 737
        on right: 738
    $@62 (435)
        on left: 739
        on right: 741
    $@63 (436)
        on left: 740
        on right: 741
    $@64 (437)
        on left: 743
        on right: 745
    $@65 (438)
        on left: 744
        on right: 745
    $@66 (439)
        on left: 746
        on right: 748
    $@67 (440)
        on left: 747
        on right: 748
    $@68 (441)
        on left: 750
        on right: 752
    $@69 (442)
        on left: 751
        on right: 752
    $@70 (443)
        on left: 753
        on right: 755
    $@71 (444)
        on left: 754
        on right: 755
    $@72 (445)
        on left: 756
        on right: 758
    $@73 (446)
        on left: 757
        on right: 758
    $@74 (447)
        on left: 759
        on right: 761
    $@75 (448)
        on left: 760
        on right: 761
    type_declaration <pTypeDecl> (449)
        on left: 762 763 764
        on right: 126 255 256 275 323 491 496 553 554 560 570 571 608 693 694 705 724 728 734 738 745 752 763 764
    tuple_alias_declaration (450)
        on left: 769
        on right: 12
    $@76 (451)
        on left: 765
        on right: 769
    $@77 (452)
        on left: 766
        on right: 769
    $@78 (453)
        on left: 767
        on right: 769
    $@79 (454)
        on left: 768
        on right: 769
    variant_alias_declaration (455)
        on left: 774
        on right: 11
    $@80 (456)
        on left: 770
        on right: 774
    $@81 (457)
        on left: 771
        on right: 774
    $@82 (458)
        on left: 772
        on right: 774
    $@83 (459)
        on left: 773
        on right: 774
    bitfield_alias_declaration (460)
        on left: 779
        on right: 13
    $@84 (461)
        on left: 775
        on right: 779
    $@85 (462)
        on left: 776
        on right: 779
    $@86 (463)
        on left: 777
        on right: 779
    $@87 (464)
        on left: 778
        on right: 779
    make_decl <pExpression> (465)
        on left: 780 781 782 783 784
        on right: 282 432
    make_struct_fields <pMakeStruct> (466)
        on left: 785 786 787 788 789 790 791 792
        on right: 400 401 787 788 791 792 793 794 795 796 797 798 799
    make_variant_dim <pExpression> (467)
        on left: 793
        on right: 833 859
    make_struct_single <pExpression> (468)
        on left: 794
        on right: 280 281 422 423
    make_struct_dim <pExpression> (469)
        on left: 795 796
        on right: 796 819 822 823 824
    make_struct_dim_list <pExpression> (470)
        on left: 797 798
        on right: 798 800
    make_struct_dim_decl <pExpression> (471)
        on left: 799 800
        on right: 801
    optional_make_struct_dim_decl <pExpression> (472)
        on left: 801 802
        on right: 827 830 845 853 856
    optional_block <pExpression> (473)
        on left: 803 804
        on right: 819 820 821 822 823 824
    optional_trailing_semicolon_cur_cur (474)
        on left: 805 806
        on right: 873
    optional_trailing_semicolon_cur_sqr (475)
        on left: 807 808
        on right: 850
    optional_trailing_semicolon_sqr_sqr (476)
        on left: 809 810
        on right: 849
    optional_trailing_delim_sqr_sqr (477)
        on left: 811 812 813
        on right: 819 820 821 822
    optional_trailing_delim_cur_sqr (478)
        on left: 814 815 816
        on right: 823 824
    use_initializer <b> (479)
        on left: 817 818
        on right: 278 827 830 836 845 853 856
    make_struct_decl <pExpression> (480)
        on left: 819 820 821 822 823 824 827 830 833 836
        on right: 780
    $@88 (481)
        on left: 825
        on right: 827
    $@89 (482)
        on left: 826
        on right: 827
    $@90 (483)
        on left: 828
        on right: 830
    $@91 (484)
        on left: 829
        on right: 830
    $@92 (485)
        on left: 831
        on right: 833
    $@93 (486)
        on left: 832
        on right: 833
    $@94 (487)
        on left: 834
        on right: 836
    $@95 (488)
        on left: 835
        on right: 836
    make_tuple <pExpression> (489)
        on left: 837 838 839
        on right: 839 846 847
    make_map_tuple <pExpression> (490)
        on left: 840 841
        on right: 868 869 870 871 885 886
    make_tuple_call <pExpression> (491)
        on left: 842 845
        on right: 784
    $@96 (492)
        on left: 843
        on right: 845
    $@97 (493)
        on left: 844
        on right: 845
    make_dim <pExpression> (494)
        on left: 846 847
        on right: 847 849 850
    make_dim_decl <pExpression> (495)
        on left: 848 849 850 853 856 859 860 863 864 867
        on right: 781
    $@98 (496)
        on left: 851
        on right: 853
    $@99 (497)
        on left: 852
        on right: 853
    $@100 (498)
        on left: 854
        on right: 856
    $@101 (499)
        on left: 855
        on right: 856
    $@102 (500)
        on left: 857
        on right: 859
    $@103 (501)
        on left: 858
        on right: 859
    $@104 (502)
        on left: 861
        on right: 863
    $@105 (503)
        on left: 862
        on right: 863
    $@106 (504)
        on left: 865
        on right: 867
    $@107 (505)
        on left: 866
        on right: 867
    make_table <pExpression> (506)
        on left: 868 869
        on right: 869 873
    expr_map_tuple_list <pExpression> (507)
        on left: 870 871
        on right: 254 871 872
    make_table_decl <pExpression> (508)
        on left: 872 873 874 875 876
        on right: 782
    array_comprehension_where <pExpression> (509)
        on left: 877 878
        on right: 881 882 883 884 885 886
    optional_comma <b> (510)
        on left: 879 880
        on right: 250 252 254 467 800 842 848 860 864 867 872
    array_comprehension <pExpression> (511)
        on left: 881 882 883 884 885 886
        on right: 783


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration
    9        | program . options_declaration
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . tuple_alias_declaration
   13        | program . bitfield_alias_declaration
   14        | program . top_level_reader_macro
   15        | program . "end of expression"

    $end                 shift, and go to state 2
    "let"                shift, and go to state 3
    "options"            shift, and go to state 4
    "expect"             shift, and go to state 5
    "require"            shift, and go to state 6
    "typedef"            shift, and go to state 7
    "var"                shift, and go to state 8
    "module"             shift, and go to state 9
    "bitfield"           shift, and go to state 10
    "tuple"              shift, and go to state 11
    "variant"            shift, and go to state 12
    "end of expression"  shift, and go to state 13
    '%'                  shift, and go to state 14
    '['                  shift, and go to state 15

    $default  reduce using rule 120 (optional_annotation_list)

    top_level_reader_macro       go to state 16
    module_declaration           go to state 17
    expr_reader                  go to state 18
    options_declaration          go to state 19
    require_declaration          go to state 20
    expect_declaration           go to state 21
    optional_annotation_list     go to state 22
    global_function_declaration  go to state 23
    kwd_let                      go to state 24
    global_let                   go to state 25
    alias_declaration            go to state 26
    enum_declaration             go to state 27
    structure_declaration        go to state 28
    tuple_alias_declaration      go to state 29
    variant_alias_declaration    go to state 30
    bitfield_alias_declaration   go to state 31


State 2

    0 $accept: program $end .

    $default  accept


State 3

  300 kwd_let: "let" .

    $default  reduce using rule 300 (kwd_let)


State 4

   36 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 37


State 5

   49 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 38

    expect_list   go to state 39
    expect_error  go to state 40


State 6

   37 require_declaration: "require" . require_module

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43
    '%'              shift, and go to state 44

    keyword_or_name      go to state 45
    require_module_name  go to state 46
    require_module       go to state 47


State 7

  611 alias_declaration: "typedef" . "begin of code block" alias_list "end of code block"
  613                  | "typedef" . $@40 single_alias "end of expression"

    "begin of code block"  shift, and go to state 48

    $default  reduce using rule 612 ($@40)

    $@40  go to state 49


State 8

  301 kwd_let: "var" .

    $default  reduce using rule 301 (kwd_let)


State 9

   22 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 50
    '$'     shift, and go to state 51

    module_name  go to state 52


State 10

  779 bitfield_alias_declaration: "bitfield" . optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 604 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 55


State 11

  769 tuple_alias_declaration: "tuple" . optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 604 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 56


State 12

  774 variant_alias_declaration: "variant" . optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 604 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 57


State 13

   15 program: program "end of expression" .

    $default  reduce using rule 15 (program)


State 14

   35 expr_reader: '%' . name_in_namespace $@1 reader_character_sequence

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 60


State 15

  121 optional_annotation_list: '[' . annotation_list ']'

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 68
    annotation_list               go to state 69
    name_in_namespace             go to state 70


State 16

   14 program: program top_level_reader_macro .

    $default  reduce using rule 14 (program)


State 17

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 18

   16 top_level_reader_macro: expr_reader . "end of expression"

    "end of expression"  shift, and go to state 71


State 19

    9 program: program options_declaration .

    $default  reduce using rule 9 (program)


State 20

    8 program: program require_declaration .

    $default  reduce using rule 8 (program)


State 21

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 22

  212 global_function_declaration: optional_annotation_list . "def" function_declaration
  620 enum_declaration: optional_annotation_list . "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list $@42 "end of code block"
  623                 | optional_annotation_list . "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"
  638 structure_declaration: optional_annotation_list . class_or_struct optional_public_or_private_structure $@45 structure_name $@46 optional_struct_variable_declaration_list

    "struct"  shift, and go to state 72
    "class"   shift, and go to state 73
    "def"     shift, and go to state 74
    "enum"    shift, and go to state 75

    class_or_struct  go to state 76


State 23

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 24

  597 global_let: kwd_let . optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"
  599           | kwd_let . optional_shared optional_public_or_private_variable $@38 optional_field_annotation let_variable_declaration

    "shared"  shift, and go to state 77

    $default  reduce using rule 592 (optional_shared)

    optional_shared  go to state 78


State 25

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 26

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 27

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 28

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 29

   12 program: program tuple_alias_declaration .

    $default  reduce using rule 12 (program)


State 30

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 31

   13 program: program bitfield_alias_declaration .

    $default  reduce using rule 13 (program)


State 32

   91 annotation_argument_name: "type" .

    $default  reduce using rule 91 (annotation_argument_name)


State 33

   92 annotation_argument_name: "in" .

    $default  reduce using rule 92 (annotation_argument_name)


State 34

   90 annotation_argument_name: "name" .

    $default  reduce using rule 90 (annotation_argument_name)


State 35

   93 annotation_argument: annotation_argument_name . '=' string_constant
   94                    | annotation_argument_name . '=' "name"
   95                    | annotation_argument_name . '=' "integer constant"
   96                    | annotation_argument_name . '=' "floating point constant"
   97                    | annotation_argument_name . '=' "true"
   98                    | annotation_argument_name . '=' "false"
   99                    | annotation_argument_name .
  100                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 79

    $default  reduce using rule 99 (annotation_argument)


State 36

  101 annotation_argument_list: annotation_argument .

    $default  reduce using rule 101 (annotation_argument_list)


State 37

   36 options_declaration: "options" annotation_argument_list .
  102 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 80

    $default  reduce using rule 36 (options_declaration)


State 38

   52 expect_error: "integer constant" .
   53             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 81

    $default  reduce using rule 52 (expect_error)


State 39

   49 expect_declaration: "expect" expect_list .
   51 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 82

    $default  reduce using rule 49 (expect_declaration)


State 40

   50 expect_list: expect_error .

    $default  reduce using rule 50 (expect_list)


State 41

   38 keyword_or_name: "name" .

    $default  reduce using rule 38 (keyword_or_name)


State 42

   39 keyword_or_name: "keyword" .

    $default  reduce using rule 39 (keyword_or_name)


State 43

   40 keyword_or_name: "type function" .

    $default  reduce using rule 40 (keyword_or_name)


State 44

   42 require_module_name: '%' . require_module_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43
    '%'              shift, and go to state 44

    keyword_or_name      go to state 45
    require_module_name  go to state 83


State 45

   41 require_module_name: keyword_or_name .

    $default  reduce using rule 41 (require_module_name)


State 46

   43 require_module_name: require_module_name . '.' keyword_or_name
   44                    | require_module_name . '/' keyword_or_name
   45 require_module: require_module_name . is_public_module
   46               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 84
    "public"  shift, and go to state 85
    '/'       shift, and go to state 86
    '.'       shift, and go to state 87

    $default  reduce using rule 47 (is_public_module)

    is_public_module  go to state 88


State 47

   37 require_declaration: "require" require_module .

    $default  reduce using rule 37 (require_declaration)


State 48

  611 alias_declaration: "typedef" "begin of code block" . alias_list "end of code block"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 604 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 89
    single_alias                      go to state 90
    alias_list                        go to state 91


State 49

  613 alias_declaration: "typedef" $@40 . single_alias "end of expression"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 604 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 89
    single_alias                      go to state 92


State 50

   21 module_name: "name" .

    $default  reduce using rule 21 (module_name)


State 51

   20 module_name: '$' .

    $default  reduce using rule 20 (module_name)


State 52

   22 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 77

    $default  reduce using rule 592 (optional_shared)

    optional_shared  go to state 93


State 53

  606 optional_public_or_private_alias: "public" .

    $default  reduce using rule 606 (optional_public_or_private_alias)


State 54

  605 optional_public_or_private_alias: "private" .

    $default  reduce using rule 605 (optional_public_or_private_alias)


State 55

  779 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias . $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

    $default  reduce using rule 775 ($@84)

    $@84  go to state 94


State 56

  769 tuple_alias_declaration: "tuple" optional_public_or_private_alias . $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

    $default  reduce using rule 765 ($@76)

    $@76  go to state 95


State 57

  774 variant_alias_declaration: "variant" optional_public_or_private_alias . $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

    $default  reduce using rule 770 ($@80)

    $@80  go to state 96


State 58

  270 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 97


State 59

  268 name_in_namespace: "name" .
  269                  | "name" . "::" "name"

    "::"  shift, and go to state 98

    "::"      [reduce using rule 268 (name_in_namespace)]
    $default  reduce using rule 268 (name_in_namespace)


State 60

   35 expr_reader: '%' name_in_namespace . $@1 reader_character_sequence

    $default  reduce using rule 34 ($@1)

    $@1  go to state 99


State 61

  107 annotation_declaration_name: "require" .

    $default  reduce using rule 107 (annotation_declaration_name)


State 62

  108 annotation_declaration_name: "private" .

    $default  reduce using rule 108 (annotation_declaration_name)


State 63

  117 annotation_declaration: "|>" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 100
    name_in_namespace             go to state 70


State 64

  112 annotation_declaration: '!' . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 101
    name_in_namespace             go to state 70


State 65

  116 annotation_declaration: '(' . annotation_declaration ')'

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 102
    name_in_namespace             go to state 70


State 66

  109 annotation_declaration_basic: annotation_declaration_name .
  110                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 103

    $default  reduce using rule 109 (annotation_declaration_basic)


State 67

  111 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 111 (annotation_declaration)


State 68

  113 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  114                       | annotation_declaration . "||" annotation_declaration
  115                       | annotation_declaration . "^^" annotation_declaration
  118 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 104
    "||"  shift, and go to state 105
    "^^"  shift, and go to state 106

    $default  reduce using rule 118 (annotation_list)


State 69

  119 annotation_list: annotation_list . ',' annotation_declaration
  121 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 107
    ']'  shift, and go to state 108


State 70

  106 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 106 (annotation_declaration_name)


State 71

   16 top_level_reader_macro: expr_reader "end of expression" .

    $default  reduce using rule 16 (top_level_reader_macro)


State 72

  630 class_or_struct: "struct" .

    $default  reduce using rule 630 (class_or_struct)


State 73

  629 class_or_struct: "class" .

    $default  reduce using rule 629 (class_or_struct)


State 74

  212 global_function_declaration: optional_annotation_list "def" . function_declaration

    "public"   shift, and go to state 109
    "private"  shift, and go to state 110

    $default  reduce using rule 213 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 111
    function_declaration                 go to state 112


State 75

  620 enum_declaration: optional_annotation_list "enum" . optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list $@42 "end of code block"
  623                 | optional_annotation_list "enum" . optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"

    "public"   shift, and go to state 113
    "private"  shift, and go to state 114

    $default  reduce using rule 614 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 115


State 76

  638 structure_declaration: optional_annotation_list class_or_struct . optional_public_or_private_structure $@45 structure_name $@46 optional_struct_variable_declaration_list

    "public"   shift, and go to state 116
    "private"  shift, and go to state 117

    $default  reduce using rule 631 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 118


State 77

  593 optional_shared: "shared" .

    $default  reduce using rule 593 (optional_shared)


State 78

  597 global_let: kwd_let optional_shared . optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"
  599           | kwd_let optional_shared . optional_public_or_private_variable $@38 optional_field_annotation let_variable_declaration

    "public"   shift, and go to state 119
    "private"  shift, and go to state 120

    $default  reduce using rule 594 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 121


State 79

   93 annotation_argument: annotation_argument_name '=' . string_constant
   94                    | annotation_argument_name '=' . "name"
   95                    | annotation_argument_name '=' . "integer constant"
   96                    | annotation_argument_name '=' . "floating point constant"
   97                    | annotation_argument_name '=' . "true"
   98                    | annotation_argument_name '=' . "false"
  100                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 122
    "false"                    shift, and go to state 123
    "integer constant"         shift, and go to state 124
    "floating point constant"  shift, and go to state 125
    "name"                     shift, and go to state 126
    "start of the string"      shift, and go to state 127
    '('                        shift, and go to state 128

    string_constant  go to state 129


State 80

  102 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 130


State 81

   53 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 131


State 82

   51 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 38

    expect_error  go to state 132


State 83

   42 require_module_name: '%' require_module_name .
   43                    | require_module_name . '.' keyword_or_name
   44                    | require_module_name . '/' keyword_or_name

    '.'  shift, and go to state 87

    $default  reduce using rule 42 (require_module_name)


State 84

   46 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 133


State 85

   48 is_public_module: "public" .

    $default  reduce using rule 48 (is_public_module)


State 86

   44 require_module_name: require_module_name '/' . keyword_or_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43

    keyword_or_name  go to state 134


State 87

   43 require_module_name: require_module_name '.' . keyword_or_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43

    keyword_or_name  go to state 135


State 88

   45 require_module: require_module_name is_public_module .

    $default  reduce using rule 45 (require_module)


State 89

  608 single_alias: optional_public_or_private_alias . "name" $@39 '=' type_declaration

    "name"  shift, and go to state 136


State 90

  609 alias_list: single_alias . "end of expression"

    "end of expression"  shift, and go to state 137


State 91

  610 alias_list: alias_list . single_alias "end of expression"
  611 alias_declaration: "typedef" "begin of code block" alias_list . "end of code block"

    "public"             shift, and go to state 53
    "private"            shift, and go to state 54
    "end of code block"  shift, and go to state 138

    $default  reduce using rule 604 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 89
    single_alias                      go to state 139


State 92

  613 alias_declaration: "typedef" $@40 single_alias . "end of expression"

    "end of expression"  shift, and go to state 140


State 93

   22 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 141
    "private"  shift, and go to state 142

    $default  reduce using rule 17 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 143


State 94

  779 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 . "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

    "name"  shift, and go to state 144


State 95

  769 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 . "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

    "name"  shift, and go to state 145


State 96

  774 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 . "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

    "name"  shift, and go to state 146


State 97

  270 name_in_namespace: "::" "name" .

    $default  reduce using rule 270 (name_in_namespace)


State 98

  269 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 147


State 99

   35 expr_reader: '%' name_in_namespace $@1 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 148

    reader_character_sequence  go to state 149


State 100

  113 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  114                       | annotation_declaration . "||" annotation_declaration
  115                       | annotation_declaration . "^^" annotation_declaration
  117                       | "|>" annotation_declaration .

    $default  reduce using rule 117 (annotation_declaration)


State 101

  112 annotation_declaration: '!' annotation_declaration .
  113                       | annotation_declaration . "&&" annotation_declaration
  114                       | annotation_declaration . "||" annotation_declaration
  115                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 112 (annotation_declaration)


State 102

  113 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  114                       | annotation_declaration . "||" annotation_declaration
  115                       | annotation_declaration . "^^" annotation_declaration
  116                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 104
    "||"  shift, and go to state 105
    "^^"  shift, and go to state 106
    ')'   shift, and go to state 150


State 103

  110 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 151


State 104

  113 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 152
    name_in_namespace             go to state 70


State 105

  114 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 153
    name_in_namespace             go to state 70


State 106

  115 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 154
    name_in_namespace             go to state 70


State 107

  119 annotation_list: annotation_list ',' . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 155
    name_in_namespace             go to state 70


State 108

  121 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 121 (optional_annotation_list)


State 109

  215 optional_public_or_private_function: "public" .

    $default  reduce using rule 215 (optional_public_or_private_function)


State 110

  214 optional_public_or_private_function: "private" .

    $default  reduce using rule 214 (optional_public_or_private_function)


State 111

  218 function_declaration: optional_public_or_private_function . $@6 function_declaration_header expression_block

    $default  reduce using rule 217 ($@6)

    $@6  go to state 156


State 112

  212 global_function_declaration: optional_annotation_list "def" function_declaration .

    $default  reduce using rule 212 (global_function_declaration)


State 113

  616 optional_public_or_private_enum: "public" .

    $default  reduce using rule 616 (optional_public_or_private_enum)


State 114

  615 optional_public_or_private_enum: "private" .

    $default  reduce using rule 615 (optional_public_or_private_enum)


State 115

  620 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum . enum_name "begin of code block" $@41 enum_list $@42 "end of code block"
  623                 | optional_annotation_list "enum" optional_public_or_private_enum . enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"

    "name"  shift, and go to state 157

    enum_name  go to state 158


State 116

  633 optional_public_or_private_structure: "public" .

    $default  reduce using rule 633 (optional_public_or_private_structure)


State 117

  632 optional_public_or_private_structure: "private" .

    $default  reduce using rule 632 (optional_public_or_private_structure)


State 118

  638 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure . $@45 structure_name $@46 optional_struct_variable_declaration_list

    $default  reduce using rule 636 ($@45)

    $@45  go to state 159


State 119

  596 optional_public_or_private_variable: "public" .

    $default  reduce using rule 596 (optional_public_or_private_variable)


State 120

  595 optional_public_or_private_variable: "private" .

    $default  reduce using rule 595 (optional_public_or_private_variable)


State 121

  597 global_let: kwd_let optional_shared optional_public_or_private_variable . "begin of code block" global_variable_declaration_list "end of code block"
  599           | kwd_let optional_shared optional_public_or_private_variable . $@38 optional_field_annotation let_variable_declaration

    "begin of code block"  shift, and go to state 160

    $default  reduce using rule 598 ($@38)

    $@38  go to state 161


State 122

   97 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 97 (annotation_argument)


State 123

   98 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 98 (annotation_argument)


State 124

   95 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 95 (annotation_argument)


State 125

   96 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 96 (annotation_argument)


State 126

   94 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 94 (annotation_argument)


State 127

   27 string_constant: "start of the string" . character_sequence "end of the string"

    STRING_CHARACTER      shift, and go to state 162
    STRING_CHARACTER_ESC  shift, and go to state 163

    character_sequence  go to state 164


State 128

  100 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 165
    "false"                    shift, and go to state 166
    "integer constant"         shift, and go to state 167
    "floating point constant"  shift, and go to state 168
    "name"                     shift, and go to state 169
    "start of the string"      shift, and go to state 127

    string_constant                 go to state 170
    annotation_argument_value       go to state 171
    annotation_argument_value_list  go to state 172


State 129

   93 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 93 (annotation_argument)


State 130

  102 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 102 (annotation_argument_list)


State 131

   53 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 53 (expect_error)


State 132

   51 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 51 (expect_list)


State 133

   46 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 85

    $default  reduce using rule 47 (is_public_module)

    is_public_module  go to state 173


State 134

   44 require_module_name: require_module_name '/' keyword_or_name .

    $default  reduce using rule 44 (require_module_name)


State 135

   43 require_module_name: require_module_name '.' keyword_or_name .

    $default  reduce using rule 43 (require_module_name)


State 136

  608 single_alias: optional_public_or_private_alias "name" . $@39 '=' type_declaration

    $default  reduce using rule 607 ($@39)

    $@39  go to state 174


State 137

  609 alias_list: single_alias "end of expression" .

    $default  reduce using rule 609 (alias_list)


State 138

  611 alias_declaration: "typedef" "begin of code block" alias_list "end of code block" .

    $default  reduce using rule 611 (alias_declaration)


State 139

  610 alias_list: alias_list single_alias . "end of expression"

    "end of expression"  shift, and go to state 175


State 140

  613 alias_declaration: "typedef" $@40 single_alias "end of expression" .

    $default  reduce using rule 613 (alias_declaration)


State 141

   18 optional_public_or_private_module: "public" .

    $default  reduce using rule 18 (optional_public_or_private_module)


State 142

   19 optional_public_or_private_module: "private" .

    $default  reduce using rule 19 (optional_public_or_private_module)


State 143

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 22 (module_declaration)


State 144

  779 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" . $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

    $default  reduce using rule 776 ($@85)

    $@85  go to state 176


State 145

  769 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" . $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

    $default  reduce using rule 766 ($@77)

    $@77  go to state 177


State 146

  774 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" . $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

    $default  reduce using rule 771 ($@81)

    $@81  go to state 178


State 147

  269 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 269 (name_in_namespace)


State 148

   32 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 32 (reader_character_sequence)


State 149

   33 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   35 expr_reader: '%' name_in_namespace $@1 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 179

    $default  reduce using rule 35 (expr_reader)


State 150

  116 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 116 (annotation_declaration)


State 151

  102 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  110 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 80
    ')'  shift, and go to state 180


State 152

  113 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  113                       | annotation_declaration "&&" annotation_declaration .
  114                       | annotation_declaration . "||" annotation_declaration
  115                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 113 (annotation_declaration)


State 153

  113 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  114                       | annotation_declaration . "||" annotation_declaration
  114                       | annotation_declaration "||" annotation_declaration .
  115                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 104
    "^^"  shift, and go to state 106

    $default  reduce using rule 114 (annotation_declaration)


State 154

  113 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  114                       | annotation_declaration . "||" annotation_declaration
  115                       | annotation_declaration . "^^" annotation_declaration
  115                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 104

    $default  reduce using rule 115 (annotation_declaration)


State 155

  113 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  114                       | annotation_declaration . "||" annotation_declaration
  115                       | annotation_declaration . "^^" annotation_declaration
  119 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 104
    "||"  shift, and go to state 105
    "^^"  shift, and go to state 106

    $default  reduce using rule 119 (annotation_list)


State 156

  218 function_declaration: optional_public_or_private_function $@6 . function_declaration_header expression_block

    "operator"  shift, and go to state 181
    "bool"      shift, and go to state 182
    "string"    shift, and go to state 183
    "int"       shift, and go to state 184
    "int2"      shift, and go to state 185
    "int3"      shift, and go to state 186
    "int4"      shift, and go to state 187
    "uint"      shift, and go to state 188
    "uint2"     shift, and go to state 189
    "uint3"     shift, and go to state 190
    "uint4"     shift, and go to state 191
    "float"     shift, and go to state 192
    "float2"    shift, and go to state 193
    "float3"    shift, and go to state 194
    "float4"    shift, and go to state 195
    "range"     shift, and go to state 196
    "urange"    shift, and go to state 197
    "range64"   shift, and go to state 198
    "urange64"  shift, and go to state 199
    "int64"     shift, and go to state 200
    "uint64"    shift, and go to state 201
    "double"    shift, and go to state 202
    "int8"      shift, and go to state 203
    "uint8"     shift, and go to state 204
    "int16"     shift, and go to state 205
    "uint16"    shift, and go to state 206
    "++"        shift, and go to state 207
    "--"        shift, and go to state 208
    "name"      shift, and go to state 209

    function_name                go to state 210
    function_declaration_header  go to state 211


State 157

  617 enum_name: "name" .

    $default  reduce using rule 617 (enum_name)


State 158

  620 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name . "begin of code block" $@41 enum_list $@42 "end of code block"
  623                 | optional_annotation_list "enum" optional_public_or_private_enum enum_name . ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"

    "begin of code block"  shift, and go to state 212
    ':'                    shift, and go to state 213


State 159

  638 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 . structure_name $@46 optional_struct_variable_declaration_list

    "sealed"  shift, and go to state 214

    $default  reduce using rule 626 (optional_sealed)

    optional_sealed  go to state 215
    structure_name   go to state 216


State 160

  597 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" . global_variable_declaration_list "end of code block"

    $default  reduce using rule 589 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 217


State 161

  599 global_let: kwd_let optional_shared optional_public_or_private_variable $@38 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 218
    '@'   shift, and go to state 219

    $default  reduce using rule 527 (optional_field_annotation)

    metadata_argument_list     go to state 220
    optional_field_annotation  go to state 221


State 162

   23 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 23 (character_sequence)


State 163

   24 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 24 (character_sequence)


State 164

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   27 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 222
    STRING_CHARACTER_ESC  shift, and go to state 223
    "end of the string"   shift, and go to state 224


State 165

   86 annotation_argument_value: "true" .

    $default  reduce using rule 86 (annotation_argument_value)


State 166

   87 annotation_argument_value: "false" .

    $default  reduce using rule 87 (annotation_argument_value)


State 167

   84 annotation_argument_value: "integer constant" .

    $default  reduce using rule 84 (annotation_argument_value)


State 168

   85 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 85 (annotation_argument_value)


State 169

   83 annotation_argument_value: "name" .

    $default  reduce using rule 83 (annotation_argument_value)


State 170

   82 annotation_argument_value: string_constant .

    $default  reduce using rule 82 (annotation_argument_value)


State 171

   88 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 88 (annotation_argument_value_list)


State 172

   89 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
  100 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 225
    ')'  shift, and go to state 226


State 173

   46 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 46 (require_module)


State 174

  608 single_alias: optional_public_or_private_alias "name" $@39 . '=' type_declaration

    '='  shift, and go to state 227


State 175

  610 alias_list: alias_list single_alias "end of expression" .

    $default  reduce using rule 610 (alias_list)


State 176

  779 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 . "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

    "begin of code block"  shift, and go to state 228


State 177

  769 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 . "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

    "begin of code block"  shift, and go to state 229


State 178

  774 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 . "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

    "begin of code block"  shift, and go to state 230


State 179

   33 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 33 (reader_character_sequence)


State 180

  110 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 110 (annotation_declaration_basic)


State 181

  128 function_name: "operator" . '!'
  129              | "operator" . '~'
  130              | "operator" . "+="
  131              | "operator" . "-="
  132              | "operator" . "*="
  133              | "operator" . "/="
  134              | "operator" . "%="
  135              | "operator" . "&="
  136              | "operator" . "|="
  137              | "operator" . "^="
  138              | "operator" . "&&="
  139              | "operator" . "||="
  140              | "operator" . "^^="
  141              | "operator" . "&&"
  142              | "operator" . "||"
  143              | "operator" . "^^"
  144              | "operator" . '+'
  145              | "operator" . '-'
  146              | "operator" . '*'
  147              | "operator" . '/'
  148              | "operator" . '%'
  149              | "operator" . '<'
  150              | "operator" . '>'
  151              | "operator" . ".."
  152              | "operator" . "=="
  153              | "operator" . "!="
  154              | "operator" . "<="
  155              | "operator" . ">="
  156              | "operator" . '&'
  157              | "operator" . '|'
  158              | "operator" . '^'
  161              | "operator" . "++"
  162              | "operator" . "--"
  163              | "operator" . "<<"
  164              | "operator" . ">>"
  165              | "operator" . "<<="
  166              | "operator" . ">>="
  167              | "operator" . "<<<"
  168              | "operator" . ">>>"
  169              | "operator" . "<<<="
  170              | "operator" . ">>>="
  171              | "operator" . '[' ']'
  172              | "operator" . "?[" ']'
  173              | "operator" . '.'
  174              | "operator" . "?."
  175              | "operator" . '.' "name"
  176              | "operator" . '.' "name" ":="
  177              | "operator" . "?." "name"
  178              | "operator" . ":="
  179              | "operator" . "delete"
  180              | "operator" . "??"
  181              | "operator" . "is"
  182              | "operator" . "as"
  183              | "operator" . "is" "name"
  184              | "operator" . "as" "name"
  185              | "operator" . '?' "as"
  186              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 231
    "as"      shift, and go to state 232
    "delete"  shift, and go to state 233
    "+="      shift, and go to state 234
    "-="      shift, and go to state 235
    "/="      shift, and go to state 236
    "*="      shift, and go to state 237
    "%="      shift, and go to state 238
    "&="      shift, and go to state 239
    "|="      shift, and go to state 240
    "^="      shift, and go to state 241
    "<<"      shift, and go to state 242
    ">>"      shift, and go to state 243
    "++"      shift, and go to state 244
    "--"      shift, and go to state 245
    "<="      shift, and go to state 246
    "<<="     shift, and go to state 247
    ">>="     shift, and go to state 248
    ">="      shift, and go to state 249
    "=="      shift, and go to state 250
    "!="      shift, and go to state 251
    "??"      shift, and go to state 252
    "?."      shift, and go to state 253
    "?["      shift, and go to state 254
    ":="      shift, and go to state 255
    "<<<"     shift, and go to state 256
    ">>>"     shift, and go to state 257
    "<<<="    shift, and go to state 258
    ">>>="    shift, and go to state 259
    "&&"      shift, and go to state 260
    "||"      shift, and go to state 261
    "^^"      shift, and go to state 262
    "&&="     shift, and go to state 263
    "||="     shift, and go to state 264
    "^^="     shift, and go to state 265
    ".."      shift, and go to state 266
    '?'       shift, and go to state 267
    '|'       shift, and go to state 268
    '^'       shift, and go to state 269
    '&'       shift, and go to state 270
    '<'       shift, and go to state 271
    '>'       shift, and go to state 272
    '-'       shift, and go to state 273
    '+'       shift, and go to state 274
    '*'       shift, and go to state 275
    '/'       shift, and go to state 276
    '%'       shift, and go to state 277
    '~'       shift, and go to state 278
    '!'       shift, and go to state 279
    '.'       shift, and go to state 280
    '['       shift, and go to state 281


State 182

  187 function_name: "bool" .

    $default  reduce using rule 187 (function_name)


State 183

  188 function_name: "string" .

    $default  reduce using rule 188 (function_name)


State 184

  189 function_name: "int" .

    $default  reduce using rule 189 (function_name)


State 185

  190 function_name: "int2" .

    $default  reduce using rule 190 (function_name)


State 186

  191 function_name: "int3" .

    $default  reduce using rule 191 (function_name)


State 187

  192 function_name: "int4" .

    $default  reduce using rule 192 (function_name)


State 188

  193 function_name: "uint" .

    $default  reduce using rule 193 (function_name)


State 189

  194 function_name: "uint2" .

    $default  reduce using rule 194 (function_name)


State 190

  195 function_name: "uint3" .

    $default  reduce using rule 195 (function_name)


State 191

  196 function_name: "uint4" .

    $default  reduce using rule 196 (function_name)


State 192

  197 function_name: "float" .

    $default  reduce using rule 197 (function_name)


State 193

  198 function_name: "float2" .

    $default  reduce using rule 198 (function_name)


State 194

  199 function_name: "float3" .

    $default  reduce using rule 199 (function_name)


State 195

  200 function_name: "float4" .

    $default  reduce using rule 200 (function_name)


State 196

  201 function_name: "range" .

    $default  reduce using rule 201 (function_name)


State 197

  202 function_name: "urange" .

    $default  reduce using rule 202 (function_name)


State 198

  203 function_name: "range64" .

    $default  reduce using rule 203 (function_name)


State 199

  204 function_name: "urange64" .

    $default  reduce using rule 204 (function_name)


State 200

  205 function_name: "int64" .

    $default  reduce using rule 205 (function_name)


State 201

  206 function_name: "uint64" .

    $default  reduce using rule 206 (function_name)


State 202

  207 function_name: "double" .

    $default  reduce using rule 207 (function_name)


State 203

  208 function_name: "int8" .

    $default  reduce using rule 208 (function_name)


State 204

  209 function_name: "uint8" .

    $default  reduce using rule 209 (function_name)


State 205

  210 function_name: "int16" .

    $default  reduce using rule 210 (function_name)


State 206

  211 function_name: "uint16" .

    $default  reduce using rule 211 (function_name)


State 207

  159 function_name: "++" . "operator"

    "operator"  shift, and go to state 282


State 208

  160 function_name: "--" . "operator"

    "operator"  shift, and go to state 283


State 209

  127 function_name: "name" .

    $default  reduce using rule 127 (function_name)


State 210

  216 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 284

    $default  reduce using rule 122 (optional_function_argument_list)

    optional_function_argument_list  go to state 285


State 211

  218 function_declaration: optional_public_or_private_function $@6 function_declaration_header . expression_block

    "begin of code block"  shift, and go to state 286

    expression_block  go to state 287


State 212

  620 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" . $@41 enum_list $@42 "end of code block"

    $default  reduce using rule 618 ($@41)

    $@41  go to state 288


State 213

  623 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' . enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"

    "int"     shift, and go to state 289
    "uint"    shift, and go to state 290
    "int64"   shift, and go to state 291
    "uint64"  shift, and go to state 292
    "int8"    shift, and go to state 293
    "uint8"   shift, and go to state 294
    "int16"   shift, and go to state 295
    "uint16"  shift, and go to state 296

    enum_basic_type_declaration  go to state 297


State 214

  627 optional_sealed: "sealed" .

    $default  reduce using rule 627 (optional_sealed)


State 215

  628 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 298


State 216

  638 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 structure_name . $@46 optional_struct_variable_declaration_list

    $default  reduce using rule 637 ($@46)

    $@46  go to state 299


State 217

  591 global_variable_declaration_list: global_variable_declaration_list . $@37 optional_field_annotation let_variable_declaration
  597 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list . "end of code block"

    "end of code block"  shift, and go to state 300

    $default  reduce using rule 590 ($@37)

    $@37  go to state 301


State 218

  528 optional_field_annotation: "[[" . annotation_argument_list ']' ']'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 302


State 219

  103 metadata_argument_list: '@' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 303


State 220

  104 metadata_argument_list: metadata_argument_list . '@' annotation_argument
  105                       | metadata_argument_list . "end of expression"
  529 optional_field_annotation: metadata_argument_list .

    "end of expression"  shift, and go to state 304
    '@'                  shift, and go to state 305

    $default  reduce using rule 529 (optional_field_annotation)


State 221

  599 global_let: kwd_let optional_shared optional_public_or_private_variable $@38 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 306
    "name"  shift, and go to state 307

    let_variable_name_with_pos_list  go to state 308
    let_variable_declaration         go to state 309


State 222

   25 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 25 (character_sequence)


State 223

   26 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 26 (character_sequence)


State 224

   27 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 27 (string_constant)


State 225

   89 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 165
    "false"                    shift, and go to state 166
    "integer constant"         shift, and go to state 167
    "floating point constant"  shift, and go to state 168
    "name"                     shift, and go to state 169
    "start of the string"      shift, and go to state 127

    string_constant            go to state 170
    annotation_argument_value  go to state 310


State 226

  100 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 100 (annotation_argument)


State 227

  608 single_alias: optional_public_or_private_alias "name" $@39 '=' . type_declaration

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 357
    type_declaration             go to state 358


State 228

  779 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" . $@86 bitfield_alias_bits $@87 "end of code block"

    $default  reduce using rule 777 ($@86)

    $@86  go to state 359


State 229

  769 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" . $@78 tuple_alias_type_list $@79 "end of code block"

    $default  reduce using rule 767 ($@78)

    $@78  go to state 360


State 230

  774 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" . $@82 variant_alias_type_list $@83 "end of code block"

    $default  reduce using rule 772 ($@82)

    $@82  go to state 361


State 231

  181 function_name: "operator" "is" .
  183              | "operator" "is" . "name"

    "name"  shift, and go to state 362

    $default  reduce using rule 181 (function_name)


State 232

  182 function_name: "operator" "as" .
  184              | "operator" "as" . "name"

    "name"  shift, and go to state 363

    $default  reduce using rule 182 (function_name)


State 233

  179 function_name: "operator" "delete" .

    $default  reduce using rule 179 (function_name)


State 234

  130 function_name: "operator" "+=" .

    $default  reduce using rule 130 (function_name)


State 235

  131 function_name: "operator" "-=" .

    $default  reduce using rule 131 (function_name)


State 236

  133 function_name: "operator" "/=" .

    $default  reduce using rule 133 (function_name)


State 237

  132 function_name: "operator" "*=" .

    $default  reduce using rule 132 (function_name)


State 238

  134 function_name: "operator" "%=" .

    $default  reduce using rule 134 (function_name)


State 239

  135 function_name: "operator" "&=" .

    $default  reduce using rule 135 (function_name)


State 240

  136 function_name: "operator" "|=" .

    $default  reduce using rule 136 (function_name)


State 241

  137 function_name: "operator" "^=" .

    $default  reduce using rule 137 (function_name)


State 242

  163 function_name: "operator" "<<" .

    $default  reduce using rule 163 (function_name)


State 243

  164 function_name: "operator" ">>" .

    $default  reduce using rule 164 (function_name)


State 244

  161 function_name: "operator" "++" .

    $default  reduce using rule 161 (function_name)


State 245

  162 function_name: "operator" "--" .

    $default  reduce using rule 162 (function_name)


State 246

  154 function_name: "operator" "<=" .

    $default  reduce using rule 154 (function_name)


State 247

  165 function_name: "operator" "<<=" .

    $default  reduce using rule 165 (function_name)


State 248

  166 function_name: "operator" ">>=" .

    $default  reduce using rule 166 (function_name)


State 249

  155 function_name: "operator" ">=" .

    $default  reduce using rule 155 (function_name)


State 250

  152 function_name: "operator" "==" .

    $default  reduce using rule 152 (function_name)


State 251

  153 function_name: "operator" "!=" .

    $default  reduce using rule 153 (function_name)


State 252

  180 function_name: "operator" "??" .

    $default  reduce using rule 180 (function_name)


State 253

  174 function_name: "operator" "?." .
  177              | "operator" "?." . "name"

    "name"  shift, and go to state 364

    $default  reduce using rule 174 (function_name)


State 254

  172 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 365


State 255

  178 function_name: "operator" ":=" .

    $default  reduce using rule 178 (function_name)


State 256

  167 function_name: "operator" "<<<" .

    $default  reduce using rule 167 (function_name)


State 257

  168 function_name: "operator" ">>>" .

    $default  reduce using rule 168 (function_name)


State 258

  169 function_name: "operator" "<<<=" .

    $default  reduce using rule 169 (function_name)


State 259

  170 function_name: "operator" ">>>=" .

    $default  reduce using rule 170 (function_name)


State 260

  141 function_name: "operator" "&&" .

    $default  reduce using rule 141 (function_name)


State 261

  142 function_name: "operator" "||" .

    $default  reduce using rule 142 (function_name)


State 262

  143 function_name: "operator" "^^" .

    $default  reduce using rule 143 (function_name)


State 263

  138 function_name: "operator" "&&=" .

    $default  reduce using rule 138 (function_name)


State 264

  139 function_name: "operator" "||=" .

    $default  reduce using rule 139 (function_name)


State 265

  140 function_name: "operator" "^^=" .

    $default  reduce using rule 140 (function_name)


State 266

  151 function_name: "operator" ".." .

    $default  reduce using rule 151 (function_name)


State 267

  185 function_name: "operator" '?' . "as"
  186              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 366


State 268

  157 function_name: "operator" '|' .

    $default  reduce using rule 157 (function_name)


State 269

  158 function_name: "operator" '^' .

    $default  reduce using rule 158 (function_name)


State 270

  156 function_name: "operator" '&' .

    $default  reduce using rule 156 (function_name)


State 271

  149 function_name: "operator" '<' .

    $default  reduce using rule 149 (function_name)


State 272

  150 function_name: "operator" '>' .

    $default  reduce using rule 150 (function_name)


State 273

  145 function_name: "operator" '-' .

    $default  reduce using rule 145 (function_name)


State 274

  144 function_name: "operator" '+' .

    $default  reduce using rule 144 (function_name)


State 275

  146 function_name: "operator" '*' .

    $default  reduce using rule 146 (function_name)


State 276

  147 function_name: "operator" '/' .

    $default  reduce using rule 147 (function_name)


State 277

  148 function_name: "operator" '%' .

    $default  reduce using rule 148 (function_name)


State 278

  129 function_name: "operator" '~' .

    $default  reduce using rule 129 (function_name)


State 279

  128 function_name: "operator" '!' .

    $default  reduce using rule 128 (function_name)


State 280

  173 function_name: "operator" '.' .
  175              | "operator" '.' . "name"
  176              | "operator" '.' . "name" ":="

    "name"  shift, and go to state 367

    $default  reduce using rule 173 (function_name)


State 281

  171 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 368


State 282

  159 function_name: "++" "operator" .

    $default  reduce using rule 159 (function_name)


State 283

  160 function_name: "--" "operator" .

    $default  reduce using rule 160 (function_name)


State 284

  123 optional_function_argument_list: '(' . ')'
  124                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 369
    "[["  shift, and go to state 218
    ')'   shift, and go to state 370
    '@'   shift, and go to state 219

    $default  reduce using rule 527 (optional_field_annotation)

    metadata_argument_list         go to state 220
    optional_field_annotation      go to state 371
    function_argument_declaration  go to state 372
    function_argument_list         go to state 373


State 285

  216 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 374

    $default  reduce using rule 125 (optional_function_type)

    optional_function_type  go to state 375


State 286

  219 expression_block: "begin of code block" . expressions "end of code block"
  220                 | "begin of code block" . expressions "end of code block" "finally" "begin of code block" expressions "end of code block"

    $default  reduce using rule 245 (expressions)

    expressions  go to state 376


State 287

  218 function_declaration: optional_public_or_private_function $@6 function_declaration_header expression_block .

    $default  reduce using rule 218 (function_declaration)


State 288

  620 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 . enum_list $@42 "end of code block"

    $default  reduce using rule 600 (enum_list)

    enum_list  go to state 377


State 289

  671 enum_basic_type_declaration: "int" .

    $default  reduce using rule 671 (enum_basic_type_declaration)


State 290

  674 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 674 (enum_basic_type_declaration)


State 291

  677 enum_basic_type_declaration: "int64" .

    $default  reduce using rule 677 (enum_basic_type_declaration)


State 292

  678 enum_basic_type_declaration: "uint64" .

    $default  reduce using rule 678 (enum_basic_type_declaration)


State 293

  672 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 672 (enum_basic_type_declaration)


State 294

  675 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 675 (enum_basic_type_declaration)


State 295

  673 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 673 (enum_basic_type_declaration)


State 296

  676 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 676 (enum_basic_type_declaration)


State 297

  623 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration . "begin of code block" $@43 enum_list $@44 "end of code block"

    "begin of code block"  shift, and go to state 378


State 298

  628 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 379

    $default  reduce using rule 624 (optional_structure_parent)

    optional_structure_parent  go to state 380


State 299

  638 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 structure_name $@46 . optional_struct_variable_declaration_list

    "begin of code block"  shift, and go to state 381

    $default  reduce using rule 634 (optional_struct_variable_declaration_list)

    optional_struct_variable_declaration_list  go to state 382


State 300

  597 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block" .

    $default  reduce using rule 597 (global_let)


State 301

  591 global_variable_declaration_list: global_variable_declaration_list $@37 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 218
    '@'   shift, and go to state 219

    $default  reduce using rule 527 (optional_field_annotation)

    metadata_argument_list     go to state 220
    optional_field_annotation  go to state 383


State 302

  102 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  528 optional_field_annotation: "[[" annotation_argument_list . ']' ']'

    ','  shift, and go to state 80
    ']'  shift, and go to state 384


State 303

  103 metadata_argument_list: '@' annotation_argument .

    $default  reduce using rule 103 (metadata_argument_list)


State 304

  105 metadata_argument_list: metadata_argument_list "end of expression" .

    $default  reduce using rule 105 (metadata_argument_list)


State 305

  104 metadata_argument_list: metadata_argument_list '@' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 385


State 306

  580 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 386


State 307

  579 let_variable_name_with_pos_list: "name" .
  581                                | "name" . "aka" "name"

    "aka"  shift, and go to state 387

    $default  reduce using rule 579 (let_variable_name_with_pos_list)


State 308

  582 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  583                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  584 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options "end of expression"
  585                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  586                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  587                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr "end of expression"
  588                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 388
    ':'  shift, and go to state 389
    '&'  shift, and go to state 390

    $default  reduce using rule 577 (optional_ref)

    optional_ref  go to state 391


State 309

  599 global_let: kwd_let optional_shared optional_public_or_private_variable $@38 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 599 (global_let)


State 310

   89 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 89 (annotation_argument_value_list)


State 311

  705 type_declaration_no_options: "type" . '<' $@49 type_declaration '>' $@50

    '<'  shift, and go to state 392


State 312

  728 type_declaration_no_options: "array" . '<' $@54 type_declaration '>' $@55

    '<'  shift, and go to state 393


State 313

  731 type_declaration_no_options: "table" . '<' $@56 table_type_pair '>' $@57

    '<'  shift, and go to state 394


State 314

  706 type_declaration_no_options: "typedecl" . '(' expr ')'

    '('  shift, and go to state 395


State 315

  734 type_declaration_no_options: "iterator" . '<' $@58 type_declaration '>' $@59

    '<'  shift, and go to state 396


State 316

  724 type_declaration_no_options: "smart_ptr" . '<' $@52 type_declaration '>' $@53

    '<'  shift, and go to state 397


State 317

  644 basic_type_declaration: "bool" .

    $default  reduce using rule 644 (basic_type_declaration)


State 318

  664 basic_type_declaration: "void" .

    $default  reduce using rule 664 (basic_type_declaration)


State 319

  645 basic_type_declaration: "string" .

    $default  reduce using rule 645 (basic_type_declaration)


State 320

  680 auto_type_declaration: "auto" .
  681                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 398

    '('       [reduce using rule 680 (auto_type_declaration)]
    $default  reduce using rule 680 (auto_type_declaration)


State 321

  646 basic_type_declaration: "int" .

    $default  reduce using rule 646 (basic_type_declaration)


State 322

  650 basic_type_declaration: "int2" .

    $default  reduce using rule 650 (basic_type_declaration)


State 323

  651 basic_type_declaration: "int3" .

    $default  reduce using rule 651 (basic_type_declaration)


State 324

  652 basic_type_declaration: "int4" .

    $default  reduce using rule 652 (basic_type_declaration)


State 325

  653 basic_type_declaration: "uint" .

    $default  reduce using rule 653 (basic_type_declaration)


State 326

  670 basic_type_declaration: "bitfield" .
  690 bitfield_type_declaration: "bitfield" . '<' $@47 bitfield_bits '>' $@48

    '<'  shift, and go to state 399

    $default  reduce using rule 670 (basic_type_declaration)


State 327

  657 basic_type_declaration: "uint2" .

    $default  reduce using rule 657 (basic_type_declaration)


State 328

  658 basic_type_declaration: "uint3" .

    $default  reduce using rule 658 (basic_type_declaration)


State 329

  659 basic_type_declaration: "uint4" .

    $default  reduce using rule 659 (basic_type_declaration)


State 330

  660 basic_type_declaration: "float" .

    $default  reduce using rule 660 (basic_type_declaration)


State 331

  661 basic_type_declaration: "float2" .

    $default  reduce using rule 661 (basic_type_declaration)


State 332

  662 basic_type_declaration: "float3" .

    $default  reduce using rule 662 (basic_type_declaration)


State 333

  663 basic_type_declaration: "float4" .

    $default  reduce using rule 663 (basic_type_declaration)


State 334

  665 basic_type_declaration: "range" .

    $default  reduce using rule 665 (basic_type_declaration)


State 335

  666 basic_type_declaration: "urange" .

    $default  reduce using rule 666 (basic_type_declaration)


State 336

  667 basic_type_declaration: "range64" .

    $default  reduce using rule 667 (basic_type_declaration)


State 337

  668 basic_type_declaration: "urange64" .

    $default  reduce using rule 668 (basic_type_declaration)


State 338

  735 type_declaration_no_options: "block" .
  738                            | "block" . '<' $@60 type_declaration '>' $@61
  741                            | "block" . '<' $@62 optional_function_argument_list optional_function_type '>' $@63

    '<'  shift, and go to state 400

    $default  reduce using rule 735 (type_declaration_no_options)


State 339

  649 basic_type_declaration: "int64" .

    $default  reduce using rule 649 (basic_type_declaration)


State 340

  656 basic_type_declaration: "uint64" .

    $default  reduce using rule 656 (basic_type_declaration)


State 341

  669 basic_type_declaration: "double" .

    $default  reduce using rule 669 (basic_type_declaration)


State 342

  742 type_declaration_no_options: "function" .
  745                            | "function" . '<' $@64 type_declaration '>' $@65
  748                            | "function" . '<' $@66 optional_function_argument_list optional_function_type '>' $@67

    '<'  shift, and go to state 401

    $default  reduce using rule 742 (type_declaration_no_options)


State 343

  749 type_declaration_no_options: "lambda" .
  752                            | "lambda" . '<' $@68 type_declaration '>' $@69
  755                            | "lambda" . '<' $@70 optional_function_argument_list optional_function_type '>' $@71

    '<'  shift, and go to state 402

    $default  reduce using rule 749 (type_declaration_no_options)


State 344

  647 basic_type_declaration: "int8" .

    $default  reduce using rule 647 (basic_type_declaration)


State 345

  654 basic_type_declaration: "uint8" .

    $default  reduce using rule 654 (basic_type_declaration)


State 346

  648 basic_type_declaration: "int16" .

    $default  reduce using rule 648 (basic_type_declaration)


State 347

  655 basic_type_declaration: "uint16" .

    $default  reduce using rule 655 (basic_type_declaration)


State 348

  758 type_declaration_no_options: "tuple" . '<' $@72 tuple_type_list '>' $@73

    '<'  shift, and go to state 403


State 349

  761 type_declaration_no_options: "variant" . '<' $@74 variant_type_list '>' $@75

    '<'  shift, and go to state 404


State 350

  682 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 405


State 351

  707 type_declaration_no_options: '$' . name_in_namespace '(' optional_expr_list ')'
  709                            | '$' . name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 406


State 352

  679 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 679 (structure_type_declaration)


State 353

  697 type_declaration_no_options: basic_type_declaration .

    $default  reduce using rule 697 (type_declaration_no_options)


State 354

  700 type_declaration_no_options: structure_type_declaration .

    $default  reduce using rule 700 (type_declaration_no_options)


State 355

  698 type_declaration_no_options: auto_type_declaration .

    $default  reduce using rule 698 (type_declaration_no_options)


State 356

  699 type_declaration_no_options: bitfield_type_declaration .

    $default  reduce using rule 699 (type_declaration_no_options)


State 357

  701 type_declaration_no_options: type_declaration_no_options . dim_list
  702                            | type_declaration_no_options . '[' ']'
  710                            | type_declaration_no_options . '-' '[' ']'
  711                            | type_declaration_no_options . "explicit"
  712                            | type_declaration_no_options . "const"
  713                            | type_declaration_no_options . '-' "const"
  714                            | type_declaration_no_options . '&'
  715                            | type_declaration_no_options . '-' '&'
  716                            | type_declaration_no_options . '#'
  717                            | type_declaration_no_options . "implicit"
  718                            | type_declaration_no_options . '-' '#'
  719                            | type_declaration_no_options . "==" "const"
  720                            | type_declaration_no_options . "==" '&'
  721                            | type_declaration_no_options . '?'
  725                            | type_declaration_no_options . "??"
  762 type_declaration: type_declaration_no_options .

    "const"     shift, and go to state 407
    "implicit"  shift, and go to state 408
    "explicit"  shift, and go to state 409
    "=="        shift, and go to state 410
    "??"        shift, and go to state 411
    '?'         shift, and go to state 412
    '&'         shift, and go to state 413
    '-'         shift, and go to state 414
    '['         shift, and go to state 415
    '#'         shift, and go to state 416

    $default  reduce using rule 762 (type_declaration)

    dim_list  go to state 417


State 358

  608 single_alias: optional_public_or_private_alias "name" $@39 '=' type_declaration .
  763 type_declaration: type_declaration . '|' type_declaration_no_options
  764                 | type_declaration . '|' '#'

    '|'  shift, and go to state 418

    $default  reduce using rule 608 (single_alias)


State 359

  779 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 . bitfield_alias_bits $@87 "end of code block"

    $default  reduce using rule 685 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 419


State 360

  769 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 . tuple_alias_type_list $@79 "end of code block"

    $default  reduce using rule 557 (tuple_alias_type_list)

    tuple_alias_type_list  go to state 420


State 361

  774 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 . variant_alias_type_list $@83 "end of code block"

    $default  reduce using rule 563 (variant_alias_type_list)

    variant_alias_type_list  go to state 421


State 362

  183 function_name: "operator" "is" "name" .

    $default  reduce using rule 183 (function_name)


State 363

  184 function_name: "operator" "as" "name" .

    $default  reduce using rule 184 (function_name)


State 364

  177 function_name: "operator" "?." "name" .

    $default  reduce using rule 177 (function_name)


State 365

  172 function_name: "operator" "?[" ']' .

    $default  reduce using rule 172 (function_name)


State 366

  185 function_name: "operator" '?' "as" .
  186              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 422

    $default  reduce using rule 185 (function_name)


State 367

  175 function_name: "operator" '.' "name" .
  176              | "operator" '.' "name" . ":="

    ":="  shift, and go to state 423

    $default  reduce using rule 175 (function_name)


State 368

  171 function_name: "operator" '[' ']' .

    $default  reduce using rule 171 (function_name)


State 369

  550 function_argument_declaration: "$a" . '(' expr ')'

    '('  shift, and go to state 424


State 370

  123 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 123 (optional_function_argument_list)


State 371

  549 function_argument_declaration: optional_field_annotation . kwd_let_var_or_nothing variable_declaration

    "let"  shift, and go to state 425
    "var"  shift, and go to state 426

    $default  reduce using rule 299 (kwd_let_var_or_nothing)

    kwd_let_var_or_nothing  go to state 427


State 372

  551 function_argument_list: function_argument_declaration .

    $default  reduce using rule 551 (function_argument_list)


State 373

  124 optional_function_argument_list: '(' function_argument_list . ')'
  552 function_argument_list: function_argument_list . "end of expression" function_argument_declaration

    "end of expression"  shift, and go to state 428
    ')'                  shift, and go to state 429


State 374

  126 optional_function_type: ':' . type_declaration

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 357
    type_declaration             go to state 430


State 375

  216 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 216 (function_declaration_header)


State 376

  219 expression_block: "begin of code block" expressions . "end of code block"
  220                 | "begin of code block" expressions . "end of code block" "finally" "begin of code block" expressions "end of code block"
  246 expressions: expressions . expression_any
  247            | expressions . error

    error                             shift, and go to state 431
    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 434
    "if"                              shift, and go to state 435
    "static_if"                       shift, and go to state 436
    "for"                             shift, and go to state 437
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "return"                          shift, and go to state 444
    "null"                            shift, and go to state 445
    "break"                           shift, and go to state 446
    "try"                             shift, and go to state 447
    "table"                           shift, and go to state 448
    "delete"                          shift, and go to state 449
    "deref"                           shift, and go to state 450
    "with"                            shift, and go to state 451
    "assume"                          shift, and go to state 452
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 455
    "continue"                        shift, and go to state 456
    "pass"                            shift, and go to state 457
    "reinterpret"                     shift, and go to state 458
    "label"                           shift, and go to state 459
    "goto"                            shift, and go to state 460
    "unsafe"                          shift, and go to state 461
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 467
    "yield"                           shift, and go to state 468
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "$ <|"                            shift, and go to state 471
    "@ <|"                            shift, and go to state 472
    "@@ <|"                           shift, and go to state 473
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 491
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    "end of code block"               shift, and go to state 495
    "end of expression"               shift, and go to state 496
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder             go to state 506
    expr_reader                go to state 507
    expression_label           go to state 508
    expression_goto            go to state 509
    if_or_static_if            go to state 510
    expression_if_one_liner    go to state 511
    expression_if_then_else    go to state 512
    expression_for_loop        go to state 513
    expression_unsafe          go to state 514
    expression_while_loop      go to state 515
    expression_with            go to state 516
    expression_with_alias      go to state 517
    expr_call_pipe             go to state 518
    expression_any             go to state 519
    expr_keyword               go to state 520
    expression_keyword         go to state 521
    expr_pipe                  go to state 522
    name_in_namespace          go to state 523
    expression_delete          go to state 524
    expr_new                   go to state 525
    expression_break           go to state 526
    expression_continue        go to state 527
    expression_return_no_pipe  go to state 528
    expression_return          go to state 529
    expression_yield_no_pipe   go to state 530
    expression_yield           go to state 531
    expression_try_catch       go to state 532
    kwd_let                    go to state 533
    expression_let             go to state 534
    expr_cast                  go to state 535
    expr_type_decl             go to state 536
    expr_type_info             go to state 537
    block_or_lambda            go to state 538
    expr_full_block            go to state 539
    expr_numeric_const         go to state 540
    expr_assign                go to state 541
    expr_assign_pipe           go to state 542
    expr_named_call            go to state 543
    expr_method_call           go to state 544
    func_addr_expr             go to state 545
    expr_field                 go to state 546
    expr_call                  go to state 547
    expr                       go to state 548
    expr_mtag                  go to state 549
    basic_type_declaration     go to state 550
    make_decl                  go to state 551
    make_struct_decl           go to state 552
    make_tuple_call            go to state 553
    make_dim_decl              go to state 554
    make_table_decl            go to state 555
    array_comprehension        go to state 556


State 377

  601 enum_list: enum_list . "end of expression"
  602          | enum_list . "name" "end of expression"
  603          | enum_list . "name" '=' expr "end of expression"
  620 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list . $@42 "end of code block"

    "name"               shift, and go to state 557
    "end of expression"  shift, and go to state 558

    $default  reduce using rule 619 ($@42)

    $@42  go to state 559


State 378

  623 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" . $@43 enum_list $@44 "end of code block"

    $default  reduce using rule 621 ($@43)

    $@43  go to state 560


State 379

  625 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 561


State 380

  628 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 628 (structure_name)


State 381

  635 optional_struct_variable_declaration_list: "begin of code block" . struct_variable_declaration_list "end of code block"

    $default  reduce using rule 541 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 562


State 382

  638 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 structure_name $@46 optional_struct_variable_declaration_list .

    $default  reduce using rule 638 (structure_declaration)


State 383

  591 global_variable_declaration_list: global_variable_declaration_list $@37 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 306
    "name"  shift, and go to state 307

    let_variable_name_with_pos_list  go to state 308
    let_variable_declaration         go to state 563


State 384

  528 optional_field_annotation: "[[" annotation_argument_list ']' . ']'

    ']'  shift, and go to state 564


State 385

  104 metadata_argument_list: metadata_argument_list '@' annotation_argument .

    $default  reduce using rule 104 (metadata_argument_list)


State 386

  580 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 569
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 387

  581 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 570


State 388

  582 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  583                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 571


State 389

  584 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options "end of expression"
  585                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  586                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr_pipe

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 572


State 390

  578 optional_ref: '&' .

    $default  reduce using rule 578 (optional_ref)


State 391

  587 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr "end of expression"
  588                         | let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 573
    ":="  shift, and go to state 574
    '='   shift, and go to state 575

    copy_or_move_or_clone  go to state 576


State 392

  705 type_declaration_no_options: "type" '<' . $@49 type_declaration '>' $@50

    $default  reduce using rule 703 ($@49)

    $@49  go to state 577


State 393

  728 type_declaration_no_options: "array" '<' . $@54 type_declaration '>' $@55

    $default  reduce using rule 726 ($@54)

    $@54  go to state 578


State 394

  731 type_declaration_no_options: "table" '<' . $@56 table_type_pair '>' $@57

    $default  reduce using rule 729 ($@56)

    $@56  go to state 579


State 395

  706 type_declaration_no_options: "typedecl" '(' . expr ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 580
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 396

  734 type_declaration_no_options: "iterator" '<' . $@58 type_declaration '>' $@59

    $default  reduce using rule 732 ($@58)

    $@58  go to state 581


State 397

  724 type_declaration_no_options: "smart_ptr" '<' . $@52 type_declaration '>' $@53

    $default  reduce using rule 722 ($@52)

    $@52  go to state 582


State 398

  681 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 583


State 399

  690 bitfield_type_declaration: "bitfield" '<' . $@47 bitfield_bits '>' $@48

    $default  reduce using rule 688 ($@47)

    $@47  go to state 584


State 400

  738 type_declaration_no_options: "block" '<' . $@60 type_declaration '>' $@61
  741                            | "block" '<' . $@62 optional_function_argument_list optional_function_type '>' $@63

    ':'       reduce using rule 739 ($@62)
    '>'       reduce using rule 739 ($@62)
    '('       reduce using rule 739 ($@62)
    $default  reduce using rule 736 ($@60)

    $@60  go to state 585
    $@62  go to state 586


State 401

  745 type_declaration_no_options: "function" '<' . $@64 type_declaration '>' $@65
  748                            | "function" '<' . $@66 optional_function_argument_list optional_function_type '>' $@67

    ':'       reduce using rule 746 ($@66)
    '>'       reduce using rule 746 ($@66)
    '('       reduce using rule 746 ($@66)
    $default  reduce using rule 743 ($@64)

    $@64  go to state 587
    $@66  go to state 588


State 402

  752 type_declaration_no_options: "lambda" '<' . $@68 type_declaration '>' $@69
  755                            | "lambda" '<' . $@70 optional_function_argument_list optional_function_type '>' $@71

    ':'       reduce using rule 753 ($@70)
    '>'       reduce using rule 753 ($@70)
    '('       reduce using rule 753 ($@70)
    $default  reduce using rule 750 ($@68)

    $@68  go to state 589
    $@70  go to state 590


State 403

  758 type_declaration_no_options: "tuple" '<' . $@72 tuple_type_list '>' $@73

    $default  reduce using rule 756 ($@72)

    $@72  go to state 591


State 404

  761 type_declaration_no_options: "variant" '<' . $@74 variant_type_list '>' $@75

    $default  reduce using rule 759 ($@74)

    $@74  go to state 592


State 405

  682 auto_type_declaration: "$t" '(' . expr ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 593
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 406

  707 type_declaration_no_options: '$' name_in_namespace . '(' optional_expr_list ')'
  709                            | '$' name_in_namespace . '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    '<'  shift, and go to state 594
    '('  shift, and go to state 595


State 407

  712 type_declaration_no_options: type_declaration_no_options "const" .

    $default  reduce using rule 712 (type_declaration_no_options)


State 408

  717 type_declaration_no_options: type_declaration_no_options "implicit" .

    $default  reduce using rule 717 (type_declaration_no_options)


State 409

  711 type_declaration_no_options: type_declaration_no_options "explicit" .

    $default  reduce using rule 711 (type_declaration_no_options)


State 410

  719 type_declaration_no_options: type_declaration_no_options "==" . "const"
  720                            | type_declaration_no_options "==" . '&'

    "const"  shift, and go to state 596
    '&'      shift, and go to state 597


State 411

  725 type_declaration_no_options: type_declaration_no_options "??" .

    $default  reduce using rule 725 (type_declaration_no_options)


State 412

  721 type_declaration_no_options: type_declaration_no_options '?' .

    $default  reduce using rule 721 (type_declaration_no_options)


State 413

  714 type_declaration_no_options: type_declaration_no_options '&' .

    $default  reduce using rule 714 (type_declaration_no_options)


State 414

  710 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  713                            | type_declaration_no_options '-' . "const"
  715                            | type_declaration_no_options '-' . '&'
  718                            | type_declaration_no_options '-' . '#'

    "const"  shift, and go to state 598
    '&'      shift, and go to state 599
    '['      shift, and go to state 600
    '#'      shift, and go to state 601


State 415

  695 dim_list: '[' . expr ']'
  702 type_declaration_no_options: type_declaration_no_options '[' . ']'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    ']'                               shift, and go to state 602
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 603
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 416

  716 type_declaration_no_options: type_declaration_no_options '#' .

    $default  reduce using rule 716 (type_declaration_no_options)


State 417

  696 dim_list: dim_list . '[' expr ']'
  701 type_declaration_no_options: type_declaration_no_options dim_list .

    '['  shift, and go to state 604

    '['       [reduce using rule 701 (type_declaration_no_options)]
    $default  reduce using rule 701 (type_declaration_no_options)


State 418

  763 type_declaration: type_declaration '|' . type_declaration_no_options
  764                 | type_declaration '|' . '#'

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351
    '#'          shift, and go to state 605

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 606


State 419

  686 bitfield_alias_bits: bitfield_alias_bits . "end of expression"
  687                    | bitfield_alias_bits . "name" "end of expression"
  779 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits . $@87 "end of code block"

    "name"               shift, and go to state 607
    "end of expression"  shift, and go to state 608

    $default  reduce using rule 778 ($@87)

    $@87  go to state 609


State 420

  558 tuple_alias_type_list: tuple_alias_type_list . c_or_s
  559                      | tuple_alias_type_list . tuple_type c_or_s
  769 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list . $@79 "end of code block"

    "type"               shift, and go to state 311
    "array"              shift, and go to state 312
    "table"              shift, and go to state 313
    "typedecl"           shift, and go to state 314
    "iterator"           shift, and go to state 315
    "smart_ptr"          shift, and go to state 316
    "bool"               shift, and go to state 317
    "void"               shift, and go to state 318
    "string"             shift, and go to state 319
    "auto"               shift, and go to state 320
    "int"                shift, and go to state 321
    "int2"               shift, and go to state 322
    "int3"               shift, and go to state 323
    "int4"               shift, and go to state 324
    "uint"               shift, and go to state 325
    "bitfield"           shift, and go to state 326
    "uint2"              shift, and go to state 327
    "uint3"              shift, and go to state 328
    "uint4"              shift, and go to state 329
    "float"              shift, and go to state 330
    "float2"             shift, and go to state 331
    "float3"             shift, and go to state 332
    "float4"             shift, and go to state 333
    "range"              shift, and go to state 334
    "urange"             shift, and go to state 335
    "range64"            shift, and go to state 336
    "urange64"           shift, and go to state 337
    "block"              shift, and go to state 338
    "int64"              shift, and go to state 339
    "uint64"             shift, and go to state 340
    "double"             shift, and go to state 341
    "function"           shift, and go to state 342
    "lambda"             shift, and go to state 343
    "int8"               shift, and go to state 344
    "uint8"              shift, and go to state 345
    "int16"              shift, and go to state 346
    "uint16"             shift, and go to state 347
    "tuple"              shift, and go to state 348
    "variant"            shift, and go to state 349
    "::"                 shift, and go to state 58
    "$t"                 shift, and go to state 350
    "name"               shift, and go to state 610
    "end of expression"  shift, and go to state 611
    ','                  shift, and go to state 612
    '$'                  shift, and go to state 351

    $default  reduce using rule 768 ($@79)

    name_in_namespace            go to state 352
    tuple_type                   go to state 613
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    c_or_s                       go to state 614
    type_declaration_no_options  go to state 357
    type_declaration             go to state 615
    $@79                         go to state 616


State 421

  564 variant_alias_type_list: variant_alias_type_list . c_or_s
  565                        | variant_alias_type_list . variant_type c_or_s
  774 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list . $@83 "end of code block"

    "name"               shift, and go to state 617
    "end of expression"  shift, and go to state 611
    ','                  shift, and go to state 612

    $default  reduce using rule 773 ($@83)

    variant_type  go to state 618
    c_or_s        go to state 619
    $@83          go to state 620


State 422

  186 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 186 (function_name)


State 423

  176 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 176 (function_name)


State 424

  550 function_argument_declaration: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 621
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 425

  297 kwd_let_var_or_nothing: "let" .

    $default  reduce using rule 297 (kwd_let_var_or_nothing)


State 426

  298 kwd_let_var_or_nothing: "var" .

    $default  reduce using rule 298 (kwd_let_var_or_nothing)


State 427

  549 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing . variable_declaration

    "$i"    shift, and go to state 622
    "name"  shift, and go to state 623

    variable_declaration         go to state 624
    variable_name_with_pos_list  go to state 625


State 428

  552 function_argument_list: function_argument_list "end of expression" . function_argument_declaration

    "$a"  shift, and go to state 369
    "[["  shift, and go to state 218
    '@'   shift, and go to state 219

    $default  reduce using rule 527 (optional_field_annotation)

    metadata_argument_list         go to state 220
    optional_field_annotation      go to state 371
    function_argument_declaration  go to state 626


State 429

  124 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 124 (optional_function_argument_list)


State 430

  126 optional_function_type: ':' type_declaration .
  763 type_declaration: type_declaration . '|' type_declaration_no_options
  764                 | type_declaration . '|' '#'

    '|'  shift, and go to state 418

    $default  reduce using rule 126 (optional_function_type)


State 431

  247 expressions: expressions error .

    $default  reduce using rule 247 (expressions)


State 432

  827 make_struct_decl: "struct" . '<' $@88 type_declaration_no_options '>' $@89 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 627


State 433

  830 make_struct_decl: "class" . '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 628


State 434

   78 expression_while_loop: "while" . expr expression_block

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 629
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 435

   62 if_or_static_if: "if" .

    $default  reduce using rule 62 (if_or_static_if)


State 436

   63 if_or_static_if: "static_if" .

    $default  reduce using rule 63 (if_or_static_if)


State 437

   76 expression_for_loop: "for" . $@4 variable_name_with_pos_list "in" expr_list expression_block

    $default  reduce using rule 75 ($@4)

    $@4  go to state 630


State 438

  433 expr: "true" .

    $default  reduce using rule 433 (expr)


State 439

  434 expr: "false" .

    $default  reduce using rule 434 (expr)


State 440

  277 expr_new: "new" . new_type_declaration
  278         | "new" . new_type_declaration '(' use_initializer ')'
  279         | "new" . new_type_declaration '(' expr_list ')'
  280         | "new" . new_type_declaration '(' make_struct_single ')'
  281         | "new" . new_type_declaration '(' "uninitialized" make_struct_single ')'
  282         | "new" . make_decl

    "struct"               shift, and go to state 432
    "class"                shift, and go to state 433
    "array"                shift, and go to state 443
    "table"                shift, and go to state 448
    "fixed_array"          shift, and go to state 462
    "default"              shift, and go to state 463
    "tuple"                shift, and go to state 465
    "variant"              shift, and go to state 466
    "::"                   shift, and go to state 58
    "[["                   shift, and go to state 481
    "[{"                   shift, and go to state 482
    "{{"                   shift, and go to state 483
    "name"                 shift, and go to state 59
    "begin of code block"  shift, and go to state 494
    '<'                    shift, and go to state 631
    '['                    shift, and go to state 502

    name_in_namespace           go to state 352
    new_type_declaration        go to state 632
    structure_type_declaration  go to state 633
    make_decl                   go to state 634
    make_struct_decl            go to state 552
    make_tuple_call             go to state 553
    make_dim_decl               go to state 554
    make_table_decl             go to state 555
    array_comprehension         go to state 556


State 441

  324 expr_type_info: "typeinfo" . '(' name_in_namespace expr ')'
  325               | "typeinfo" . '(' name_in_namespace '<' "name" '>' expr ')'
  326               | "typeinfo" . '(' name_in_namespace '<' "name" c_or_s "name" '>' expr ')'
  327               | "typeinfo" . name_in_namespace '(' expr ')'
  328               | "typeinfo" . name_in_namespace '<' "name" '>' '(' expr ')'
  329               | "typeinfo" . name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr ')'

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59
    '('     shift, and go to state 635

    name_in_namespace  go to state 636


State 442

  323 expr_type_decl: "type" . '<' $@19 type_declaration '>' $@20

    '<'  shift, and go to state 637


State 443

  853 make_dim_decl: "array" . "struct" '<' $@98 type_declaration_no_options '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')'
  856              | "array" . "tuple" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')'
  859              | "array" . "variant" '<' $@102 type_declaration_no_options '>' $@103 '(' make_variant_dim ')'
  860              | "array" . '(' expr_list optional_comma ')'
  863              | "array" . '<' $@104 type_declaration_no_options '>' $@105 '(' optional_expr_list ')'

    "struct"   shift, and go to state 638
    "tuple"    shift, and go to state 639
    "variant"  shift, and go to state 640
    '<'        shift, and go to state 641
    '('        shift, and go to state 642


State 444

  285 expression_return_no_pipe: "return" .
  286                          | "return" . expr_list
  287                          | "return" . "<-" expr_list
  289 expression_return: "return" . expr_pipe
  290                  | "return" . "<-" expr_pipe

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 467
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "<-"                              shift, and go to state 643
    "$ <|"                            shift, and go to state 471
    "@ <|"                            shift, and go to state 472
    "@@ <|"                           shift, and go to state 473
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    $default  reduce using rule 285 (expression_return_no_pipe)

    string_builder          go to state 506
    expr_reader             go to state 507
    expr_call_pipe          go to state 518
    expression_keyword      go to state 521
    expr_pipe               go to state 644
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 645
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_assign             go to state 646
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 647
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 445

  427 expr: "null" .

    $default  reduce using rule 427 (expr)


State 446

  283 expression_break: "break" .

    $default  reduce using rule 283 (expression_break)


State 447

  296 expression_try_catch: "try" . expression_block "recover" expression_block

    "begin of code block"  shift, and go to state 286

    expression_block  go to state 648


State 448

  874 make_table_decl: "table" . '(' optional_expr_map_tuple_list ')'
  875                | "table" . '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  876                | "table" . '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    '<'  shift, and go to state 649
    '('  shift, and go to state 650


State 449

  271 expression_delete: "delete" . expr
  272                  | "delete" . "explicit" expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "explicit"                        shift, and go to state 651
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 652
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 450

  477 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 653


State 451

   79 expression_with: "with" . expr expression_block

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 654
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 452

   81 expression_with_alias: "assume" . "name" '=' $@5 expr

    "name"  shift, and go to state 655


State 453

  314 expr_cast: "cast" . '<' $@13 type_declaration_no_options '>' $@14 expr

    '<'  shift, and go to state 656


State 454

  317 expr_cast: "upcast" . '<' $@15 type_declaration_no_options '>' $@16 expr

    '<'  shift, and go to state 657


State 455

  478 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 658


State 456

  284 expression_continue: "continue" .

    $default  reduce using rule 284 (expression_continue)


State 457

  244 expression_any: "pass" . "end of expression"

    "end of expression"  shift, and go to state 659


State 458

  320 expr_cast: "reinterpret" . '<' $@17 type_declaration_no_options '>' $@18 expr

    '<'  shift, and go to state 660


State 459

   54 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 661


State 460

   55 expression_goto: "goto" . "label" "integer constant"
   56                | "goto" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "label"                           shift, and go to state 662
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 663
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 461

   77 expression_unsafe: "unsafe" . expression_block
  509 expr: "unsafe" . '(' expr ')'

    "begin of code block"  shift, and go to state 286
    '('                    shift, and go to state 664

    expression_block  go to state 665


State 462

  864 make_dim_decl: "fixed_array" . '(' expr_list optional_comma ')'
  867              | "fixed_array" . '<' $@106 type_declaration_no_options '>' $@107 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 666
    '('  shift, and go to state 667


State 463

  836 make_struct_decl: "default" . '<' $@94 type_declaration_no_options '>' $@95 use_initializer

    '<'  shift, and go to state 668


State 464

  670 basic_type_declaration: "bitfield" .

    $default  reduce using rule 670 (basic_type_declaration)


State 465

  842 make_tuple_call: "tuple" . '(' expr_list optional_comma ')'
  845                | "tuple" . '<' $@96 type_declaration_no_options '>' $@97 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 669
    '('  shift, and go to state 670


State 466

  833 make_struct_decl: "variant" . '<' $@92 type_declaration_no_options '>' $@93 '(' make_variant_dim ')'

    '<'  shift, and go to state 671


State 467

  223 expr_call_pipe: "generator" . '<' type_declaration_no_options '>' optional_capture_list expr_full_block_assumed_piped
  479 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  480     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'

    '<'  shift, and go to state 672


State 468

  291 expression_yield_no_pipe: "yield" . expr
  292                         | "yield" . "<-" expr
  294 expression_yield: "yield" . expr_pipe
  295                 | "yield" . "<-" expr_pipe

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 467
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "<-"                              shift, and go to state 673
    "$ <|"                            shift, and go to state 471
    "@ <|"                            shift, and go to state 472
    "@@ <|"                           shift, and go to state 473
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expr_call_pipe          go to state 518
    expression_keyword      go to state 521
    expr_pipe               go to state 674
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_assign             go to state 646
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 675
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 469

  463 expr: "++" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 676
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 470

  464 expr: "--" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 677
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 471

  266 expr_pipe: "$ <|" . expr_block

    "begin of code block"  shift, and go to state 286
    '$'                    shift, and go to state 504
    '@'                    shift, and go to state 678

    expression_block  go to state 679
    block_or_lambda   go to state 680
    expr_block        go to state 681


State 472

  264 expr_pipe: "@ <|" . expr_block

    "begin of code block"  shift, and go to state 286
    '$'                    shift, and go to state 504
    '@'                    shift, and go to state 678

    expression_block  go to state 679
    block_or_lambda   go to state 680
    expr_block        go to state 682


State 473

  265 expr_pipe: "@@ <|" . expr_block

    "begin of code block"  shift, and go to state 286
    '$'                    shift, and go to state 504
    '@'                    shift, and go to state 678

    expression_block  go to state 679
    block_or_lambda   go to state 680
    expr_block        go to state 683


State 474

  511 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 684


State 475

  512 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 685


State 476

  513 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 686


State 477

  514 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 687


State 478

  515 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 688


State 479

  517 expr_mtag: "$c" . '(' expr ')' '(' ')'
  518          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 689


State 480

  516 expr_mtag: "..." .

    $default  reduce using rule 516 (expr_mtag)


State 481

  819 make_struct_decl: "[[" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  820                 | "[[" . type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  821                 | "[[" . type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  822                 | "[[" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  849 make_dim_decl: "[[" . type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  883 array_comprehension: "[[" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']'

    "for"        shift, and go to state 690
    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 691


State 482

  823 make_struct_decl: "[{" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  824                 | "[{" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  850 make_dim_decl: "[{" . type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr
  884 array_comprehension: "[{" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "for"        shift, and go to state 692
    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 693


State 483

  873 make_table_decl: "{{" . make_table optional_trailing_semicolon_cur_cur
  886 array_comprehension: "{{" . "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "for"                             shift, and go to state 694
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 695
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_map_tuple          go to state 696
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table              go to state 697
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 484

  353 expr_numeric_const: "integer constant" .

    $default  reduce using rule 353 (expr_numeric_const)


State 485

  355 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 355 (expr_numeric_const)


State 486

  354 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 354 (expr_numeric_const)


State 487

  356 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 356 (expr_numeric_const)


State 488

  357 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 357 (expr_numeric_const)


State 489

  358 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 358 (expr_numeric_const)


State 490

  359 expr_numeric_const: "double constant" .

    $default  reduce using rule 359 (expr_numeric_const)


State 491

  248 expr_keyword: "keyword" . expr expression_block
  259 expression_keyword: "keyword" . '<' $@7 type_declaration_no_options_list '>' $@8 expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '<'                               shift, and go to state 698
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 699
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 492

  262 expression_keyword: "type function" . '<' $@9 type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces

    '<'  shift, and go to state 700


State 493

   31 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 28 (string_builder_body)

    string_builder_body  go to state 701


State 494

  872 make_table_decl: "begin of code block" . expr_map_tuple_list optional_comma "end of code block"
  885 array_comprehension: "begin of code block" . "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "for"                             shift, and go to state 702
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 695
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_map_tuple          go to state 703
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    expr_map_tuple_list     go to state 704
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 495

  219 expression_block: "begin of code block" expressions "end of code block" .
  220                 | "begin of code block" expressions "end of code block" . "finally" "begin of code block" expressions "end of code block"

    "finally"  shift, and go to state 705

    $default  reduce using rule 219 (expression_block)


State 496

  224 expression_any: "end of expression" .

    $default  reduce using rule 224 (expression_any)


State 497

  440 expr: '-' . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 706
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 498

  439 expr: '+' . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 707
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 499

  476 expr: '*' . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 708
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 500

  438 expr: '~' . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 709
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 501

  437 expr: '!' . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 710
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 502

  848 make_dim_decl: '[' . expr_list optional_comma ']'
  881 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  882                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "for"                             shift, and go to state 711
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "iterator"                        shift, and go to state 712
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 713
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 714
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 503

  467 expr: '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 715
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 714
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 504

  335 block_or_lambda: '$' .

    $default  reduce using rule 335 (block_or_lambda)


State 505

  336 block_or_lambda: '@' .
  337                | '@' . '@'
  406 func_addr_expr: '@' . '@' func_addr_name
  409               | '@' . '@' '<' $@22 type_declaration_no_options '>' $@23 func_addr_name
  412               | '@' . '@' '<' $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name
  526 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 716

    $default  reduce using rule 336 (block_or_lambda)


State 506

  431 expr: string_builder .

    $default  reduce using rule 431 (expr)


State 507

  430 expr: expr_reader .

    $default  reduce using rule 430 (expr)


State 508

  242 expression_any: expression_label . "end of expression"

    "end of expression"  shift, and go to state 717


State 509

  243 expression_any: expression_goto . "end of expression"

    "end of expression"  shift, and go to state 718


State 510

   72 expression_if_then_else: if_or_static_if . expr expression_block expression_else

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 719
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 511

   74 expression_if_then_else: expression_if_one_liner . "if" $@3 expr expression_else_one_liner "end of expression"

    "if"  shift, and go to state 720


State 512

  240 expression_any: expression_if_then_else .

    $default  reduce using rule 240 (expression_any)


State 513

  235 expression_any: expression_for_loop .

    $default  reduce using rule 235 (expression_any)


State 514

  232 expression_any: expression_unsafe .

    $default  reduce using rule 232 (expression_any)


State 515

  231 expression_any: expression_while_loop .

    $default  reduce using rule 231 (expression_any)


State 516

  233 expression_any: expression_with .

    $default  reduce using rule 233 (expression_any)


State 517

  234 expression_any: expression_with_alias .

    $default  reduce using rule 234 (expression_any)


State 518

  267 expr_pipe: expr_call_pipe .

    $default  reduce using rule 267 (expr_pipe)


State 519

  246 expressions: expressions expression_any .

    $default  reduce using rule 246 (expressions)


State 520

  226 expression_any: expr_keyword .

    $default  reduce using rule 226 (expression_any)


State 521

  222 expr_call_pipe: expression_keyword . expr_full_block_assumed_piped
  510 expr: expression_keyword .

    '$'  shift, and go to state 504
    '@'  shift, and go to state 678

    '$'       [reduce using rule 510 (expr)]
    '@'       [reduce using rule 510 (expr)]
    $default  reduce using rule 510 (expr)

    block_or_lambda                go to state 721
    expr_full_block_assumed_piped  go to state 722


State 522

  225 expression_any: expr_pipe .

    $default  reduce using rule 225 (expression_any)


State 523

  400 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  401                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  420 expr_call: name_in_namespace . '(' ')'
  421          | name_in_namespace . '(' "uninitialized" ')'
  422          | name_in_namespace . '(' make_struct_single ')'
  423          | name_in_namespace . '(' "uninitialized" make_struct_single ')'
  424          | name_in_namespace . '(' expr_list ')'
  428 expr: name_in_namespace .
  508     | name_in_namespace . "name"

    "name"  shift, and go to state 723
    '('     shift, and go to state 724

    "name"    [reduce using rule 428 (expr)]
    '('       [reduce using rule 428 (expr)]
    $default  reduce using rule 428 (expr)


State 524

  229 expression_any: expression_delete . "end of expression"

    "end of expression"  shift, and go to state 725


State 525

  501 expr: expr_new .

    $default  reduce using rule 501 (expr)


State 526

   70 expression_if_one_liner: expression_break .
  236 expression_any: expression_break . "end of expression"

    "end of expression"  shift, and go to state 726

    $default  reduce using rule 70 (expression_if_one_liner)


State 527

   71 expression_if_one_liner: expression_continue .
  237 expression_any: expression_continue . "end of expression"

    "end of expression"  shift, and go to state 727

    $default  reduce using rule 71 (expression_if_one_liner)


State 528

   68 expression_if_one_liner: expression_return_no_pipe .
  288 expression_return: expression_return_no_pipe . "end of expression"

    "end of expression"  shift, and go to state 728

    $default  reduce using rule 68 (expression_if_one_liner)


State 529

  238 expression_any: expression_return .

    $default  reduce using rule 238 (expression_any)


State 530

   69 expression_if_one_liner: expression_yield_no_pipe .
  293 expression_yield: expression_yield_no_pipe . "end of expression"

    "end of expression"  shift, and go to state 729

    $default  reduce using rule 69 (expression_if_one_liner)


State 531

  239 expression_any: expression_yield .

    $default  reduce using rule 239 (expression_any)


State 532

  241 expression_any: expression_try_catch .

    $default  reduce using rule 241 (expression_any)


State 533

  310 expression_let: kwd_let . optional_in_scope let_variable_declaration
  311               | kwd_let . optional_in_scope tuple_expansion_variable_declaration

    "inscope"  shift, and go to state 730

    $default  reduce using rule 303 (optional_in_scope)

    optional_in_scope  go to state 731


State 534

  230 expression_any: expression_let .

    $default  reduce using rule 230 (expression_any)


State 535

  500 expr: expr_cast .

    $default  reduce using rule 500 (expr)


State 536

  499 expr: expr_type_decl .

    $default  reduce using rule 499 (expr)


State 537

  498 expr: expr_type_info .

    $default  reduce using rule 498 (expr)


State 538

  350 expr_full_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 15

    $default  reduce using rule 120 (optional_annotation_list)

    optional_annotation_list  go to state 732


State 539

  504 expr: expr_full_block .

    $default  reduce using rule 504 (expr)


State 540

  429 expr: expr_numeric_const .

    $default  reduce using rule 429 (expr)


State 541

  228 expression_any: expr_assign . "end of expression"
  263 expr_pipe: expr_assign . " <|" expr_block

    " <|"                shift, and go to state 733
    "end of expression"  shift, and go to state 734


State 542

  227 expression_any: expr_assign_pipe .

    $default  reduce using rule 227 (expression_any)


State 543

  503 expr: expr_named_call .

    $default  reduce using rule 503 (expr)


State 544

  502 expr: expr_method_call .

    $default  reduce using rule 502 (expr)


State 545

  474 expr: func_addr_expr .

    $default  reduce using rule 474 (expr)


State 546

  435 expr: expr_field .

    $default  reduce using rule 435 (expr)


State 547

  475 expr: expr_call .

    $default  reduce using rule 475 (expr)


State 548

   67 expression_if_one_liner: expr .
  221 expr_call_pipe: expr . expr_full_block_assumed_piped
  360 expr_assign: expr .
  361            | expr . '=' expr
  362            | expr . "<-" expr
  363            | expr . ":=" expr
  364            | expr . "&=" expr
  365            | expr . "|=" expr
  366            | expr . "^=" expr
  367            | expr . "&&=" expr
  368            | expr . "||=" expr
  369            | expr . "^^=" expr
  370            | expr . "+=" expr
  371            | expr . "-=" expr
  372            | expr . "*=" expr
  373            | expr . "/=" expr
  374            | expr . "%=" expr
  375            | expr . "<<=" expr
  376            | expr . ">>=" expr
  377            | expr . "<<<=" expr
  378            | expr . ">>>=" expr
  383 expr_assign_pipe: expr . '=' expr_assign_pipe_right
  384                 | expr . "<-" expr_assign_pipe_right
  385                 | expr . "&=" expr_assign_pipe_right
  386                 | expr . "|=" expr_assign_pipe_right
  387                 | expr . "^=" expr_assign_pipe_right
  388                 | expr . "&&=" expr_assign_pipe_right
  389                 | expr . "||=" expr_assign_pipe_right
  390                 | expr . "^^=" expr_assign_pipe_right
  391                 | expr . "+=" expr_assign_pipe_right
  392                 | expr . "-=" expr_assign_pipe_right
  393                 | expr . "*=" expr_assign_pipe_right
  394                 | expr . "/=" expr_assign_pipe_right
  395                 | expr . "%=" expr_assign_pipe_right
  396                 | expr . "<<=" expr_assign_pipe_right
  397                 | expr . ">>=" expr_assign_pipe_right
  398                 | expr . "<<<=" expr_assign_pipe_right
  399                 | expr . ">>>=" expr_assign_pipe_right
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 735
    "as"    shift, and go to state 736
    "+="    shift, and go to state 737
    "-="    shift, and go to state 738
    "/="    shift, and go to state 739
    "*="    shift, and go to state 740
    "%="    shift, and go to state 741
    "&="    shift, and go to state 742
    "|="    shift, and go to state 743
    "^="    shift, and go to state 744
    "<<"    shift, and go to state 745
    ">>"    shift, and go to state 746
    "++"    shift, and go to state 747
    "--"    shift, and go to state 748
    "<="    shift, and go to state 749
    "<<="   shift, and go to state 750
    ">>="   shift, and go to state 751
    ">="    shift, and go to state 752
    "=="    shift, and go to state 753
    "!="    shift, and go to state 754
    "->"    shift, and go to state 755
    "<-"    shift, and go to state 756
    "??"    shift, and go to state 757
    "?."    shift, and go to state 758
    "?["    shift, and go to state 759
    "<|"    shift, and go to state 760
    "|>"    shift, and go to state 761
    ":="    shift, and go to state 762
    "<<<"   shift, and go to state 763
    ">>>"   shift, and go to state 764
    "<<<="  shift, and go to state 765
    ">>>="  shift, and go to state 766
    "&&"    shift, and go to state 767
    "||"    shift, and go to state 768
    "^^"    shift, and go to state 769
    "&&="   shift, and go to state 770
    "||="   shift, and go to state 771
    "^^="   shift, and go to state 772
    ".."    shift, and go to state 773
    '='     shift, and go to state 774
    '?'     shift, and go to state 775
    '|'     shift, and go to state 776
    '^'     shift, and go to state 777
    '&'     shift, and go to state 778
    '<'     shift, and go to state 779
    '>'     shift, and go to state 780
    '-'     shift, and go to state 781
    '+'     shift, and go to state 782
    '*'     shift, and go to state 783
    '/'     shift, and go to state 784
    '%'     shift, and go to state 785
    '.'     shift, and go to state 786
    '['     shift, and go to state 787
    '$'     shift, and go to state 504
    '@'     shift, and go to state 678

    "if"      reduce using rule 67 (expression_if_one_liner)
    $default  reduce using rule 360 (expr_assign)

    block_or_lambda                go to state 721
    expr_full_block_assumed_piped  go to state 788


State 549

  436 expr: expr_mtag .

    $default  reduce using rule 436 (expr)


State 550

  425 expr_call: basic_type_declaration . '(' ')'
  426          | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 789


State 551

  432 expr: make_decl .

    $default  reduce using rule 432 (expr)


State 552

  780 make_decl: make_struct_decl .

    $default  reduce using rule 780 (make_decl)


State 553

  784 make_decl: make_tuple_call .

    $default  reduce using rule 784 (make_decl)


State 554

  781 make_decl: make_dim_decl .

    $default  reduce using rule 781 (make_decl)


State 555

  782 make_decl: make_table_decl .

    $default  reduce using rule 782 (make_decl)


State 556

  783 make_decl: array_comprehension .

    $default  reduce using rule 783 (make_decl)


State 557

  602 enum_list: enum_list "name" . "end of expression"
  603          | enum_list "name" . '=' expr "end of expression"

    "end of expression"  shift, and go to state 790
    '='                  shift, and go to state 791


State 558

  601 enum_list: enum_list "end of expression" .

    $default  reduce using rule 601 (enum_list)


State 559

  620 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list $@42 . "end of code block"

    "end of code block"  shift, and go to state 792


State 560

  623 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 . enum_list $@44 "end of code block"

    $default  reduce using rule 600 (enum_list)

    enum_list  go to state 793


State 561

  625 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 625 (optional_structure_parent)


State 562

  543 struct_variable_declaration_list: struct_variable_declaration_list . $@34 structure_variable_declaration "end of expression"
  545                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header "end of expression"
  547                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block
  548                                 | struct_variable_declaration_list . '[' annotation_list ']' "end of expression"
  635 optional_struct_variable_declaration_list: "begin of code block" struct_variable_declaration_list . "end of code block"

    "end of code block"  shift, and go to state 794
    '['                  shift, and go to state 795

    "def"     reduce using rule 120 (optional_annotation_list)
    $default  reduce using rule 542 ($@34)

    optional_annotation_list  go to state 796
    $@34                      go to state 797


State 563

  591 global_variable_declaration_list: global_variable_declaration_list $@37 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 591 (global_variable_declaration_list)


State 564

  528 optional_field_annotation: "[[" annotation_argument_list ']' ']' .

    $default  reduce using rule 528 (optional_field_annotation)


State 565

  509 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 664


State 566

  479 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  480     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'

    '<'  shift, and go to state 798


State 567

  259 expression_keyword: "keyword" . '<' $@7 type_declaration_no_options_list '>' $@8 expr

    '<'  shift, and go to state 698


State 568

  510 expr: expression_keyword .

    $default  reduce using rule 510 (expr)


State 569

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'
  580 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 799


State 570

  581 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 581 (let_variable_name_with_pos_list)


State 571

  582 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  583                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 800

    $default  reduce using rule 582 (let_variable_name_with_pos_list)


State 572

  584 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . "end of expression"
  585                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"
  586                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr_pipe
  701 type_declaration_no_options: type_declaration_no_options . dim_list
  702                            | type_declaration_no_options . '[' ']'
  710                            | type_declaration_no_options . '-' '[' ']'
  711                            | type_declaration_no_options . "explicit"
  712                            | type_declaration_no_options . "const"
  713                            | type_declaration_no_options . '-' "const"
  714                            | type_declaration_no_options . '&'
  715                            | type_declaration_no_options . '-' '&'
  716                            | type_declaration_no_options . '#'
  717                            | type_declaration_no_options . "implicit"
  718                            | type_declaration_no_options . '-' '#'
  719                            | type_declaration_no_options . "==" "const"
  720                            | type_declaration_no_options . "==" '&'
  721                            | type_declaration_no_options . '?'
  725                            | type_declaration_no_options . "??"

    "const"              shift, and go to state 407
    "implicit"           shift, and go to state 408
    "explicit"           shift, and go to state 409
    "=="                 shift, and go to state 410
    "<-"                 shift, and go to state 573
    "??"                 shift, and go to state 411
    ":="                 shift, and go to state 574
    "end of expression"  shift, and go to state 801
    '='                  shift, and go to state 575
    '?'                  shift, and go to state 412
    '&'                  shift, and go to state 413
    '-'                  shift, and go to state 414
    '['                  shift, and go to state 415
    '#'                  shift, and go to state 416

    copy_or_move_or_clone  go to state 802
    dim_list               go to state 417


State 573

  575 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 575 (copy_or_move_or_clone)


State 574

  576 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 576 (copy_or_move_or_clone)


State 575

  574 copy_or_move_or_clone: '=' .

    $default  reduce using rule 574 (copy_or_move_or_clone)


State 576

  587 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr "end of expression"
  588                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 467
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "$ <|"                            shift, and go to state 471
    "@ <|"                            shift, and go to state 472
    "@@ <|"                           shift, and go to state 473
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expr_call_pipe          go to state 518
    expression_keyword      go to state 521
    expr_pipe               go to state 803
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_assign             go to state 646
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 804
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 577

  705 type_declaration_no_options: "type" '<' $@49 . type_declaration '>' $@50

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 357
    type_declaration             go to state 805


State 578

  728 type_declaration_no_options: "array" '<' $@54 . type_declaration '>' $@55

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 357
    type_declaration             go to state 806


State 579

  731 type_declaration_no_options: "table" '<' $@56 . table_type_pair '>' $@57

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    table_type_pair              go to state 807
    type_declaration_no_options  go to state 357
    type_declaration             go to state 808


State 580

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'
  706 type_declaration_no_options: "typedecl" '(' expr . ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 809


State 581

  734 type_declaration_no_options: "iterator" '<' $@58 . type_declaration '>' $@59

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 357
    type_declaration             go to state 810


State 582

  724 type_declaration_no_options: "smart_ptr" '<' $@52 . type_declaration '>' $@53

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 357
    type_declaration             go to state 811


State 583

  681 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 812


State 584

  690 bitfield_type_declaration: "bitfield" '<' $@47 . bitfield_bits '>' $@48

    "name"  shift, and go to state 813

    bitfield_bits  go to state 814


State 585

  738 type_declaration_no_options: "block" '<' $@60 . type_declaration '>' $@61

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 357
    type_declaration             go to state 815


State 586

  741 type_declaration_no_options: "block" '<' $@62 . optional_function_argument_list optional_function_type '>' $@63

    '('  shift, and go to state 284

    $default  reduce using rule 122 (optional_function_argument_list)

    optional_function_argument_list  go to state 816


State 587

  745 type_declaration_no_options: "function" '<' $@64 . type_declaration '>' $@65

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 357
    type_declaration             go to state 817


State 588

  748 type_declaration_no_options: "function" '<' $@66 . optional_function_argument_list optional_function_type '>' $@67

    '('  shift, and go to state 284

    $default  reduce using rule 122 (optional_function_argument_list)

    optional_function_argument_list  go to state 818


State 589

  752 type_declaration_no_options: "lambda" '<' $@68 . type_declaration '>' $@69

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 357
    type_declaration             go to state 819


State 590

  755 type_declaration_no_options: "lambda" '<' $@70 . optional_function_argument_list optional_function_type '>' $@71

    '('  shift, and go to state 284

    $default  reduce using rule 122 (optional_function_argument_list)

    optional_function_argument_list  go to state 820


State 591

  758 type_declaration_no_options: "tuple" '<' $@72 . tuple_type_list '>' $@73

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 610
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    tuple_type                   go to state 821
    tuple_type_list              go to state 822
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 357
    type_declaration             go to state 615


State 592

  761 type_declaration_no_options: "variant" '<' $@74 . variant_type_list '>' $@75

    "name"  shift, and go to state 617

    variant_type       go to state 823
    variant_type_list  go to state 824


State 593

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'
  682 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 825


State 594

  709 type_declaration_no_options: '$' name_in_namespace '<' . $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    $default  reduce using rule 708 ($@51)

    $@51  go to state 826


State 595

  707 type_declaration_no_options: '$' name_in_namespace '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    $default  reduce using rule 249 (optional_expr_list)

    string_builder          go to state 506
    expr_reader             go to state 507
    optional_expr_list      go to state 827
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 828
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 714
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 596

  719 type_declaration_no_options: type_declaration_no_options "==" "const" .

    $default  reduce using rule 719 (type_declaration_no_options)


State 597

  720 type_declaration_no_options: type_declaration_no_options "==" '&' .

    $default  reduce using rule 720 (type_declaration_no_options)


State 598

  713 type_declaration_no_options: type_declaration_no_options '-' "const" .

    $default  reduce using rule 713 (type_declaration_no_options)


State 599

  715 type_declaration_no_options: type_declaration_no_options '-' '&' .

    $default  reduce using rule 715 (type_declaration_no_options)


State 600

  710 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'

    ']'  shift, and go to state 829


State 601

  718 type_declaration_no_options: type_declaration_no_options '-' '#' .

    $default  reduce using rule 718 (type_declaration_no_options)


State 602

  702 type_declaration_no_options: type_declaration_no_options '[' ']' .

    $default  reduce using rule 702 (type_declaration_no_options)


State 603

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'
  695 dim_list: '[' expr . ']'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ']'    shift, and go to state 830


State 604

  696 dim_list: dim_list '[' . expr ']'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 831
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 605

  764 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 764 (type_declaration)


State 606

  701 type_declaration_no_options: type_declaration_no_options . dim_list
  702                            | type_declaration_no_options . '[' ']'
  710                            | type_declaration_no_options . '-' '[' ']'
  711                            | type_declaration_no_options . "explicit"
  712                            | type_declaration_no_options . "const"
  713                            | type_declaration_no_options . '-' "const"
  714                            | type_declaration_no_options . '&'
  715                            | type_declaration_no_options . '-' '&'
  716                            | type_declaration_no_options . '#'
  717                            | type_declaration_no_options . "implicit"
  718                            | type_declaration_no_options . '-' '#'
  719                            | type_declaration_no_options . "==" "const"
  720                            | type_declaration_no_options . "==" '&'
  721                            | type_declaration_no_options . '?'
  725                            | type_declaration_no_options . "??"
  763 type_declaration: type_declaration '|' type_declaration_no_options .

    "const"     shift, and go to state 407
    "implicit"  shift, and go to state 408
    "explicit"  shift, and go to state 409
    "=="        shift, and go to state 410
    "??"        shift, and go to state 411
    '?'         shift, and go to state 412
    '&'         shift, and go to state 413
    '-'         shift, and go to state 414
    '['         shift, and go to state 415
    '#'         shift, and go to state 416

    $default  reduce using rule 763 (type_declaration)

    dim_list  go to state 417


State 607

  687 bitfield_alias_bits: bitfield_alias_bits "name" . "end of expression"

    "end of expression"  shift, and go to state 832


State 608

  686 bitfield_alias_bits: bitfield_alias_bits "end of expression" .

    $default  reduce using rule 686 (bitfield_alias_bits)


State 609

  779 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 . "end of code block"

    "end of code block"  shift, and go to state 833


State 610

  268 name_in_namespace: "name" .
  269                  | "name" . "::" "name"
  554 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 98
    ':'   shift, and go to state 834

    $default  reduce using rule 268 (name_in_namespace)


State 611

  692 c_or_s: "end of expression" .

    $default  reduce using rule 692 (c_or_s)


State 612

  691 c_or_s: ',' .

    $default  reduce using rule 691 (c_or_s)


State 613

  559 tuple_alias_type_list: tuple_alias_type_list tuple_type . c_or_s

    "end of expression"  shift, and go to state 611
    ','                  shift, and go to state 612

    c_or_s  go to state 835


State 614

  558 tuple_alias_type_list: tuple_alias_type_list c_or_s .

    $default  reduce using rule 558 (tuple_alias_type_list)


State 615

  553 tuple_type: type_declaration .
  763 type_declaration: type_declaration . '|' type_declaration_no_options
  764                 | type_declaration . '|' '#'

    '|'  shift, and go to state 418

    $default  reduce using rule 553 (tuple_type)


State 616

  769 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 . "end of code block"

    "end of code block"  shift, and go to state 836


State 617

  560 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 837


State 618

  565 variant_alias_type_list: variant_alias_type_list variant_type . c_or_s

    "end of expression"  shift, and go to state 611
    ','                  shift, and go to state 612

    c_or_s  go to state 838


State 619

  564 variant_alias_type_list: variant_alias_type_list c_or_s .

    $default  reduce using rule 564 (variant_alias_type_list)


State 620

  774 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 . "end of code block"

    "end of code block"  shift, and go to state 839


State 621

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'
  550 function_argument_declaration: "$a" '(' expr . ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 840


State 622

  640 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 841


State 623

  639 variable_name_with_pos_list: "name" .
  641                            | "name" . "aka" "name"

    "aka"  shift, and go to state 842

    $default  reduce using rule 639 (variable_name_with_pos_list)


State 624

  549 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration .

    $default  reduce using rule 549 (function_argument_declaration)


State 625

  568 variable_declaration: variable_name_with_pos_list .
  569                     | variable_name_with_pos_list . '&'
  570                     | variable_name_with_pos_list . ':' type_declaration
  571                     | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  572                     | variable_name_with_pos_list . copy_or_move expr
  573                     | variable_name_with_pos_list . copy_or_move expr_pipe
  642 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  643                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 843
    ','   shift, and go to state 844
    '='   shift, and go to state 845
    ':'   shift, and go to state 846
    '&'   shift, and go to state 847

    $default  reduce using rule 568 (variable_declaration)

    copy_or_move  go to state 848


State 626

  552 function_argument_list: function_argument_list "end of expression" function_argument_declaration .

    $default  reduce using rule 552 (function_argument_list)


State 627

  827 make_struct_decl: "struct" '<' . $@88 type_declaration_no_options '>' $@89 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 825 ($@88)

    $@88  go to state 849


State 628

  830 make_struct_decl: "class" '<' . $@90 type_declaration_no_options '>' $@91 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 828 ($@90)

    $@90  go to state 850


State 629

   78 expression_while_loop: "while" expr . expression_block
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 735
    "as"                   shift, and go to state 736
    "<<"                   shift, and go to state 745
    ">>"                   shift, and go to state 746
    "++"                   shift, and go to state 747
    "--"                   shift, and go to state 748
    "<="                   shift, and go to state 749
    ">="                   shift, and go to state 752
    "=="                   shift, and go to state 753
    "!="                   shift, and go to state 754
    "->"                   shift, and go to state 755
    "??"                   shift, and go to state 757
    "?."                   shift, and go to state 758
    "?["                   shift, and go to state 759
    "<|"                   shift, and go to state 760
    "|>"                   shift, and go to state 761
    "<<<"                  shift, and go to state 763
    ">>>"                  shift, and go to state 764
    "&&"                   shift, and go to state 767
    "||"                   shift, and go to state 768
    "^^"                   shift, and go to state 769
    ".."                   shift, and go to state 773
    "begin of code block"  shift, and go to state 286
    '?'                    shift, and go to state 775
    '|'                    shift, and go to state 776
    '^'                    shift, and go to state 777
    '&'                    shift, and go to state 778
    '<'                    shift, and go to state 779
    '>'                    shift, and go to state 780
    '-'                    shift, and go to state 781
    '+'                    shift, and go to state 782
    '*'                    shift, and go to state 783
    '/'                    shift, and go to state 784
    '%'                    shift, and go to state 785
    '.'                    shift, and go to state 786
    '['                    shift, and go to state 787

    expression_block  go to state 851


State 630

   76 expression_for_loop: "for" $@4 . variable_name_with_pos_list "in" expr_list expression_block

    "$i"    shift, and go to state 622
    "name"  shift, and go to state 623

    variable_name_with_pos_list  go to state 852


State 631

  275 new_type_declaration: '<' . $@11 type_declaration '>' $@12

    $default  reduce using rule 273 ($@11)

    $@11  go to state 853


State 632

  277 expr_new: "new" new_type_declaration .
  278         | "new" new_type_declaration . '(' use_initializer ')'
  279         | "new" new_type_declaration . '(' expr_list ')'
  280         | "new" new_type_declaration . '(' make_struct_single ')'
  281         | "new" new_type_declaration . '(' "uninitialized" make_struct_single ')'

    '('  shift, and go to state 854

    '('       [reduce using rule 277 (expr_new)]
    $default  reduce using rule 277 (expr_new)


State 633

  276 new_type_declaration: structure_type_declaration .

    $default  reduce using rule 276 (new_type_declaration)


State 634

  282 expr_new: "new" make_decl .

    $default  reduce using rule 282 (expr_new)


State 635

  324 expr_type_info: "typeinfo" '(' . name_in_namespace expr ')'
  325               | "typeinfo" '(' . name_in_namespace '<' "name" '>' expr ')'
  326               | "typeinfo" '(' . name_in_namespace '<' "name" c_or_s "name" '>' expr ')'

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 855


State 636

  327 expr_type_info: "typeinfo" name_in_namespace . '(' expr ')'
  328               | "typeinfo" name_in_namespace . '<' "name" '>' '(' expr ')'
  329               | "typeinfo" name_in_namespace . '<' "name" "end of expression" "name" '>' '(' expr ')'

    '<'  shift, and go to state 856
    '('  shift, and go to state 857


State 637

  323 expr_type_decl: "type" '<' . $@19 type_declaration '>' $@20

    $default  reduce using rule 321 ($@19)

    $@19  go to state 858


State 638

  853 make_dim_decl: "array" "struct" . '<' $@98 type_declaration_no_options '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 859


State 639

  856 make_dim_decl: "array" "tuple" . '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 860


State 640

  859 make_dim_decl: "array" "variant" . '<' $@102 type_declaration_no_options '>' $@103 '(' make_variant_dim ')'

    '<'  shift, and go to state 861


State 641

  863 make_dim_decl: "array" '<' . $@104 type_declaration_no_options '>' $@105 '(' optional_expr_list ')'

    $default  reduce using rule 861 ($@104)

    $@104  go to state 862


State 642

  860 make_dim_decl: "array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 863
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 714
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 643

  287 expression_return_no_pipe: "return" "<-" . expr_list
  290 expression_return: "return" "<-" . expr_pipe

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 467
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "$ <|"                            shift, and go to state 471
    "@ <|"                            shift, and go to state 472
    "@@ <|"                           shift, and go to state 473
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expr_call_pipe          go to state 518
    expression_keyword      go to state 521
    expr_pipe               go to state 864
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 865
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_assign             go to state 646
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 647
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 644

  289 expression_return: "return" expr_pipe .

    $default  reduce using rule 289 (expression_return)


State 645

  286 expression_return_no_pipe: "return" expr_list .
  331 expr_list: expr_list . ',' expr

    ','  shift, and go to state 866

    $default  reduce using rule 286 (expression_return_no_pipe)


State 646

  263 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 733


State 647

  221 expr_call_pipe: expr . expr_full_block_assumed_piped
  330 expr_list: expr .
  360 expr_assign: expr .
  361            | expr . '=' expr
  362            | expr . "<-" expr
  363            | expr . ":=" expr
  364            | expr . "&=" expr
  365            | expr . "|=" expr
  366            | expr . "^=" expr
  367            | expr . "&&=" expr
  368            | expr . "||=" expr
  369            | expr . "^^=" expr
  370            | expr . "+=" expr
  371            | expr . "-=" expr
  372            | expr . "*=" expr
  373            | expr . "/=" expr
  374            | expr . "%=" expr
  375            | expr . "<<=" expr
  376            | expr . ">>=" expr
  377            | expr . "<<<=" expr
  378            | expr . ">>>=" expr
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 735
    "as"    shift, and go to state 736
    "+="    shift, and go to state 867
    "-="    shift, and go to state 868
    "/="    shift, and go to state 869
    "*="    shift, and go to state 870
    "%="    shift, and go to state 871
    "&="    shift, and go to state 872
    "|="    shift, and go to state 873
    "^="    shift, and go to state 874
    "<<"    shift, and go to state 745
    ">>"    shift, and go to state 746
    "++"    shift, and go to state 747
    "--"    shift, and go to state 748
    "<="    shift, and go to state 749
    "<<="   shift, and go to state 875
    ">>="   shift, and go to state 876
    ">="    shift, and go to state 752
    "=="    shift, and go to state 753
    "!="    shift, and go to state 754
    "->"    shift, and go to state 755
    "<-"    shift, and go to state 877
    "??"    shift, and go to state 757
    "?."    shift, and go to state 758
    "?["    shift, and go to state 759
    "<|"    shift, and go to state 760
    "|>"    shift, and go to state 761
    ":="    shift, and go to state 762
    "<<<"   shift, and go to state 763
    ">>>"   shift, and go to state 764
    "<<<="  shift, and go to state 878
    ">>>="  shift, and go to state 879
    "&&"    shift, and go to state 767
    "||"    shift, and go to state 768
    "^^"    shift, and go to state 769
    "&&="   shift, and go to state 880
    "||="   shift, and go to state 881
    "^^="   shift, and go to state 882
    ".."    shift, and go to state 773
    '='     shift, and go to state 883
    '?'     shift, and go to state 775
    '|'     shift, and go to state 776
    '^'     shift, and go to state 777
    '&'     shift, and go to state 778
    '<'     shift, and go to state 779
    '>'     shift, and go to state 780
    '-'     shift, and go to state 781
    '+'     shift, and go to state 782
    '*'     shift, and go to state 783
    '/'     shift, and go to state 784
    '%'     shift, and go to state 785
    '.'     shift, and go to state 786
    '['     shift, and go to state 787
    '$'     shift, and go to state 504
    '@'     shift, and go to state 678

    " <|"     reduce using rule 360 (expr_assign)
    $default  reduce using rule 330 (expr_list)

    block_or_lambda                go to state 721
    expr_full_block_assumed_piped  go to state 788


State 648

  296 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 884


State 649

  875 make_table_decl: "table" '<' . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  876                | "table" '<' . type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 885


State 650

  874 make_table_decl: "table" '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    $default  reduce using rule 253 (optional_expr_map_tuple_list)

    string_builder                go to state 506
    expr_reader                   go to state 507
    optional_expr_map_tuple_list  go to state 886
    expression_keyword            go to state 568
    name_in_namespace             go to state 523
    expr_new                      go to state 525
    expr_cast                     go to state 535
    expr_type_decl                go to state 536
    expr_type_info                go to state 537
    block_or_lambda               go to state 538
    expr_full_block               go to state 539
    expr_numeric_const            go to state 540
    expr_named_call               go to state 543
    expr_method_call              go to state 544
    func_addr_expr                go to state 545
    expr_field                    go to state 546
    expr_call                     go to state 547
    expr                          go to state 695
    expr_mtag                     go to state 549
    basic_type_declaration        go to state 550
    make_decl                     go to state 551
    make_struct_decl              go to state 552
    make_map_tuple                go to state 703
    make_tuple_call               go to state 553
    make_dim_decl                 go to state 554
    expr_map_tuple_list           go to state 887
    make_table_decl               go to state 555
    array_comprehension           go to state 556


State 651

  272 expression_delete: "delete" "explicit" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 888
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 652

  271 expression_delete: "delete" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 271 (expression_delete)


State 653

  477 expr: "deref" '(' . expr ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 889
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 654

   79 expression_with: "with" expr . expression_block
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 735
    "as"                   shift, and go to state 736
    "<<"                   shift, and go to state 745
    ">>"                   shift, and go to state 746
    "++"                   shift, and go to state 747
    "--"                   shift, and go to state 748
    "<="                   shift, and go to state 749
    ">="                   shift, and go to state 752
    "=="                   shift, and go to state 753
    "!="                   shift, and go to state 754
    "->"                   shift, and go to state 755
    "??"                   shift, and go to state 757
    "?."                   shift, and go to state 758
    "?["                   shift, and go to state 759
    "<|"                   shift, and go to state 760
    "|>"                   shift, and go to state 761
    "<<<"                  shift, and go to state 763
    ">>>"                  shift, and go to state 764
    "&&"                   shift, and go to state 767
    "||"                   shift, and go to state 768
    "^^"                   shift, and go to state 769
    ".."                   shift, and go to state 773
    "begin of code block"  shift, and go to state 286
    '?'                    shift, and go to state 775
    '|'                    shift, and go to state 776
    '^'                    shift, and go to state 777
    '&'                    shift, and go to state 778
    '<'                    shift, and go to state 779
    '>'                    shift, and go to state 780
    '-'                    shift, and go to state 781
    '+'                    shift, and go to state 782
    '*'                    shift, and go to state 783
    '/'                    shift, and go to state 784
    '%'                    shift, and go to state 785
    '.'                    shift, and go to state 786
    '['                    shift, and go to state 787

    expression_block  go to state 890


State 655

   81 expression_with_alias: "assume" "name" . '=' $@5 expr

    '='  shift, and go to state 891


State 656

  314 expr_cast: "cast" '<' . $@13 type_declaration_no_options '>' $@14 expr

    $default  reduce using rule 312 ($@13)

    $@13  go to state 892


State 657

  317 expr_cast: "upcast" '<' . $@15 type_declaration_no_options '>' $@16 expr

    $default  reduce using rule 315 ($@15)

    $@15  go to state 893


State 658

  478 expr: "addr" '(' . expr ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 894
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 659

  244 expression_any: "pass" "end of expression" .

    $default  reduce using rule 244 (expression_any)


State 660

  320 expr_cast: "reinterpret" '<' . $@17 type_declaration_no_options '>' $@18 expr

    $default  reduce using rule 318 ($@17)

    $@17  go to state 895


State 661

   54 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 896


State 662

   55 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 897


State 663

   56 expression_goto: "goto" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 56 (expression_goto)


State 664

  509 expr: "unsafe" '(' . expr ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 898
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 665

   77 expression_unsafe: "unsafe" expression_block .

    $default  reduce using rule 77 (expression_unsafe)


State 666

  867 make_dim_decl: "fixed_array" '<' . $@106 type_declaration_no_options '>' $@107 '(' expr_list optional_comma ')'

    $default  reduce using rule 865 ($@106)

    $@106  go to state 899


State 667

  864 make_dim_decl: "fixed_array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 900
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 714
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 668

  836 make_struct_decl: "default" '<' . $@94 type_declaration_no_options '>' $@95 use_initializer

    $default  reduce using rule 834 ($@94)

    $@94  go to state 901


State 669

  845 make_tuple_call: "tuple" '<' . $@96 type_declaration_no_options '>' $@97 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 843 ($@96)

    $@96  go to state 902


State 670

  842 make_tuple_call: "tuple" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 903
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 714
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 671

  833 make_struct_decl: "variant" '<' . $@92 type_declaration_no_options '>' $@93 '(' make_variant_dim ')'

    $default  reduce using rule 831 ($@92)

    $@92  go to state 904


State 672

  223 expr_call_pipe: "generator" '<' . type_declaration_no_options '>' optional_capture_list expr_full_block_assumed_piped
  479 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  480     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 905


State 673

  292 expression_yield_no_pipe: "yield" "<-" . expr
  295 expression_yield: "yield" "<-" . expr_pipe

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 467
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "$ <|"                            shift, and go to state 471
    "@ <|"                            shift, and go to state 472
    "@@ <|"                           shift, and go to state 473
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expr_call_pipe          go to state 518
    expression_keyword      go to state 521
    expr_pipe               go to state 906
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_assign             go to state 646
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 907
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 674

  294 expression_yield: "yield" expr_pipe .

    $default  reduce using rule 294 (expression_yield)


State 675

  221 expr_call_pipe: expr . expr_full_block_assumed_piped
  291 expression_yield_no_pipe: "yield" expr .
  360 expr_assign: expr .
  361            | expr . '=' expr
  362            | expr . "<-" expr
  363            | expr . ":=" expr
  364            | expr . "&=" expr
  365            | expr . "|=" expr
  366            | expr . "^=" expr
  367            | expr . "&&=" expr
  368            | expr . "||=" expr
  369            | expr . "^^=" expr
  370            | expr . "+=" expr
  371            | expr . "-=" expr
  372            | expr . "*=" expr
  373            | expr . "/=" expr
  374            | expr . "%=" expr
  375            | expr . "<<=" expr
  376            | expr . ">>=" expr
  377            | expr . "<<<=" expr
  378            | expr . ">>>=" expr
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 735
    "as"    shift, and go to state 736
    "+="    shift, and go to state 867
    "-="    shift, and go to state 868
    "/="    shift, and go to state 869
    "*="    shift, and go to state 870
    "%="    shift, and go to state 871
    "&="    shift, and go to state 872
    "|="    shift, and go to state 873
    "^="    shift, and go to state 874
    "<<"    shift, and go to state 745
    ">>"    shift, and go to state 746
    "++"    shift, and go to state 747
    "--"    shift, and go to state 748
    "<="    shift, and go to state 749
    "<<="   shift, and go to state 875
    ">>="   shift, and go to state 876
    ">="    shift, and go to state 752
    "=="    shift, and go to state 753
    "!="    shift, and go to state 754
    "->"    shift, and go to state 755
    "<-"    shift, and go to state 877
    "??"    shift, and go to state 757
    "?."    shift, and go to state 758
    "?["    shift, and go to state 759
    "<|"    shift, and go to state 760
    "|>"    shift, and go to state 761
    ":="    shift, and go to state 762
    "<<<"   shift, and go to state 763
    ">>>"   shift, and go to state 764
    "<<<="  shift, and go to state 878
    ">>>="  shift, and go to state 879
    "&&"    shift, and go to state 767
    "||"    shift, and go to state 768
    "^^"    shift, and go to state 769
    "&&="   shift, and go to state 880
    "||="   shift, and go to state 881
    "^^="   shift, and go to state 882
    ".."    shift, and go to state 773
    '='     shift, and go to state 883
    '?'     shift, and go to state 775
    '|'     shift, and go to state 776
    '^'     shift, and go to state 777
    '&'     shift, and go to state 778
    '<'     shift, and go to state 779
    '>'     shift, and go to state 780
    '-'     shift, and go to state 781
    '+'     shift, and go to state 782
    '*'     shift, and go to state 783
    '/'     shift, and go to state 784
    '%'     shift, and go to state 785
    '.'     shift, and go to state 786
    '['     shift, and go to state 787
    '$'     shift, and go to state 504
    '@'     shift, and go to state 678

    " <|"     reduce using rule 360 (expr_assign)
    $default  reduce using rule 291 (expression_yield_no_pipe)

    block_or_lambda                go to state 721
    expr_full_block_assumed_piped  go to state 788


State 676

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  463     | "++" expr .
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 735
    "as"  shift, and go to state 736
    "++"  shift, and go to state 747
    "--"  shift, and go to state 748
    "->"  shift, and go to state 755
    "?."  shift, and go to state 758
    "?["  shift, and go to state 759
    "<|"  shift, and go to state 760
    "|>"  shift, and go to state 761
    '.'   shift, and go to state 786
    '['   shift, and go to state 787

    $default  reduce using rule 463 (expr)


State 677

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  464     | "--" expr .
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 735
    "as"  shift, and go to state 736
    "++"  shift, and go to state 747
    "--"  shift, and go to state 748
    "->"  shift, and go to state 755
    "?."  shift, and go to state 758
    "?["  shift, and go to state 759
    "<|"  shift, and go to state 760
    "|>"  shift, and go to state 761
    '.'   shift, and go to state 786
    '['   shift, and go to state 787

    $default  reduce using rule 464 (expr)


State 678

  336 block_or_lambda: '@' .
  337                | '@' . '@'

    '@'  shift, and go to state 908

    $default  reduce using rule 336 (block_or_lambda)


State 679

  348 expr_block: expression_block .

    $default  reduce using rule 348 (expr_block)


State 680

  349 expr_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 15

    $default  reduce using rule 120 (optional_annotation_list)

    optional_annotation_list  go to state 909


State 681

  266 expr_pipe: "$ <|" expr_block .

    $default  reduce using rule 266 (expr_pipe)


State 682

  264 expr_pipe: "@ <|" expr_block .

    $default  reduce using rule 264 (expr_pipe)


State 683

  265 expr_pipe: "@@ <|" expr_block .

    $default  reduce using rule 265 (expr_pipe)


State 684

  511 expr_mtag: "$$" '(' . expr ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 910
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 685

  512 expr_mtag: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 911
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 686

  513 expr_mtag: "$v" '(' . expr ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 912
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 687

  514 expr_mtag: "$b" '(' . expr ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 913
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 688

  515 expr_mtag: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 914
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 689

  517 expr_mtag: "$c" '(' . expr ')' '(' ')'
  518          | "$c" '(' . expr ')' '(' expr_list ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 915
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 690

  883 array_comprehension: "[[" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']'

    "$i"    shift, and go to state 622
    "name"  shift, and go to state 623

    variable_name_with_pos_list  go to state 916


State 691

  701 type_declaration_no_options: type_declaration_no_options . dim_list
  702                            | type_declaration_no_options . '[' ']'
  710                            | type_declaration_no_options . '-' '[' ']'
  711                            | type_declaration_no_options . "explicit"
  712                            | type_declaration_no_options . "const"
  713                            | type_declaration_no_options . '-' "const"
  714                            | type_declaration_no_options . '&'
  715                            | type_declaration_no_options . '-' '&'
  716                            | type_declaration_no_options . '#'
  717                            | type_declaration_no_options . "implicit"
  718                            | type_declaration_no_options . '-' '#'
  719                            | type_declaration_no_options . "==" "const"
  720                            | type_declaration_no_options . "==" '&'
  721                            | type_declaration_no_options . '?'
  725                            | type_declaration_no_options . "??"
  819 make_struct_decl: "[[" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  820                 | "[[" type_declaration_no_options . optional_block optional_trailing_delim_sqr_sqr
  821                 | "[[" type_declaration_no_options . '(' ')' optional_block optional_trailing_delim_sqr_sqr
  822                 | "[[" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  849 make_dim_decl: "[[" type_declaration_no_options . make_dim optional_trailing_semicolon_sqr_sqr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "const"                           shift, and go to state 407
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "where"                           shift, and go to state 917
    "reinterpret"                     shift, and go to state 458
    "implicit"                        shift, and go to state 408
    "explicit"                        shift, and go to state 409
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "=="                              shift, and go to state 410
    "??"                              shift, and go to state 411
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "$f"                              shift, and go to state 918
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 919
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '?'                               shift, and go to state 412
    '&'                               shift, and go to state 413
    '-'                               shift, and go to state 920
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 921
    '('                               shift, and go to state 922
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505
    '#'                               shift, and go to state 416

    $default  reduce using rule 803 (optional_block)

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 923
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    dim_list                go to state 417
    make_decl               go to state 551
    make_struct_fields      go to state 924
    make_struct_dim         go to state 925
    optional_block          go to state 926
    make_struct_decl        go to state 552
    make_tuple              go to state 927
    make_tuple_call         go to state 553
    make_dim                go to state 928
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 692

  884 array_comprehension: "[{" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "$i"    shift, and go to state 622
    "name"  shift, and go to state 623

    variable_name_with_pos_list  go to state 929


State 693

  701 type_declaration_no_options: type_declaration_no_options . dim_list
  702                            | type_declaration_no_options . '[' ']'
  710                            | type_declaration_no_options . '-' '[' ']'
  711                            | type_declaration_no_options . "explicit"
  712                            | type_declaration_no_options . "const"
  713                            | type_declaration_no_options . '-' "const"
  714                            | type_declaration_no_options . '&'
  715                            | type_declaration_no_options . '-' '&'
  716                            | type_declaration_no_options . '#'
  717                            | type_declaration_no_options . "implicit"
  718                            | type_declaration_no_options . '-' '#'
  719                            | type_declaration_no_options . "==" "const"
  720                            | type_declaration_no_options . "==" '&'
  721                            | type_declaration_no_options . '?'
  725                            | type_declaration_no_options . "??"
  823 make_struct_decl: "[{" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_cur_sqr
  824                 | "[{" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  850 make_dim_decl: "[{" type_declaration_no_options . make_dim optional_trailing_semicolon_cur_sqr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "const"                           shift, and go to state 407
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "implicit"                        shift, and go to state 408
    "explicit"                        shift, and go to state 409
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "=="                              shift, and go to state 410
    "??"                              shift, and go to state 411
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "$f"                              shift, and go to state 918
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 919
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '?'                               shift, and go to state 412
    '&'                               shift, and go to state 413
    '-'                               shift, and go to state 920
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 921
    '('                               shift, and go to state 930
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505
    '#'                               shift, and go to state 416

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 923
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    dim_list                go to state 417
    make_decl               go to state 551
    make_struct_fields      go to state 924
    make_struct_dim         go to state 931
    make_struct_decl        go to state 552
    make_tuple              go to state 927
    make_tuple_call         go to state 553
    make_dim                go to state 932
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 694

  886 array_comprehension: "{{" "for" . variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "$i"    shift, and go to state 622
    "name"  shift, and go to state 623

    variable_name_with_pos_list  go to state 933


State 695

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'
  840 make_map_tuple: expr . "=>" expr
  841               | expr .

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "=>"   shift, and go to state 934
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 841 (make_map_tuple)


State 696

  868 make_table: make_map_tuple .

    $default  reduce using rule 868 (make_table)


State 697

  869 make_table: make_table . "end of expression" make_map_tuple
  873 make_table_decl: "{{" make_table . optional_trailing_semicolon_cur_cur

    "end of code block"  shift, and go to state 935
    "end of expression"  shift, and go to state 936
    ";}}"                shift, and go to state 937

    optional_trailing_semicolon_cur_cur  go to state 938


State 698

  259 expression_keyword: "keyword" '<' . $@7 type_declaration_no_options_list '>' $@8 expr

    $default  reduce using rule 257 ($@7)

    $@7  go to state 939


State 699

  248 expr_keyword: "keyword" expr . expression_block
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 735
    "as"                   shift, and go to state 736
    "<<"                   shift, and go to state 745
    ">>"                   shift, and go to state 746
    "++"                   shift, and go to state 747
    "--"                   shift, and go to state 748
    "<="                   shift, and go to state 749
    ">="                   shift, and go to state 752
    "=="                   shift, and go to state 753
    "!="                   shift, and go to state 754
    "->"                   shift, and go to state 755
    "??"                   shift, and go to state 757
    "?."                   shift, and go to state 758
    "?["                   shift, and go to state 759
    "<|"                   shift, and go to state 760
    "|>"                   shift, and go to state 761
    "<<<"                  shift, and go to state 763
    ">>>"                  shift, and go to state 764
    "&&"                   shift, and go to state 767
    "||"                   shift, and go to state 768
    "^^"                   shift, and go to state 769
    ".."                   shift, and go to state 773
    "begin of code block"  shift, and go to state 286
    '?'                    shift, and go to state 775
    '|'                    shift, and go to state 776
    '^'                    shift, and go to state 777
    '&'                    shift, and go to state 778
    '<'                    shift, and go to state 779
    '>'                    shift, and go to state 780
    '-'                    shift, and go to state 781
    '+'                    shift, and go to state 782
    '*'                    shift, and go to state 783
    '/'                    shift, and go to state 784
    '%'                    shift, and go to state 785
    '.'                    shift, and go to state 786
    '['                    shift, and go to state 787

    expression_block  go to state 940


State 700

  262 expression_keyword: "type function" '<' . $@9 type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces

    $default  reduce using rule 260 ($@9)

    $@9  go to state 941


State 701

   29 string_builder_body: string_builder_body . character_sequence
   30                    | string_builder_body . "{" expr "}"
   31 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 162
    STRING_CHARACTER_ESC  shift, and go to state 163
    "end of the string"   shift, and go to state 942
    "{"                   shift, and go to state 943

    character_sequence  go to state 944


State 702

  885 array_comprehension: "begin of code block" "for" . variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "$i"    shift, and go to state 622
    "name"  shift, and go to state 623

    variable_name_with_pos_list  go to state 945


State 703

  870 expr_map_tuple_list: make_map_tuple .

    $default  reduce using rule 870 (expr_map_tuple_list)


State 704

  871 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  872 make_table_decl: "begin of code block" expr_map_tuple_list . optional_comma "end of code block"

    ','  shift, and go to state 946

    $default  reduce using rule 879 (optional_comma)

    optional_comma  go to state 947


State 705

  220 expression_block: "begin of code block" expressions "end of code block" "finally" . "begin of code block" expressions "end of code block"

    "begin of code block"  shift, and go to state 948


State 706

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  440 expr: '-' expr .
  441     | expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 735
    "as"  shift, and go to state 736
    "++"  shift, and go to state 747
    "--"  shift, and go to state 748
    "->"  shift, and go to state 755
    "?."  shift, and go to state 758
    "?["  shift, and go to state 759
    "<|"  shift, and go to state 760
    "|>"  shift, and go to state 761
    '.'   shift, and go to state 786
    '['   shift, and go to state 787

    $default  reduce using rule 440 (expr)


State 707

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  439 expr: '+' expr .
  441     | expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 735
    "as"  shift, and go to state 736
    "++"  shift, and go to state 747
    "--"  shift, and go to state 748
    "->"  shift, and go to state 755
    "?."  shift, and go to state 758
    "?["  shift, and go to state 759
    "<|"  shift, and go to state 760
    "|>"  shift, and go to state 761
    '.'   shift, and go to state 786
    '['   shift, and go to state 787

    $default  reduce using rule 439 (expr)


State 708

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  476     | '*' expr .
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 758
    "?["  shift, and go to state 759
    '.'   shift, and go to state 786
    '['   shift, and go to state 787

    $default  reduce using rule 476 (expr)


State 709

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  438 expr: '~' expr .
  441     | expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 735
    "as"  shift, and go to state 736
    "++"  shift, and go to state 747
    "--"  shift, and go to state 748
    "->"  shift, and go to state 755
    "?."  shift, and go to state 758
    "?["  shift, and go to state 759
    "<|"  shift, and go to state 760
    "|>"  shift, and go to state 761
    '.'   shift, and go to state 786
    '['   shift, and go to state 787

    $default  reduce using rule 438 (expr)


State 710

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  437 expr: '!' expr .
  441     | expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 735
    "as"  shift, and go to state 736
    "++"  shift, and go to state 747
    "--"  shift, and go to state 748
    "->"  shift, and go to state 755
    "?."  shift, and go to state 758
    "?["  shift, and go to state 759
    "<|"  shift, and go to state 760
    "|>"  shift, and go to state 761
    '.'   shift, and go to state 786
    '['   shift, and go to state 787

    $default  reduce using rule 437 (expr)


State 711

  881 array_comprehension: '[' "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 622
    "name"  shift, and go to state 623

    variable_name_with_pos_list  go to state 949


State 712

  882 array_comprehension: '[' "iterator" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "for"  shift, and go to state 950


State 713

  331 expr_list: expr_list . ',' expr
  848 make_dim_decl: '[' expr_list . optional_comma ']'

    ','  shift, and go to state 951

    $default  reduce using rule 879 (optional_comma)

    optional_comma  go to state 952


State 714

  330 expr_list: expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 330 (expr_list)


State 715

  331 expr_list: expr_list . ',' expr
  467 expr: '(' expr_list . optional_comma ')'

    ','  shift, and go to state 951

    $default  reduce using rule 879 (optional_comma)

    optional_comma  go to state 953


State 716

  337 block_or_lambda: '@' '@' .
  406 func_addr_expr: '@' '@' . func_addr_name
  409               | '@' '@' . '<' $@22 type_declaration_no_options '>' $@23 func_addr_name
  412               | '@' '@' . '<' $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name
  526 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 954
    "$c"    shift, and go to state 955
    "name"  shift, and go to state 59
    '<'     shift, and go to state 956

    $default  reduce using rule 337 (block_or_lambda)

    name_in_namespace  go to state 957
    func_addr_name     go to state 958


State 717

  242 expression_any: expression_label "end of expression" .

    $default  reduce using rule 242 (expression_any)


State 718

  243 expression_any: expression_goto "end of expression" .

    $default  reduce using rule 243 (expression_any)


State 719

   72 expression_if_then_else: if_or_static_if expr . expression_block expression_else
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 735
    "as"                   shift, and go to state 736
    "<<"                   shift, and go to state 745
    ">>"                   shift, and go to state 746
    "++"                   shift, and go to state 747
    "--"                   shift, and go to state 748
    "<="                   shift, and go to state 749
    ">="                   shift, and go to state 752
    "=="                   shift, and go to state 753
    "!="                   shift, and go to state 754
    "->"                   shift, and go to state 755
    "??"                   shift, and go to state 757
    "?."                   shift, and go to state 758
    "?["                   shift, and go to state 759
    "<|"                   shift, and go to state 760
    "|>"                   shift, and go to state 761
    "<<<"                  shift, and go to state 763
    ">>>"                  shift, and go to state 764
    "&&"                   shift, and go to state 767
    "||"                   shift, and go to state 768
    "^^"                   shift, and go to state 769
    ".."                   shift, and go to state 773
    "begin of code block"  shift, and go to state 286
    '?'                    shift, and go to state 775
    '|'                    shift, and go to state 776
    '^'                    shift, and go to state 777
    '&'                    shift, and go to state 778
    '<'                    shift, and go to state 779
    '>'                    shift, and go to state 780
    '-'                    shift, and go to state 781
    '+'                    shift, and go to state 782
    '*'                    shift, and go to state 783
    '/'                    shift, and go to state 784
    '%'                    shift, and go to state 785
    '.'                    shift, and go to state 786
    '['                    shift, and go to state 787

    expression_block  go to state 959


State 720

   74 expression_if_then_else: expression_if_one_liner "if" . $@3 expr expression_else_one_liner "end of expression"

    $default  reduce using rule 73 ($@3)

    $@3  go to state 960


State 721

  352 expr_full_block_assumed_piped: block_or_lambda . $@21 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

    $default  reduce using rule 351 ($@21)

    $@21  go to state 961


State 722

  222 expr_call_pipe: expression_keyword expr_full_block_assumed_piped .

    $default  reduce using rule 222 (expr_call_pipe)


State 723

  508 expr: name_in_namespace "name" .

    $default  reduce using rule 508 (expr)


State 724

  400 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  401                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  420 expr_call: name_in_namespace '(' . ')'
  421          | name_in_namespace '(' . "uninitialized" ')'
  422          | name_in_namespace '(' . make_struct_single ')'
  423          | name_in_namespace '(' . "uninitialized" make_struct_single ')'
  424          | name_in_namespace '(' . expr_list ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "uninitialized"                   shift, and go to state 962
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "$f"                              shift, and go to state 918
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 919
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 963
    '('                               shift, and go to state 503
    ')'                               shift, and go to state 964
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 965
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 714
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_fields      go to state 966
    make_struct_single      go to state 967
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 725

  229 expression_any: expression_delete "end of expression" .

    $default  reduce using rule 229 (expression_any)


State 726

  236 expression_any: expression_break "end of expression" .

    $default  reduce using rule 236 (expression_any)


State 727

  237 expression_any: expression_continue "end of expression" .

    $default  reduce using rule 237 (expression_any)


State 728

  288 expression_return: expression_return_no_pipe "end of expression" .

    $default  reduce using rule 288 (expression_return)


State 729

  293 expression_yield: expression_yield_no_pipe "end of expression" .

    $default  reduce using rule 293 (expression_yield)


State 730

  302 optional_in_scope: "inscope" .

    $default  reduce using rule 302 (optional_in_scope)


State 731

  310 expression_let: kwd_let optional_in_scope . let_variable_declaration
  311               | kwd_let optional_in_scope . tuple_expansion_variable_declaration

    "$i"    shift, and go to state 306
    "[["    shift, and go to state 968
    "name"  shift, and go to state 307
    '('     shift, and go to state 969

    tuple_expansion_variable_declaration  go to state 970
    let_variable_name_with_pos_list       go to state 308
    let_variable_declaration              go to state 971


State 732

  350 expr_full_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "capture"  shift, and go to state 972
    "[["       shift, and go to state 973

    $default  reduce using rule 345 (optional_capture_list)

    optional_capture_list  go to state 974


State 733

  263 expr_pipe: expr_assign " <|" . expr_block

    "begin of code block"  shift, and go to state 286
    '$'                    shift, and go to state 504
    '@'                    shift, and go to state 678

    expression_block  go to state 679
    block_or_lambda   go to state 680
    expr_block        go to state 975


State 734

  228 expression_any: expr_assign "end of expression" .

    $default  reduce using rule 228 (expression_any)


State 735

  485 expr: expr "is" . "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr "is" . basic_type_declaration
  487     | expr "is" . "name"
  525 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 976
    "bool"      shift, and go to state 317
    "void"      shift, and go to state 318
    "string"    shift, and go to state 319
    "int"       shift, and go to state 321
    "int2"      shift, and go to state 322
    "int3"      shift, and go to state 323
    "int4"      shift, and go to state 324
    "uint"      shift, and go to state 325
    "bitfield"  shift, and go to state 464
    "uint2"     shift, and go to state 327
    "uint3"     shift, and go to state 328
    "uint4"     shift, and go to state 329
    "float"     shift, and go to state 330
    "float2"    shift, and go to state 331
    "float3"    shift, and go to state 332
    "float4"    shift, and go to state 333
    "range"     shift, and go to state 334
    "urange"    shift, and go to state 335
    "range64"   shift, and go to state 336
    "urange64"  shift, and go to state 337
    "int64"     shift, and go to state 339
    "uint64"    shift, and go to state 340
    "double"    shift, and go to state 341
    "int8"      shift, and go to state 344
    "uint8"     shift, and go to state 345
    "int16"     shift, and go to state 346
    "uint16"    shift, and go to state 347
    "$f"        shift, and go to state 977
    "name"      shift, and go to state 978

    basic_type_declaration  go to state 979


State 736

  488 expr: expr "as" . "name"
  491     | expr "as" . "type" '<' $@30 type_declaration '>' $@31
  492     | expr "as" . basic_type_declaration
  523 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 980
    "bool"      shift, and go to state 317
    "void"      shift, and go to state 318
    "string"    shift, and go to state 319
    "int"       shift, and go to state 321
    "int2"      shift, and go to state 322
    "int3"      shift, and go to state 323
    "int4"      shift, and go to state 324
    "uint"      shift, and go to state 325
    "bitfield"  shift, and go to state 464
    "uint2"     shift, and go to state 327
    "uint3"     shift, and go to state 328
    "uint4"     shift, and go to state 329
    "float"     shift, and go to state 330
    "float2"    shift, and go to state 331
    "float3"    shift, and go to state 332
    "float4"    shift, and go to state 333
    "range"     shift, and go to state 334
    "urange"    shift, and go to state 335
    "range64"   shift, and go to state 336
    "urange64"  shift, and go to state 337
    "int64"     shift, and go to state 339
    "uint64"    shift, and go to state 340
    "double"    shift, and go to state 341
    "int8"      shift, and go to state 344
    "uint8"     shift, and go to state 345
    "int16"     shift, and go to state 346
    "uint16"    shift, and go to state 347
    "$f"        shift, and go to state 981
    "name"      shift, and go to state 982

    basic_type_declaration  go to state 983


State 737

  370 expr_assign: expr "+=" . expr
  391 expr_assign_pipe: expr "+=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 467
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "$ <|"                            shift, and go to state 984
    "@ <|"                            shift, and go to state 985
    "@@ <|"                           shift, and go to state 986
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expr_call_pipe          go to state 987
    expression_keyword      go to state 521
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_assign_pipe_right  go to state 988
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 989
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 738

  371 expr_assign: expr "-=" . expr
  392 expr_assign_pipe: expr "-=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 467
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "$ <|"                            shift, and go to state 984
    "@ <|"                            shift, and go to state 985
    "@@ <|"                           shift, and go to state 986
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expr_call_pipe          go to state 987
    expression_keyword      go to state 521
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_assign_pipe_right  go to state 990
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 991
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 739

  373 expr_assign: expr "/=" . expr
  394 expr_assign_pipe: expr "/=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 467
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "$ <|"                            shift, and go to state 984
    "@ <|"                            shift, and go to state 985
    "@@ <|"                           shift, and go to state 986
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expr_call_pipe          go to state 987
    expression_keyword      go to state 521
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_assign_pipe_right  go to state 992
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 993
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 740

  372 expr_assign: expr "*=" . expr
  393 expr_assign_pipe: expr "*=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 467
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "$ <|"                            shift, and go to state 984
    "@ <|"                            shift, and go to state 985
    "@@ <|"                           shift, and go to state 986
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expr_call_pipe          go to state 987
    expression_keyword      go to state 521
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_assign_pipe_right  go to state 994
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 995
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 741

  374 expr_assign: expr "%=" . expr
  395 expr_assign_pipe: expr "%=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 467
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "$ <|"                            shift, and go to state 984
    "@ <|"                            shift, and go to state 985
    "@@ <|"                           shift, and go to state 986
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expr_call_pipe          go to state 987
    expression_keyword      go to state 521
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_assign_pipe_right  go to state 996
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 997
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 742

  364 expr_assign: expr "&=" . expr
  385 expr_assign_pipe: expr "&=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 467
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "$ <|"                            shift, and go to state 984
    "@ <|"                            shift, and go to state 985
    "@@ <|"                           shift, and go to state 986
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expr_call_pipe          go to state 987
    expression_keyword      go to state 521
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_assign_pipe_right  go to state 998
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 999
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 743

  365 expr_assign: expr "|=" . expr
  386 expr_assign_pipe: expr "|=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 467
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "$ <|"                            shift, and go to state 984
    "@ <|"                            shift, and go to state 985
    "@@ <|"                           shift, and go to state 986
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expr_call_pipe          go to state 987
    expression_keyword      go to state 521
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_assign_pipe_right  go to state 1000
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1001
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 744

  366 expr_assign: expr "^=" . expr
  387 expr_assign_pipe: expr "^=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 467
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "$ <|"                            shift, and go to state 984
    "@ <|"                            shift, and go to state 985
    "@@ <|"                           shift, and go to state 986
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expr_call_pipe          go to state 987
    expression_keyword      go to state 521
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_assign_pipe_right  go to state 1002
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1003
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 745

  441 expr: expr "<<" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1004
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 746

  442 expr: expr ">>" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1005
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 747

  465 expr: expr "++" .

    $default  reduce using rule 465 (expr)


State 748

  466 expr: expr "--" .

    $default  reduce using rule 466 (expr)


State 749

  454 expr: expr "<=" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1006
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 750

  375 expr_assign: expr "<<=" . expr
  396 expr_assign_pipe: expr "<<=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 467
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "$ <|"                            shift, and go to state 984
    "@ <|"                            shift, and go to state 985
    "@@ <|"                           shift, and go to state 986
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expr_call_pipe          go to state 987
    expression_keyword      go to state 521
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_assign_pipe_right  go to state 1007
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1008
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 751

  376 expr_assign: expr ">>=" . expr
  397 expr_assign_pipe: expr ">>=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 467
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "$ <|"                            shift, and go to state 984
    "@ <|"                            shift, and go to state 985
    "@@ <|"                           shift, and go to state 986
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expr_call_pipe          go to state 987
    expression_keyword      go to state 521
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_assign_pipe_right  go to state 1009
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1010
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 752

  455 expr: expr ">=" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1011
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 753

  452 expr: expr "==" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1012
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 754

  453 expr: expr "!=" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1013
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 755

  402 expr_method_call: expr "->" . "name" '(' ')'
  403                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 1014


State 756

  362 expr_assign: expr "<-" . expr
  384 expr_assign_pipe: expr "<-" . expr_assign_pipe_right

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 467
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "$ <|"                            shift, and go to state 984
    "@ <|"                            shift, and go to state 985
    "@@ <|"                           shift, and go to state 986
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expr_call_pipe          go to state 987
    expression_keyword      go to state 521
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_assign_pipe_right  go to state 1015
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1016
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 757

  481 expr: expr "??" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1017
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 758

  472 expr: expr "?." . "name"
  520 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1018
    "name"  shift, and go to state 1019


State 759

  470 expr: expr "?[" . expr ']'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1020
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 760

  505 expr: expr "<|" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1021
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 761

  506 expr: expr "|>" . expr
  507     | expr "|>" . basic_type_declaration

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1022
    expr_mtag               go to state 549
    basic_type_declaration  go to state 1023
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 762

  363 expr_assign: expr ":=" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1024
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 763

  443 expr: expr "<<<" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1025
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 764

  444 expr: expr ">>>" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1026
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 765

  377 expr_assign: expr "<<<=" . expr
  398 expr_assign_pipe: expr "<<<=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 467
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "$ <|"                            shift, and go to state 984
    "@ <|"                            shift, and go to state 985
    "@@ <|"                           shift, and go to state 986
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expr_call_pipe          go to state 987
    expression_keyword      go to state 521
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_assign_pipe_right  go to state 1027
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1028
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 766

  378 expr_assign: expr ">>>=" . expr
  399 expr_assign_pipe: expr ">>>=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 467
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "$ <|"                            shift, and go to state 984
    "@ <|"                            shift, and go to state 985
    "@@ <|"                           shift, and go to state 986
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expr_call_pipe          go to state 987
    expression_keyword      go to state 521
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_assign_pipe_right  go to state 1029
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1030
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 767

  459 expr: expr "&&" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1031
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 768

  460 expr: expr "||" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1032
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 769

  461 expr: expr "^^" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1033
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 770

  367 expr_assign: expr "&&=" . expr
  388 expr_assign_pipe: expr "&&=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 467
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "$ <|"                            shift, and go to state 984
    "@ <|"                            shift, and go to state 985
    "@@ <|"                           shift, and go to state 986
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expr_call_pipe          go to state 987
    expression_keyword      go to state 521
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_assign_pipe_right  go to state 1034
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1035
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 771

  368 expr_assign: expr "||=" . expr
  389 expr_assign_pipe: expr "||=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 467
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "$ <|"                            shift, and go to state 984
    "@ <|"                            shift, and go to state 985
    "@@ <|"                           shift, and go to state 986
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expr_call_pipe          go to state 987
    expression_keyword      go to state 521
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_assign_pipe_right  go to state 1036
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1037
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 772

  369 expr_assign: expr "^^=" . expr
  390 expr_assign_pipe: expr "^^=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 467
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "$ <|"                            shift, and go to state 984
    "@ <|"                            shift, and go to state 985
    "@@ <|"                           shift, and go to state 986
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expr_call_pipe          go to state 987
    expression_keyword      go to state 521
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_assign_pipe_right  go to state 1038
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1039
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 773

  462 expr: expr ".." . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1040
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 774

  361 expr_assign: expr '=' . expr
  383 expr_assign_pipe: expr '=' . expr_assign_pipe_right

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 467
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "$ <|"                            shift, and go to state 984
    "@ <|"                            shift, and go to state 985
    "@@ <|"                           shift, and go to state 986
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expr_call_pipe          go to state 987
    expression_keyword      go to state 521
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_assign_pipe_right  go to state 1041
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1042
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 775

  482 expr: expr '?' . expr ':' expr
  493     | expr '?' . "as" "name"
  496     | expr '?' . "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr '?' . "as" basic_type_declaration
  524 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "as"                              shift, and go to state 1043
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1044
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 776

  457 expr: expr '|' . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1045
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 777

  458 expr: expr '^' . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1046
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 778

  456 expr: expr '&' . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1047
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 779

  450 expr: expr '<' . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1048
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 780

  451 expr: expr '>' . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1049
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 781

  446 expr: expr '-' . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1050
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 782

  445 expr: expr '+' . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1051
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 783

  447 expr: expr '*' . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1052
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 784

  448 expr: expr '/' . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1053
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 785

  449 expr: expr '%' . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1054
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 786

  413 expr_field: expr '.' . "name"
  414           | expr '.' . '.' "name"
  415           | expr '.' . "name" '(' ')'
  416           | expr '.' . "name" '(' expr_list ')'
  419           | expr '.' . $@26 error $@27
  469 expr: expr '.' . '[' expr ']'
  471     | expr '.' . "?[" expr ']'
  473     | expr '.' . "?." "name"
  519 expr_mtag: expr '.' . "$f" '(' expr ')'
  521          | expr '.' . '.' "$f" '(' expr ')'
  522          | expr '.' . "?." "$f" '(' expr ')'

    "?."    shift, and go to state 1055
    "?["    shift, and go to state 1056
    "$f"    shift, and go to state 1057
    "name"  shift, and go to state 1058
    '.'     shift, and go to state 1059
    '['     shift, and go to state 1060

    $default  reduce using rule 417 ($@26)

    $@26  go to state 1061


State 787

  468 expr: expr '[' . expr ']'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1062
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 788

  221 expr_call_pipe: expr expr_full_block_assumed_piped .

    $default  reduce using rule 221 (expr_call_pipe)


State 789

  425 expr_call: basic_type_declaration '(' . ')'
  426          | basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    ')'                               shift, and go to state 1063
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 1064
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 714
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 790

  602 enum_list: enum_list "name" "end of expression" .

    $default  reduce using rule 602 (enum_list)


State 791

  603 enum_list: enum_list "name" '=' . expr "end of expression"

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1065
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 792

  620 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list $@42 "end of code block" .

    $default  reduce using rule 620 (enum_declaration)


State 793

  601 enum_list: enum_list . "end of expression"
  602          | enum_list . "name" "end of expression"
  603          | enum_list . "name" '=' expr "end of expression"
  623 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list . $@44 "end of code block"

    "name"               shift, and go to state 557
    "end of expression"  shift, and go to state 558

    $default  reduce using rule 622 ($@44)

    $@44  go to state 1066


State 794

  635 optional_struct_variable_declaration_list: "begin of code block" struct_variable_declaration_list "end of code block" .

    $default  reduce using rule 635 (optional_struct_variable_declaration_list)


State 795

  121 optional_annotation_list: '[' . annotation_list ']'
  548 struct_variable_declaration_list: struct_variable_declaration_list '[' . annotation_list ']' "end of expression"

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 68
    annotation_list               go to state 1067
    name_in_namespace             go to state 70


State 796

  545 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header "end of expression"
  547                                 | struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block

    "def"  shift, and go to state 1068


State 797

  543 struct_variable_declaration_list: struct_variable_declaration_list $@34 . structure_variable_declaration "end of expression"

    "[["  shift, and go to state 218
    '@'   shift, and go to state 219

    $default  reduce using rule 527 (optional_field_annotation)

    metadata_argument_list          go to state 220
    optional_field_annotation       go to state 1069
    structure_variable_declaration  go to state 1070


State 798

  479 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  480     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 1071


State 799

  580 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 580 (let_variable_name_with_pos_list)


State 800

  583 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1072


State 801

  584 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression" .

    $default  reduce using rule 584 (let_variable_declaration)


State 802

  585 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"
  586                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 467
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "$ <|"                            shift, and go to state 471
    "@ <|"                            shift, and go to state 472
    "@@ <|"                           shift, and go to state 473
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expr_call_pipe          go to state 518
    expression_keyword      go to state 521
    expr_pipe               go to state 1073
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_assign             go to state 646
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1074
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 803

  588 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 588 (let_variable_declaration)


State 804

  221 expr_call_pipe: expr . expr_full_block_assumed_piped
  360 expr_assign: expr .
  361            | expr . '=' expr
  362            | expr . "<-" expr
  363            | expr . ":=" expr
  364            | expr . "&=" expr
  365            | expr . "|=" expr
  366            | expr . "^=" expr
  367            | expr . "&&=" expr
  368            | expr . "||=" expr
  369            | expr . "^^=" expr
  370            | expr . "+=" expr
  371            | expr . "-=" expr
  372            | expr . "*=" expr
  373            | expr . "/=" expr
  374            | expr . "%=" expr
  375            | expr . "<<=" expr
  376            | expr . ">>=" expr
  377            | expr . "<<<=" expr
  378            | expr . ">>>=" expr
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'
  587 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 735
    "as"                 shift, and go to state 736
    "+="                 shift, and go to state 867
    "-="                 shift, and go to state 868
    "/="                 shift, and go to state 869
    "*="                 shift, and go to state 870
    "%="                 shift, and go to state 871
    "&="                 shift, and go to state 872
    "|="                 shift, and go to state 873
    "^="                 shift, and go to state 874
    "<<"                 shift, and go to state 745
    ">>"                 shift, and go to state 746
    "++"                 shift, and go to state 747
    "--"                 shift, and go to state 748
    "<="                 shift, and go to state 749
    "<<="                shift, and go to state 875
    ">>="                shift, and go to state 876
    ">="                 shift, and go to state 752
    "=="                 shift, and go to state 753
    "!="                 shift, and go to state 754
    "->"                 shift, and go to state 755
    "<-"                 shift, and go to state 877
    "??"                 shift, and go to state 757
    "?."                 shift, and go to state 758
    "?["                 shift, and go to state 759
    "<|"                 shift, and go to state 760
    "|>"                 shift, and go to state 761
    ":="                 shift, and go to state 762
    "<<<"                shift, and go to state 763
    ">>>"                shift, and go to state 764
    "<<<="               shift, and go to state 878
    ">>>="               shift, and go to state 879
    "&&"                 shift, and go to state 767
    "||"                 shift, and go to state 768
    "^^"                 shift, and go to state 769
    "&&="                shift, and go to state 880
    "||="                shift, and go to state 881
    "^^="                shift, and go to state 882
    ".."                 shift, and go to state 773
    "end of expression"  shift, and go to state 1075
    '='                  shift, and go to state 883
    '?'                  shift, and go to state 775
    '|'                  shift, and go to state 776
    '^'                  shift, and go to state 777
    '&'                  shift, and go to state 778
    '<'                  shift, and go to state 779
    '>'                  shift, and go to state 780
    '-'                  shift, and go to state 781
    '+'                  shift, and go to state 782
    '*'                  shift, and go to state 783
    '/'                  shift, and go to state 784
    '%'                  shift, and go to state 785
    '.'                  shift, and go to state 786
    '['                  shift, and go to state 787
    '$'                  shift, and go to state 504
    '@'                  shift, and go to state 678

    $default  reduce using rule 360 (expr_assign)

    block_or_lambda                go to state 721
    expr_full_block_assumed_piped  go to state 788


State 805

  705 type_declaration_no_options: "type" '<' $@49 type_declaration . '>' $@50
  763 type_declaration: type_declaration . '|' type_declaration_no_options
  764                 | type_declaration . '|' '#'

    '|'  shift, and go to state 418
    '>'  shift, and go to state 1076


State 806

  728 type_declaration_no_options: "array" '<' $@54 type_declaration . '>' $@55
  763 type_declaration: type_declaration . '|' type_declaration_no_options
  764                 | type_declaration . '|' '#'

    '|'  shift, and go to state 418
    '>'  shift, and go to state 1077


State 807

  731 type_declaration_no_options: "table" '<' $@56 table_type_pair . '>' $@57

    '>'  shift, and go to state 1078


State 808

  693 table_type_pair: type_declaration .
  694                | type_declaration . c_or_s type_declaration
  763 type_declaration: type_declaration . '|' type_declaration_no_options
  764                 | type_declaration . '|' '#'

    "end of expression"  shift, and go to state 611
    ','                  shift, and go to state 612
    '|'                  shift, and go to state 418

    $default  reduce using rule 693 (table_type_pair)

    c_or_s  go to state 1079


State 809

  706 type_declaration_no_options: "typedecl" '(' expr ')' .

    $default  reduce using rule 706 (type_declaration_no_options)


State 810

  734 type_declaration_no_options: "iterator" '<' $@58 type_declaration . '>' $@59
  763 type_declaration: type_declaration . '|' type_declaration_no_options
  764                 | type_declaration . '|' '#'

    '|'  shift, and go to state 418
    '>'  shift, and go to state 1080


State 811

  724 type_declaration_no_options: "smart_ptr" '<' $@52 type_declaration . '>' $@53
  763 type_declaration: type_declaration . '|' type_declaration_no_options
  764                 | type_declaration . '|' '#'

    '|'  shift, and go to state 418
    '>'  shift, and go to state 1081


State 812

  681 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 681 (auto_type_declaration)


State 813

  683 bitfield_bits: "name" .

    $default  reduce using rule 683 (bitfield_bits)


State 814

  684 bitfield_bits: bitfield_bits . "end of expression" "name"
  690 bitfield_type_declaration: "bitfield" '<' $@47 bitfield_bits . '>' $@48

    "end of expression"  shift, and go to state 1082
    '>'                  shift, and go to state 1083


State 815

  738 type_declaration_no_options: "block" '<' $@60 type_declaration . '>' $@61
  763 type_declaration: type_declaration . '|' type_declaration_no_options
  764                 | type_declaration . '|' '#'

    '|'  shift, and go to state 418
    '>'  shift, and go to state 1084


State 816

  741 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list . optional_function_type '>' $@63

    ':'  shift, and go to state 374

    $default  reduce using rule 125 (optional_function_type)

    optional_function_type  go to state 1085


State 817

  745 type_declaration_no_options: "function" '<' $@64 type_declaration . '>' $@65
  763 type_declaration: type_declaration . '|' type_declaration_no_options
  764                 | type_declaration . '|' '#'

    '|'  shift, and go to state 418
    '>'  shift, and go to state 1086


State 818

  748 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list . optional_function_type '>' $@67

    ':'  shift, and go to state 374

    $default  reduce using rule 125 (optional_function_type)

    optional_function_type  go to state 1087


State 819

  752 type_declaration_no_options: "lambda" '<' $@68 type_declaration . '>' $@69
  763 type_declaration: type_declaration . '|' type_declaration_no_options
  764                 | type_declaration . '|' '#'

    '|'  shift, and go to state 418
    '>'  shift, and go to state 1088


State 820

  755 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list . optional_function_type '>' $@71

    ':'  shift, and go to state 374

    $default  reduce using rule 125 (optional_function_type)

    optional_function_type  go to state 1089


State 821

  555 tuple_type_list: tuple_type .

    $default  reduce using rule 555 (tuple_type_list)


State 822

  556 tuple_type_list: tuple_type_list . c_or_s tuple_type
  758 type_declaration_no_options: "tuple" '<' $@72 tuple_type_list . '>' $@73

    "end of expression"  shift, and go to state 611
    ','                  shift, and go to state 612
    '>'                  shift, and go to state 1090

    c_or_s  go to state 1091


State 823

  561 variant_type_list: variant_type .

    $default  reduce using rule 561 (variant_type_list)


State 824

  562 variant_type_list: variant_type_list . c_or_s variant_type
  761 type_declaration_no_options: "variant" '<' $@74 variant_type_list . '>' $@75

    "end of expression"  shift, and go to state 611
    ','                  shift, and go to state 612
    '>'                  shift, and go to state 1092

    c_or_s  go to state 1093


State 825

  682 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 682 (auto_type_declaration)


State 826

  709 type_declaration_no_options: '$' name_in_namespace '<' $@51 . type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    type_declaration_no_options_list  go to state 1094
    name_in_namespace                 go to state 352
    basic_type_declaration            go to state 353
    structure_type_declaration        go to state 354
    auto_type_declaration             go to state 355
    bitfield_type_declaration         go to state 356
    type_declaration_no_options       go to state 357
    type_declaration                  go to state 1095


State 827

  707 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list . ')'

    ')'  shift, and go to state 1096


State 828

  250 optional_expr_list: expr_list . optional_comma
  331 expr_list: expr_list . ',' expr

    ','  shift, and go to state 951

    ','       [reduce using rule 879 (optional_comma)]
    $default  reduce using rule 879 (optional_comma)

    optional_comma  go to state 1097


State 829

  710 type_declaration_no_options: type_declaration_no_options '-' '[' ']' .

    $default  reduce using rule 710 (type_declaration_no_options)


State 830

  695 dim_list: '[' expr ']' .

    $default  reduce using rule 695 (dim_list)


State 831

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'
  696 dim_list: dim_list '[' expr . ']'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ']'    shift, and go to state 1098


State 832

  687 bitfield_alias_bits: bitfield_alias_bits "name" "end of expression" .

    $default  reduce using rule 687 (bitfield_alias_bits)


State 833

  779 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block" .

    $default  reduce using rule 779 (bitfield_alias_declaration)


State 834

  554 tuple_type: "name" ':' . type_declaration

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 357
    type_declaration             go to state 1099


State 835

  559 tuple_alias_type_list: tuple_alias_type_list tuple_type c_or_s .

    $default  reduce using rule 559 (tuple_alias_type_list)


State 836

  769 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block" .

    $default  reduce using rule 769 (tuple_alias_declaration)


State 837

  560 variant_type: "name" ':' . type_declaration

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 357
    type_declaration             go to state 1100


State 838

  565 variant_alias_type_list: variant_alias_type_list variant_type c_or_s .

    $default  reduce using rule 565 (variant_alias_type_list)


State 839

  774 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block" .

    $default  reduce using rule 774 (variant_alias_declaration)


State 840

  550 function_argument_declaration: "$a" '(' expr ')' .

    $default  reduce using rule 550 (function_argument_declaration)


State 841

  640 variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1101
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 842

  641 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1102


State 843

  567 copy_or_move: "<-" .

    $default  reduce using rule 567 (copy_or_move)


State 844

  642 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  643                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 1103


State 845

  566 copy_or_move: '=' .

    $default  reduce using rule 566 (copy_or_move)


State 846

  570 variable_declaration: variable_name_with_pos_list ':' . type_declaration
  571                     | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 357
    type_declaration             go to state 1104


State 847

  569 variable_declaration: variable_name_with_pos_list '&' .

    $default  reduce using rule 569 (variable_declaration)


State 848

  572 variable_declaration: variable_name_with_pos_list copy_or_move . expr
  573                     | variable_name_with_pos_list copy_or_move . expr_pipe

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 467
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "$ <|"                            shift, and go to state 471
    "@ <|"                            shift, and go to state 472
    "@@ <|"                           shift, and go to state 473
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expr_call_pipe          go to state 518
    expression_keyword      go to state 521
    expr_pipe               go to state 1105
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_assign             go to state 646
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1106
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 849

  827 make_struct_decl: "struct" '<' $@88 . type_declaration_no_options '>' $@89 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 1107


State 850

  830 make_struct_decl: "class" '<' $@90 . type_declaration_no_options '>' $@91 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 1108


State 851

   78 expression_while_loop: "while" expr expression_block .

    $default  reduce using rule 78 (expression_while_loop)


State 852

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list . "in" expr_list expression_block
  642 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  643                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 1109
    ','   shift, and go to state 844


State 853

  275 new_type_declaration: '<' $@11 . type_declaration '>' $@12

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 357
    type_declaration             go to state 1110


State 854

  278 expr_new: "new" new_type_declaration '(' . use_initializer ')'
  279         | "new" new_type_declaration '(' . expr_list ')'
  280         | "new" new_type_declaration '(' . make_struct_single ')'
  281         | "new" new_type_declaration '(' . "uninitialized" make_struct_single ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "uninitialized"                   shift, and go to state 1111
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "$f"                              shift, and go to state 918
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 919
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    $default  reduce using rule 817 (use_initializer)

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 1112
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 714
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_fields      go to state 966
    make_struct_single      go to state 1113
    use_initializer         go to state 1114
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 855

  324 expr_type_info: "typeinfo" '(' name_in_namespace . expr ')'
  325               | "typeinfo" '(' name_in_namespace . '<' "name" '>' expr ')'
  326               | "typeinfo" '(' name_in_namespace . '<' "name" c_or_s "name" '>' expr ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '<'                               shift, and go to state 1115
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1116
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 856

  328 expr_type_info: "typeinfo" name_in_namespace '<' . "name" '>' '(' expr ')'
  329               | "typeinfo" name_in_namespace '<' . "name" "end of expression" "name" '>' '(' expr ')'

    "name"  shift, and go to state 1117


State 857

  327 expr_type_info: "typeinfo" name_in_namespace '(' . expr ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1118
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 858

  323 expr_type_decl: "type" '<' $@19 . type_declaration '>' $@20

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 357
    type_declaration             go to state 1119


State 859

  853 make_dim_decl: "array" "struct" '<' . $@98 type_declaration_no_options '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 851 ($@98)

    $@98  go to state 1120


State 860

  856 make_dim_decl: "array" "tuple" '<' . $@100 type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 854 ($@100)

    $@100  go to state 1121


State 861

  859 make_dim_decl: "array" "variant" '<' . $@102 type_declaration_no_options '>' $@103 '(' make_variant_dim ')'

    $default  reduce using rule 857 ($@102)

    $@102  go to state 1122


State 862

  863 make_dim_decl: "array" '<' $@104 . type_declaration_no_options '>' $@105 '(' optional_expr_list ')'

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 1123


State 863

  331 expr_list: expr_list . ',' expr
  860 make_dim_decl: "array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 951

    $default  reduce using rule 879 (optional_comma)

    optional_comma  go to state 1124


State 864

  290 expression_return: "return" "<-" expr_pipe .

    $default  reduce using rule 290 (expression_return)


State 865

  287 expression_return_no_pipe: "return" "<-" expr_list .
  331 expr_list: expr_list . ',' expr

    ','  shift, and go to state 866

    $default  reduce using rule 287 (expression_return_no_pipe)


State 866

  331 expr_list: expr_list ',' . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1125
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 867

  370 expr_assign: expr "+=" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1126
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 868

  371 expr_assign: expr "-=" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1127
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 869

  373 expr_assign: expr "/=" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1128
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 870

  372 expr_assign: expr "*=" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1129
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 871

  374 expr_assign: expr "%=" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1130
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 872

  364 expr_assign: expr "&=" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1131
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 873

  365 expr_assign: expr "|=" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1132
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 874

  366 expr_assign: expr "^=" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1133
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 875

  375 expr_assign: expr "<<=" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1134
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 876

  376 expr_assign: expr ">>=" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1135
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 877

  362 expr_assign: expr "<-" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1136
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 878

  377 expr_assign: expr "<<<=" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1137
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 879

  378 expr_assign: expr ">>>=" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1138
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 880

  367 expr_assign: expr "&&=" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1139
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 881

  368 expr_assign: expr "||=" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1140
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 882

  369 expr_assign: expr "^^=" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1141
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 883

  361 expr_assign: expr '=' . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1142
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 884

  296 expression_try_catch: "try" expression_block "recover" . expression_block

    "begin of code block"  shift, and go to state 286

    expression_block  go to state 1143


State 885

  701 type_declaration_no_options: type_declaration_no_options . dim_list
  702                            | type_declaration_no_options . '[' ']'
  710                            | type_declaration_no_options . '-' '[' ']'
  711                            | type_declaration_no_options . "explicit"
  712                            | type_declaration_no_options . "const"
  713                            | type_declaration_no_options . '-' "const"
  714                            | type_declaration_no_options . '&'
  715                            | type_declaration_no_options . '-' '&'
  716                            | type_declaration_no_options . '#'
  717                            | type_declaration_no_options . "implicit"
  718                            | type_declaration_no_options . '-' '#'
  719                            | type_declaration_no_options . "==" "const"
  720                            | type_declaration_no_options . "==" '&'
  721                            | type_declaration_no_options . '?'
  725                            | type_declaration_no_options . "??"
  875 make_table_decl: "table" '<' type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'
  876                | "table" '<' type_declaration_no_options . c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "const"              shift, and go to state 407
    "implicit"           shift, and go to state 408
    "explicit"           shift, and go to state 409
    "=="                 shift, and go to state 410
    "??"                 shift, and go to state 411
    "end of expression"  shift, and go to state 611
    ','                  shift, and go to state 612
    '?'                  shift, and go to state 412
    '&'                  shift, and go to state 413
    '>'                  shift, and go to state 1144
    '-'                  shift, and go to state 414
    '['                  shift, and go to state 415
    '#'                  shift, and go to state 416

    c_or_s    go to state 1145
    dim_list  go to state 417


State 886

  874 make_table_decl: "table" '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1146


State 887

  254 optional_expr_map_tuple_list: expr_map_tuple_list . optional_comma
  871 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple

    ','  shift, and go to state 946

    $default  reduce using rule 879 (optional_comma)

    optional_comma  go to state 1147


State 888

  272 expression_delete: "delete" "explicit" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 272 (expression_delete)


State 889

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  477     | "deref" '(' expr . ')'
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 1148


State 890

   79 expression_with: "with" expr expression_block .

    $default  reduce using rule 79 (expression_with)


State 891

   81 expression_with_alias: "assume" "name" '=' . $@5 expr

    $default  reduce using rule 80 ($@5)

    $@5  go to state 1149


State 892

  314 expr_cast: "cast" '<' $@13 . type_declaration_no_options '>' $@14 expr

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 1150


State 893

  317 expr_cast: "upcast" '<' $@15 . type_declaration_no_options '>' $@16 expr

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 1151


State 894

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  478     | "addr" '(' expr . ')'
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 1152


State 895

  320 expr_cast: "reinterpret" '<' $@17 . type_declaration_no_options '>' $@18 expr

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 1153


State 896

   54 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 54 (expression_label)


State 897

   55 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 55 (expression_goto)


State 898

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  509     | "unsafe" '(' expr . ')'
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 1154


State 899

  867 make_dim_decl: "fixed_array" '<' $@106 . type_declaration_no_options '>' $@107 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 1155


State 900

  331 expr_list: expr_list . ',' expr
  864 make_dim_decl: "fixed_array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 951

    $default  reduce using rule 879 (optional_comma)

    optional_comma  go to state 1156


State 901

  836 make_struct_decl: "default" '<' $@94 . type_declaration_no_options '>' $@95 use_initializer

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 1157


State 902

  845 make_tuple_call: "tuple" '<' $@96 . type_declaration_no_options '>' $@97 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 1158


State 903

  331 expr_list: expr_list . ',' expr
  842 make_tuple_call: "tuple" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 951

    $default  reduce using rule 879 (optional_comma)

    optional_comma  go to state 1159


State 904

  833 make_struct_decl: "variant" '<' $@92 . type_declaration_no_options '>' $@93 '(' make_variant_dim ')'

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 1160


State 905

  223 expr_call_pipe: "generator" '<' type_declaration_no_options . '>' optional_capture_list expr_full_block_assumed_piped
  479 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  480     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  701 type_declaration_no_options: type_declaration_no_options . dim_list
  702                            | type_declaration_no_options . '[' ']'
  710                            | type_declaration_no_options . '-' '[' ']'
  711                            | type_declaration_no_options . "explicit"
  712                            | type_declaration_no_options . "const"
  713                            | type_declaration_no_options . '-' "const"
  714                            | type_declaration_no_options . '&'
  715                            | type_declaration_no_options . '-' '&'
  716                            | type_declaration_no_options . '#'
  717                            | type_declaration_no_options . "implicit"
  718                            | type_declaration_no_options . '-' '#'
  719                            | type_declaration_no_options . "==" "const"
  720                            | type_declaration_no_options . "==" '&'
  721                            | type_declaration_no_options . '?'
  725                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 407
    "implicit"  shift, and go to state 408
    "explicit"  shift, and go to state 409
    "=="        shift, and go to state 410
    "??"        shift, and go to state 411
    '?'         shift, and go to state 412
    '&'         shift, and go to state 413
    '>'         shift, and go to state 1161
    '-'         shift, and go to state 414
    '['         shift, and go to state 415
    '#'         shift, and go to state 416

    dim_list  go to state 417


State 906

  295 expression_yield: "yield" "<-" expr_pipe .

    $default  reduce using rule 295 (expression_yield)


State 907

  221 expr_call_pipe: expr . expr_full_block_assumed_piped
  292 expression_yield_no_pipe: "yield" "<-" expr .
  360 expr_assign: expr .
  361            | expr . '=' expr
  362            | expr . "<-" expr
  363            | expr . ":=" expr
  364            | expr . "&=" expr
  365            | expr . "|=" expr
  366            | expr . "^=" expr
  367            | expr . "&&=" expr
  368            | expr . "||=" expr
  369            | expr . "^^=" expr
  370            | expr . "+=" expr
  371            | expr . "-=" expr
  372            | expr . "*=" expr
  373            | expr . "/=" expr
  374            | expr . "%=" expr
  375            | expr . "<<=" expr
  376            | expr . ">>=" expr
  377            | expr . "<<<=" expr
  378            | expr . ">>>=" expr
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 735
    "as"    shift, and go to state 736
    "+="    shift, and go to state 867
    "-="    shift, and go to state 868
    "/="    shift, and go to state 869
    "*="    shift, and go to state 870
    "%="    shift, and go to state 871
    "&="    shift, and go to state 872
    "|="    shift, and go to state 873
    "^="    shift, and go to state 874
    "<<"    shift, and go to state 745
    ">>"    shift, and go to state 746
    "++"    shift, and go to state 747
    "--"    shift, and go to state 748
    "<="    shift, and go to state 749
    "<<="   shift, and go to state 875
    ">>="   shift, and go to state 876
    ">="    shift, and go to state 752
    "=="    shift, and go to state 753
    "!="    shift, and go to state 754
    "->"    shift, and go to state 755
    "<-"    shift, and go to state 877
    "??"    shift, and go to state 757
    "?."    shift, and go to state 758
    "?["    shift, and go to state 759
    "<|"    shift, and go to state 760
    "|>"    shift, and go to state 761
    ":="    shift, and go to state 762
    "<<<"   shift, and go to state 763
    ">>>"   shift, and go to state 764
    "<<<="  shift, and go to state 878
    ">>>="  shift, and go to state 879
    "&&"    shift, and go to state 767
    "||"    shift, and go to state 768
    "^^"    shift, and go to state 769
    "&&="   shift, and go to state 880
    "||="   shift, and go to state 881
    "^^="   shift, and go to state 882
    ".."    shift, and go to state 773
    '='     shift, and go to state 883
    '?'     shift, and go to state 775
    '|'     shift, and go to state 776
    '^'     shift, and go to state 777
    '&'     shift, and go to state 778
    '<'     shift, and go to state 779
    '>'     shift, and go to state 780
    '-'     shift, and go to state 781
    '+'     shift, and go to state 782
    '*'     shift, and go to state 783
    '/'     shift, and go to state 784
    '%'     shift, and go to state 785
    '.'     shift, and go to state 786
    '['     shift, and go to state 787
    '$'     shift, and go to state 504
    '@'     shift, and go to state 678

    " <|"     reduce using rule 360 (expr_assign)
    $default  reduce using rule 292 (expression_yield_no_pipe)

    block_or_lambda                go to state 721
    expr_full_block_assumed_piped  go to state 788


State 908

  337 block_or_lambda: '@' '@' .

    $default  reduce using rule 337 (block_or_lambda)


State 909

  349 expr_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "capture"  shift, and go to state 972
    "[["       shift, and go to state 973

    $default  reduce using rule 345 (optional_capture_list)

    optional_capture_list  go to state 1162


State 910

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  511 expr_mtag: "$$" '(' expr . ')'
  519          | expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 1163


State 911

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  512 expr_mtag: "$i" '(' expr . ')'
  519          | expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 1164


State 912

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  513 expr_mtag: "$v" '(' expr . ')'
  519          | expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 1165


State 913

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  514 expr_mtag: "$b" '(' expr . ')'
  519          | expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 1166


State 914

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  515 expr_mtag: "$a" '(' expr . ')'
  519          | expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 1167


State 915

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  517 expr_mtag: "$c" '(' expr . ')' '(' ')'
  518          | "$c" '(' expr . ')' '(' expr_list ')'
  519          | expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 1168


State 916

  642 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  643                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  883 array_comprehension: "[[" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']' ']'

    "in"  shift, and go to state 1169
    ','   shift, and go to state 844


State 917

  804 optional_block: "where" . expr_block

    "begin of code block"  shift, and go to state 286
    '$'                    shift, and go to state 504
    '@'                    shift, and go to state 678

    expression_block  go to state 679
    block_or_lambda   go to state 680
    expr_block        go to state 1170


State 918

  789 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  790                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1171


State 919

  268 name_in_namespace: "name" .
  269                  | "name" . "::" "name"
  785 make_struct_fields: "name" . copy_or_move expr
  786                   | "name" . ":=" expr

    "<-"  shift, and go to state 843
    ":="  shift, and go to state 1172
    "::"  shift, and go to state 98
    '='   shift, and go to state 845

    $default  reduce using rule 268 (name_in_namespace)

    copy_or_move  go to state 1173


State 920

  440 expr: '-' . expr
  710 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  713                            | type_declaration_no_options '-' . "const"
  715                            | type_declaration_no_options '-' . '&'
  718                            | type_declaration_no_options '-' . '#'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "const"                           shift, and go to state 598
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '&'                               shift, and go to state 599
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 1174
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505
    '#'                               shift, and go to state 601

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 706
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 921

  695 dim_list: '[' . expr ']'
  702 type_declaration_no_options: type_declaration_no_options '[' . ']'
  848 make_dim_decl: '[' . expr_list optional_comma ']'
  881 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  882                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "for"                             shift, and go to state 711
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "iterator"                        shift, and go to state 712
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    ']'                               shift, and go to state 602
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 713
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1175
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 922

  467 expr: '(' . expr_list optional_comma ')'
  821 make_struct_decl: "[[" type_declaration_no_options '(' . ')' optional_block optional_trailing_delim_sqr_sqr
  822                 | "[[" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    ')'                               shift, and go to state 1176
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 715
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 714
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 923

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'
  837 make_tuple: expr .
  838           | expr . "=>" expr

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "=>"   shift, and go to state 1177
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 837 (make_tuple)


State 924

  787 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  788                   | make_struct_fields . ',' "name" ":=" expr
  791                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  792                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  795 make_struct_dim: make_struct_fields .

    ','  shift, and go to state 1178

    $default  reduce using rule 795 (make_struct_dim)


State 925

  796 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  819 make_struct_decl: "[[" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"              shift, and go to state 917
    "end of expression"  shift, and go to state 1179

    $default  reduce using rule 803 (optional_block)

    optional_block  go to state 1180


State 926

  820 make_struct_decl: "[[" type_declaration_no_options optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1181
    ",]]"  shift, and go to state 1182
    ']'    shift, and go to state 1183

    optional_trailing_delim_sqr_sqr  go to state 1184


State 927

  839 make_tuple: make_tuple . ',' expr
  846 make_dim: make_tuple .

    ','  shift, and go to state 1185

    $default  reduce using rule 846 (make_dim)


State 928

  847 make_dim: make_dim . "end of expression" make_tuple
  849 make_dim_decl: "[[" type_declaration_no_options make_dim . optional_trailing_semicolon_sqr_sqr

    "end of expression"  shift, and go to state 1186
    ";]]"                shift, and go to state 1187
    ']'                  shift, and go to state 1188

    optional_trailing_semicolon_sqr_sqr  go to state 1189


State 929

  642 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  643                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  884 array_comprehension: "[{" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "in"  shift, and go to state 1190
    ','   shift, and go to state 844


State 930

  467 expr: '(' . expr_list optional_comma ')'
  824 make_struct_decl: "[{" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    ')'                               shift, and go to state 1191
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 715
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 714
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 931

  796 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  823 make_struct_decl: "[{" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"              shift, and go to state 917
    "end of expression"  shift, and go to state 1179

    $default  reduce using rule 803 (optional_block)

    optional_block  go to state 1192


State 932

  847 make_dim: make_dim . "end of expression" make_tuple
  850 make_dim_decl: "[{" type_declaration_no_options make_dim . optional_trailing_semicolon_cur_sqr

    "end of code block"  shift, and go to state 1193
    "end of expression"  shift, and go to state 1186
    ";}]"                shift, and go to state 1194

    optional_trailing_semicolon_cur_sqr  go to state 1195


State 933

  642 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  643                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  886 array_comprehension: "{{" "for" variable_name_with_pos_list . "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "in"  shift, and go to state 1196
    ','   shift, and go to state 844


State 934

  840 make_map_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1197
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 935

  805 optional_trailing_semicolon_cur_cur: "end of code block" . "end of code block"

    "end of code block"  shift, and go to state 1198


State 936

  869 make_table: make_table "end of expression" . make_map_tuple

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 695
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_map_tuple          go to state 1199
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 937

  806 optional_trailing_semicolon_cur_cur: ";}}" .

    $default  reduce using rule 806 (optional_trailing_semicolon_cur_cur)


State 938

  873 make_table_decl: "{{" make_table optional_trailing_semicolon_cur_cur .

    $default  reduce using rule 873 (make_table_decl)


State 939

  259 expression_keyword: "keyword" '<' $@7 . type_declaration_no_options_list '>' $@8 expr

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    type_declaration_no_options_list  go to state 1200
    name_in_namespace                 go to state 352
    basic_type_declaration            go to state 353
    structure_type_declaration        go to state 354
    auto_type_declaration             go to state 355
    bitfield_type_declaration         go to state 356
    type_declaration_no_options       go to state 357
    type_declaration                  go to state 1095


State 940

  248 expr_keyword: "keyword" expr expression_block .

    $default  reduce using rule 248 (expr_keyword)


State 941

  262 expression_keyword: "type function" '<' $@9 . type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    type_declaration_no_options_list  go to state 1201
    name_in_namespace                 go to state 352
    basic_type_declaration            go to state 353
    structure_type_declaration        go to state 354
    auto_type_declaration             go to state 355
    bitfield_type_declaration         go to state 356
    type_declaration_no_options       go to state 357
    type_declaration                  go to state 1095


State 942

   31 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 31 (string_builder)


State 943

   30 string_builder_body: string_builder_body "{" . expr "}"

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1202
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 944

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   29 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 222
    STRING_CHARACTER_ESC  shift, and go to state 223

    $default  reduce using rule 29 (string_builder_body)


State 945

  642 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  643                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  885 array_comprehension: "begin of code block" "for" variable_name_with_pos_list . "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "in"  shift, and go to state 1203
    ','   shift, and go to state 844


State 946

  871 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple
  880 optional_comma: ',' .

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    $default  reduce using rule 880 (optional_comma)

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 695
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_map_tuple          go to state 1204
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 947

  872 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma . "end of code block"

    "end of code block"  shift, and go to state 1205


State 948

  220 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" . expressions "end of code block"

    $default  reduce using rule 245 (expressions)

    expressions  go to state 1206


State 949

  642 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  643                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  881 array_comprehension: '[' "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1207
    ','   shift, and go to state 844


State 950

  882 array_comprehension: '[' "iterator" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 622
    "name"  shift, and go to state 623

    variable_name_with_pos_list  go to state 1208


State 951

  331 expr_list: expr_list ',' . expr
  880 optional_comma: ',' .

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    $default  reduce using rule 880 (optional_comma)

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1125
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 952

  848 make_dim_decl: '[' expr_list optional_comma . ']'

    ']'  shift, and go to state 1209


State 953

  467 expr: '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1210


State 954

  405 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 1211


State 955

  526 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 1212


State 956

  409 func_addr_expr: '@' '@' '<' . $@22 type_declaration_no_options '>' $@23 func_addr_name
  412               | '@' '@' '<' . $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name

    ':'       reduce using rule 410 ($@24)
    '>'       reduce using rule 410 ($@24)
    '('       reduce using rule 410 ($@24)
    $default  reduce using rule 407 ($@22)

    $@22  go to state 1213
    $@24  go to state 1214


State 957

  404 func_addr_name: name_in_namespace .

    $default  reduce using rule 404 (func_addr_name)


State 958

  406 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 406 (func_addr_expr)


State 959

   72 expression_if_then_else: if_or_static_if expr expression_block . expression_else

    "else"         shift, and go to state 1215
    "elif"         shift, and go to state 1216
    "static_elif"  shift, and go to state 1217

    $default  reduce using rule 59 (expression_else)

    elif_or_static_elif  go to state 1218
    expression_else      go to state 1219


State 960

   74 expression_if_then_else: expression_if_one_liner "if" $@3 . expr expression_else_one_liner "end of expression"

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1220
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 961

  352 expr_full_block_assumed_piped: block_or_lambda $@21 . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

    '['  shift, and go to state 15

    $default  reduce using rule 120 (optional_annotation_list)

    optional_annotation_list  go to state 1221


State 962

  421 expr_call: name_in_namespace '(' "uninitialized" . ')'
  423          | name_in_namespace '(' "uninitialized" . make_struct_single ')'

    "$f"    shift, and go to state 918
    "name"  shift, and go to state 1222
    ')'     shift, and go to state 1223

    make_struct_fields  go to state 966
    make_struct_single  go to state 1224


State 963

  400 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'
  848 make_dim_decl: '[' . expr_list optional_comma ']'
  881 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  882                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "for"                             shift, and go to state 711
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "iterator"                        shift, and go to state 712
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "$f"                              shift, and go to state 918
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 919
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 713
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 714
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_fields      go to state 1225
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 964

  420 expr_call: name_in_namespace '(' ')' .

    $default  reduce using rule 420 (expr_call)


State 965

  331 expr_list: expr_list . ',' expr
  401 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  424 expr_call: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 1226
    ')'  shift, and go to state 1227


State 966

  787 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  788                   | make_struct_fields . ',' "name" ":=" expr
  791                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  792                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  794 make_struct_single: make_struct_fields .

    ','  shift, and go to state 1178

    $default  reduce using rule 794 (make_struct_single)


State 967

  422 expr_call: name_in_namespace '(' make_struct_single . ')'

    ')'  shift, and go to state 1228


State 968

  306 tuple_expansion_variable_declaration: "[[" . tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  308                                     | "[[" . tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr "end of expression"

    "name"  shift, and go to state 1229

    tuple_expansion  go to state 1230


State 969

  307 tuple_expansion_variable_declaration: '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  309                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression"

    "name"  shift, and go to state 1229

    tuple_expansion  go to state 1231


State 970

  311 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 311 (expression_let)


State 971

  310 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 310 (expression_let)


State 972

  347 optional_capture_list: "capture" . '(' capture_list ')'

    '('  shift, and go to state 1232


State 973

  346 optional_capture_list: "[[" . capture_list ']' ']'

    "<-"    shift, and go to state 1233
    ":="    shift, and go to state 1234
    "name"  shift, and go to state 1235
    '='     shift, and go to state 1236
    '&'     shift, and go to state 1237

    capture_entry  go to state 1238
    capture_list   go to state 1239


State 974

  350 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 284

    $default  reduce using rule 122 (optional_function_argument_list)

    optional_function_argument_list  go to state 1240


State 975

  263 expr_pipe: expr_assign " <|" expr_block .

    $default  reduce using rule 263 (expr_pipe)


State 976

  485 expr: expr "is" "type" . '<' $@28 type_declaration_no_options '>' $@29

    '<'  shift, and go to state 1241


State 977

  525 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 1242


State 978

  487 expr: expr "is" "name" .

    $default  reduce using rule 487 (expr)


State 979

  486 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 486 (expr)


State 980

  491 expr: expr "as" "type" . '<' $@30 type_declaration '>' $@31

    '<'  shift, and go to state 1243


State 981

  523 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1244


State 982

  488 expr: expr "as" "name" .

    $default  reduce using rule 488 (expr)


State 983

  492 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 492 (expr)


State 984

  381 expr_assign_pipe_right: "$ <|" . expr_block

    "begin of code block"  shift, and go to state 286
    '$'                    shift, and go to state 504
    '@'                    shift, and go to state 678

    expression_block  go to state 679
    block_or_lambda   go to state 680
    expr_block        go to state 1245


State 985

  379 expr_assign_pipe_right: "@ <|" . expr_block

    "begin of code block"  shift, and go to state 286
    '$'                    shift, and go to state 504
    '@'                    shift, and go to state 678

    expression_block  go to state 679
    block_or_lambda   go to state 680
    expr_block        go to state 1246


State 986

  380 expr_assign_pipe_right: "@@ <|" . expr_block

    "begin of code block"  shift, and go to state 286
    '$'                    shift, and go to state 504
    '@'                    shift, and go to state 678

    expression_block  go to state 679
    block_or_lambda   go to state 680
    expr_block        go to state 1247


State 987

  382 expr_assign_pipe_right: expr_call_pipe .

    $default  reduce using rule 382 (expr_assign_pipe_right)


State 988

  391 expr_assign_pipe: expr "+=" expr_assign_pipe_right .

    $default  reduce using rule 391 (expr_assign_pipe)


State 989

  221 expr_call_pipe: expr . expr_full_block_assumed_piped
  370 expr_assign: expr "+=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    '$'    shift, and go to state 504
    '@'    shift, and go to state 678

    $default  reduce using rule 370 (expr_assign)

    block_or_lambda                go to state 721
    expr_full_block_assumed_piped  go to state 788


State 990

  392 expr_assign_pipe: expr "-=" expr_assign_pipe_right .

    $default  reduce using rule 392 (expr_assign_pipe)


State 991

  221 expr_call_pipe: expr . expr_full_block_assumed_piped
  371 expr_assign: expr "-=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    '$'    shift, and go to state 504
    '@'    shift, and go to state 678

    $default  reduce using rule 371 (expr_assign)

    block_or_lambda                go to state 721
    expr_full_block_assumed_piped  go to state 788


State 992

  394 expr_assign_pipe: expr "/=" expr_assign_pipe_right .

    $default  reduce using rule 394 (expr_assign_pipe)


State 993

  221 expr_call_pipe: expr . expr_full_block_assumed_piped
  373 expr_assign: expr "/=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    '$'    shift, and go to state 504
    '@'    shift, and go to state 678

    $default  reduce using rule 373 (expr_assign)

    block_or_lambda                go to state 721
    expr_full_block_assumed_piped  go to state 788


State 994

  393 expr_assign_pipe: expr "*=" expr_assign_pipe_right .

    $default  reduce using rule 393 (expr_assign_pipe)


State 995

  221 expr_call_pipe: expr . expr_full_block_assumed_piped
  372 expr_assign: expr "*=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    '$'    shift, and go to state 504
    '@'    shift, and go to state 678

    $default  reduce using rule 372 (expr_assign)

    block_or_lambda                go to state 721
    expr_full_block_assumed_piped  go to state 788


State 996

  395 expr_assign_pipe: expr "%=" expr_assign_pipe_right .

    $default  reduce using rule 395 (expr_assign_pipe)


State 997

  221 expr_call_pipe: expr . expr_full_block_assumed_piped
  374 expr_assign: expr "%=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    '$'    shift, and go to state 504
    '@'    shift, and go to state 678

    $default  reduce using rule 374 (expr_assign)

    block_or_lambda                go to state 721
    expr_full_block_assumed_piped  go to state 788


State 998

  385 expr_assign_pipe: expr "&=" expr_assign_pipe_right .

    $default  reduce using rule 385 (expr_assign_pipe)


State 999

  221 expr_call_pipe: expr . expr_full_block_assumed_piped
  364 expr_assign: expr "&=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    '$'    shift, and go to state 504
    '@'    shift, and go to state 678

    $default  reduce using rule 364 (expr_assign)

    block_or_lambda                go to state 721
    expr_full_block_assumed_piped  go to state 788


State 1000

  386 expr_assign_pipe: expr "|=" expr_assign_pipe_right .

    $default  reduce using rule 386 (expr_assign_pipe)


State 1001

  221 expr_call_pipe: expr . expr_full_block_assumed_piped
  365 expr_assign: expr "|=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    '$'    shift, and go to state 504
    '@'    shift, and go to state 678

    $default  reduce using rule 365 (expr_assign)

    block_or_lambda                go to state 721
    expr_full_block_assumed_piped  go to state 788


State 1002

  387 expr_assign_pipe: expr "^=" expr_assign_pipe_right .

    $default  reduce using rule 387 (expr_assign_pipe)


State 1003

  221 expr_call_pipe: expr . expr_full_block_assumed_piped
  366 expr_assign: expr "^=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    '$'    shift, and go to state 504
    '@'    shift, and go to state 678

    $default  reduce using rule 366 (expr_assign)

    block_or_lambda                go to state 721
    expr_full_block_assumed_piped  go to state 788


State 1004

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  441     | expr "<<" expr .
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 735
    "as"  shift, and go to state 736
    "++"  shift, and go to state 747
    "--"  shift, and go to state 748
    "->"  shift, and go to state 755
    "??"  shift, and go to state 757
    "?."  shift, and go to state 758
    "?["  shift, and go to state 759
    "<|"  shift, and go to state 760
    "|>"  shift, and go to state 761
    '-'   shift, and go to state 781
    '+'   shift, and go to state 782
    '*'   shift, and go to state 783
    '/'   shift, and go to state 784
    '%'   shift, and go to state 785
    '.'   shift, and go to state 786
    '['   shift, and go to state 787

    $default  reduce using rule 441 (expr)


State 1005

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  442     | expr ">>" expr .
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 735
    "as"  shift, and go to state 736
    "++"  shift, and go to state 747
    "--"  shift, and go to state 748
    "->"  shift, and go to state 755
    "??"  shift, and go to state 757
    "?."  shift, and go to state 758
    "?["  shift, and go to state 759
    "<|"  shift, and go to state 760
    "|>"  shift, and go to state 761
    '-'   shift, and go to state 781
    '+'   shift, and go to state 782
    '*'   shift, and go to state 783
    '/'   shift, and go to state 784
    '%'   shift, and go to state 785
    '.'   shift, and go to state 786
    '['   shift, and go to state 787

    $default  reduce using rule 442 (expr)


State 1006

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  454     | expr "<=" expr .
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 454 (expr)


State 1007

  396 expr_assign_pipe: expr "<<=" expr_assign_pipe_right .

    $default  reduce using rule 396 (expr_assign_pipe)


State 1008

  221 expr_call_pipe: expr . expr_full_block_assumed_piped
  375 expr_assign: expr "<<=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    '$'    shift, and go to state 504
    '@'    shift, and go to state 678

    $default  reduce using rule 375 (expr_assign)

    block_or_lambda                go to state 721
    expr_full_block_assumed_piped  go to state 788


State 1009

  397 expr_assign_pipe: expr ">>=" expr_assign_pipe_right .

    $default  reduce using rule 397 (expr_assign_pipe)


State 1010

  221 expr_call_pipe: expr . expr_full_block_assumed_piped
  376 expr_assign: expr ">>=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    '$'    shift, and go to state 504
    '@'    shift, and go to state 678

    $default  reduce using rule 376 (expr_assign)

    block_or_lambda                go to state 721
    expr_full_block_assumed_piped  go to state 788


State 1011

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  455     | expr ">=" expr .
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 455 (expr)


State 1012

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  452     | expr "==" expr .
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 452 (expr)


State 1013

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  453     | expr "!=" expr .
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 453 (expr)


State 1014

  402 expr_method_call: expr "->" "name" . '(' ')'
  403                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 1248


State 1015

  384 expr_assign_pipe: expr "<-" expr_assign_pipe_right .

    $default  reduce using rule 384 (expr_assign_pipe)


State 1016

  221 expr_call_pipe: expr . expr_full_block_assumed_piped
  362 expr_assign: expr "<-" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    '$'    shift, and go to state 504
    '@'    shift, and go to state 678

    $default  reduce using rule 362 (expr_assign)

    block_or_lambda                go to state 721
    expr_full_block_assumed_piped  go to state 788


State 1017

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  481     | expr "??" expr .
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 735
    "as"  shift, and go to state 736
    "++"  shift, and go to state 747
    "--"  shift, and go to state 748
    "->"  shift, and go to state 755
    "??"  shift, and go to state 757
    "?."  shift, and go to state 758
    "?["  shift, and go to state 759
    "<|"  shift, and go to state 760
    "|>"  shift, and go to state 761
    '.'   shift, and go to state 786
    '['   shift, and go to state 787

    $default  reduce using rule 481 (expr)


State 1018

  520 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1249


State 1019

  472 expr: expr "?." "name" .

    $default  reduce using rule 472 (expr)


State 1020

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  470     | expr "?[" expr . ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ']'    shift, and go to state 1250


State 1021

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  505     | expr "<|" expr .
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 755
    "?."  shift, and go to state 758
    "?["  shift, and go to state 759
    '.'   shift, and go to state 786
    '['   shift, and go to state 787

    $default  reduce using rule 505 (expr)


State 1022

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  506     | expr "|>" expr .
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 755
    "?."  shift, and go to state 758
    "?["  shift, and go to state 759
    '.'   shift, and go to state 786
    '['   shift, and go to state 787

    $default  reduce using rule 506 (expr)


State 1023

  425 expr_call: basic_type_declaration . '(' ')'
  426          | basic_type_declaration . '(' expr_list ')'
  507 expr: expr "|>" basic_type_declaration .

    '('  shift, and go to state 789

    $default  reduce using rule 507 (expr)


State 1024

  363 expr_assign: expr ":=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 363 (expr_assign)


State 1025

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  443     | expr "<<<" expr .
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 735
    "as"  shift, and go to state 736
    "++"  shift, and go to state 747
    "--"  shift, and go to state 748
    "->"  shift, and go to state 755
    "??"  shift, and go to state 757
    "?."  shift, and go to state 758
    "?["  shift, and go to state 759
    "<|"  shift, and go to state 760
    "|>"  shift, and go to state 761
    '-'   shift, and go to state 781
    '+'   shift, and go to state 782
    '*'   shift, and go to state 783
    '/'   shift, and go to state 784
    '%'   shift, and go to state 785
    '.'   shift, and go to state 786
    '['   shift, and go to state 787

    $default  reduce using rule 443 (expr)


State 1026

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  444     | expr ">>>" expr .
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 735
    "as"  shift, and go to state 736
    "++"  shift, and go to state 747
    "--"  shift, and go to state 748
    "->"  shift, and go to state 755
    "??"  shift, and go to state 757
    "?."  shift, and go to state 758
    "?["  shift, and go to state 759
    "<|"  shift, and go to state 760
    "|>"  shift, and go to state 761
    '-'   shift, and go to state 781
    '+'   shift, and go to state 782
    '*'   shift, and go to state 783
    '/'   shift, and go to state 784
    '%'   shift, and go to state 785
    '.'   shift, and go to state 786
    '['   shift, and go to state 787

    $default  reduce using rule 444 (expr)


State 1027

  398 expr_assign_pipe: expr "<<<=" expr_assign_pipe_right .

    $default  reduce using rule 398 (expr_assign_pipe)


State 1028

  221 expr_call_pipe: expr . expr_full_block_assumed_piped
  377 expr_assign: expr "<<<=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    '$'    shift, and go to state 504
    '@'    shift, and go to state 678

    $default  reduce using rule 377 (expr_assign)

    block_or_lambda                go to state 721
    expr_full_block_assumed_piped  go to state 788


State 1029

  399 expr_assign_pipe: expr ">>>=" expr_assign_pipe_right .

    $default  reduce using rule 399 (expr_assign_pipe)


State 1030

  221 expr_call_pipe: expr . expr_full_block_assumed_piped
  378 expr_assign: expr ">>>=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    '$'    shift, and go to state 504
    '@'    shift, and go to state 678

    $default  reduce using rule 378 (expr_assign)

    block_or_lambda                go to state 721
    expr_full_block_assumed_piped  go to state 788


State 1031

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  459     | expr "&&" expr .
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 459 (expr)


State 1032

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  460     | expr "||" expr .
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "^^"   shift, and go to state 769
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 460 (expr)


State 1033

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  461     | expr "^^" expr .
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 461 (expr)


State 1034

  388 expr_assign_pipe: expr "&&=" expr_assign_pipe_right .

    $default  reduce using rule 388 (expr_assign_pipe)


State 1035

  221 expr_call_pipe: expr . expr_full_block_assumed_piped
  367 expr_assign: expr "&&=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    '$'    shift, and go to state 504
    '@'    shift, and go to state 678

    $default  reduce using rule 367 (expr_assign)

    block_or_lambda                go to state 721
    expr_full_block_assumed_piped  go to state 788


State 1036

  389 expr_assign_pipe: expr "||=" expr_assign_pipe_right .

    $default  reduce using rule 389 (expr_assign_pipe)


State 1037

  221 expr_call_pipe: expr . expr_full_block_assumed_piped
  368 expr_assign: expr "||=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    '$'    shift, and go to state 504
    '@'    shift, and go to state 678

    $default  reduce using rule 368 (expr_assign)

    block_or_lambda                go to state 721
    expr_full_block_assumed_piped  go to state 788


State 1038

  390 expr_assign_pipe: expr "^^=" expr_assign_pipe_right .

    $default  reduce using rule 390 (expr_assign_pipe)


State 1039

  221 expr_call_pipe: expr . expr_full_block_assumed_piped
  369 expr_assign: expr "^^=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    '$'    shift, and go to state 504
    '@'    shift, and go to state 678

    $default  reduce using rule 369 (expr_assign)

    block_or_lambda                go to state 721
    expr_full_block_assumed_piped  go to state 788


State 1040

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  462     | expr ".." expr .
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    ".."  error (nonassociative)

    $default  reduce using rule 462 (expr)


State 1041

  383 expr_assign_pipe: expr '=' expr_assign_pipe_right .

    $default  reduce using rule 383 (expr_assign_pipe)


State 1042

  221 expr_call_pipe: expr . expr_full_block_assumed_piped
  361 expr_assign: expr '=' expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    '$'    shift, and go to state 504
    '@'    shift, and go to state 678

    $default  reduce using rule 361 (expr_assign)

    block_or_lambda                go to state 721
    expr_full_block_assumed_piped  go to state 788


State 1043

  493 expr: expr '?' "as" . "name"
  496     | expr '?' "as" . "type" '<' $@32 type_declaration '>' $@33
  497     | expr '?' "as" . basic_type_declaration
  524 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1251
    "bool"      shift, and go to state 317
    "void"      shift, and go to state 318
    "string"    shift, and go to state 319
    "int"       shift, and go to state 321
    "int2"      shift, and go to state 322
    "int3"      shift, and go to state 323
    "int4"      shift, and go to state 324
    "uint"      shift, and go to state 325
    "bitfield"  shift, and go to state 464
    "uint2"     shift, and go to state 327
    "uint3"     shift, and go to state 328
    "uint4"     shift, and go to state 329
    "float"     shift, and go to state 330
    "float2"    shift, and go to state 331
    "float3"    shift, and go to state 332
    "float4"    shift, and go to state 333
    "range"     shift, and go to state 334
    "urange"    shift, and go to state 335
    "range64"   shift, and go to state 336
    "urange64"  shift, and go to state 337
    "int64"     shift, and go to state 339
    "uint64"    shift, and go to state 340
    "double"    shift, and go to state 341
    "int8"      shift, and go to state 344
    "uint8"     shift, and go to state 345
    "int16"     shift, and go to state 346
    "uint16"    shift, and go to state 347
    "$f"        shift, and go to state 1252
    "name"      shift, and go to state 1253

    basic_type_declaration  go to state 1254


State 1044

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  482     | expr '?' expr . ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    ':'    shift, and go to state 1255
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787


State 1045

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  457     | expr '|' expr .
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 457 (expr)


State 1046

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  458     | expr '^' expr .
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 458 (expr)


State 1047

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  456     | expr '&' expr .
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 456 (expr)


State 1048

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  450     | expr '<' expr .
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 450 (expr)


State 1049

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  451     | expr '>' expr .
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 451 (expr)


State 1050

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  446     | expr '-' expr .
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 735
    "as"  shift, and go to state 736
    "++"  shift, and go to state 747
    "--"  shift, and go to state 748
    "->"  shift, and go to state 755
    "??"  shift, and go to state 757
    "?."  shift, and go to state 758
    "?["  shift, and go to state 759
    "<|"  shift, and go to state 760
    "|>"  shift, and go to state 761
    '*'   shift, and go to state 783
    '/'   shift, and go to state 784
    '%'   shift, and go to state 785
    '.'   shift, and go to state 786
    '['   shift, and go to state 787

    $default  reduce using rule 446 (expr)


State 1051

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  445     | expr '+' expr .
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 735
    "as"  shift, and go to state 736
    "++"  shift, and go to state 747
    "--"  shift, and go to state 748
    "->"  shift, and go to state 755
    "??"  shift, and go to state 757
    "?."  shift, and go to state 758
    "?["  shift, and go to state 759
    "<|"  shift, and go to state 760
    "|>"  shift, and go to state 761
    '*'   shift, and go to state 783
    '/'   shift, and go to state 784
    '%'   shift, and go to state 785
    '.'   shift, and go to state 786
    '['   shift, and go to state 787

    $default  reduce using rule 445 (expr)


State 1052

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  447     | expr '*' expr .
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 735
    "as"  shift, and go to state 736
    "++"  shift, and go to state 747
    "--"  shift, and go to state 748
    "->"  shift, and go to state 755
    "??"  shift, and go to state 757
    "?."  shift, and go to state 758
    "?["  shift, and go to state 759
    "<|"  shift, and go to state 760
    "|>"  shift, and go to state 761
    '.'   shift, and go to state 786
    '['   shift, and go to state 787

    $default  reduce using rule 447 (expr)


State 1053

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  448     | expr '/' expr .
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 735
    "as"  shift, and go to state 736
    "++"  shift, and go to state 747
    "--"  shift, and go to state 748
    "->"  shift, and go to state 755
    "??"  shift, and go to state 757
    "?."  shift, and go to state 758
    "?["  shift, and go to state 759
    "<|"  shift, and go to state 760
    "|>"  shift, and go to state 761
    '.'   shift, and go to state 786
    '['   shift, and go to state 787

    $default  reduce using rule 448 (expr)


State 1054

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  449     | expr '%' expr .
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 735
    "as"  shift, and go to state 736
    "++"  shift, and go to state 747
    "--"  shift, and go to state 748
    "->"  shift, and go to state 755
    "??"  shift, and go to state 757
    "?."  shift, and go to state 758
    "?["  shift, and go to state 759
    "<|"  shift, and go to state 760
    "|>"  shift, and go to state 761
    '.'   shift, and go to state 786
    '['   shift, and go to state 787

    $default  reduce using rule 449 (expr)


State 1055

  473 expr: expr '.' "?." . "name"
  522 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1256
    "name"  shift, and go to state 1257


State 1056

  471 expr: expr '.' "?[" . expr ']'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1258
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1057

  519 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1259


State 1058

  413 expr_field: expr '.' "name" .
  415           | expr '.' "name" . '(' ')'
  416           | expr '.' "name" . '(' expr_list ')'

    '('  shift, and go to state 1260

    '('       [reduce using rule 413 (expr_field)]
    $default  reduce using rule 413 (expr_field)


State 1059

  414 expr_field: expr '.' '.' . "name"
  521 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1261
    "name"  shift, and go to state 1262


State 1060

  469 expr: expr '.' '[' . expr ']'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1263
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1061

  419 expr_field: expr '.' $@26 . error $@27

    error  shift, and go to state 1264


State 1062

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  468     | expr '[' expr . ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ']'    shift, and go to state 1265


State 1063

  425 expr_call: basic_type_declaration '(' ')' .

    $default  reduce using rule 425 (expr_call)


State 1064

  331 expr_list: expr_list . ',' expr
  426 expr_call: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 866
    ')'  shift, and go to state 1266


State 1065

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'
  603 enum_list: enum_list "name" '=' expr . "end of expression"

    "is"                 shift, and go to state 735
    "as"                 shift, and go to state 736
    "<<"                 shift, and go to state 745
    ">>"                 shift, and go to state 746
    "++"                 shift, and go to state 747
    "--"                 shift, and go to state 748
    "<="                 shift, and go to state 749
    ">="                 shift, and go to state 752
    "=="                 shift, and go to state 753
    "!="                 shift, and go to state 754
    "->"                 shift, and go to state 755
    "??"                 shift, and go to state 757
    "?."                 shift, and go to state 758
    "?["                 shift, and go to state 759
    "<|"                 shift, and go to state 760
    "|>"                 shift, and go to state 761
    "<<<"                shift, and go to state 763
    ">>>"                shift, and go to state 764
    "&&"                 shift, and go to state 767
    "||"                 shift, and go to state 768
    "^^"                 shift, and go to state 769
    ".."                 shift, and go to state 773
    "end of expression"  shift, and go to state 1267
    '?'                  shift, and go to state 775
    '|'                  shift, and go to state 776
    '^'                  shift, and go to state 777
    '&'                  shift, and go to state 778
    '<'                  shift, and go to state 779
    '>'                  shift, and go to state 780
    '-'                  shift, and go to state 781
    '+'                  shift, and go to state 782
    '*'                  shift, and go to state 783
    '/'                  shift, and go to state 784
    '%'                  shift, and go to state 785
    '.'                  shift, and go to state 786
    '['                  shift, and go to state 787


State 1066

  623 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 . "end of code block"

    "end of code block"  shift, and go to state 1268


State 1067

  119 annotation_list: annotation_list . ',' annotation_declaration
  121 optional_annotation_list: '[' annotation_list . ']'
  548 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list . ']' "end of expression"

    ','  shift, and go to state 107
    ']'  shift, and go to state 1269


State 1068

  545 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header "end of expression"
  547                                 | struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block

    "public"   shift, and go to state 1270
    "private"  shift, and go to state 1271

    $default  reduce using rule 535 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1272


State 1069

  540 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1273

    $default  reduce using rule 538 (optional_static_member_variable)

    optional_static_member_variable  go to state 1274


State 1070

  543 struct_variable_declaration_list: struct_variable_declaration_list $@34 structure_variable_declaration . "end of expression"

    "end of expression"  shift, and go to state 1275


State 1071

  479 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  480     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  701 type_declaration_no_options: type_declaration_no_options . dim_list
  702                            | type_declaration_no_options . '[' ']'
  710                            | type_declaration_no_options . '-' '[' ']'
  711                            | type_declaration_no_options . "explicit"
  712                            | type_declaration_no_options . "const"
  713                            | type_declaration_no_options . '-' "const"
  714                            | type_declaration_no_options . '&'
  715                            | type_declaration_no_options . '-' '&'
  716                            | type_declaration_no_options . '#'
  717                            | type_declaration_no_options . "implicit"
  718                            | type_declaration_no_options . '-' '#'
  719                            | type_declaration_no_options . "==" "const"
  720                            | type_declaration_no_options . "==" '&'
  721                            | type_declaration_no_options . '?'
  725                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 407
    "implicit"  shift, and go to state 408
    "explicit"  shift, and go to state 409
    "=="        shift, and go to state 410
    "??"        shift, and go to state 411
    '?'         shift, and go to state 412
    '&'         shift, and go to state 413
    '>'         shift, and go to state 1276
    '-'         shift, and go to state 414
    '['         shift, and go to state 415
    '#'         shift, and go to state 416

    dim_list  go to state 417


State 1072

  583 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 583 (let_variable_name_with_pos_list)


State 1073

  586 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 586 (let_variable_declaration)


State 1074

  221 expr_call_pipe: expr . expr_full_block_assumed_piped
  360 expr_assign: expr .
  361            | expr . '=' expr
  362            | expr . "<-" expr
  363            | expr . ":=" expr
  364            | expr . "&=" expr
  365            | expr . "|=" expr
  366            | expr . "^=" expr
  367            | expr . "&&=" expr
  368            | expr . "||=" expr
  369            | expr . "^^=" expr
  370            | expr . "+=" expr
  371            | expr . "-=" expr
  372            | expr . "*=" expr
  373            | expr . "/=" expr
  374            | expr . "%=" expr
  375            | expr . "<<=" expr
  376            | expr . ">>=" expr
  377            | expr . "<<<=" expr
  378            | expr . ">>>=" expr
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'
  585 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 735
    "as"                 shift, and go to state 736
    "+="                 shift, and go to state 867
    "-="                 shift, and go to state 868
    "/="                 shift, and go to state 869
    "*="                 shift, and go to state 870
    "%="                 shift, and go to state 871
    "&="                 shift, and go to state 872
    "|="                 shift, and go to state 873
    "^="                 shift, and go to state 874
    "<<"                 shift, and go to state 745
    ">>"                 shift, and go to state 746
    "++"                 shift, and go to state 747
    "--"                 shift, and go to state 748
    "<="                 shift, and go to state 749
    "<<="                shift, and go to state 875
    ">>="                shift, and go to state 876
    ">="                 shift, and go to state 752
    "=="                 shift, and go to state 753
    "!="                 shift, and go to state 754
    "->"                 shift, and go to state 755
    "<-"                 shift, and go to state 877
    "??"                 shift, and go to state 757
    "?."                 shift, and go to state 758
    "?["                 shift, and go to state 759
    "<|"                 shift, and go to state 760
    "|>"                 shift, and go to state 761
    ":="                 shift, and go to state 762
    "<<<"                shift, and go to state 763
    ">>>"                shift, and go to state 764
    "<<<="               shift, and go to state 878
    ">>>="               shift, and go to state 879
    "&&"                 shift, and go to state 767
    "||"                 shift, and go to state 768
    "^^"                 shift, and go to state 769
    "&&="                shift, and go to state 880
    "||="                shift, and go to state 881
    "^^="                shift, and go to state 882
    ".."                 shift, and go to state 773
    "end of expression"  shift, and go to state 1277
    '='                  shift, and go to state 883
    '?'                  shift, and go to state 775
    '|'                  shift, and go to state 776
    '^'                  shift, and go to state 777
    '&'                  shift, and go to state 778
    '<'                  shift, and go to state 779
    '>'                  shift, and go to state 780
    '-'                  shift, and go to state 781
    '+'                  shift, and go to state 782
    '*'                  shift, and go to state 783
    '/'                  shift, and go to state 784
    '%'                  shift, and go to state 785
    '.'                  shift, and go to state 786
    '['                  shift, and go to state 787
    '$'                  shift, and go to state 504
    '@'                  shift, and go to state 678

    $default  reduce using rule 360 (expr_assign)

    block_or_lambda                go to state 721
    expr_full_block_assumed_piped  go to state 788


State 1075

  587 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 587 (let_variable_declaration)


State 1076

  705 type_declaration_no_options: "type" '<' $@49 type_declaration '>' . $@50

    $default  reduce using rule 704 ($@50)

    $@50  go to state 1278


State 1077

  728 type_declaration_no_options: "array" '<' $@54 type_declaration '>' . $@55

    $default  reduce using rule 727 ($@55)

    $@55  go to state 1279


State 1078

  731 type_declaration_no_options: "table" '<' $@56 table_type_pair '>' . $@57

    $default  reduce using rule 730 ($@57)

    $@57  go to state 1280


State 1079

  694 table_type_pair: type_declaration c_or_s . type_declaration

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 357
    type_declaration             go to state 1281


State 1080

  734 type_declaration_no_options: "iterator" '<' $@58 type_declaration '>' . $@59

    $default  reduce using rule 733 ($@59)

    $@59  go to state 1282


State 1081

  724 type_declaration_no_options: "smart_ptr" '<' $@52 type_declaration '>' . $@53

    $default  reduce using rule 723 ($@53)

    $@53  go to state 1283


State 1082

  684 bitfield_bits: bitfield_bits "end of expression" . "name"

    "name"  shift, and go to state 1284


State 1083

  690 bitfield_type_declaration: "bitfield" '<' $@47 bitfield_bits '>' . $@48

    $default  reduce using rule 689 ($@48)

    $@48  go to state 1285


State 1084

  738 type_declaration_no_options: "block" '<' $@60 type_declaration '>' . $@61

    $default  reduce using rule 737 ($@61)

    $@61  go to state 1286


State 1085

  741 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list optional_function_type . '>' $@63

    '>'  shift, and go to state 1287


State 1086

  745 type_declaration_no_options: "function" '<' $@64 type_declaration '>' . $@65

    $default  reduce using rule 744 ($@65)

    $@65  go to state 1288


State 1087

  748 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list optional_function_type . '>' $@67

    '>'  shift, and go to state 1289


State 1088

  752 type_declaration_no_options: "lambda" '<' $@68 type_declaration '>' . $@69

    $default  reduce using rule 751 ($@69)

    $@69  go to state 1290


State 1089

  755 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list optional_function_type . '>' $@71

    '>'  shift, and go to state 1291


State 1090

  758 type_declaration_no_options: "tuple" '<' $@72 tuple_type_list '>' . $@73

    $default  reduce using rule 757 ($@73)

    $@73  go to state 1292


State 1091

  556 tuple_type_list: tuple_type_list c_or_s . tuple_type

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 610
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    tuple_type                   go to state 1293
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 357
    type_declaration             go to state 615


State 1092

  761 type_declaration_no_options: "variant" '<' $@74 variant_type_list '>' . $@75

    $default  reduce using rule 760 ($@75)

    $@75  go to state 1294


State 1093

  562 variant_type_list: variant_type_list c_or_s . variant_type

    "name"  shift, and go to state 617

    variant_type  go to state 1295


State 1094

  256 type_declaration_no_options_list: type_declaration_no_options_list . c_or_s type_declaration
  709 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list . '>' '(' optional_expr_list ')'

    "end of expression"  shift, and go to state 611
    ','                  shift, and go to state 612
    '>'                  shift, and go to state 1296

    c_or_s  go to state 1297


State 1095

  255 type_declaration_no_options_list: type_declaration .
  763 type_declaration: type_declaration . '|' type_declaration_no_options
  764                 | type_declaration . '|' '#'

    '|'  shift, and go to state 418

    $default  reduce using rule 255 (type_declaration_no_options_list)


State 1096

  707 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list ')' .

    $default  reduce using rule 707 (type_declaration_no_options)


State 1097

  250 optional_expr_list: expr_list optional_comma .

    $default  reduce using rule 250 (optional_expr_list)


State 1098

  696 dim_list: dim_list '[' expr ']' .

    $default  reduce using rule 696 (dim_list)


State 1099

  554 tuple_type: "name" ':' type_declaration .
  763 type_declaration: type_declaration . '|' type_declaration_no_options
  764                 | type_declaration . '|' '#'

    '|'  shift, and go to state 418

    $default  reduce using rule 554 (tuple_type)


State 1100

  560 variant_type: "name" ':' type_declaration .
  763 type_declaration: type_declaration . '|' type_declaration_no_options
  764                 | type_declaration . '|' '#'

    '|'  shift, and go to state 418

    $default  reduce using rule 560 (variant_type)


State 1101

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'
  640 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 1298


State 1102

  641 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 641 (variable_name_with_pos_list)


State 1103

  642 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  643                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1299

    $default  reduce using rule 642 (variable_name_with_pos_list)


State 1104

  570 variable_declaration: variable_name_with_pos_list ':' type_declaration .
  571                     | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  763 type_declaration: type_declaration . '|' type_declaration_no_options
  764                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 843
    '='   shift, and go to state 845
    '|'   shift, and go to state 418

    $default  reduce using rule 570 (variable_declaration)

    copy_or_move  go to state 1300


State 1105

  573 variable_declaration: variable_name_with_pos_list copy_or_move expr_pipe .

    $default  reduce using rule 573 (variable_declaration)


State 1106

  221 expr_call_pipe: expr . expr_full_block_assumed_piped
  360 expr_assign: expr .
  361            | expr . '=' expr
  362            | expr . "<-" expr
  363            | expr . ":=" expr
  364            | expr . "&=" expr
  365            | expr . "|=" expr
  366            | expr . "^=" expr
  367            | expr . "&&=" expr
  368            | expr . "||=" expr
  369            | expr . "^^=" expr
  370            | expr . "+=" expr
  371            | expr . "-=" expr
  372            | expr . "*=" expr
  373            | expr . "/=" expr
  374            | expr . "%=" expr
  375            | expr . "<<=" expr
  376            | expr . ">>=" expr
  377            | expr . "<<<=" expr
  378            | expr . ">>>=" expr
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'
  572 variable_declaration: variable_name_with_pos_list copy_or_move expr .

    "is"    shift, and go to state 735
    "as"    shift, and go to state 736
    "+="    shift, and go to state 867
    "-="    shift, and go to state 868
    "/="    shift, and go to state 869
    "*="    shift, and go to state 870
    "%="    shift, and go to state 871
    "&="    shift, and go to state 872
    "|="    shift, and go to state 873
    "^="    shift, and go to state 874
    "<<"    shift, and go to state 745
    ">>"    shift, and go to state 746
    "++"    shift, and go to state 747
    "--"    shift, and go to state 748
    "<="    shift, and go to state 749
    "<<="   shift, and go to state 875
    ">>="   shift, and go to state 876
    ">="    shift, and go to state 752
    "=="    shift, and go to state 753
    "!="    shift, and go to state 754
    "->"    shift, and go to state 755
    "<-"    shift, and go to state 877
    "??"    shift, and go to state 757
    "?."    shift, and go to state 758
    "?["    shift, and go to state 759
    "<|"    shift, and go to state 760
    "|>"    shift, and go to state 761
    ":="    shift, and go to state 762
    "<<<"   shift, and go to state 763
    ">>>"   shift, and go to state 764
    "<<<="  shift, and go to state 878
    ">>>="  shift, and go to state 879
    "&&"    shift, and go to state 767
    "||"    shift, and go to state 768
    "^^"    shift, and go to state 769
    "&&="   shift, and go to state 880
    "||="   shift, and go to state 881
    "^^="   shift, and go to state 882
    ".."    shift, and go to state 773
    '='     shift, and go to state 883
    '?'     shift, and go to state 775
    '|'     shift, and go to state 776
    '^'     shift, and go to state 777
    '&'     shift, and go to state 778
    '<'     shift, and go to state 779
    '>'     shift, and go to state 780
    '-'     shift, and go to state 781
    '+'     shift, and go to state 782
    '*'     shift, and go to state 783
    '/'     shift, and go to state 784
    '%'     shift, and go to state 785
    '.'     shift, and go to state 786
    '['     shift, and go to state 787
    '$'     shift, and go to state 504
    '@'     shift, and go to state 678

    " <|"     reduce using rule 360 (expr_assign)
    $default  reduce using rule 572 (variable_declaration)

    block_or_lambda                go to state 721
    expr_full_block_assumed_piped  go to state 788


State 1107

  701 type_declaration_no_options: type_declaration_no_options . dim_list
  702                            | type_declaration_no_options . '[' ']'
  710                            | type_declaration_no_options . '-' '[' ']'
  711                            | type_declaration_no_options . "explicit"
  712                            | type_declaration_no_options . "const"
  713                            | type_declaration_no_options . '-' "const"
  714                            | type_declaration_no_options . '&'
  715                            | type_declaration_no_options . '-' '&'
  716                            | type_declaration_no_options . '#'
  717                            | type_declaration_no_options . "implicit"
  718                            | type_declaration_no_options . '-' '#'
  719                            | type_declaration_no_options . "==" "const"
  720                            | type_declaration_no_options . "==" '&'
  721                            | type_declaration_no_options . '?'
  725                            | type_declaration_no_options . "??"
  827 make_struct_decl: "struct" '<' $@88 type_declaration_no_options . '>' $@89 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 407
    "implicit"  shift, and go to state 408
    "explicit"  shift, and go to state 409
    "=="        shift, and go to state 410
    "??"        shift, and go to state 411
    '?'         shift, and go to state 412
    '&'         shift, and go to state 413
    '>'         shift, and go to state 1301
    '-'         shift, and go to state 414
    '['         shift, and go to state 415
    '#'         shift, and go to state 416

    dim_list  go to state 417


State 1108

  701 type_declaration_no_options: type_declaration_no_options . dim_list
  702                            | type_declaration_no_options . '[' ']'
  710                            | type_declaration_no_options . '-' '[' ']'
  711                            | type_declaration_no_options . "explicit"
  712                            | type_declaration_no_options . "const"
  713                            | type_declaration_no_options . '-' "const"
  714                            | type_declaration_no_options . '&'
  715                            | type_declaration_no_options . '-' '&'
  716                            | type_declaration_no_options . '#'
  717                            | type_declaration_no_options . "implicit"
  718                            | type_declaration_no_options . '-' '#'
  719                            | type_declaration_no_options . "==" "const"
  720                            | type_declaration_no_options . "==" '&'
  721                            | type_declaration_no_options . '?'
  725                            | type_declaration_no_options . "??"
  830 make_struct_decl: "class" '<' $@90 type_declaration_no_options . '>' $@91 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 407
    "implicit"  shift, and go to state 408
    "explicit"  shift, and go to state 409
    "=="        shift, and go to state 410
    "??"        shift, and go to state 411
    '?'         shift, and go to state 412
    '&'         shift, and go to state 413
    '>'         shift, and go to state 1302
    '-'         shift, and go to state 414
    '['         shift, and go to state 415
    '#'         shift, and go to state 416

    dim_list  go to state 417


State 1109

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" . expr_list expression_block

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 1303
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 714
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1110

  275 new_type_declaration: '<' $@11 type_declaration . '>' $@12
  763 type_declaration: type_declaration . '|' type_declaration_no_options
  764                 | type_declaration . '|' '#'

    '|'  shift, and go to state 418
    '>'  shift, and go to state 1304


State 1111

  281 expr_new: "new" new_type_declaration '(' "uninitialized" . make_struct_single ')'
  818 use_initializer: "uninitialized" .

    "$f"    shift, and go to state 918
    "name"  shift, and go to state 1222

    $default  reduce using rule 818 (use_initializer)

    make_struct_fields  go to state 966
    make_struct_single  go to state 1305


State 1112

  279 expr_new: "new" new_type_declaration '(' expr_list . ')'
  331 expr_list: expr_list . ',' expr

    ','  shift, and go to state 866
    ')'  shift, and go to state 1306


State 1113

  280 expr_new: "new" new_type_declaration '(' make_struct_single . ')'

    ')'  shift, and go to state 1307


State 1114

  278 expr_new: "new" new_type_declaration '(' use_initializer . ')'

    ')'  shift, and go to state 1308


State 1115

  325 expr_type_info: "typeinfo" '(' name_in_namespace '<' . "name" '>' expr ')'
  326               | "typeinfo" '(' name_in_namespace '<' . "name" c_or_s "name" '>' expr ')'

    "name"  shift, and go to state 1309


State 1116

  324 expr_type_info: "typeinfo" '(' name_in_namespace expr . ')'
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 1310


State 1117

  328 expr_type_info: "typeinfo" name_in_namespace '<' "name" . '>' '(' expr ')'
  329               | "typeinfo" name_in_namespace '<' "name" . "end of expression" "name" '>' '(' expr ')'

    "end of expression"  shift, and go to state 1311
    '>'                  shift, and go to state 1312


State 1118

  327 expr_type_info: "typeinfo" name_in_namespace '(' expr . ')'
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 1313


State 1119

  323 expr_type_decl: "type" '<' $@19 type_declaration . '>' $@20
  763 type_declaration: type_declaration . '|' type_declaration_no_options
  764                 | type_declaration . '|' '#'

    '|'  shift, and go to state 418
    '>'  shift, and go to state 1314


State 1120

  853 make_dim_decl: "array" "struct" '<' $@98 . type_declaration_no_options '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 1315


State 1121

  856 make_dim_decl: "array" "tuple" '<' $@100 . type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 1316


State 1122

  859 make_dim_decl: "array" "variant" '<' $@102 . type_declaration_no_options '>' $@103 '(' make_variant_dim ')'

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 1317


State 1123

  701 type_declaration_no_options: type_declaration_no_options . dim_list
  702                            | type_declaration_no_options . '[' ']'
  710                            | type_declaration_no_options . '-' '[' ']'
  711                            | type_declaration_no_options . "explicit"
  712                            | type_declaration_no_options . "const"
  713                            | type_declaration_no_options . '-' "const"
  714                            | type_declaration_no_options . '&'
  715                            | type_declaration_no_options . '-' '&'
  716                            | type_declaration_no_options . '#'
  717                            | type_declaration_no_options . "implicit"
  718                            | type_declaration_no_options . '-' '#'
  719                            | type_declaration_no_options . "==" "const"
  720                            | type_declaration_no_options . "==" '&'
  721                            | type_declaration_no_options . '?'
  725                            | type_declaration_no_options . "??"
  863 make_dim_decl: "array" '<' $@104 type_declaration_no_options . '>' $@105 '(' optional_expr_list ')'

    "const"     shift, and go to state 407
    "implicit"  shift, and go to state 408
    "explicit"  shift, and go to state 409
    "=="        shift, and go to state 410
    "??"        shift, and go to state 411
    '?'         shift, and go to state 412
    '&'         shift, and go to state 413
    '>'         shift, and go to state 1318
    '-'         shift, and go to state 414
    '['         shift, and go to state 415
    '#'         shift, and go to state 416

    dim_list  go to state 417


State 1124

  860 make_dim_decl: "array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1319


State 1125

  331 expr_list: expr_list ',' expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 331 (expr_list)


State 1126

  370 expr_assign: expr "+=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 370 (expr_assign)


State 1127

  371 expr_assign: expr "-=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 371 (expr_assign)


State 1128

  373 expr_assign: expr "/=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 373 (expr_assign)


State 1129

  372 expr_assign: expr "*=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 372 (expr_assign)


State 1130

  374 expr_assign: expr "%=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 374 (expr_assign)


State 1131

  364 expr_assign: expr "&=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 364 (expr_assign)


State 1132

  365 expr_assign: expr "|=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 365 (expr_assign)


State 1133

  366 expr_assign: expr "^=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 366 (expr_assign)


State 1134

  375 expr_assign: expr "<<=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 375 (expr_assign)


State 1135

  376 expr_assign: expr ">>=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 376 (expr_assign)


State 1136

  362 expr_assign: expr "<-" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 362 (expr_assign)


State 1137

  377 expr_assign: expr "<<<=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 377 (expr_assign)


State 1138

  378 expr_assign: expr ">>>=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 378 (expr_assign)


State 1139

  367 expr_assign: expr "&&=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 367 (expr_assign)


State 1140

  368 expr_assign: expr "||=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 368 (expr_assign)


State 1141

  369 expr_assign: expr "^^=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 369 (expr_assign)


State 1142

  361 expr_assign: expr '=' expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 361 (expr_assign)


State 1143

  296 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 296 (expression_try_catch)


State 1144

  875 make_table_decl: "table" '<' type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1320


State 1145

  876 make_table_decl: "table" '<' type_declaration_no_options c_or_s . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 1321


State 1146

  874 make_table_decl: "table" '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 874 (make_table_decl)


State 1147

  254 optional_expr_map_tuple_list: expr_map_tuple_list optional_comma .

    $default  reduce using rule 254 (optional_expr_map_tuple_list)


State 1148

  477 expr: "deref" '(' expr ')' .

    $default  reduce using rule 477 (expr)


State 1149

   81 expression_with_alias: "assume" "name" '=' $@5 . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1322
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1150

  314 expr_cast: "cast" '<' $@13 type_declaration_no_options . '>' $@14 expr
  701 type_declaration_no_options: type_declaration_no_options . dim_list
  702                            | type_declaration_no_options . '[' ']'
  710                            | type_declaration_no_options . '-' '[' ']'
  711                            | type_declaration_no_options . "explicit"
  712                            | type_declaration_no_options . "const"
  713                            | type_declaration_no_options . '-' "const"
  714                            | type_declaration_no_options . '&'
  715                            | type_declaration_no_options . '-' '&'
  716                            | type_declaration_no_options . '#'
  717                            | type_declaration_no_options . "implicit"
  718                            | type_declaration_no_options . '-' '#'
  719                            | type_declaration_no_options . "==" "const"
  720                            | type_declaration_no_options . "==" '&'
  721                            | type_declaration_no_options . '?'
  725                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 407
    "implicit"  shift, and go to state 408
    "explicit"  shift, and go to state 409
    "=="        shift, and go to state 410
    "??"        shift, and go to state 411
    '?'         shift, and go to state 412
    '&'         shift, and go to state 413
    '>'         shift, and go to state 1323
    '-'         shift, and go to state 414
    '['         shift, and go to state 415
    '#'         shift, and go to state 416

    dim_list  go to state 417


State 1151

  317 expr_cast: "upcast" '<' $@15 type_declaration_no_options . '>' $@16 expr
  701 type_declaration_no_options: type_declaration_no_options . dim_list
  702                            | type_declaration_no_options . '[' ']'
  710                            | type_declaration_no_options . '-' '[' ']'
  711                            | type_declaration_no_options . "explicit"
  712                            | type_declaration_no_options . "const"
  713                            | type_declaration_no_options . '-' "const"
  714                            | type_declaration_no_options . '&'
  715                            | type_declaration_no_options . '-' '&'
  716                            | type_declaration_no_options . '#'
  717                            | type_declaration_no_options . "implicit"
  718                            | type_declaration_no_options . '-' '#'
  719                            | type_declaration_no_options . "==" "const"
  720                            | type_declaration_no_options . "==" '&'
  721                            | type_declaration_no_options . '?'
  725                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 407
    "implicit"  shift, and go to state 408
    "explicit"  shift, and go to state 409
    "=="        shift, and go to state 410
    "??"        shift, and go to state 411
    '?'         shift, and go to state 412
    '&'         shift, and go to state 413
    '>'         shift, and go to state 1324
    '-'         shift, and go to state 414
    '['         shift, and go to state 415
    '#'         shift, and go to state 416

    dim_list  go to state 417


State 1152

  478 expr: "addr" '(' expr ')' .

    $default  reduce using rule 478 (expr)


State 1153

  320 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options . '>' $@18 expr
  701 type_declaration_no_options: type_declaration_no_options . dim_list
  702                            | type_declaration_no_options . '[' ']'
  710                            | type_declaration_no_options . '-' '[' ']'
  711                            | type_declaration_no_options . "explicit"
  712                            | type_declaration_no_options . "const"
  713                            | type_declaration_no_options . '-' "const"
  714                            | type_declaration_no_options . '&'
  715                            | type_declaration_no_options . '-' '&'
  716                            | type_declaration_no_options . '#'
  717                            | type_declaration_no_options . "implicit"
  718                            | type_declaration_no_options . '-' '#'
  719                            | type_declaration_no_options . "==" "const"
  720                            | type_declaration_no_options . "==" '&'
  721                            | type_declaration_no_options . '?'
  725                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 407
    "implicit"  shift, and go to state 408
    "explicit"  shift, and go to state 409
    "=="        shift, and go to state 410
    "??"        shift, and go to state 411
    '?'         shift, and go to state 412
    '&'         shift, and go to state 413
    '>'         shift, and go to state 1325
    '-'         shift, and go to state 414
    '['         shift, and go to state 415
    '#'         shift, and go to state 416

    dim_list  go to state 417


State 1154

  509 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 509 (expr)


State 1155

  701 type_declaration_no_options: type_declaration_no_options . dim_list
  702                            | type_declaration_no_options . '[' ']'
  710                            | type_declaration_no_options . '-' '[' ']'
  711                            | type_declaration_no_options . "explicit"
  712                            | type_declaration_no_options . "const"
  713                            | type_declaration_no_options . '-' "const"
  714                            | type_declaration_no_options . '&'
  715                            | type_declaration_no_options . '-' '&'
  716                            | type_declaration_no_options . '#'
  717                            | type_declaration_no_options . "implicit"
  718                            | type_declaration_no_options . '-' '#'
  719                            | type_declaration_no_options . "==" "const"
  720                            | type_declaration_no_options . "==" '&'
  721                            | type_declaration_no_options . '?'
  725                            | type_declaration_no_options . "??"
  867 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options . '>' $@107 '(' expr_list optional_comma ')'

    "const"     shift, and go to state 407
    "implicit"  shift, and go to state 408
    "explicit"  shift, and go to state 409
    "=="        shift, and go to state 410
    "??"        shift, and go to state 411
    '?'         shift, and go to state 412
    '&'         shift, and go to state 413
    '>'         shift, and go to state 1326
    '-'         shift, and go to state 414
    '['         shift, and go to state 415
    '#'         shift, and go to state 416

    dim_list  go to state 417


State 1156

  864 make_dim_decl: "fixed_array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1327


State 1157

  701 type_declaration_no_options: type_declaration_no_options . dim_list
  702                            | type_declaration_no_options . '[' ']'
  710                            | type_declaration_no_options . '-' '[' ']'
  711                            | type_declaration_no_options . "explicit"
  712                            | type_declaration_no_options . "const"
  713                            | type_declaration_no_options . '-' "const"
  714                            | type_declaration_no_options . '&'
  715                            | type_declaration_no_options . '-' '&'
  716                            | type_declaration_no_options . '#'
  717                            | type_declaration_no_options . "implicit"
  718                            | type_declaration_no_options . '-' '#'
  719                            | type_declaration_no_options . "==" "const"
  720                            | type_declaration_no_options . "==" '&'
  721                            | type_declaration_no_options . '?'
  725                            | type_declaration_no_options . "??"
  836 make_struct_decl: "default" '<' $@94 type_declaration_no_options . '>' $@95 use_initializer

    "const"     shift, and go to state 407
    "implicit"  shift, and go to state 408
    "explicit"  shift, and go to state 409
    "=="        shift, and go to state 410
    "??"        shift, and go to state 411
    '?'         shift, and go to state 412
    '&'         shift, and go to state 413
    '>'         shift, and go to state 1328
    '-'         shift, and go to state 414
    '['         shift, and go to state 415
    '#'         shift, and go to state 416

    dim_list  go to state 417


State 1158

  701 type_declaration_no_options: type_declaration_no_options . dim_list
  702                            | type_declaration_no_options . '[' ']'
  710                            | type_declaration_no_options . '-' '[' ']'
  711                            | type_declaration_no_options . "explicit"
  712                            | type_declaration_no_options . "const"
  713                            | type_declaration_no_options . '-' "const"
  714                            | type_declaration_no_options . '&'
  715                            | type_declaration_no_options . '-' '&'
  716                            | type_declaration_no_options . '#'
  717                            | type_declaration_no_options . "implicit"
  718                            | type_declaration_no_options . '-' '#'
  719                            | type_declaration_no_options . "==" "const"
  720                            | type_declaration_no_options . "==" '&'
  721                            | type_declaration_no_options . '?'
  725                            | type_declaration_no_options . "??"
  845 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options . '>' $@97 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 407
    "implicit"  shift, and go to state 408
    "explicit"  shift, and go to state 409
    "=="        shift, and go to state 410
    "??"        shift, and go to state 411
    '?'         shift, and go to state 412
    '&'         shift, and go to state 413
    '>'         shift, and go to state 1329
    '-'         shift, and go to state 414
    '['         shift, and go to state 415
    '#'         shift, and go to state 416

    dim_list  go to state 417


State 1159

  842 make_tuple_call: "tuple" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1330


State 1160

  701 type_declaration_no_options: type_declaration_no_options . dim_list
  702                            | type_declaration_no_options . '[' ']'
  710                            | type_declaration_no_options . '-' '[' ']'
  711                            | type_declaration_no_options . "explicit"
  712                            | type_declaration_no_options . "const"
  713                            | type_declaration_no_options . '-' "const"
  714                            | type_declaration_no_options . '&'
  715                            | type_declaration_no_options . '-' '&'
  716                            | type_declaration_no_options . '#'
  717                            | type_declaration_no_options . "implicit"
  718                            | type_declaration_no_options . '-' '#'
  719                            | type_declaration_no_options . "==" "const"
  720                            | type_declaration_no_options . "==" '&'
  721                            | type_declaration_no_options . '?'
  725                            | type_declaration_no_options . "??"
  833 make_struct_decl: "variant" '<' $@92 type_declaration_no_options . '>' $@93 '(' make_variant_dim ')'

    "const"     shift, and go to state 407
    "implicit"  shift, and go to state 408
    "explicit"  shift, and go to state 409
    "=="        shift, and go to state 410
    "??"        shift, and go to state 411
    '?'         shift, and go to state 412
    '&'         shift, and go to state 413
    '>'         shift, and go to state 1331
    '-'         shift, and go to state 414
    '['         shift, and go to state 415
    '#'         shift, and go to state 416

    dim_list  go to state 417


State 1161

  223 expr_call_pipe: "generator" '<' type_declaration_no_options '>' . optional_capture_list expr_full_block_assumed_piped
  479 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  480     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'

    "capture"  shift, and go to state 972
    "[["       shift, and go to state 973

    $default  reduce using rule 345 (optional_capture_list)

    optional_capture_list  go to state 1332


State 1162

  349 expr_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 284

    $default  reduce using rule 122 (optional_function_argument_list)

    optional_function_argument_list  go to state 1333


State 1163

  511 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 511 (expr_mtag)


State 1164

  512 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 512 (expr_mtag)


State 1165

  513 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 513 (expr_mtag)


State 1166

  514 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 514 (expr_mtag)


State 1167

  515 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 515 (expr_mtag)


State 1168

  517 expr_mtag: "$c" '(' expr ')' . '(' ')'
  518          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1334


State 1169

  883 array_comprehension: "[[" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']' ']'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 1335
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 714
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1170

  804 optional_block: "where" expr_block .

    $default  reduce using rule 804 (optional_block)


State 1171

  789 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  790                   | "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1336
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1172

  786 make_struct_fields: "name" ":=" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1337
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1173

  785 make_struct_fields: "name" copy_or_move . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1338
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1174

  710 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'
  848 make_dim_decl: '[' . expr_list optional_comma ']'
  881 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  882                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "for"                             shift, and go to state 711
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "iterator"                        shift, and go to state 712
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    ']'                               shift, and go to state 829
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 713
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 714
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1175

  330 expr_list: expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'
  695 dim_list: '[' expr . ']'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ']'    shift, and go to state 830

    ']'       [reduce using rule 330 (expr_list)]
    $default  reduce using rule 330 (expr_list)


State 1176

  821 make_struct_decl: "[[" type_declaration_no_options '(' ')' . optional_block optional_trailing_delim_sqr_sqr
  822                 | "[[" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "where"  shift, and go to state 917
    "$f"     shift, and go to state 918
    "name"   shift, and go to state 1222

    $default  reduce using rule 803 (optional_block)

    make_struct_fields  go to state 924
    make_struct_dim     go to state 1339
    optional_block      go to state 1340


State 1177

  838 make_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1341
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1178

  787 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  788                   | make_struct_fields ',' . "name" ":=" expr
  791                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  792                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 1342
    "name"  shift, and go to state 1343


State 1179

  796 make_struct_dim: make_struct_dim "end of expression" . make_struct_fields

    "$f"    shift, and go to state 918
    "name"  shift, and go to state 1222

    make_struct_fields  go to state 1344


State 1180

  819 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1181
    ",]]"  shift, and go to state 1182
    ']'    shift, and go to state 1183

    optional_trailing_delim_sqr_sqr  go to state 1345


State 1181

  812 optional_trailing_delim_sqr_sqr: ";]]" .

    $default  reduce using rule 812 (optional_trailing_delim_sqr_sqr)


State 1182

  813 optional_trailing_delim_sqr_sqr: ",]]" .

    $default  reduce using rule 813 (optional_trailing_delim_sqr_sqr)


State 1183

  811 optional_trailing_delim_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1346


State 1184

  820 make_struct_decl: "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 820 (make_struct_decl)


State 1185

  839 make_tuple: make_tuple ',' . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1347
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1186

  847 make_dim: make_dim "end of expression" . make_tuple

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 923
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple              go to state 1348
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1187

  810 optional_trailing_semicolon_sqr_sqr: ";]]" .

    $default  reduce using rule 810 (optional_trailing_semicolon_sqr_sqr)


State 1188

  809 optional_trailing_semicolon_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1349


State 1189

  849 make_dim_decl: "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr .

    $default  reduce using rule 849 (make_dim_decl)


State 1190

  884 array_comprehension: "[{" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 1350
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 714
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1191

  824 make_struct_decl: "[{" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "$f"    shift, and go to state 918
    "name"  shift, and go to state 1222

    make_struct_fields  go to state 924
    make_struct_dim     go to state 1351


State 1192

  823 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    "end of code block"  shift, and go to state 1352
    ";}]"                shift, and go to state 1353
    ",}]"                shift, and go to state 1354

    optional_trailing_delim_cur_sqr  go to state 1355


State 1193

  807 optional_trailing_semicolon_cur_sqr: "end of code block" . ']'

    ']'  shift, and go to state 1356


State 1194

  808 optional_trailing_semicolon_cur_sqr: ";}]" .

    $default  reduce using rule 808 (optional_trailing_semicolon_cur_sqr)


State 1195

  850 make_dim_decl: "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr .

    $default  reduce using rule 850 (make_dim_decl)


State 1196

  886 array_comprehension: "{{" "for" variable_name_with_pos_list "in" . expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 1357
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 714
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1197

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'
  840 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 840 (make_map_tuple)


State 1198

  805 optional_trailing_semicolon_cur_cur: "end of code block" "end of code block" .

    $default  reduce using rule 805 (optional_trailing_semicolon_cur_cur)


State 1199

  869 make_table: make_table "end of expression" make_map_tuple .

    $default  reduce using rule 869 (make_table)


State 1200

  256 type_declaration_no_options_list: type_declaration_no_options_list . c_or_s type_declaration
  259 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list . '>' $@8 expr

    "end of expression"  shift, and go to state 611
    ','                  shift, and go to state 612
    '>'                  shift, and go to state 1358

    c_or_s  go to state 1297


State 1201

  256 type_declaration_no_options_list: type_declaration_no_options_list . c_or_s type_declaration
  262 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list . '>' $@10 optional_expr_list_in_braces

    "end of expression"  shift, and go to state 611
    ','                  shift, and go to state 612
    '>'                  shift, and go to state 1359

    c_or_s  go to state 1297


State 1202

   30 string_builder_body: string_builder_body "{" expr . "}"
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    "}"    shift, and go to state 1360
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787


State 1203

  885 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" . expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 1361
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 714
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1204

  871 expr_map_tuple_list: expr_map_tuple_list ',' make_map_tuple .

    $default  reduce using rule 871 (expr_map_tuple_list)


State 1205

  872 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma "end of code block" .

    $default  reduce using rule 872 (make_table_decl)


State 1206

  220 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions . "end of code block"
  246 expressions: expressions . expression_any
  247            | expressions . error

    error                             shift, and go to state 431
    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 434
    "if"                              shift, and go to state 435
    "static_if"                       shift, and go to state 436
    "for"                             shift, and go to state 437
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "return"                          shift, and go to state 444
    "null"                            shift, and go to state 445
    "break"                           shift, and go to state 446
    "try"                             shift, and go to state 447
    "table"                           shift, and go to state 448
    "delete"                          shift, and go to state 449
    "deref"                           shift, and go to state 450
    "with"                            shift, and go to state 451
    "assume"                          shift, and go to state 452
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 455
    "continue"                        shift, and go to state 456
    "pass"                            shift, and go to state 457
    "reinterpret"                     shift, and go to state 458
    "label"                           shift, and go to state 459
    "goto"                            shift, and go to state 460
    "unsafe"                          shift, and go to state 461
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 467
    "yield"                           shift, and go to state 468
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "$ <|"                            shift, and go to state 471
    "@ <|"                            shift, and go to state 472
    "@@ <|"                           shift, and go to state 473
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 491
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    "end of code block"               shift, and go to state 1362
    "end of expression"               shift, and go to state 496
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder             go to state 506
    expr_reader                go to state 507
    expression_label           go to state 508
    expression_goto            go to state 509
    if_or_static_if            go to state 510
    expression_if_one_liner    go to state 511
    expression_if_then_else    go to state 512
    expression_for_loop        go to state 513
    expression_unsafe          go to state 514
    expression_while_loop      go to state 515
    expression_with            go to state 516
    expression_with_alias      go to state 517
    expr_call_pipe             go to state 518
    expression_any             go to state 519
    expr_keyword               go to state 520
    expression_keyword         go to state 521
    expr_pipe                  go to state 522
    name_in_namespace          go to state 523
    expression_delete          go to state 524
    expr_new                   go to state 525
    expression_break           go to state 526
    expression_continue        go to state 527
    expression_return_no_pipe  go to state 528
    expression_return          go to state 529
    expression_yield_no_pipe   go to state 530
    expression_yield           go to state 531
    expression_try_catch       go to state 532
    kwd_let                    go to state 533
    expression_let             go to state 534
    expr_cast                  go to state 535
    expr_type_decl             go to state 536
    expr_type_info             go to state 537
    block_or_lambda            go to state 538
    expr_full_block            go to state 539
    expr_numeric_const         go to state 540
    expr_assign                go to state 541
    expr_assign_pipe           go to state 542
    expr_named_call            go to state 543
    expr_method_call           go to state 544
    func_addr_expr             go to state 545
    expr_field                 go to state 546
    expr_call                  go to state 547
    expr                       go to state 548
    expr_mtag                  go to state 549
    basic_type_declaration     go to state 550
    make_decl                  go to state 551
    make_struct_decl           go to state 552
    make_tuple_call            go to state 553
    make_dim_decl              go to state 554
    make_table_decl            go to state 555
    array_comprehension        go to state 556


State 1207

  881 array_comprehension: '[' "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 1363
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 714
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1208

  642 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  643                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  882 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1364
    ','   shift, and go to state 844


State 1209

  848 make_dim_decl: '[' expr_list optional_comma ']' .

    $default  reduce using rule 848 (make_dim_decl)


State 1210

  467 expr: '(' expr_list optional_comma ')' .

    $default  reduce using rule 467 (expr)


State 1211

  405 func_addr_name: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1365
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1212

  526 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1366
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1213

  409 func_addr_expr: '@' '@' '<' $@22 . type_declaration_no_options '>' $@23 func_addr_name

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 1367


State 1214

  412 func_addr_expr: '@' '@' '<' $@24 . optional_function_argument_list optional_function_type '>' $@25 func_addr_name

    '('  shift, and go to state 284

    $default  reduce using rule 122 (optional_function_argument_list)

    optional_function_argument_list  go to state 1368


State 1215

   60 expression_else: "else" . expression_block

    "begin of code block"  shift, and go to state 286

    expression_block  go to state 1369


State 1216

   57 elif_or_static_elif: "elif" .

    $default  reduce using rule 57 (elif_or_static_elif)


State 1217

   58 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 58 (elif_or_static_elif)


State 1218

   61 expression_else: elif_or_static_elif . expr expression_block expression_else

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1370
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1219

   72 expression_if_then_else: if_or_static_if expr expression_block expression_else .

    $default  reduce using rule 72 (expression_if_then_else)


State 1220

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr . expression_else_one_liner "end of expression"
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "else"  shift, and go to state 1371
    "is"    shift, and go to state 735
    "as"    shift, and go to state 736
    "<<"    shift, and go to state 745
    ">>"    shift, and go to state 746
    "++"    shift, and go to state 747
    "--"    shift, and go to state 748
    "<="    shift, and go to state 749
    ">="    shift, and go to state 752
    "=="    shift, and go to state 753
    "!="    shift, and go to state 754
    "->"    shift, and go to state 755
    "??"    shift, and go to state 757
    "?."    shift, and go to state 758
    "?["    shift, and go to state 759
    "<|"    shift, and go to state 760
    "|>"    shift, and go to state 761
    "<<<"   shift, and go to state 763
    ">>>"   shift, and go to state 764
    "&&"    shift, and go to state 767
    "||"    shift, and go to state 768
    "^^"    shift, and go to state 769
    ".."    shift, and go to state 773
    '?'     shift, and go to state 775
    '|'     shift, and go to state 776
    '^'     shift, and go to state 777
    '&'     shift, and go to state 778
    '<'     shift, and go to state 779
    '>'     shift, and go to state 780
    '-'     shift, and go to state 781
    '+'     shift, and go to state 782
    '*'     shift, and go to state 783
    '/'     shift, and go to state 784
    '%'     shift, and go to state 785
    '.'     shift, and go to state 786
    '['     shift, and go to state 787

    $default  reduce using rule 64 (expression_else_one_liner)

    expression_else_one_liner  go to state 1372


State 1221

  352 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type expression_block

    "capture"  shift, and go to state 972
    "[["       shift, and go to state 973

    $default  reduce using rule 345 (optional_capture_list)

    optional_capture_list  go to state 1373


State 1222

  785 make_struct_fields: "name" . copy_or_move expr
  786                   | "name" . ":=" expr

    "<-"  shift, and go to state 843
    ":="  shift, and go to state 1172
    '='   shift, and go to state 845

    copy_or_move  go to state 1173


State 1223

  421 expr_call: name_in_namespace '(' "uninitialized" ')' .

    $default  reduce using rule 421 (expr_call)


State 1224

  423 expr_call: name_in_namespace '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1374


State 1225

  400 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  787 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  788                   | make_struct_fields . ',' "name" ":=" expr
  791                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  792                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1178
    ']'  shift, and go to state 1375


State 1226

  331 expr_list: expr_list ',' . expr
  401 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 1376
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1125
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1227

  424 expr_call: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 424 (expr_call)


State 1228

  422 expr_call: name_in_namespace '(' make_struct_single ')' .

    $default  reduce using rule 422 (expr_call)


State 1229

  304 tuple_expansion: "name" .

    $default  reduce using rule 304 (tuple_expansion)


State 1230

  305 tuple_expansion: tuple_expansion . ',' "name"
  306 tuple_expansion_variable_declaration: "[[" tuple_expansion . ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  308                                     | "[[" tuple_expansion . ']' ']' optional_ref copy_or_move_or_clone expr "end of expression"

    ','  shift, and go to state 1377
    ']'  shift, and go to state 1378


State 1231

  305 tuple_expansion: tuple_expansion . ',' "name"
  307 tuple_expansion_variable_declaration: '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  309                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr "end of expression"

    ','  shift, and go to state 1377
    ')'  shift, and go to state 1379


State 1232

  347 optional_capture_list: "capture" '(' . capture_list ')'

    "<-"    shift, and go to state 1233
    ":="    shift, and go to state 1234
    "name"  shift, and go to state 1235
    '='     shift, and go to state 1236
    '&'     shift, and go to state 1237

    capture_entry  go to state 1238
    capture_list   go to state 1380


State 1233

  340 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1381


State 1234

  341 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1382


State 1235

  342 capture_entry: "name" . '(' "name" ')'

    '('  shift, and go to state 1383


State 1236

  339 capture_entry: '=' . "name"

    "name"  shift, and go to state 1384


State 1237

  338 capture_entry: '&' . "name"

    "name"  shift, and go to state 1385


State 1238

  343 capture_list: capture_entry .

    $default  reduce using rule 343 (capture_list)


State 1239

  344 capture_list: capture_list . ',' capture_entry
  346 optional_capture_list: "[[" capture_list . ']' ']'

    ','  shift, and go to state 1386
    ']'  shift, and go to state 1387


State 1240

  350 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 374

    $default  reduce using rule 125 (optional_function_type)

    optional_function_type  go to state 1388


State 1241

  485 expr: expr "is" "type" '<' . $@28 type_declaration_no_options '>' $@29

    $default  reduce using rule 483 ($@28)

    $@28  go to state 1389


State 1242

  525 expr_mtag: expr "is" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1390
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1243

  491 expr: expr "as" "type" '<' . $@30 type_declaration '>' $@31

    $default  reduce using rule 489 ($@30)

    $@30  go to state 1391


State 1244

  523 expr_mtag: expr "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1392
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1245

  381 expr_assign_pipe_right: "$ <|" expr_block .

    $default  reduce using rule 381 (expr_assign_pipe_right)


State 1246

  379 expr_assign_pipe_right: "@ <|" expr_block .

    $default  reduce using rule 379 (expr_assign_pipe_right)


State 1247

  380 expr_assign_pipe_right: "@@ <|" expr_block .

    $default  reduce using rule 380 (expr_assign_pipe_right)


State 1248

  402 expr_method_call: expr "->" "name" '(' . ')'
  403                 | expr "->" "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    ')'                               shift, and go to state 1393
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 1394
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 714
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1249

  520 expr_mtag: expr "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1395
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1250

  470 expr: expr "?[" expr ']' .

    $default  reduce using rule 470 (expr)


State 1251

  496 expr: expr '?' "as" "type" . '<' $@32 type_declaration '>' $@33

    '<'  shift, and go to state 1396


State 1252

  524 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1397


State 1253

  493 expr: expr '?' "as" "name" .

    $default  reduce using rule 493 (expr)


State 1254

  497 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 497 (expr)


State 1255

  482 expr: expr '?' expr ':' . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1398
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1256

  522 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1399


State 1257

  473 expr: expr '.' "?." "name" .

    $default  reduce using rule 473 (expr)


State 1258

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  471     | expr '.' "?[" expr . ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ']'    shift, and go to state 1400


State 1259

  519 expr_mtag: expr '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1401
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1260

  415 expr_field: expr '.' "name" '(' . ')'
  416           | expr '.' "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    ')'                               shift, and go to state 1402
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 1403
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 714
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1261

  521 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1404


State 1262

  414 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 414 (expr_field)


State 1263

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  469     | expr '.' '[' expr . ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ']'    shift, and go to state 1405


State 1264

  419 expr_field: expr '.' $@26 error . $@27

    $default  reduce using rule 418 ($@27)

    $@27  go to state 1406


State 1265

  468 expr: expr '[' expr ']' .

    $default  reduce using rule 468 (expr)


State 1266

  426 expr_call: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 426 (expr_call)


State 1267

  603 enum_list: enum_list "name" '=' expr "end of expression" .

    $default  reduce using rule 603 (enum_list)


State 1268

  623 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block" .

    $default  reduce using rule 623 (enum_declaration)


State 1269

  121 optional_annotation_list: '[' annotation_list ']' .
  548 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' . "end of expression"

    "end of expression"  shift, and go to state 1407

    $default  reduce using rule 121 (optional_annotation_list)


State 1270

  536 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 536 (optional_public_or_private_member_variable)


State 1271

  537 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 537 (optional_public_or_private_member_variable)


State 1272

  545 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . "abstract" optional_constant $@35 function_declaration_header "end of expression"
  547                                 | struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block

    "abstract"  shift, and go to state 1408
    "static"    shift, and go to state 1273

    $default  reduce using rule 538 (optional_static_member_variable)

    optional_static_member_variable  go to state 1409


State 1273

  539 optional_static_member_variable: "static" .

    $default  reduce using rule 539 (optional_static_member_variable)


State 1274

  540 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1410
    "sealed"    shift, and go to state 1411

    $default  reduce using rule 530 (optional_override)

    optional_override  go to state 1412


State 1275

  543 struct_variable_declaration_list: struct_variable_declaration_list $@34 structure_variable_declaration "end of expression" .

    $default  reduce using rule 543 (struct_variable_declaration_list)


State 1276

  479 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  480     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'

    "capture"  shift, and go to state 972
    "[["       shift, and go to state 973

    $default  reduce using rule 345 (optional_capture_list)

    optional_capture_list  go to state 1413


State 1277

  585 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 585 (let_variable_declaration)


State 1278

  705 type_declaration_no_options: "type" '<' $@49 type_declaration '>' $@50 .

    $default  reduce using rule 705 (type_declaration_no_options)


State 1279

  728 type_declaration_no_options: "array" '<' $@54 type_declaration '>' $@55 .

    $default  reduce using rule 728 (type_declaration_no_options)


State 1280

  731 type_declaration_no_options: "table" '<' $@56 table_type_pair '>' $@57 .

    $default  reduce using rule 731 (type_declaration_no_options)


State 1281

  694 table_type_pair: type_declaration c_or_s type_declaration .
  763 type_declaration: type_declaration . '|' type_declaration_no_options
  764                 | type_declaration . '|' '#'

    '|'  shift, and go to state 418

    $default  reduce using rule 694 (table_type_pair)


State 1282

  734 type_declaration_no_options: "iterator" '<' $@58 type_declaration '>' $@59 .

    $default  reduce using rule 734 (type_declaration_no_options)


State 1283

  724 type_declaration_no_options: "smart_ptr" '<' $@52 type_declaration '>' $@53 .

    $default  reduce using rule 724 (type_declaration_no_options)


State 1284

  684 bitfield_bits: bitfield_bits "end of expression" "name" .

    $default  reduce using rule 684 (bitfield_bits)


State 1285

  690 bitfield_type_declaration: "bitfield" '<' $@47 bitfield_bits '>' $@48 .

    $default  reduce using rule 690 (bitfield_type_declaration)


State 1286

  738 type_declaration_no_options: "block" '<' $@60 type_declaration '>' $@61 .

    $default  reduce using rule 738 (type_declaration_no_options)


State 1287

  741 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list optional_function_type '>' . $@63

    $default  reduce using rule 740 ($@63)

    $@63  go to state 1414


State 1288

  745 type_declaration_no_options: "function" '<' $@64 type_declaration '>' $@65 .

    $default  reduce using rule 745 (type_declaration_no_options)


State 1289

  748 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list optional_function_type '>' . $@67

    $default  reduce using rule 747 ($@67)

    $@67  go to state 1415


State 1290

  752 type_declaration_no_options: "lambda" '<' $@68 type_declaration '>' $@69 .

    $default  reduce using rule 752 (type_declaration_no_options)


State 1291

  755 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list optional_function_type '>' . $@71

    $default  reduce using rule 754 ($@71)

    $@71  go to state 1416


State 1292

  758 type_declaration_no_options: "tuple" '<' $@72 tuple_type_list '>' $@73 .

    $default  reduce using rule 758 (type_declaration_no_options)


State 1293

  556 tuple_type_list: tuple_type_list c_or_s tuple_type .

    $default  reduce using rule 556 (tuple_type_list)


State 1294

  761 type_declaration_no_options: "variant" '<' $@74 variant_type_list '>' $@75 .

    $default  reduce using rule 761 (type_declaration_no_options)


State 1295

  562 variant_type_list: variant_type_list c_or_s variant_type .

    $default  reduce using rule 562 (variant_type_list)


State 1296

  709 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' . '(' optional_expr_list ')'

    '('  shift, and go to state 1417


State 1297

  256 type_declaration_no_options_list: type_declaration_no_options_list c_or_s . type_declaration

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 357
    type_declaration             go to state 1418


State 1298

  640 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 640 (variable_name_with_pos_list)


State 1299

  643 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1419


State 1300

  571 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1420
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1301

  827 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' . $@89 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 826 ($@89)

    $@89  go to state 1421


State 1302

  830 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' . $@91 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 829 ($@91)

    $@91  go to state 1422


State 1303

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" expr_list . expression_block
  331 expr_list: expr_list . ',' expr

    "begin of code block"  shift, and go to state 286
    ','                    shift, and go to state 866

    expression_block  go to state 1423


State 1304

  275 new_type_declaration: '<' $@11 type_declaration '>' . $@12

    $default  reduce using rule 274 ($@12)

    $@12  go to state 1424


State 1305

  281 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1425


State 1306

  279 expr_new: "new" new_type_declaration '(' expr_list ')' .

    $default  reduce using rule 279 (expr_new)


State 1307

  280 expr_new: "new" new_type_declaration '(' make_struct_single ')' .

    $default  reduce using rule 280 (expr_new)


State 1308

  278 expr_new: "new" new_type_declaration '(' use_initializer ')' .

    $default  reduce using rule 278 (expr_new)


State 1309

  325 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" . '>' expr ')'
  326               | "typeinfo" '(' name_in_namespace '<' "name" . c_or_s "name" '>' expr ')'

    "end of expression"  shift, and go to state 611
    ','                  shift, and go to state 612
    '>'                  shift, and go to state 1426

    c_or_s  go to state 1427


State 1310

  324 expr_type_info: "typeinfo" '(' name_in_namespace expr ')' .

    $default  reduce using rule 324 (expr_type_info)


State 1311

  329 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" . "name" '>' '(' expr ')'

    "name"  shift, and go to state 1428


State 1312

  328 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' . '(' expr ')'

    '('  shift, and go to state 1429


State 1313

  327 expr_type_info: "typeinfo" name_in_namespace '(' expr ')' .

    $default  reduce using rule 327 (expr_type_info)


State 1314

  323 expr_type_decl: "type" '<' $@19 type_declaration '>' . $@20

    $default  reduce using rule 322 ($@20)

    $@20  go to state 1430


State 1315

  701 type_declaration_no_options: type_declaration_no_options . dim_list
  702                            | type_declaration_no_options . '[' ']'
  710                            | type_declaration_no_options . '-' '[' ']'
  711                            | type_declaration_no_options . "explicit"
  712                            | type_declaration_no_options . "const"
  713                            | type_declaration_no_options . '-' "const"
  714                            | type_declaration_no_options . '&'
  715                            | type_declaration_no_options . '-' '&'
  716                            | type_declaration_no_options . '#'
  717                            | type_declaration_no_options . "implicit"
  718                            | type_declaration_no_options . '-' '#'
  719                            | type_declaration_no_options . "==" "const"
  720                            | type_declaration_no_options . "==" '&'
  721                            | type_declaration_no_options . '?'
  725                            | type_declaration_no_options . "??"
  853 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options . '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 407
    "implicit"  shift, and go to state 408
    "explicit"  shift, and go to state 409
    "=="        shift, and go to state 410
    "??"        shift, and go to state 411
    '?'         shift, and go to state 412
    '&'         shift, and go to state 413
    '>'         shift, and go to state 1431
    '-'         shift, and go to state 414
    '['         shift, and go to state 415
    '#'         shift, and go to state 416

    dim_list  go to state 417


State 1316

  701 type_declaration_no_options: type_declaration_no_options . dim_list
  702                            | type_declaration_no_options . '[' ']'
  710                            | type_declaration_no_options . '-' '[' ']'
  711                            | type_declaration_no_options . "explicit"
  712                            | type_declaration_no_options . "const"
  713                            | type_declaration_no_options . '-' "const"
  714                            | type_declaration_no_options . '&'
  715                            | type_declaration_no_options . '-' '&'
  716                            | type_declaration_no_options . '#'
  717                            | type_declaration_no_options . "implicit"
  718                            | type_declaration_no_options . '-' '#'
  719                            | type_declaration_no_options . "==" "const"
  720                            | type_declaration_no_options . "==" '&'
  721                            | type_declaration_no_options . '?'
  725                            | type_declaration_no_options . "??"
  856 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options . '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 407
    "implicit"  shift, and go to state 408
    "explicit"  shift, and go to state 409
    "=="        shift, and go to state 410
    "??"        shift, and go to state 411
    '?'         shift, and go to state 412
    '&'         shift, and go to state 413
    '>'         shift, and go to state 1432
    '-'         shift, and go to state 414
    '['         shift, and go to state 415
    '#'         shift, and go to state 416

    dim_list  go to state 417


State 1317

  701 type_declaration_no_options: type_declaration_no_options . dim_list
  702                            | type_declaration_no_options . '[' ']'
  710                            | type_declaration_no_options . '-' '[' ']'
  711                            | type_declaration_no_options . "explicit"
  712                            | type_declaration_no_options . "const"
  713                            | type_declaration_no_options . '-' "const"
  714                            | type_declaration_no_options . '&'
  715                            | type_declaration_no_options . '-' '&'
  716                            | type_declaration_no_options . '#'
  717                            | type_declaration_no_options . "implicit"
  718                            | type_declaration_no_options . '-' '#'
  719                            | type_declaration_no_options . "==" "const"
  720                            | type_declaration_no_options . "==" '&'
  721                            | type_declaration_no_options . '?'
  725                            | type_declaration_no_options . "??"
  859 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options . '>' $@103 '(' make_variant_dim ')'

    "const"     shift, and go to state 407
    "implicit"  shift, and go to state 408
    "explicit"  shift, and go to state 409
    "=="        shift, and go to state 410
    "??"        shift, and go to state 411
    '?'         shift, and go to state 412
    '&'         shift, and go to state 413
    '>'         shift, and go to state 1433
    '-'         shift, and go to state 414
    '['         shift, and go to state 415
    '#'         shift, and go to state 416

    dim_list  go to state 417


State 1318

  863 make_dim_decl: "array" '<' $@104 type_declaration_no_options '>' . $@105 '(' optional_expr_list ')'

    $default  reduce using rule 862 ($@105)

    $@105  go to state 1434


State 1319

  860 make_dim_decl: "array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 860 (make_dim_decl)


State 1320

  875 make_table_decl: "table" '<' type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    $default  reduce using rule 253 (optional_expr_map_tuple_list)

    string_builder                go to state 506
    expr_reader                   go to state 507
    optional_expr_map_tuple_list  go to state 1435
    expression_keyword            go to state 568
    name_in_namespace             go to state 523
    expr_new                      go to state 525
    expr_cast                     go to state 535
    expr_type_decl                go to state 536
    expr_type_info                go to state 537
    block_or_lambda               go to state 538
    expr_full_block               go to state 539
    expr_numeric_const            go to state 540
    expr_named_call               go to state 543
    expr_method_call              go to state 544
    func_addr_expr                go to state 545
    expr_field                    go to state 546
    expr_call                     go to state 547
    expr                          go to state 695
    expr_mtag                     go to state 549
    basic_type_declaration        go to state 550
    make_decl                     go to state 551
    make_struct_decl              go to state 552
    make_map_tuple                go to state 703
    make_tuple_call               go to state 553
    make_dim_decl                 go to state 554
    expr_map_tuple_list           go to state 887
    make_table_decl               go to state 555
    array_comprehension           go to state 556


State 1321

  701 type_declaration_no_options: type_declaration_no_options . dim_list
  702                            | type_declaration_no_options . '[' ']'
  710                            | type_declaration_no_options . '-' '[' ']'
  711                            | type_declaration_no_options . "explicit"
  712                            | type_declaration_no_options . "const"
  713                            | type_declaration_no_options . '-' "const"
  714                            | type_declaration_no_options . '&'
  715                            | type_declaration_no_options . '-' '&'
  716                            | type_declaration_no_options . '#'
  717                            | type_declaration_no_options . "implicit"
  718                            | type_declaration_no_options . '-' '#'
  719                            | type_declaration_no_options . "==" "const"
  720                            | type_declaration_no_options . "==" '&'
  721                            | type_declaration_no_options . '?'
  725                            | type_declaration_no_options . "??"
  876 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'

    "const"     shift, and go to state 407
    "implicit"  shift, and go to state 408
    "explicit"  shift, and go to state 409
    "=="        shift, and go to state 410
    "??"        shift, and go to state 411
    '?'         shift, and go to state 412
    '&'         shift, and go to state 413
    '>'         shift, and go to state 1436
    '-'         shift, and go to state 414
    '['         shift, and go to state 415
    '#'         shift, and go to state 416

    dim_list  go to state 417


State 1322

   81 expression_with_alias: "assume" "name" '=' $@5 expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 81 (expression_with_alias)


State 1323

  314 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' . $@14 expr

    $default  reduce using rule 313 ($@14)

    $@14  go to state 1437


State 1324

  317 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' . $@16 expr

    $default  reduce using rule 316 ($@16)

    $@16  go to state 1438


State 1325

  320 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' . $@18 expr

    $default  reduce using rule 319 ($@18)

    $@18  go to state 1439


State 1326

  867 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' . $@107 '(' expr_list optional_comma ')'

    $default  reduce using rule 866 ($@107)

    $@107  go to state 1440


State 1327

  864 make_dim_decl: "fixed_array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 864 (make_dim_decl)


State 1328

  836 make_struct_decl: "default" '<' $@94 type_declaration_no_options '>' . $@95 use_initializer

    $default  reduce using rule 835 ($@95)

    $@95  go to state 1441


State 1329

  845 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' . $@97 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 844 ($@97)

    $@97  go to state 1442


State 1330

  842 make_tuple_call: "tuple" '(' expr_list optional_comma ')' .

    $default  reduce using rule 842 (make_tuple_call)


State 1331

  833 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' . $@93 '(' make_variant_dim ')'

    $default  reduce using rule 832 ($@93)

    $@93  go to state 1443


State 1332

  223 expr_call_pipe: "generator" '<' type_declaration_no_options '>' optional_capture_list . expr_full_block_assumed_piped
  479 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  480     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'

    '('  shift, and go to state 1444
    '$'  shift, and go to state 504
    '@'  shift, and go to state 678

    block_or_lambda                go to state 721
    expr_full_block_assumed_piped  go to state 1445


State 1333

  349 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 374

    $default  reduce using rule 125 (optional_function_type)

    optional_function_type  go to state 1446


State 1334

  517 expr_mtag: "$c" '(' expr ')' '(' . ')'
  518          | "$c" '(' expr ')' '(' . expr_list ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    ')'                               shift, and go to state 1447
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 1448
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 714
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1335

  331 expr_list: expr_list . ',' expr
  883 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']' ']'

    "end of expression"  shift, and go to state 1449
    ','                  shift, and go to state 866


State 1336

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'
  789 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  790                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 1450


State 1337

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'
  786 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 786 (make_struct_fields)


State 1338

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'
  785 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 785 (make_struct_fields)


State 1339

  796 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  822 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"              shift, and go to state 917
    "end of expression"  shift, and go to state 1179

    $default  reduce using rule 803 (optional_block)

    optional_block  go to state 1451


State 1340

  821 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1181
    ",]]"  shift, and go to state 1182
    ']'    shift, and go to state 1183

    optional_trailing_delim_sqr_sqr  go to state 1452


State 1341

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'
  838 make_tuple: expr "=>" expr .

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 838 (make_tuple)


State 1342

  791 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  792                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1453


State 1343

  787 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  788                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 843
    ":="  shift, and go to state 1454
    '='   shift, and go to state 845

    copy_or_move  go to state 1455


State 1344

  787 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  788                   | make_struct_fields . ',' "name" ":=" expr
  791                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  792                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  796 make_struct_dim: make_struct_dim "end of expression" make_struct_fields .

    ','  shift, and go to state 1178

    $default  reduce using rule 796 (make_struct_dim)


State 1345

  819 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 819 (make_struct_decl)


State 1346

  811 optional_trailing_delim_sqr_sqr: ']' ']' .

    $default  reduce using rule 811 (optional_trailing_delim_sqr_sqr)


State 1347

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'
  839 make_tuple: make_tuple ',' expr .

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 839 (make_tuple)


State 1348

  839 make_tuple: make_tuple . ',' expr
  847 make_dim: make_dim "end of expression" make_tuple .

    ','  shift, and go to state 1185

    $default  reduce using rule 847 (make_dim)


State 1349

  809 optional_trailing_semicolon_sqr_sqr: ']' ']' .

    $default  reduce using rule 809 (optional_trailing_semicolon_sqr_sqr)


State 1350

  331 expr_list: expr_list . ',' expr
  884 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where "end of code block" ']'

    "end of expression"  shift, and go to state 1456
    ','                  shift, and go to state 866


State 1351

  796 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  824 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"              shift, and go to state 917
    "end of expression"  shift, and go to state 1179

    $default  reduce using rule 803 (optional_block)

    optional_block  go to state 1457


State 1352

  814 optional_trailing_delim_cur_sqr: "end of code block" . ']'

    ']'  shift, and go to state 1458


State 1353

  815 optional_trailing_delim_cur_sqr: ";}]" .

    $default  reduce using rule 815 (optional_trailing_delim_cur_sqr)


State 1354

  816 optional_trailing_delim_cur_sqr: ",}]" .

    $default  reduce using rule 816 (optional_trailing_delim_cur_sqr)


State 1355

  823 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 823 (make_struct_decl)


State 1356

  807 optional_trailing_semicolon_cur_sqr: "end of code block" ']' .

    $default  reduce using rule 807 (optional_trailing_semicolon_cur_sqr)


State 1357

  331 expr_list: expr_list . ',' expr
  886 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list . "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "end of expression"  shift, and go to state 1459
    ','                  shift, and go to state 866


State 1358

  259 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list '>' . $@8 expr

    $default  reduce using rule 258 ($@8)

    $@8  go to state 1460


State 1359

  262 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list '>' . $@10 optional_expr_list_in_braces

    $default  reduce using rule 261 ($@10)

    $@10  go to state 1461


State 1360

   30 string_builder_body: string_builder_body "{" expr "}" .

    $default  reduce using rule 30 (string_builder_body)


State 1361

  331 expr_list: expr_list . ',' expr
  885 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list . "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1462
    ','                  shift, and go to state 866


State 1362

  220 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions "end of code block" .

    $default  reduce using rule 220 (expression_block)


State 1363

  331 expr_list: expr_list . ',' expr
  881 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1463
    ','                  shift, and go to state 866


State 1364

  882 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 1464
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 714
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1365

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  405 func_addr_name: "$i" '(' expr . ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 1465


State 1366

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'
  526          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 1466


State 1367

  409 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options . '>' $@23 func_addr_name
  701 type_declaration_no_options: type_declaration_no_options . dim_list
  702                            | type_declaration_no_options . '[' ']'
  710                            | type_declaration_no_options . '-' '[' ']'
  711                            | type_declaration_no_options . "explicit"
  712                            | type_declaration_no_options . "const"
  713                            | type_declaration_no_options . '-' "const"
  714                            | type_declaration_no_options . '&'
  715                            | type_declaration_no_options . '-' '&'
  716                            | type_declaration_no_options . '#'
  717                            | type_declaration_no_options . "implicit"
  718                            | type_declaration_no_options . '-' '#'
  719                            | type_declaration_no_options . "==" "const"
  720                            | type_declaration_no_options . "==" '&'
  721                            | type_declaration_no_options . '?'
  725                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 407
    "implicit"  shift, and go to state 408
    "explicit"  shift, and go to state 409
    "=="        shift, and go to state 410
    "??"        shift, and go to state 411
    '?'         shift, and go to state 412
    '&'         shift, and go to state 413
    '>'         shift, and go to state 1467
    '-'         shift, and go to state 414
    '['         shift, and go to state 415
    '#'         shift, and go to state 416

    dim_list  go to state 417


State 1368

  412 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list . optional_function_type '>' $@25 func_addr_name

    ':'  shift, and go to state 374

    $default  reduce using rule 125 (optional_function_type)

    optional_function_type  go to state 1468


State 1369

   60 expression_else: "else" expression_block .

    $default  reduce using rule 60 (expression_else)


State 1370

   61 expression_else: elif_or_static_elif expr . expression_block expression_else
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 735
    "as"                   shift, and go to state 736
    "<<"                   shift, and go to state 745
    ">>"                   shift, and go to state 746
    "++"                   shift, and go to state 747
    "--"                   shift, and go to state 748
    "<="                   shift, and go to state 749
    ">="                   shift, and go to state 752
    "=="                   shift, and go to state 753
    "!="                   shift, and go to state 754
    "->"                   shift, and go to state 755
    "??"                   shift, and go to state 757
    "?."                   shift, and go to state 758
    "?["                   shift, and go to state 759
    "<|"                   shift, and go to state 760
    "|>"                   shift, and go to state 761
    "<<<"                  shift, and go to state 763
    ">>>"                  shift, and go to state 764
    "&&"                   shift, and go to state 767
    "||"                   shift, and go to state 768
    "^^"                   shift, and go to state 769
    ".."                   shift, and go to state 773
    "begin of code block"  shift, and go to state 286
    '?'                    shift, and go to state 775
    '|'                    shift, and go to state 776
    '^'                    shift, and go to state 777
    '&'                    shift, and go to state 778
    '<'                    shift, and go to state 779
    '>'                    shift, and go to state 780
    '-'                    shift, and go to state 781
    '+'                    shift, and go to state 782
    '*'                    shift, and go to state 783
    '/'                    shift, and go to state 784
    '%'                    shift, and go to state 785
    '.'                    shift, and go to state 786
    '['                    shift, and go to state 787

    expression_block  go to state 1469


State 1371

   66 expression_else_one_liner: "else" . $@2 expression_if_one_liner

    $default  reduce using rule 65 ($@2)

    $@2  go to state 1470


State 1372

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner . "end of expression"

    "end of expression"  shift, and go to state 1471


State 1373

  352 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type expression_block

    '('  shift, and go to state 284

    $default  reduce using rule 122 (optional_function_argument_list)

    optional_function_argument_list  go to state 1472


State 1374

  423 expr_call: name_in_namespace '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 423 (expr_call)


State 1375

  400 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1473


State 1376

  401 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'
  848 make_dim_decl: '[' . expr_list optional_comma ']'
  881 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  882                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "for"                             shift, and go to state 711
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "iterator"                        shift, and go to state 712
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "$f"                              shift, and go to state 918
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 919
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 713
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 714
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_fields      go to state 1474
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1377

  305 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1475


State 1378

  306 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' . ']' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  308                                     | "[[" tuple_expansion ']' . ']' optional_ref copy_or_move_or_clone expr "end of expression"

    ']'  shift, and go to state 1476


State 1379

  307 tuple_expansion_variable_declaration: '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  309                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr "end of expression"

    ':'  shift, and go to state 1477
    '&'  shift, and go to state 390

    $default  reduce using rule 577 (optional_ref)

    optional_ref  go to state 1478


State 1380

  344 capture_list: capture_list . ',' capture_entry
  347 optional_capture_list: "capture" '(' capture_list . ')'

    ','  shift, and go to state 1386
    ')'  shift, and go to state 1479


State 1381

  340 capture_entry: "<-" "name" .

    $default  reduce using rule 340 (capture_entry)


State 1382

  341 capture_entry: ":=" "name" .

    $default  reduce using rule 341 (capture_entry)


State 1383

  342 capture_entry: "name" '(' . "name" ')'

    "name"  shift, and go to state 1480


State 1384

  339 capture_entry: '=' "name" .

    $default  reduce using rule 339 (capture_entry)


State 1385

  338 capture_entry: '&' "name" .

    $default  reduce using rule 338 (capture_entry)


State 1386

  344 capture_list: capture_list ',' . capture_entry

    "<-"    shift, and go to state 1233
    ":="    shift, and go to state 1234
    "name"  shift, and go to state 1235
    '='     shift, and go to state 1236
    '&'     shift, and go to state 1237

    capture_entry  go to state 1481


State 1387

  346 optional_capture_list: "[[" capture_list ']' . ']'

    ']'  shift, and go to state 1482


State 1388

  350 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"                   shift, and go to state 1483
    "begin of code block"  shift, and go to state 286

    expression_block       go to state 1484
    block_or_simple_block  go to state 1485


State 1389

  485 expr: expr "is" "type" '<' $@28 . type_declaration_no_options '>' $@29

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 1486


State 1390

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'
  525          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 1487


State 1391

  491 expr: expr "as" "type" '<' $@30 . type_declaration '>' $@31

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 357
    type_declaration             go to state 1488


State 1392

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  523          | expr "as" "$f" '(' expr . ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 1489


State 1393

  402 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 402 (expr_method_call)


State 1394

  331 expr_list: expr_list . ',' expr
  403 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 866
    ')'  shift, and go to state 1490


State 1395

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  520          | expr "?." "$f" '(' expr . ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 1491


State 1396

  496 expr: expr '?' "as" "type" '<' . $@32 type_declaration '>' $@33

    $default  reduce using rule 494 ($@32)

    $@32  go to state 1492


State 1397

  524 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1493
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1398

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  482     | expr '?' expr ':' expr .
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 482 (expr)


State 1399

  522 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1494
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1400

  471 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 471 (expr)


State 1401

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  519          | expr '.' "$f" '(' expr . ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 1495


State 1402

  415 expr_field: expr '.' "name" '(' ')' .

    $default  reduce using rule 415 (expr_field)


State 1403

  331 expr_list: expr_list . ',' expr
  416 expr_field: expr '.' "name" '(' expr_list . ')'

    ','  shift, and go to state 866
    ')'  shift, and go to state 1496


State 1404

  521 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1497
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1405

  469 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 469 (expr)


State 1406

  419 expr_field: expr '.' $@26 error $@27 .

    $default  reduce using rule 419 (expr_field)


State 1407

  548 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' "end of expression" .

    $default  reduce using rule 548 (struct_variable_declaration_list)


State 1408

  545 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" . optional_constant $@35 function_declaration_header "end of expression"

    "const"  shift, and go to state 1498

    $default  reduce using rule 533 (optional_constant)

    optional_constant  go to state 1499


State 1409

  547 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@36 function_declaration_header expression_block

    "override"  shift, and go to state 1410
    "sealed"    shift, and go to state 1411

    $default  reduce using rule 530 (optional_override)

    optional_override  go to state 1500


State 1410

  531 optional_override: "override" .

    $default  reduce using rule 531 (optional_override)


State 1411

  532 optional_override: "sealed" .

    $default  reduce using rule 532 (optional_override)


State 1412

  540 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1270
    "private"  shift, and go to state 1271

    $default  reduce using rule 535 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1501


State 1413

  479 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  480     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'

    '('  shift, and go to state 1444


State 1414

  741 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list optional_function_type '>' $@63 .

    $default  reduce using rule 741 (type_declaration_no_options)


State 1415

  748 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list optional_function_type '>' $@67 .

    $default  reduce using rule 748 (type_declaration_no_options)


State 1416

  755 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list optional_function_type '>' $@71 .

    $default  reduce using rule 755 (type_declaration_no_options)


State 1417

  709 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    $default  reduce using rule 249 (optional_expr_list)

    string_builder          go to state 506
    expr_reader             go to state 507
    optional_expr_list      go to state 1502
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 828
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 714
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1418

  256 type_declaration_no_options_list: type_declaration_no_options_list c_or_s type_declaration .
  763 type_declaration: type_declaration . '|' type_declaration_no_options
  764                 | type_declaration . '|' '#'

    '|'  shift, and go to state 418

    $default  reduce using rule 256 (type_declaration_no_options_list)


State 1419

  643 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 643 (variable_name_with_pos_list)


State 1420

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'
  571 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 571 (variable_declaration)


State 1421

  827 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1503


State 1422

  830 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1504


State 1423

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" expr_list expression_block .

    $default  reduce using rule 76 (expression_for_loop)


State 1424

  275 new_type_declaration: '<' $@11 type_declaration '>' $@12 .

    $default  reduce using rule 275 (new_type_declaration)


State 1425

  281 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 281 (expr_new)


State 1426

  325 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' . expr ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1505
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1427

  326 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s . "name" '>' expr ')'

    "name"  shift, and go to state 1506


State 1428

  329 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" . '>' '(' expr ')'

    '>'  shift, and go to state 1507


State 1429

  328 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1508
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1430

  323 expr_type_decl: "type" '<' $@19 type_declaration '>' $@20 .

    $default  reduce using rule 323 (expr_type_decl)


State 1431

  853 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' . $@99 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 852 ($@99)

    $@99  go to state 1509


State 1432

  856 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' . $@101 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 855 ($@101)

    $@101  go to state 1510


State 1433

  859 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options '>' . $@103 '(' make_variant_dim ')'

    $default  reduce using rule 858 ($@103)

    $@103  go to state 1511


State 1434

  863 make_dim_decl: "array" '<' $@104 type_declaration_no_options '>' $@105 . '(' optional_expr_list ')'

    '('  shift, and go to state 1512


State 1435

  875 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1513


State 1436

  876 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1514


State 1437

  314 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1515
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1438

  317 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1516
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1439

  320 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1517
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1440

  867 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' $@107 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1518


State 1441

  836 make_struct_decl: "default" '<' $@94 type_declaration_no_options '>' $@95 . use_initializer

    "uninitialized"  shift, and go to state 1519

    $default  reduce using rule 817 (use_initializer)

    use_initializer  go to state 1520


State 1442

  845 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1521


State 1443

  833 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 . '(' make_variant_dim ')'

    '('  shift, and go to state 1522


State 1444

  479 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  480     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    ')'                               shift, and go to state 1523
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1524
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1445

  223 expr_call_pipe: "generator" '<' type_declaration_no_options '>' optional_capture_list expr_full_block_assumed_piped .

    $default  reduce using rule 223 (expr_call_pipe)


State 1446

  349 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"                   shift, and go to state 1483
    "begin of code block"  shift, and go to state 286

    expression_block       go to state 1484
    block_or_simple_block  go to state 1525


State 1447

  517 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 517 (expr_mtag)


State 1448

  331 expr_list: expr_list . ',' expr
  518 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 866
    ')'  shift, and go to state 1526


State 1449

  883 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']' ']'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1527
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1450

  789 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  790                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 843
    ":="  shift, and go to state 1528
    '='   shift, and go to state 845

    copy_or_move  go to state 1529


State 1451

  822 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1181
    ",]]"  shift, and go to state 1182
    ']'    shift, and go to state 1183

    optional_trailing_delim_sqr_sqr  go to state 1530


State 1452

  821 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 821 (make_struct_decl)


State 1453

  791 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  792                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1531
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1454

  788 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1532
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1455

  787 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1533
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1456

  884 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where "end of code block" ']'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1534
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1457

  824 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    "end of code block"  shift, and go to state 1352
    ";}]"                shift, and go to state 1353
    ",}]"                shift, and go to state 1354

    optional_trailing_delim_cur_sqr  go to state 1535


State 1458

  814 optional_trailing_delim_cur_sqr: "end of code block" ']' .

    $default  reduce using rule 814 (optional_trailing_delim_cur_sqr)


State 1459

  886 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" . make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 695
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_map_tuple          go to state 1536
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1460

  259 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list '>' $@8 . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1537
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1461

  262 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list '>' $@10 . optional_expr_list_in_braces

    '('  shift, and go to state 1538

    '('       [reduce using rule 251 (optional_expr_list_in_braces)]
    $default  reduce using rule 251 (optional_expr_list_in_braces)

    optional_expr_list_in_braces  go to state 1539


State 1462

  885 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" . make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 695
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_map_tuple          go to state 1540
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1463

  881 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1541
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1464

  331 expr_list: expr_list . ',' expr
  882 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1542
    ','                  shift, and go to state 866


State 1465

  405 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 405 (func_addr_name)


State 1466

  526 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 526 (expr_mtag)


State 1467

  409 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options '>' . $@23 func_addr_name

    $default  reduce using rule 408 ($@23)

    $@23  go to state 1543


State 1468

  412 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type . '>' $@25 func_addr_name

    '>'  shift, and go to state 1544


State 1469

   61 expression_else: elif_or_static_elif expr expression_block . expression_else

    "else"         shift, and go to state 1215
    "elif"         shift, and go to state 1216
    "static_elif"  shift, and go to state 1217

    $default  reduce using rule 59 (expression_else)

    elif_or_static_elif  go to state 1218
    expression_else      go to state 1545


State 1470

   66 expression_else_one_liner: "else" $@2 . expression_if_one_liner

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "return"                          shift, and go to state 1546
    "null"                            shift, and go to state 445
    "break"                           shift, and go to state 446
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "continue"                        shift, and go to state 456
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "yield"                           shift, and go to state 1547
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder             go to state 506
    expr_reader                go to state 507
    expression_if_one_liner    go to state 1548
    expression_keyword         go to state 568
    name_in_namespace          go to state 523
    expr_new                   go to state 525
    expression_break           go to state 1549
    expression_continue        go to state 1550
    expression_return_no_pipe  go to state 1551
    expression_yield_no_pipe   go to state 1552
    expr_cast                  go to state 535
    expr_type_decl             go to state 536
    expr_type_info             go to state 537
    block_or_lambda            go to state 538
    expr_full_block            go to state 539
    expr_numeric_const         go to state 540
    expr_named_call            go to state 543
    expr_method_call           go to state 544
    func_addr_expr             go to state 545
    expr_field                 go to state 546
    expr_call                  go to state 547
    expr                       go to state 1553
    expr_mtag                  go to state 549
    basic_type_declaration     go to state 550
    make_decl                  go to state 551
    make_struct_decl           go to state 552
    make_tuple_call            go to state 553
    make_dim_decl              go to state 554
    make_table_decl            go to state 555
    array_comprehension        go to state 556


State 1471

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner "end of expression" .

    $default  reduce using rule 74 (expression_if_then_else)


State 1472

  352 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type expression_block

    ':'  shift, and go to state 374

    $default  reduce using rule 125 (optional_function_type)

    optional_function_type  go to state 1554


State 1473

  400 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 400 (expr_named_call)


State 1474

  401 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  787 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  788                   | make_struct_fields . ',' "name" ":=" expr
  791                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  792                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1178
    ']'  shift, and go to state 1555


State 1475

  305 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 305 (tuple_expansion)


State 1476

  306 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  308                                     | "[[" tuple_expansion ']' ']' . optional_ref copy_or_move_or_clone expr "end of expression"

    ':'  shift, and go to state 1556
    '&'  shift, and go to state 390

    $default  reduce using rule 577 (optional_ref)

    optional_ref  go to state 1557


State 1477

  307 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 1558


State 1478

  309 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr "end of expression"

    "<-"  shift, and go to state 573
    ":="  shift, and go to state 574
    '='   shift, and go to state 575

    copy_or_move_or_clone  go to state 1559


State 1479

  347 optional_capture_list: "capture" '(' capture_list ')' .

    $default  reduce using rule 347 (optional_capture_list)


State 1480

  342 capture_entry: "name" '(' "name" . ')'

    ')'  shift, and go to state 1560


State 1481

  344 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 344 (capture_list)


State 1482

  346 optional_capture_list: "[[" capture_list ']' ']' .

    $default  reduce using rule 346 (optional_capture_list)


State 1483

  333 block_or_simple_block: "=>" . expr
  334                      | "=>" . "<-" expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "<-"                              shift, and go to state 1561
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1562
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1484

  332 block_or_simple_block: expression_block .

    $default  reduce using rule 332 (block_or_simple_block)


State 1485

  350 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 350 (expr_full_block)


State 1486

  485 expr: expr "is" "type" '<' $@28 type_declaration_no_options . '>' $@29
  701 type_declaration_no_options: type_declaration_no_options . dim_list
  702                            | type_declaration_no_options . '[' ']'
  710                            | type_declaration_no_options . '-' '[' ']'
  711                            | type_declaration_no_options . "explicit"
  712                            | type_declaration_no_options . "const"
  713                            | type_declaration_no_options . '-' "const"
  714                            | type_declaration_no_options . '&'
  715                            | type_declaration_no_options . '-' '&'
  716                            | type_declaration_no_options . '#'
  717                            | type_declaration_no_options . "implicit"
  718                            | type_declaration_no_options . '-' '#'
  719                            | type_declaration_no_options . "==" "const"
  720                            | type_declaration_no_options . "==" '&'
  721                            | type_declaration_no_options . '?'
  725                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 407
    "implicit"  shift, and go to state 408
    "explicit"  shift, and go to state 409
    "=="        shift, and go to state 410
    "??"        shift, and go to state 411
    '?'         shift, and go to state 412
    '&'         shift, and go to state 413
    '>'         shift, and go to state 1563
    '-'         shift, and go to state 414
    '['         shift, and go to state 415
    '#'         shift, and go to state 416

    dim_list  go to state 417


State 1487

  525 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 525 (expr_mtag)


State 1488

  491 expr: expr "as" "type" '<' $@30 type_declaration . '>' $@31
  763 type_declaration: type_declaration . '|' type_declaration_no_options
  764                 | type_declaration . '|' '#'

    '|'  shift, and go to state 418
    '>'  shift, and go to state 1564


State 1489

  523 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 523 (expr_mtag)


State 1490

  403 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 403 (expr_method_call)


State 1491

  520 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 520 (expr_mtag)


State 1492

  496 expr: expr '?' "as" "type" '<' $@32 . type_declaration '>' $@33

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 357
    type_declaration             go to state 1565


State 1493

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  524          | expr '?' "as" "$f" '(' expr . ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 1566


State 1494

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  522          | expr '.' "?." "$f" '(' expr . ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 1567


State 1495

  519 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 519 (expr_mtag)


State 1496

  416 expr_field: expr '.' "name" '(' expr_list ')' .

    $default  reduce using rule 416 (expr_field)


State 1497

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  521          | expr '.' '.' "$f" '(' expr . ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 1568


State 1498

  534 optional_constant: "const" .

    $default  reduce using rule 534 (optional_constant)


State 1499

  545 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant . $@35 function_declaration_header "end of expression"

    $default  reduce using rule 544 ($@35)

    $@35  go to state 1569


State 1500

  547 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@36 function_declaration_header expression_block

    "const"  shift, and go to state 1498

    $default  reduce using rule 533 (optional_constant)

    optional_constant  go to state 1570


State 1501

  540 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 622
    "name"  shift, and go to state 623

    variable_declaration         go to state 1571
    variable_name_with_pos_list  go to state 625


State 1502

  709 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list . ')'

    ')'  shift, and go to state 1572


State 1503

  827 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1519

    $default  reduce using rule 817 (use_initializer)

    use_initializer  go to state 1573


State 1504

  830 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1519

    $default  reduce using rule 817 (use_initializer)

    use_initializer  go to state 1574


State 1505

  325 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr . ')'
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 1575


State 1506

  326 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" . '>' expr ')'

    '>'  shift, and go to state 1576


State 1507

  329 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' . '(' expr ')'

    '('  shift, and go to state 1577


State 1508

  328 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr . ')'
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 1578


State 1509

  853 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' $@99 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1579


State 1510

  856 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' $@101 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1580


State 1511

  859 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options '>' $@103 . '(' make_variant_dim ')'

    '('  shift, and go to state 1581


State 1512

  863 make_dim_decl: "array" '<' $@104 type_declaration_no_options '>' $@105 '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    $default  reduce using rule 249 (optional_expr_list)

    string_builder          go to state 506
    expr_reader             go to state 507
    optional_expr_list      go to state 1582
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 828
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 714
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1513

  875 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 875 (make_table_decl)


State 1514

  876 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    $default  reduce using rule 253 (optional_expr_map_tuple_list)

    string_builder                go to state 506
    expr_reader                   go to state 507
    optional_expr_map_tuple_list  go to state 1583
    expression_keyword            go to state 568
    name_in_namespace             go to state 523
    expr_new                      go to state 525
    expr_cast                     go to state 535
    expr_type_decl                go to state 536
    expr_type_info                go to state 537
    block_or_lambda               go to state 538
    expr_full_block               go to state 539
    expr_numeric_const            go to state 540
    expr_named_call               go to state 543
    expr_method_call              go to state 544
    func_addr_expr                go to state 545
    expr_field                    go to state 546
    expr_call                     go to state 547
    expr                          go to state 695
    expr_mtag                     go to state 549
    basic_type_declaration        go to state 550
    make_decl                     go to state 551
    make_struct_decl              go to state 552
    make_map_tuple                go to state 703
    make_tuple_call               go to state 553
    make_dim_decl                 go to state 554
    expr_map_tuple_list           go to state 887
    make_table_decl               go to state 555
    array_comprehension           go to state 556


State 1515

  314 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 314 (expr_cast)


State 1516

  317 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 317 (expr_cast)


State 1517

  320 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 320 (expr_cast)


State 1518

  867 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' $@107 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 1584
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 714
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1519

  818 use_initializer: "uninitialized" .

    $default  reduce using rule 818 (use_initializer)


State 1520

  836 make_struct_decl: "default" '<' $@94 type_declaration_no_options '>' $@95 use_initializer .

    $default  reduce using rule 836 (make_struct_decl)


State 1521

  845 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1519

    $default  reduce using rule 817 (use_initializer)

    use_initializer  go to state 1585


State 1522

  833 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 '(' . make_variant_dim ')'

    "$f"    shift, and go to state 918
    "name"  shift, and go to state 1222

    make_struct_fields  go to state 1586
    make_variant_dim    go to state 1587


State 1523

  479 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 479 (expr)


State 1524

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  480     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 1588


State 1525

  349 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 349 (expr_block)


State 1526

  518 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 518 (expr_mtag)


State 1527

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'
  883 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']' ']'

    "is"                 shift, and go to state 735
    "as"                 shift, and go to state 736
    "<<"                 shift, and go to state 745
    ">>"                 shift, and go to state 746
    "++"                 shift, and go to state 747
    "--"                 shift, and go to state 748
    "<="                 shift, and go to state 749
    ">="                 shift, and go to state 752
    "=="                 shift, and go to state 753
    "!="                 shift, and go to state 754
    "->"                 shift, and go to state 755
    "??"                 shift, and go to state 757
    "?."                 shift, and go to state 758
    "?["                 shift, and go to state 759
    "<|"                 shift, and go to state 760
    "|>"                 shift, and go to state 761
    "<<<"                shift, and go to state 763
    ">>>"                shift, and go to state 764
    "&&"                 shift, and go to state 767
    "||"                 shift, and go to state 768
    "^^"                 shift, and go to state 769
    ".."                 shift, and go to state 773
    "end of expression"  shift, and go to state 1589
    '?'                  shift, and go to state 775
    '|'                  shift, and go to state 776
    '^'                  shift, and go to state 777
    '&'                  shift, and go to state 778
    '<'                  shift, and go to state 779
    '>'                  shift, and go to state 780
    '-'                  shift, and go to state 781
    '+'                  shift, and go to state 782
    '*'                  shift, and go to state 783
    '/'                  shift, and go to state 784
    '%'                  shift, and go to state 785
    '.'                  shift, and go to state 786
    '['                  shift, and go to state 787

    $default  reduce using rule 877 (array_comprehension_where)

    array_comprehension_where  go to state 1590


State 1528

  790 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1591
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1529

  789 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1592
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1530

  822 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 822 (make_struct_decl)


State 1531

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'
  791 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  792                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 1593


State 1532

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'
  788 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 788 (make_struct_fields)


State 1533

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'
  787 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 787 (make_struct_fields)


State 1534

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'
  884 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where "end of code block" ']'

    "is"                 shift, and go to state 735
    "as"                 shift, and go to state 736
    "<<"                 shift, and go to state 745
    ">>"                 shift, and go to state 746
    "++"                 shift, and go to state 747
    "--"                 shift, and go to state 748
    "<="                 shift, and go to state 749
    ">="                 shift, and go to state 752
    "=="                 shift, and go to state 753
    "!="                 shift, and go to state 754
    "->"                 shift, and go to state 755
    "??"                 shift, and go to state 757
    "?."                 shift, and go to state 758
    "?["                 shift, and go to state 759
    "<|"                 shift, and go to state 760
    "|>"                 shift, and go to state 761
    "<<<"                shift, and go to state 763
    ">>>"                shift, and go to state 764
    "&&"                 shift, and go to state 767
    "||"                 shift, and go to state 768
    "^^"                 shift, and go to state 769
    ".."                 shift, and go to state 773
    "end of expression"  shift, and go to state 1589
    '?'                  shift, and go to state 775
    '|'                  shift, and go to state 776
    '^'                  shift, and go to state 777
    '&'                  shift, and go to state 778
    '<'                  shift, and go to state 779
    '>'                  shift, and go to state 780
    '-'                  shift, and go to state 781
    '+'                  shift, and go to state 782
    '*'                  shift, and go to state 783
    '/'                  shift, and go to state 784
    '%'                  shift, and go to state 785
    '.'                  shift, and go to state 786
    '['                  shift, and go to state 787

    $default  reduce using rule 877 (array_comprehension_where)

    array_comprehension_where  go to state 1594


State 1535

  824 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 824 (make_struct_decl)


State 1536

  886 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple . array_comprehension_where "end of code block" "end of code block"

    "end of expression"  shift, and go to state 1589

    $default  reduce using rule 877 (array_comprehension_where)

    array_comprehension_where  go to state 1595


State 1537

  259 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list '>' $@8 expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 259 (expression_keyword)


State 1538

  252 optional_expr_list_in_braces: '(' . optional_expr_list optional_comma ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    $default  reduce using rule 249 (optional_expr_list)

    string_builder          go to state 506
    expr_reader             go to state 507
    optional_expr_list      go to state 1596
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 828
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 714
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1539

  262 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces .

    $default  reduce using rule 262 (expression_keyword)


State 1540

  885 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple . array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1589

    $default  reduce using rule 877 (array_comprehension_where)

    array_comprehension_where  go to state 1597


State 1541

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'
  881 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 735
    "as"                 shift, and go to state 736
    "<<"                 shift, and go to state 745
    ">>"                 shift, and go to state 746
    "++"                 shift, and go to state 747
    "--"                 shift, and go to state 748
    "<="                 shift, and go to state 749
    ">="                 shift, and go to state 752
    "=="                 shift, and go to state 753
    "!="                 shift, and go to state 754
    "->"                 shift, and go to state 755
    "??"                 shift, and go to state 757
    "?."                 shift, and go to state 758
    "?["                 shift, and go to state 759
    "<|"                 shift, and go to state 760
    "|>"                 shift, and go to state 761
    "<<<"                shift, and go to state 763
    ">>>"                shift, and go to state 764
    "&&"                 shift, and go to state 767
    "||"                 shift, and go to state 768
    "^^"                 shift, and go to state 769
    ".."                 shift, and go to state 773
    "end of expression"  shift, and go to state 1589
    '?'                  shift, and go to state 775
    '|'                  shift, and go to state 776
    '^'                  shift, and go to state 777
    '&'                  shift, and go to state 778
    '<'                  shift, and go to state 779
    '>'                  shift, and go to state 780
    '-'                  shift, and go to state 781
    '+'                  shift, and go to state 782
    '*'                  shift, and go to state 783
    '/'                  shift, and go to state 784
    '%'                  shift, and go to state 785
    '.'                  shift, and go to state 786
    '['                  shift, and go to state 787

    $default  reduce using rule 877 (array_comprehension_where)

    array_comprehension_where  go to state 1598


State 1542

  882 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1599
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1543

  409 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options '>' $@23 . func_addr_name

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 954
    "name"  shift, and go to state 59

    name_in_namespace  go to state 957
    func_addr_name     go to state 1600


State 1544

  412 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type '>' . $@25 func_addr_name

    $default  reduce using rule 411 ($@25)

    $@25  go to state 1601


State 1545

   61 expression_else: elif_or_static_elif expr expression_block expression_else .

    $default  reduce using rule 61 (expression_else)


State 1546

  285 expression_return_no_pipe: "return" .
  286                          | "return" . expr_list
  287                          | "return" . "<-" expr_list

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "<-"                              shift, and go to state 1602
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    $default  reduce using rule 285 (expression_return_no_pipe)

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 645
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 714
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1547

  291 expression_yield_no_pipe: "yield" . expr
  292                         | "yield" . "<-" expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "<-"                              shift, and go to state 1603
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1604
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1548

   66 expression_else_one_liner: "else" $@2 expression_if_one_liner .

    $default  reduce using rule 66 (expression_else_one_liner)


State 1549

   70 expression_if_one_liner: expression_break .

    $default  reduce using rule 70 (expression_if_one_liner)


State 1550

   71 expression_if_one_liner: expression_continue .

    $default  reduce using rule 71 (expression_if_one_liner)


State 1551

   68 expression_if_one_liner: expression_return_no_pipe .

    $default  reduce using rule 68 (expression_if_one_liner)


State 1552

   69 expression_if_one_liner: expression_yield_no_pipe .

    $default  reduce using rule 69 (expression_if_one_liner)


State 1553

   67 expression_if_one_liner: expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 67 (expression_if_one_liner)


State 1554

  352 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . expression_block

    "begin of code block"  shift, and go to state 286

    expression_block  go to state 1605


State 1555

  401 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1606


State 1556

  306 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 1607


State 1557

  308 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref . copy_or_move_or_clone expr "end of expression"

    "<-"  shift, and go to state 573
    ":="  shift, and go to state 574
    '='   shift, and go to state 575

    copy_or_move_or_clone  go to state 1608


State 1558

  307 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"
  701 type_declaration_no_options: type_declaration_no_options . dim_list
  702                            | type_declaration_no_options . '[' ']'
  710                            | type_declaration_no_options . '-' '[' ']'
  711                            | type_declaration_no_options . "explicit"
  712                            | type_declaration_no_options . "const"
  713                            | type_declaration_no_options . '-' "const"
  714                            | type_declaration_no_options . '&'
  715                            | type_declaration_no_options . '-' '&'
  716                            | type_declaration_no_options . '#'
  717                            | type_declaration_no_options . "implicit"
  718                            | type_declaration_no_options . '-' '#'
  719                            | type_declaration_no_options . "==" "const"
  720                            | type_declaration_no_options . "==" '&'
  721                            | type_declaration_no_options . '?'
  725                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 407
    "implicit"  shift, and go to state 408
    "explicit"  shift, and go to state 409
    "=="        shift, and go to state 410
    "<-"        shift, and go to state 573
    "??"        shift, and go to state 411
    ":="        shift, and go to state 574
    '='         shift, and go to state 575
    '?'         shift, and go to state 412
    '&'         shift, and go to state 413
    '-'         shift, and go to state 414
    '['         shift, and go to state 415
    '#'         shift, and go to state 416

    copy_or_move_or_clone  go to state 1609
    dim_list               go to state 417


State 1559

  309 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1610
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1560

  342 capture_entry: "name" '(' "name" ')' .

    $default  reduce using rule 342 (capture_entry)


State 1561

  334 block_or_simple_block: "=>" "<-" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1611
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1562

  333 block_or_simple_block: "=>" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    ".."  error (nonassociative)

    $default  reduce using rule 333 (block_or_simple_block)


State 1563

  485 expr: expr "is" "type" '<' $@28 type_declaration_no_options '>' . $@29

    $default  reduce using rule 484 ($@29)

    $@29  go to state 1612


State 1564

  491 expr: expr "as" "type" '<' $@30 type_declaration '>' . $@31

    $default  reduce using rule 490 ($@31)

    $@31  go to state 1613


State 1565

  496 expr: expr '?' "as" "type" '<' $@32 type_declaration . '>' $@33
  763 type_declaration: type_declaration . '|' type_declaration_no_options
  764                 | type_declaration . '|' '#'

    '|'  shift, and go to state 418
    '>'  shift, and go to state 1614


State 1566

  524 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 524 (expr_mtag)


State 1567

  522 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 522 (expr_mtag)


State 1568

  521 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 521 (expr_mtag)


State 1569

  545 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 . function_declaration_header "end of expression"

    "operator"  shift, and go to state 181
    "bool"      shift, and go to state 182
    "string"    shift, and go to state 183
    "int"       shift, and go to state 184
    "int2"      shift, and go to state 185
    "int3"      shift, and go to state 186
    "int4"      shift, and go to state 187
    "uint"      shift, and go to state 188
    "uint2"     shift, and go to state 189
    "uint3"     shift, and go to state 190
    "uint4"     shift, and go to state 191
    "float"     shift, and go to state 192
    "float2"    shift, and go to state 193
    "float3"    shift, and go to state 194
    "float4"    shift, and go to state 195
    "range"     shift, and go to state 196
    "urange"    shift, and go to state 197
    "range64"   shift, and go to state 198
    "urange64"  shift, and go to state 199
    "int64"     shift, and go to state 200
    "uint64"    shift, and go to state 201
    "double"    shift, and go to state 202
    "int8"      shift, and go to state 203
    "uint8"     shift, and go to state 204
    "int16"     shift, and go to state 205
    "uint16"    shift, and go to state 206
    "++"        shift, and go to state 207
    "--"        shift, and go to state 208
    "name"      shift, and go to state 209

    function_name                go to state 210
    function_declaration_header  go to state 1615


State 1570

  547 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@36 function_declaration_header expression_block

    $default  reduce using rule 546 ($@36)

    $@36  go to state 1616


State 1571

  540 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 540 (structure_variable_declaration)


State 1572

  709 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')' .

    $default  reduce using rule 709 (type_declaration_no_options)


State 1573

  827 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 918
    "name"  shift, and go to state 1222
    '('     shift, and go to state 1617

    $default  reduce using rule 802 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1618
    make_struct_dim_list           go to state 1619
    make_struct_dim_decl           go to state 1620
    optional_make_struct_dim_decl  go to state 1621


State 1574

  830 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 918
    "name"  shift, and go to state 1222
    '('     shift, and go to state 1617

    $default  reduce using rule 802 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1618
    make_struct_dim_list           go to state 1619
    make_struct_dim_decl           go to state 1620
    optional_make_struct_dim_decl  go to state 1622


State 1575

  325 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')' .

    $default  reduce using rule 325 (expr_type_info)


State 1576

  326 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" '>' . expr ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1623
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1577

  329 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1624
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1578

  328 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')' .

    $default  reduce using rule 328 (expr_type_info)


State 1579

  853 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' $@99 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1519

    $default  reduce using rule 817 (use_initializer)

    use_initializer  go to state 1625


State 1580

  856 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' $@101 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1519

    $default  reduce using rule 817 (use_initializer)

    use_initializer  go to state 1626


State 1581

  859 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options '>' $@103 '(' . make_variant_dim ')'

    "$f"    shift, and go to state 918
    "name"  shift, and go to state 1222

    make_struct_fields  go to state 1586
    make_variant_dim    go to state 1627


State 1582

  863 make_dim_decl: "array" '<' $@104 type_declaration_no_options '>' $@105 '(' optional_expr_list . ')'

    ')'  shift, and go to state 1628


State 1583

  876 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1629


State 1584

  331 expr_list: expr_list . ',' expr
  867 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' $@107 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 951

    $default  reduce using rule 879 (optional_comma)

    optional_comma  go to state 1630


State 1585

  845 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 918
    "name"  shift, and go to state 1222
    '('     shift, and go to state 1617

    $default  reduce using rule 802 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1618
    make_struct_dim_list           go to state 1619
    make_struct_dim_decl           go to state 1620
    optional_make_struct_dim_decl  go to state 1631


State 1586

  787 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  788                   | make_struct_fields . ',' "name" ":=" expr
  791                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  792                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  793 make_variant_dim: make_struct_fields .

    ','  shift, and go to state 1178

    $default  reduce using rule 793 (make_variant_dim)


State 1587

  833 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 '(' make_variant_dim . ')'

    ')'  shift, and go to state 1632


State 1588

  480 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 480 (expr)


State 1589

  878 array_comprehension_where: "end of expression" . "where" expr

    "where"  shift, and go to state 1633


State 1590

  883 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']' ']'

    ']'  shift, and go to state 1634


State 1591

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'
  790 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 790 (make_struct_fields)


State 1592

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'
  789 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 789 (make_struct_fields)


State 1593

  791 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  792                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 843
    ":="  shift, and go to state 1635
    '='   shift, and go to state 845

    copy_or_move  go to state 1636


State 1594

  884 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . "end of code block" ']'

    "end of code block"  shift, and go to state 1637


State 1595

  886 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where . "end of code block" "end of code block"

    "end of code block"  shift, and go to state 1638


State 1596

  252 optional_expr_list_in_braces: '(' optional_expr_list . optional_comma ')'

    ','  shift, and go to state 1639

    $default  reduce using rule 879 (optional_comma)

    optional_comma  go to state 1640


State 1597

  885 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where . "end of code block"

    "end of code block"  shift, and go to state 1641


State 1598

  881 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1642


State 1599

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'
  882 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 735
    "as"                 shift, and go to state 736
    "<<"                 shift, and go to state 745
    ">>"                 shift, and go to state 746
    "++"                 shift, and go to state 747
    "--"                 shift, and go to state 748
    "<="                 shift, and go to state 749
    ">="                 shift, and go to state 752
    "=="                 shift, and go to state 753
    "!="                 shift, and go to state 754
    "->"                 shift, and go to state 755
    "??"                 shift, and go to state 757
    "?."                 shift, and go to state 758
    "?["                 shift, and go to state 759
    "<|"                 shift, and go to state 760
    "|>"                 shift, and go to state 761
    "<<<"                shift, and go to state 763
    ">>>"                shift, and go to state 764
    "&&"                 shift, and go to state 767
    "||"                 shift, and go to state 768
    "^^"                 shift, and go to state 769
    ".."                 shift, and go to state 773
    "end of expression"  shift, and go to state 1589
    '?'                  shift, and go to state 775
    '|'                  shift, and go to state 776
    '^'                  shift, and go to state 777
    '&'                  shift, and go to state 778
    '<'                  shift, and go to state 779
    '>'                  shift, and go to state 780
    '-'                  shift, and go to state 781
    '+'                  shift, and go to state 782
    '*'                  shift, and go to state 783
    '/'                  shift, and go to state 784
    '%'                  shift, and go to state 785
    '.'                  shift, and go to state 786
    '['                  shift, and go to state 787

    $default  reduce using rule 877 (array_comprehension_where)

    array_comprehension_where  go to state 1643


State 1600

  409 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options '>' $@23 func_addr_name .

    $default  reduce using rule 409 (func_addr_expr)


State 1601

  412 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type '>' $@25 . func_addr_name

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 954
    "name"  shift, and go to state 59

    name_in_namespace  go to state 957
    func_addr_name     go to state 1644


State 1602

  287 expression_return_no_pipe: "return" "<-" . expr_list

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 865
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 714
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1603

  292 expression_yield_no_pipe: "yield" "<-" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1645
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1604

  291 expression_yield_no_pipe: "yield" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 291 (expression_yield_no_pipe)


State 1605

  352 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block .

    $default  reduce using rule 352 (expr_full_block_assumed_piped)


State 1606

  401 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 401 (expr_named_call)


State 1607

  306 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"
  701 type_declaration_no_options: type_declaration_no_options . dim_list
  702                            | type_declaration_no_options . '[' ']'
  710                            | type_declaration_no_options . '-' '[' ']'
  711                            | type_declaration_no_options . "explicit"
  712                            | type_declaration_no_options . "const"
  713                            | type_declaration_no_options . '-' "const"
  714                            | type_declaration_no_options . '&'
  715                            | type_declaration_no_options . '-' '&'
  716                            | type_declaration_no_options . '#'
  717                            | type_declaration_no_options . "implicit"
  718                            | type_declaration_no_options . '-' '#'
  719                            | type_declaration_no_options . "==" "const"
  720                            | type_declaration_no_options . "==" '&'
  721                            | type_declaration_no_options . '?'
  725                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 407
    "implicit"  shift, and go to state 408
    "explicit"  shift, and go to state 409
    "=="        shift, and go to state 410
    "<-"        shift, and go to state 573
    "??"        shift, and go to state 411
    ":="        shift, and go to state 574
    '='         shift, and go to state 575
    '?'         shift, and go to state 412
    '&'         shift, and go to state 413
    '-'         shift, and go to state 414
    '['         shift, and go to state 415
    '#'         shift, and go to state 416

    copy_or_move_or_clone  go to state 1646
    dim_list               go to state 417


State 1608

  308 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1647
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1609

  307 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1648
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1610

  309 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr . "end of expression"
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 735
    "as"                 shift, and go to state 736
    "<<"                 shift, and go to state 745
    ">>"                 shift, and go to state 746
    "++"                 shift, and go to state 747
    "--"                 shift, and go to state 748
    "<="                 shift, and go to state 749
    ">="                 shift, and go to state 752
    "=="                 shift, and go to state 753
    "!="                 shift, and go to state 754
    "->"                 shift, and go to state 755
    "??"                 shift, and go to state 757
    "?."                 shift, and go to state 758
    "?["                 shift, and go to state 759
    "<|"                 shift, and go to state 760
    "|>"                 shift, and go to state 761
    "<<<"                shift, and go to state 763
    ">>>"                shift, and go to state 764
    "&&"                 shift, and go to state 767
    "||"                 shift, and go to state 768
    "^^"                 shift, and go to state 769
    ".."                 shift, and go to state 773
    "end of expression"  shift, and go to state 1649
    '?'                  shift, and go to state 775
    '|'                  shift, and go to state 776
    '^'                  shift, and go to state 777
    '&'                  shift, and go to state 778
    '<'                  shift, and go to state 779
    '>'                  shift, and go to state 780
    '-'                  shift, and go to state 781
    '+'                  shift, and go to state 782
    '*'                  shift, and go to state 783
    '/'                  shift, and go to state 784
    '%'                  shift, and go to state 785
    '.'                  shift, and go to state 786
    '['                  shift, and go to state 787


State 1611

  334 block_or_simple_block: "=>" "<-" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 334 (block_or_simple_block)


State 1612

  485 expr: expr "is" "type" '<' $@28 type_declaration_no_options '>' $@29 .

    $default  reduce using rule 485 (expr)


State 1613

  491 expr: expr "as" "type" '<' $@30 type_declaration '>' $@31 .

    $default  reduce using rule 491 (expr)


State 1614

  496 expr: expr '?' "as" "type" '<' $@32 type_declaration '>' . $@33

    $default  reduce using rule 495 ($@33)

    $@33  go to state 1650


State 1615

  545 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header . "end of expression"

    "end of expression"  shift, and go to state 1651


State 1616

  547 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 . function_declaration_header expression_block

    "operator"  shift, and go to state 181
    "bool"      shift, and go to state 182
    "string"    shift, and go to state 183
    "int"       shift, and go to state 184
    "int2"      shift, and go to state 185
    "int3"      shift, and go to state 186
    "int4"      shift, and go to state 187
    "uint"      shift, and go to state 188
    "uint2"     shift, and go to state 189
    "uint3"     shift, and go to state 190
    "uint4"     shift, and go to state 191
    "float"     shift, and go to state 192
    "float2"    shift, and go to state 193
    "float3"    shift, and go to state 194
    "float4"    shift, and go to state 195
    "range"     shift, and go to state 196
    "urange"    shift, and go to state 197
    "range64"   shift, and go to state 198
    "urange64"  shift, and go to state 199
    "int64"     shift, and go to state 200
    "uint64"    shift, and go to state 201
    "double"    shift, and go to state 202
    "int8"      shift, and go to state 203
    "uint8"     shift, and go to state 204
    "int16"     shift, and go to state 205
    "uint16"    shift, and go to state 206
    "++"        shift, and go to state 207
    "--"        shift, and go to state 208
    "name"      shift, and go to state 209

    function_name                go to state 210
    function_declaration_header  go to state 1652


State 1617

  797 make_struct_dim_list: '(' . make_struct_fields ')'

    "$f"    shift, and go to state 918
    "name"  shift, and go to state 1222

    make_struct_fields  go to state 1653


State 1618

  787 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  788                   | make_struct_fields . ',' "name" ":=" expr
  791                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  792                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  799 make_struct_dim_decl: make_struct_fields .

    ','  shift, and go to state 1178

    $default  reduce using rule 799 (make_struct_dim_decl)


State 1619

  798 make_struct_dim_list: make_struct_dim_list . ',' '(' make_struct_fields ')'
  800 make_struct_dim_decl: make_struct_dim_list . optional_comma

    ','  shift, and go to state 1654

    $default  reduce using rule 879 (optional_comma)

    optional_comma  go to state 1655


State 1620

  801 optional_make_struct_dim_decl: make_struct_dim_decl .

    $default  reduce using rule 801 (optional_make_struct_dim_decl)


State 1621

  827 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1656


State 1622

  830 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1657


State 1623

  326 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" '>' expr . ')'
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 1658


State 1624

  329 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr . ')'
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 1659


State 1625

  853 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' $@99 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 918
    "name"  shift, and go to state 1222
    '('     shift, and go to state 1617

    $default  reduce using rule 802 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1618
    make_struct_dim_list           go to state 1619
    make_struct_dim_decl           go to state 1620
    optional_make_struct_dim_decl  go to state 1660


State 1626

  856 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 918
    "name"  shift, and go to state 1222
    '('     shift, and go to state 1617

    $default  reduce using rule 802 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1618
    make_struct_dim_list           go to state 1619
    make_struct_dim_decl           go to state 1620
    optional_make_struct_dim_decl  go to state 1661


State 1627

  859 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options '>' $@103 '(' make_variant_dim . ')'

    ')'  shift, and go to state 1662


State 1628

  863 make_dim_decl: "array" '<' $@104 type_declaration_no_options '>' $@105 '(' optional_expr_list ')' .

    $default  reduce using rule 863 (make_dim_decl)


State 1629

  876 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 876 (make_table_decl)


State 1630

  867 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' $@107 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1663


State 1631

  845 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1664


State 1632

  833 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 '(' make_variant_dim ')' .

    $default  reduce using rule 833 (make_struct_decl)


State 1633

  878 array_comprehension_where: "end of expression" "where" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1665
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1634

  883 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' . ']'

    ']'  shift, and go to state 1666


State 1635

  792 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1667
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1636

  791 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1668
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1637

  884 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" . ']'

    ']'  shift, and go to state 1669


State 1638

  886 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" . "end of code block"

    "end of code block"  shift, and go to state 1670


State 1639

  880 optional_comma: ',' .

    $default  reduce using rule 880 (optional_comma)


State 1640

  252 optional_expr_list_in_braces: '(' optional_expr_list optional_comma . ')'

    ')'  shift, and go to state 1671


State 1641

  885 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" .

    $default  reduce using rule 885 (array_comprehension)


State 1642

  881 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 881 (array_comprehension)


State 1643

  882 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1672


State 1644

  412 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name .

    $default  reduce using rule 412 (func_addr_expr)


State 1645

  292 expression_yield_no_pipe: "yield" "<-" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 292 (expression_yield_no_pipe)


State 1646

  306 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1673
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1647

  308 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr . "end of expression"
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 735
    "as"                 shift, and go to state 736
    "<<"                 shift, and go to state 745
    ">>"                 shift, and go to state 746
    "++"                 shift, and go to state 747
    "--"                 shift, and go to state 748
    "<="                 shift, and go to state 749
    ">="                 shift, and go to state 752
    "=="                 shift, and go to state 753
    "!="                 shift, and go to state 754
    "->"                 shift, and go to state 755
    "??"                 shift, and go to state 757
    "?."                 shift, and go to state 758
    "?["                 shift, and go to state 759
    "<|"                 shift, and go to state 760
    "|>"                 shift, and go to state 761
    "<<<"                shift, and go to state 763
    ">>>"                shift, and go to state 764
    "&&"                 shift, and go to state 767
    "||"                 shift, and go to state 768
    "^^"                 shift, and go to state 769
    ".."                 shift, and go to state 773
    "end of expression"  shift, and go to state 1674
    '?'                  shift, and go to state 775
    '|'                  shift, and go to state 776
    '^'                  shift, and go to state 777
    '&'                  shift, and go to state 778
    '<'                  shift, and go to state 779
    '>'                  shift, and go to state 780
    '-'                  shift, and go to state 781
    '+'                  shift, and go to state 782
    '*'                  shift, and go to state 783
    '/'                  shift, and go to state 784
    '%'                  shift, and go to state 785
    '.'                  shift, and go to state 786
    '['                  shift, and go to state 787


State 1648

  307 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 735
    "as"                 shift, and go to state 736
    "<<"                 shift, and go to state 745
    ">>"                 shift, and go to state 746
    "++"                 shift, and go to state 747
    "--"                 shift, and go to state 748
    "<="                 shift, and go to state 749
    ">="                 shift, and go to state 752
    "=="                 shift, and go to state 753
    "!="                 shift, and go to state 754
    "->"                 shift, and go to state 755
    "??"                 shift, and go to state 757
    "?."                 shift, and go to state 758
    "?["                 shift, and go to state 759
    "<|"                 shift, and go to state 760
    "|>"                 shift, and go to state 761
    "<<<"                shift, and go to state 763
    ">>>"                shift, and go to state 764
    "&&"                 shift, and go to state 767
    "||"                 shift, and go to state 768
    "^^"                 shift, and go to state 769
    ".."                 shift, and go to state 773
    "end of expression"  shift, and go to state 1675
    '?'                  shift, and go to state 775
    '|'                  shift, and go to state 776
    '^'                  shift, and go to state 777
    '&'                  shift, and go to state 778
    '<'                  shift, and go to state 779
    '>'                  shift, and go to state 780
    '-'                  shift, and go to state 781
    '+'                  shift, and go to state 782
    '*'                  shift, and go to state 783
    '/'                  shift, and go to state 784
    '%'                  shift, and go to state 785
    '.'                  shift, and go to state 786
    '['                  shift, and go to state 787


State 1649

  309 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 309 (tuple_expansion_variable_declaration)


State 1650

  496 expr: expr '?' "as" "type" '<' $@32 type_declaration '>' $@33 .

    $default  reduce using rule 496 (expr)


State 1651

  545 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header "end of expression" .

    $default  reduce using rule 545 (struct_variable_declaration_list)


State 1652

  547 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header . expression_block

    "begin of code block"  shift, and go to state 286

    expression_block  go to state 1676


State 1653

  787 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  788                   | make_struct_fields . ',' "name" ":=" expr
  791                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  792                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  797 make_struct_dim_list: '(' make_struct_fields . ')'

    ','  shift, and go to state 1178
    ')'  shift, and go to state 1677


State 1654

  798 make_struct_dim_list: make_struct_dim_list ',' . '(' make_struct_fields ')'
  880 optional_comma: ',' .

    '('  shift, and go to state 1678

    $default  reduce using rule 880 (optional_comma)


State 1655

  800 make_struct_dim_decl: make_struct_dim_list optional_comma .

    $default  reduce using rule 800 (make_struct_dim_decl)


State 1656

  827 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 827 (make_struct_decl)


State 1657

  830 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 830 (make_struct_decl)


State 1658

  326 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" '>' expr ')' .

    $default  reduce using rule 326 (expr_type_info)


State 1659

  329 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr ')' .

    $default  reduce using rule 329 (expr_type_info)


State 1660

  853 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' $@99 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1679


State 1661

  856 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1680


State 1662

  859 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options '>' $@103 '(' make_variant_dim ')' .

    $default  reduce using rule 859 (make_dim_decl)


State 1663

  867 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' $@107 '(' expr_list optional_comma ')' .

    $default  reduce using rule 867 (make_dim_decl)


State 1664

  845 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 845 (make_tuple_call)


State 1665

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'
  878 array_comprehension_where: "end of expression" "where" expr .

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 878 (array_comprehension_where)


State 1666

  883 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']' .

    $default  reduce using rule 883 (array_comprehension)


State 1667

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'
  792 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 792 (make_struct_fields)


State 1668

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'
  791 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 791 (make_struct_fields)


State 1669

  884 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']' .

    $default  reduce using rule 884 (array_comprehension)


State 1670

  886 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block" .

    $default  reduce using rule 886 (array_comprehension)


State 1671

  252 optional_expr_list_in_braces: '(' optional_expr_list optional_comma ')' .

    $default  reduce using rule 252 (optional_expr_list_in_braces)


State 1672

  882 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 882 (array_comprehension)


State 1673

  306 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  419           | expr . '.' $@26 error $@27
  441 expr: expr . "<<" expr
  442     | expr . ">>" expr
  443     | expr . "<<<" expr
  444     | expr . ">>>" expr
  445     | expr . '+' expr
  446     | expr . '-' expr
  447     | expr . '*' expr
  448     | expr . '/' expr
  449     | expr . '%' expr
  450     | expr . '<' expr
  451     | expr . '>' expr
  452     | expr . "==" expr
  453     | expr . "!=" expr
  454     | expr . "<=" expr
  455     | expr . ">=" expr
  456     | expr . '&' expr
  457     | expr . '|' expr
  458     | expr . '^' expr
  459     | expr . "&&" expr
  460     | expr . "||" expr
  461     | expr . "^^" expr
  462     | expr . ".." expr
  465     | expr . "++"
  466     | expr . "--"
  468     | expr . '[' expr ']'
  469     | expr . '.' '[' expr ']'
  470     | expr . "?[" expr ']'
  471     | expr . '.' "?[" expr ']'
  472     | expr . "?." "name"
  473     | expr . '.' "?." "name"
  481     | expr . "??" expr
  482     | expr . '?' expr ':' expr
  485     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  486     | expr . "is" basic_type_declaration
  487     | expr . "is" "name"
  488     | expr . "as" "name"
  491     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  492     | expr . "as" basic_type_declaration
  493     | expr . '?' "as" "name"
  496     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  497     | expr . '?' "as" basic_type_declaration
  505     | expr . "<|" expr
  506     | expr . "|>" expr
  507     | expr . "|>" basic_type_declaration
  519 expr_mtag: expr . '.' "$f" '(' expr ')'
  520          | expr . "?." "$f" '(' expr ')'
  521          | expr . '.' '.' "$f" '(' expr ')'
  522          | expr . '.' "?." "$f" '(' expr ')'
  523          | expr . "as" "$f" '(' expr ')'
  524          | expr . '?' "as" "$f" '(' expr ')'
  525          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 735
    "as"                 shift, and go to state 736
    "<<"                 shift, and go to state 745
    ">>"                 shift, and go to state 746
    "++"                 shift, and go to state 747
    "--"                 shift, and go to state 748
    "<="                 shift, and go to state 749
    ">="                 shift, and go to state 752
    "=="                 shift, and go to state 753
    "!="                 shift, and go to state 754
    "->"                 shift, and go to state 755
    "??"                 shift, and go to state 757
    "?."                 shift, and go to state 758
    "?["                 shift, and go to state 759
    "<|"                 shift, and go to state 760
    "|>"                 shift, and go to state 761
    "<<<"                shift, and go to state 763
    ">>>"                shift, and go to state 764
    "&&"                 shift, and go to state 767
    "||"                 shift, and go to state 768
    "^^"                 shift, and go to state 769
    ".."                 shift, and go to state 773
    "end of expression"  shift, and go to state 1681
    '?'                  shift, and go to state 775
    '|'                  shift, and go to state 776
    '^'                  shift, and go to state 777
    '&'                  shift, and go to state 778
    '<'                  shift, and go to state 779
    '>'                  shift, and go to state 780
    '-'                  shift, and go to state 781
    '+'                  shift, and go to state 782
    '*'                  shift, and go to state 783
    '/'                  shift, and go to state 784
    '%'                  shift, and go to state 785
    '.'                  shift, and go to state 786
    '['                  shift, and go to state 787


State 1674

  308 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 308 (tuple_expansion_variable_declaration)


State 1675

  307 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 307 (tuple_expansion_variable_declaration)


State 1676

  547 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block .

    $default  reduce using rule 547 (struct_variable_declaration_list)


State 1677

  797 make_struct_dim_list: '(' make_struct_fields ')' .

    $default  reduce using rule 797 (make_struct_dim_list)


State 1678

  798 make_struct_dim_list: make_struct_dim_list ',' '(' . make_struct_fields ')'

    "$f"    shift, and go to state 918
    "name"  shift, and go to state 1222

    make_struct_fields  go to state 1682


State 1679

  853 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 853 (make_dim_decl)


State 1680

  856 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 856 (make_dim_decl)


State 1681

  306 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 306 (tuple_expansion_variable_declaration)


State 1682

  787 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  788                   | make_struct_fields . ',' "name" ":=" expr
  791                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  792                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  798 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields . ')'

    ','  shift, and go to state 1178
    ')'  shift, and go to state 1683


State 1683

  798 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields ')' .

    $default  reduce using rule 798 (make_struct_dim_list)
