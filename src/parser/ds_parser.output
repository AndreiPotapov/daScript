Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"


State 59 conflicts: 1 shift/reduce
State 319 conflicts: 1 shift/reduce
State 416 conflicts: 1 shift/reduce
State 520 conflicts: 2 shift/reduce
State 522 conflicts: 2 shift/reduce
State 628 conflicts: 1 shift/reduce
State 849 conflicts: 1 shift/reduce
State 938 conflicts: 2 shift/reduce
State 1050 conflicts: 1 shift/reduce
State 1163 conflicts: 1 shift/reduce
State 1439 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration
    9        | program options_declaration
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program tuple_alias_declaration
   13        | program bitfield_alias_declaration
   14        | program top_level_reader_macro
   15        | program "end of expression"

   16 top_level_reader_macro: expr_reader "end of expression"

   17 optional_public_or_private_module: %empty
   18                                  | "public"
   19                                  | "private"

   20 module_name: '$'
   21            | "name"

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   23 character_sequence: STRING_CHARACTER
   24                   | STRING_CHARACTER_ESC
   25                   | character_sequence STRING_CHARACTER
   26                   | character_sequence STRING_CHARACTER_ESC

   27 string_constant: "start of the string" character_sequence "end of the string"

   28 string_builder_body: %empty
   29                    | string_builder_body character_sequence
   30                    | string_builder_body "{" expr "}"

   31 string_builder: "start of the string" string_builder_body "end of the string"

   32 reader_character_sequence: STRING_CHARACTER
   33                          | reader_character_sequence STRING_CHARACTER

   34 $@1: %empty

   35 expr_reader: '%' name_in_namespace $@1 reader_character_sequence

   36 options_declaration: "options" annotation_argument_list

   37 require_declaration: "require" require_module

   38 keyword_or_name: "name"
   39                | "keyword"
   40                | "type function"

   41 require_module_name: keyword_or_name
   42                    | '%' require_module_name
   43                    | require_module_name '.' keyword_or_name
   44                    | require_module_name '/' keyword_or_name

   45 require_module: require_module_name is_public_module
   46               | require_module_name "as" "name" is_public_module

   47 is_public_module: %empty
   48                 | "public"

   49 expect_declaration: "expect" expect_list

   50 expect_list: expect_error
   51            | expect_list ',' expect_error

   52 expect_error: "integer constant"
   53             | "integer constant" ':' "integer constant"

   54 expression_label: "label" "integer constant" ':'

   55 expression_goto: "goto" "label" "integer constant"
   56                | "goto" expr

   57 elif_or_static_elif: "elif"
   58                    | "static_elif"

   59 expression_else: %empty
   60                | "else" expression_block
   61                | elif_or_static_elif expr expression_block expression_else

   62 if_or_static_if: "if"
   63                | "static_if"

   64 expression_else_one_liner: %empty

   65 $@2: %empty

   66 expression_else_one_liner: "else" $@2 expression_if_one_liner

   67 expression_if_one_liner: expr
   68                        | expression_return_no_pipe
   69                        | expression_yield_no_pipe
   70                        | expression_break
   71                        | expression_continue

   72 expression_if_then_else: if_or_static_if expr expression_block expression_else

   73 $@3: %empty

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner "end of expression"

   75 $@4: %empty

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" expr_list expression_block

   77 expression_unsafe: "unsafe" expression_block

   78 expression_while_loop: "while" expr expression_block

   79 expression_with: "with" expr expression_block

   80 $@5: %empty

   81 expression_with_alias: "assume" "name" '=' $@5 expr

   82 annotation_argument_value: string_constant
   83                          | "name"
   84                          | "integer constant"
   85                          | "floating point constant"
   86                          | "true"
   87                          | "false"

   88 annotation_argument_value_list: annotation_argument_value
   89                               | annotation_argument_value_list ',' annotation_argument_value

   90 annotation_argument_name: "name"
   91                         | "type"
   92                         | "in"

   93 annotation_argument: annotation_argument_name '=' string_constant
   94                    | annotation_argument_name '=' "name"
   95                    | annotation_argument_name '=' "integer constant"
   96                    | annotation_argument_name '=' "floating point constant"
   97                    | annotation_argument_name '=' "true"
   98                    | annotation_argument_name '=' "false"
   99                    | annotation_argument_name
  100                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

  101 annotation_argument_list: annotation_argument
  102                         | annotation_argument_list ',' annotation_argument

  103 metadata_argument_list: '@' annotation_argument
  104                       | metadata_argument_list '@' annotation_argument

  105 annotation_declaration_name: name_in_namespace
  106                            | "require"
  107                            | "private"

  108 annotation_declaration_basic: annotation_declaration_name
  109                             | annotation_declaration_name '(' annotation_argument_list ')'

  110 annotation_declaration: annotation_declaration_basic
  111                       | '!' annotation_declaration
  112                       | annotation_declaration "&&" annotation_declaration
  113                       | annotation_declaration "||" annotation_declaration
  114                       | annotation_declaration "^^" annotation_declaration
  115                       | '(' annotation_declaration ')'
  116                       | "|>" annotation_declaration

  117 annotation_list: annotation_declaration
  118                | annotation_list ',' annotation_declaration

  119 optional_annotation_list: %empty
  120                         | '[' annotation_list ']'

  121 optional_function_argument_list: %empty
  122                                | '(' ')'
  123                                | '(' function_argument_list ')'

  124 optional_function_type: %empty
  125                       | ':' type_declaration

  126 function_name: "name"
  127              | "operator" '!'
  128              | "operator" '~'
  129              | "operator" "+="
  130              | "operator" "-="
  131              | "operator" "*="
  132              | "operator" "/="
  133              | "operator" "%="
  134              | "operator" "&="
  135              | "operator" "|="
  136              | "operator" "^="
  137              | "operator" "&&="
  138              | "operator" "||="
  139              | "operator" "^^="
  140              | "operator" "&&"
  141              | "operator" "||"
  142              | "operator" "^^"
  143              | "operator" '+'
  144              | "operator" '-'
  145              | "operator" '*'
  146              | "operator" '/'
  147              | "operator" '%'
  148              | "operator" '<'
  149              | "operator" '>'
  150              | "operator" ".."
  151              | "operator" "=="
  152              | "operator" "!="
  153              | "operator" "<="
  154              | "operator" ">="
  155              | "operator" '&'
  156              | "operator" '|'
  157              | "operator" '^'
  158              | "++" "operator"
  159              | "--" "operator"
  160              | "operator" "++"
  161              | "operator" "--"
  162              | "operator" "<<"
  163              | "operator" ">>"
  164              | "operator" "<<="
  165              | "operator" ">>="
  166              | "operator" "<<<"
  167              | "operator" ">>>"
  168              | "operator" "<<<="
  169              | "operator" ">>>="
  170              | "operator" '[' ']'
  171              | "operator" "?[" ']'
  172              | "operator" '.'
  173              | "operator" "?."
  174              | "operator" '.' "name"
  175              | "operator" '.' "name" ":="
  176              | "operator" "?." "name"
  177              | "operator" ":="
  178              | "operator" "delete"
  179              | "operator" "??"
  180              | "operator" "is"
  181              | "operator" "as"
  182              | "operator" "is" "name"
  183              | "operator" "as" "name"
  184              | "operator" '?' "as"
  185              | "operator" '?' "as" "name"
  186              | "bool"
  187              | "string"
  188              | "int"
  189              | "int2"
  190              | "int3"
  191              | "int4"
  192              | "uint"
  193              | "uint2"
  194              | "uint3"
  195              | "uint4"
  196              | "float"
  197              | "float2"
  198              | "float3"
  199              | "float4"
  200              | "range"
  201              | "urange"
  202              | "range64"
  203              | "urange64"
  204              | "int64"
  205              | "uint64"
  206              | "double"
  207              | "int8"
  208              | "uint8"
  209              | "int16"
  210              | "uint16"

  211 global_function_declaration: optional_annotation_list "def" function_declaration

  212 optional_public_or_private_function: %empty
  213                                    | "private"
  214                                    | "public"

  215 function_declaration_header: function_name optional_function_argument_list optional_function_type

  216 $@6: %empty

  217 function_declaration: optional_public_or_private_function $@6 function_declaration_header expression_block

  218 expression_block: "begin of code block" expressions "end of code block"
  219                 | "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions "end of code block"

  220 expr_call_pipe: expr expr_full_block_assumed_piped
  221               | expression_keyword expr_full_block_assumed_piped

  222 expression_any: "end of expression"
  223               | expr_pipe
  224               | expr_keyword
  225               | expr_assign_pipe
  226               | expr_assign "end of expression"
  227               | expression_delete "end of expression"
  228               | expression_let
  229               | expression_while_loop
  230               | expression_unsafe
  231               | expression_with
  232               | expression_with_alias
  233               | expression_for_loop
  234               | expression_break "end of expression"
  235               | expression_continue "end of expression"
  236               | expression_return
  237               | expression_yield
  238               | expression_if_then_else
  239               | expression_try_catch
  240               | expression_label "end of expression"
  241               | expression_goto "end of expression"
  242               | "pass" "end of expression"

  243 expressions: %empty
  244            | expressions expression_any
  245            | expressions error

  246 expr_keyword: "keyword" expr expression_block

  247 optional_expr_list: %empty
  248                   | expr_list

  249 optional_expr_list_in_braces: %empty
  250                             | '(' optional_expr_list ')'

  251 type_declaration_no_options_list: type_declaration
  252                                 | type_declaration_no_options_list "end of expression" type_declaration

  253 $@7: %empty

  254 $@8: %empty

  255 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list '>' $@8 expr

  256 $@9: %empty

  257 $@10: %empty

  258 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces

  259 expr_pipe: expr_assign " <|" expr_block
  260          | "@ <|" expr_block
  261          | "@@ <|" expr_block
  262          | "$ <|" expr_block
  263          | expr_call_pipe

  264 name_in_namespace: "name"
  265                  | "name" "::" "name"
  266                  | "::" "name"

  267 expression_delete: "delete" expr
  268                  | "delete" "explicit" expr

  269 $@11: %empty

  270 $@12: %empty

  271 new_type_declaration: '<' $@11 type_declaration '>' $@12
  272                     | structure_type_declaration

  273 expr_new: "new" new_type_declaration
  274         | "new" new_type_declaration '(' use_initializer ')'
  275         | "new" new_type_declaration '(' expr_list ')'
  276         | "new" new_type_declaration '(' use_initializer make_struct_single ')'
  277         | "new" make_decl

  278 expression_break: "break"

  279 expression_continue: "continue"

  280 expression_return_no_pipe: "return"
  281                          | "return" expr_list
  282                          | "return" "<-" expr_list

  283 expression_return: expression_return_no_pipe "end of expression"
  284                  | "return" expr_pipe
  285                  | "return" "<-" expr_pipe

  286 expression_yield_no_pipe: "yield" expr
  287                         | "yield" "<-" expr

  288 expression_yield: expression_yield_no_pipe "end of expression"
  289                 | "yield" expr_pipe
  290                 | "yield" "<-" expr_pipe

  291 expression_try_catch: "try" expression_block "recover" expression_block

  292 kwd_let_var_or_nothing: "let"
  293                       | "var"
  294                       | %empty

  295 kwd_let: "let"
  296        | "var"

  297 optional_in_scope: "inscope"
  298                  | %empty

  299 tuple_expansion: "name"
  300                | tuple_expansion ',' "name"

  301 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  302                                     | '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  303                                     | "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr "end of expression"
  304                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression"

  305 expression_let: kwd_let optional_in_scope let_variable_declaration
  306               | kwd_let optional_in_scope tuple_expansion_variable_declaration

  307 $@13: %empty

  308 $@14: %empty

  309 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 expr

  310 $@15: %empty

  311 $@16: %empty

  312 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 expr

  313 $@17: %empty

  314 $@18: %empty

  315 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 expr

  316 $@19: %empty

  317 $@20: %empty

  318 expr_type_decl: "type" '<' $@19 type_declaration '>' $@20

  319 expr_type_info: "typeinfo" '(' name_in_namespace expr ')'
  320               | "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')'
  321               | "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" '>' expr ')'
  322               | "typeinfo" name_in_namespace '(' expr ')'
  323               | "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')'
  324               | "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr ')'

  325 expr_list: expr
  326          | expr_list ',' expr

  327 block_or_simple_block: expression_block
  328                      | "=>" expr
  329                      | "=>" "<-" expr

  330 block_or_lambda: '$'
  331                | '@'
  332                | '@' '@'

  333 capture_entry: '&' "name"
  334              | '=' "name"
  335              | "<-" "name"
  336              | ":=" "name"

  337 capture_list: capture_entry
  338             | capture_list ',' capture_entry

  339 optional_capture_list: %empty
  340                      | "[[" capture_list ']' ']'

  341 expr_block: expression_block
  342           | block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  343 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  344 $@21: %empty

  345 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

  346 expr_numeric_const: "integer constant"
  347                   | "unsigned integer constant"
  348                   | "long integer constant"
  349                   | "unsigned long integer constant"
  350                   | "unsigned int8 constant"
  351                   | "floating point constant"
  352                   | "double constant"

  353 expr_assign: expr
  354            | expr '=' expr
  355            | expr "<-" expr
  356            | expr ":=" expr
  357            | expr "&=" expr
  358            | expr "|=" expr
  359            | expr "^=" expr
  360            | expr "&&=" expr
  361            | expr "||=" expr
  362            | expr "^^=" expr
  363            | expr "+=" expr
  364            | expr "-=" expr
  365            | expr "*=" expr
  366            | expr "/=" expr
  367            | expr "%=" expr
  368            | expr "<<=" expr
  369            | expr ">>=" expr
  370            | expr "<<<=" expr
  371            | expr ">>>=" expr

  372 expr_assign_pipe_right: "@ <|" expr_block
  373                       | "@@ <|" expr_block
  374                       | "$ <|" expr_block
  375                       | expr_call_pipe

  376 expr_assign_pipe: expr '=' expr_assign_pipe_right
  377                 | expr "<-" expr_assign_pipe_right
  378                 | expr "&=" expr_assign_pipe_right
  379                 | expr "|=" expr_assign_pipe_right
  380                 | expr "^=" expr_assign_pipe_right
  381                 | expr "&&=" expr_assign_pipe_right
  382                 | expr "||=" expr_assign_pipe_right
  383                 | expr "^^=" expr_assign_pipe_right
  384                 | expr "+=" expr_assign_pipe_right
  385                 | expr "-=" expr_assign_pipe_right
  386                 | expr "*=" expr_assign_pipe_right
  387                 | expr "/=" expr_assign_pipe_right
  388                 | expr "%=" expr_assign_pipe_right
  389                 | expr "<<=" expr_assign_pipe_right
  390                 | expr ">>=" expr_assign_pipe_right
  391                 | expr "<<<=" expr_assign_pipe_right
  392                 | expr ">>>=" expr_assign_pipe_right

  393 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  394                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  395 expr_method_call: expr "->" "name" '(' ')'
  396                 | expr "->" "name" '(' expr_list ')'

  397 func_addr_name: name_in_namespace
  398               | "$i" '(' expr ')'

  399 func_addr_expr: '@' '@' func_addr_name

  400 $@22: %empty

  401 $@23: %empty

  402 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options '>' $@23 func_addr_name

  403 $@24: %empty

  404 $@25: %empty

  405 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name

  406 expr_field: expr '.' "name"
  407           | expr '.' '.' "name"
  408           | expr '.' "name" '(' ')'
  409           | expr '.' "name" '(' expr_list ')'

  410 $@26: %empty

  411 $@27: %empty

  412 expr_field: expr '.' $@26 error $@27

  413 expr_call: name_in_namespace '(' ')'
  414          | name_in_namespace '(' make_struct_single ')'
  415          | name_in_namespace '(' expr_list ')'
  416          | basic_type_declaration '(' ')'
  417          | basic_type_declaration '(' expr_list ')'

  418 expr: "null"
  419     | name_in_namespace
  420     | expr_numeric_const
  421     | expr_reader
  422     | string_builder
  423     | make_decl
  424     | "true"
  425     | "false"
  426     | expr_field
  427     | expr_mtag
  428     | '!' expr
  429     | '~' expr
  430     | '+' expr
  431     | '-' expr
  432     | expr "<<" expr
  433     | expr ">>" expr
  434     | expr "<<<" expr
  435     | expr ">>>" expr
  436     | expr '+' expr
  437     | expr '-' expr
  438     | expr '*' expr
  439     | expr '/' expr
  440     | expr '%' expr
  441     | expr '<' expr
  442     | expr '>' expr
  443     | expr "==" expr
  444     | expr "!=" expr
  445     | expr "<=" expr
  446     | expr ">=" expr
  447     | expr '&' expr
  448     | expr '|' expr
  449     | expr '^' expr
  450     | expr "&&" expr
  451     | expr "||" expr
  452     | expr "^^" expr
  453     | expr ".." expr
  454     | "++" expr
  455     | "--" expr
  456     | expr "++"
  457     | expr "--"
  458     | '(' expr_list optional_comma ')'
  459     | expr '[' expr ']'
  460     | expr '.' '[' expr ']'
  461     | expr "?[" expr ']'
  462     | expr '.' "?[" expr ']'
  463     | expr "?." "name"
  464     | expr '.' "?." "name"
  465     | func_addr_expr
  466     | expr_call
  467     | '*' expr
  468     | "deref" '(' expr ')'
  469     | "addr" '(' expr ')'
  470     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  471     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  472     | expr "??" expr
  473     | expr '?' expr ':' expr

  474 $@28: %empty

  475 $@29: %empty

  476 expr: expr "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr "is" basic_type_declaration
  478     | expr "is" "name"
  479     | expr "as" "name"

  480 $@30: %empty

  481 $@31: %empty

  482 expr: expr "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr "as" basic_type_declaration
  484     | expr '?' "as" "name"

  485 $@32: %empty

  486 $@33: %empty

  487 expr: expr '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr '?' "as" basic_type_declaration
  489     | expr_type_info
  490     | expr_type_decl
  491     | expr_cast
  492     | expr_new
  493     | expr_method_call
  494     | expr_named_call
  495     | expr_full_block
  496     | expr "<|" expr
  497     | expr "|>" expr
  498     | expr "|>" basic_type_declaration
  499     | name_in_namespace "name"
  500     | "unsafe" '(' expr ')'
  501     | expression_keyword

  502 expr_mtag: "$$" '(' expr ')'
  503          | "$i" '(' expr ')'
  504          | "$v" '(' expr ')'
  505          | "$b" '(' expr ')'
  506          | "$a" '(' expr ')'
  507          | "..."
  508          | "$c" '(' expr ')' '(' ')'
  509          | "$c" '(' expr ')' '(' expr_list ')'
  510          | expr '.' "$f" '(' expr ')'
  511          | expr "?." "$f" '(' expr ')'
  512          | expr '.' '.' "$f" '(' expr ')'
  513          | expr '.' "?." "$f" '(' expr ')'
  514          | expr "as" "$f" '(' expr ')'
  515          | expr '?' "as" "$f" '(' expr ')'
  516          | expr "is" "$f" '(' expr ')'
  517          | '@' '@' "$c" '(' expr ')'

  518 optional_field_annotation: %empty
  519                          | "[[" annotation_argument_list ']' ']'
  520                          | metadata_argument_list

  521 optional_override: %empty
  522                  | "override"
  523                  | "sealed"

  524 optional_constant: %empty
  525                  | "const"

  526 optional_public_or_private_member_variable: %empty
  527                                           | "public"
  528                                           | "private"

  529 optional_static_member_variable: %empty
  530                                | "static"

  531 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  532 struct_variable_declaration_list: %empty

  533 $@34: %empty

  534 struct_variable_declaration_list: struct_variable_declaration_list $@34 structure_variable_declaration "end of expression"

  535 $@35: %empty

  536 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header "end of expression"

  537 $@36: %empty

  538 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block
  539                                 | struct_variable_declaration_list '[' annotation_list ']' "end of expression"

  540 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration
  541                              | "$a" '(' expr ')'

  542 function_argument_list: function_argument_declaration
  543                       | function_argument_list "end of expression" function_argument_declaration

  544 tuple_type: type_declaration
  545           | "name" ':' type_declaration

  546 tuple_type_list: tuple_type
  547                | tuple_type_list "end of expression" tuple_type

  548 tuple_alias_type_list: %empty
  549                      | tuple_alias_type_list "end of expression"
  550                      | tuple_alias_type_list tuple_type "end of expression"

  551 variant_type: "name" ':' type_declaration

  552 variant_type_list: variant_type
  553                  | variant_type_list "end of expression" variant_type

  554 variant_alias_type_list: %empty
  555                        | variant_alias_type_list "end of expression"
  556                        | variant_alias_type_list variant_type "end of expression"

  557 copy_or_move: '='
  558             | "<-"

  559 variable_declaration: variable_name_with_pos_list
  560                     | variable_name_with_pos_list '&'
  561                     | variable_name_with_pos_list ':' type_declaration
  562                     | variable_name_with_pos_list ':' type_declaration copy_or_move expr
  563                     | variable_name_with_pos_list copy_or_move expr
  564                     | variable_name_with_pos_list copy_or_move expr_pipe

  565 copy_or_move_or_clone: '='
  566                      | "<-"
  567                      | ":="

  568 optional_ref: %empty
  569             | '&'

  570 let_variable_name_with_pos_list: "name"
  571                                | "$i" '(' expr ')'
  572                                | "name" "aka" "name"
  573                                | let_variable_name_with_pos_list ',' "name"
  574                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  575 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression"
  576                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  577                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  578                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression"
  579                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe

  580 global_variable_declaration_list: %empty

  581 $@37: %empty

  582 global_variable_declaration_list: global_variable_declaration_list $@37 optional_field_annotation let_variable_declaration

  583 optional_shared: %empty
  584                | "shared"

  585 optional_public_or_private_variable: %empty
  586                                    | "private"
  587                                    | "public"

  588 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"

  589 $@38: %empty

  590 global_let: kwd_let optional_shared optional_public_or_private_variable $@38 optional_field_annotation let_variable_declaration

  591 enum_list: %empty
  592          | enum_list "end of expression"
  593          | enum_list "name" "end of expression"
  594          | enum_list "name" '=' expr "end of expression"

  595 optional_public_or_private_alias: %empty
  596                                 | "private"
  597                                 | "public"

  598 $@39: %empty

  599 single_alias: optional_public_or_private_alias "name" $@39 '=' type_declaration

  600 alias_list: single_alias "end of expression"
  601           | alias_list single_alias "end of expression"

  602 alias_declaration: "typedef" "begin of code block" alias_list "end of code block"

  603 $@40: %empty

  604 alias_declaration: "typedef" $@40 single_alias "end of expression"

  605 optional_public_or_private_enum: %empty
  606                                | "private"
  607                                | "public"

  608 enum_name: "name"

  609 $@41: %empty

  610 $@42: %empty

  611 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list $@42 "end of code block"

  612 $@43: %empty

  613 $@44: %empty

  614 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"

  615 optional_structure_parent: %empty
  616                          | ':' name_in_namespace

  617 optional_sealed: %empty
  618                | "sealed"

  619 structure_name: optional_sealed "name" optional_structure_parent

  620 class_or_struct: "class"
  621                | "struct"

  622 optional_public_or_private_structure: %empty
  623                                     | "private"
  624                                     | "public"

  625 optional_struct_variable_declaration_list: %empty
  626                                          | "begin of code block" struct_variable_declaration_list "end of code block"

  627 $@45: %empty

  628 $@46: %empty

  629 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 structure_name $@46 optional_struct_variable_declaration_list

  630 variable_name_with_pos_list: "name"
  631                            | "$i" '(' expr ')'
  632                            | "name" "aka" "name"
  633                            | variable_name_with_pos_list ',' "name"
  634                            | variable_name_with_pos_list ',' "name" "aka" "name"

  635 basic_type_declaration: "bool"
  636                       | "string"
  637                       | "int"
  638                       | "int8"
  639                       | "int16"
  640                       | "int64"
  641                       | "int2"
  642                       | "int3"
  643                       | "int4"
  644                       | "uint"
  645                       | "uint8"
  646                       | "uint16"
  647                       | "uint64"
  648                       | "uint2"
  649                       | "uint3"
  650                       | "uint4"
  651                       | "float"
  652                       | "float2"
  653                       | "float3"
  654                       | "float4"
  655                       | "void"
  656                       | "range"
  657                       | "urange"
  658                       | "range64"
  659                       | "urange64"
  660                       | "double"
  661                       | "bitfield"

  662 enum_basic_type_declaration: "int"
  663                            | "int8"
  664                            | "int16"
  665                            | "uint"
  666                            | "uint8"
  667                            | "uint16"
  668                            | "int64"
  669                            | "uint64"

  670 structure_type_declaration: name_in_namespace

  671 auto_type_declaration: "auto"
  672                      | "auto" '(' "name" ')'
  673                      | "$t" '(' expr ')'

  674 bitfield_bits: "name"
  675              | bitfield_bits "end of expression" "name"

  676 bitfield_alias_bits: %empty
  677                    | bitfield_alias_bits "end of expression"
  678                    | bitfield_alias_bits "name" "end of expression"

  679 $@47: %empty

  680 $@48: %empty

  681 bitfield_type_declaration: "bitfield" '<' $@47 bitfield_bits '>' $@48

  682 table_type_pair: type_declaration
  683                | type_declaration "end of expression" type_declaration

  684 dim_list: '[' expr ']'
  685         | dim_list '[' expr ']'

  686 type_declaration_no_options: basic_type_declaration
  687                            | auto_type_declaration
  688                            | bitfield_type_declaration
  689                            | structure_type_declaration
  690                            | type_declaration_no_options dim_list
  691                            | type_declaration_no_options '[' ']'

  692 $@49: %empty

  693 $@50: %empty

  694 type_declaration_no_options: "type" '<' $@49 type_declaration '>' $@50
  695                            | "typedecl" '(' expr ')'
  696                            | '$' name_in_namespace '(' optional_expr_list ')'

  697 $@51: %empty

  698 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')'
  699                            | type_declaration_no_options '-' '[' ']'
  700                            | type_declaration_no_options "explicit"
  701                            | type_declaration_no_options "const"
  702                            | type_declaration_no_options '-' "const"
  703                            | type_declaration_no_options '&'
  704                            | type_declaration_no_options '-' '&'
  705                            | type_declaration_no_options '#'
  706                            | type_declaration_no_options "implicit"
  707                            | type_declaration_no_options '-' '#'
  708                            | type_declaration_no_options "==" "const"
  709                            | type_declaration_no_options "==" '&'
  710                            | type_declaration_no_options '?'

  711 $@52: %empty

  712 $@53: %empty

  713 type_declaration_no_options: "smart_ptr" '<' $@52 type_declaration '>' $@53
  714                            | type_declaration_no_options "??"

  715 $@54: %empty

  716 $@55: %empty

  717 type_declaration_no_options: "array" '<' $@54 type_declaration '>' $@55

  718 $@56: %empty

  719 $@57: %empty

  720 type_declaration_no_options: "table" '<' $@56 table_type_pair '>' $@57

  721 $@58: %empty

  722 $@59: %empty

  723 type_declaration_no_options: "iterator" '<' $@58 type_declaration '>' $@59
  724                            | "block"

  725 $@60: %empty

  726 $@61: %empty

  727 type_declaration_no_options: "block" '<' $@60 type_declaration '>' $@61

  728 $@62: %empty

  729 $@63: %empty

  730 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list optional_function_type '>' $@63
  731                            | "function"

  732 $@64: %empty

  733 $@65: %empty

  734 type_declaration_no_options: "function" '<' $@64 type_declaration '>' $@65

  735 $@66: %empty

  736 $@67: %empty

  737 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list optional_function_type '>' $@67
  738                            | "lambda"

  739 $@68: %empty

  740 $@69: %empty

  741 type_declaration_no_options: "lambda" '<' $@68 type_declaration '>' $@69

  742 $@70: %empty

  743 $@71: %empty

  744 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list optional_function_type '>' $@71

  745 $@72: %empty

  746 $@73: %empty

  747 type_declaration_no_options: "tuple" '<' $@72 tuple_type_list '>' $@73

  748 $@74: %empty

  749 $@75: %empty

  750 type_declaration_no_options: "variant" '<' $@74 variant_type_list '>' $@75

  751 type_declaration: type_declaration_no_options
  752                 | type_declaration '|' type_declaration_no_options
  753                 | type_declaration '|' '#'

  754 $@76: %empty

  755 $@77: %empty

  756 $@78: %empty

  757 $@79: %empty

  758 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

  759 $@80: %empty

  760 $@81: %empty

  761 $@82: %empty

  762 $@83: %empty

  763 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

  764 $@84: %empty

  765 $@85: %empty

  766 $@86: %empty

  767 $@87: %empty

  768 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

  769 make_decl: make_struct_decl
  770          | make_dim_decl
  771          | make_table_decl
  772          | array_comprehension
  773          | make_tuple_call

  774 make_struct_fields: "name" copy_or_move expr
  775                   | "name" ":=" expr
  776                   | make_struct_fields ',' "name" copy_or_move expr
  777                   | make_struct_fields ',' "name" ":=" expr
  778                   | "$f" '(' expr ')' copy_or_move expr
  779                   | "$f" '(' expr ')' ":=" expr
  780                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  781                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  782 make_struct_single: make_struct_fields

  783 make_struct_dim: make_struct_fields
  784                | make_struct_dim "end of expression" make_struct_fields

  785 optional_block: %empty
  786               | "where" expr_block

  787 optional_trailing_semicolon_cur_cur: "end of code block" "end of code block"
  788                                    | ";}}"

  789 optional_trailing_semicolon_cur_sqr: "end of code block" ']'
  790                                    | ";}]"

  791 optional_trailing_semicolon_sqr_sqr: ']' ']'
  792                                    | ";]]"

  793 optional_trailing_delim_sqr_sqr: ']' ']'
  794                                | ";]]"
  795                                | ",]]"

  796 optional_trailing_delim_cur_sqr: "end of code block" ']'
  797                                | ";}]"
  798                                | ",}]"

  799 use_initializer: %empty
  800                | "uninitialized"

  801 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  802                 | "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  803                 | "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  804                 | "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  805                 | "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  806                 | "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

  807 $@88: %empty

  808 $@89: %empty

  809 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' use_initializer make_struct_dim ')'

  810 $@90: %empty

  811 $@91: %empty

  812 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer make_struct_dim ')'

  813 $@92: %empty

  814 $@93: %empty

  815 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 '(' make_struct_dim ')'

  816 $@94: %empty

  817 $@95: %empty

  818 make_struct_decl: "default" '<' $@94 type_declaration_no_options '>' $@95 use_initializer

  819 make_tuple: expr
  820           | expr "=>" expr
  821           | make_tuple ',' expr

  822 make_map_tuple: expr "=>" expr
  823               | expr

  824 make_tuple_call: "tuple" '(' expr_list optional_comma ')'

  825 $@96: %empty

  826 $@97: %empty

  827 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' use_initializer make_struct_dim ')'

  828 make_dim: make_tuple
  829         | make_dim "end of expression" make_tuple

  830 make_dim_decl: '[' expr_list optional_comma ']'
  831              | "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  832              | "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr

  833 $@98: %empty

  834 $@99: %empty

  835 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' $@99 '(' use_initializer make_struct_dim ')'

  836 $@100: %empty

  837 $@101: %empty

  838 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer make_struct_dim ')'

  839 $@102: %empty

  840 $@103: %empty

  841 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options '>' $@103 '(' make_struct_dim ')'
  842              | "array" '(' expr_list optional_comma ')'

  843 $@104: %empty

  844 $@105: %empty

  845 make_dim_decl: "array" '<' $@104 type_declaration_no_options '>' $@105 '(' expr_list optional_comma ')'
  846              | "fixed_array" '(' expr_list optional_comma ')'

  847 $@106: %empty

  848 $@107: %empty

  849 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' $@107 '(' expr_list optional_comma ')'

  850 make_table: make_map_tuple
  851           | make_table "end of expression" make_map_tuple

  852 expr_map_tuple_list: make_map_tuple
  853                    | expr_map_tuple_list ',' make_map_tuple

  854 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma "end of code block"
  855                | "{{" make_table optional_trailing_semicolon_cur_cur
  856                | "table" '(' expr_map_tuple_list optional_comma ')'
  857                | "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'
  858                | "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

  859 array_comprehension_where: %empty
  860                          | "end of expression" "where" expr

  861 optional_comma: %empty
  862               | ','

  863 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  864                    | '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  865                    | "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']'
  866                    | "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'
  867                    | "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"
  868                    | "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 111 127 428
    '#' (35) 705 707 753
    '$' (36) 20 330 696 698
    '%' (37) 35 42 147 440
    '&' (38) 155 333 447 560 569 703 704 709
    '(' (40) 100 109 115 122 123 250 274 275 276 302 304 319 320 321 322 323 324 393 394 395 396 398 408 409 413 414 415 416 417 458 468 469 470 471 500 502 503 504 505 506 508 509 510 511 512 513 514 515 516 517 541 571 631 672 673 695 696 698 778 779 780 781 803 804 806 809 812 815 824 827 835 838 841 842 845 846 849 856 857 858
    ')' (41) 100 109 115 122 123 250 274 275 276 302 304 319 320 321 322 323 324 393 394 395 396 398 408 409 413 414 415 416 417 458 468 469 470 471 500 502 503 504 505 506 508 509 510 511 512 513 514 515 516 517 541 571 631 672 673 695 696 698 778 779 780 781 803 804 806 809 812 815 824 827 835 838 841 842 845 846 849 856 857 858
    '*' (42) 145 438 467
    '+' (43) 143 430 436
    ',' (44) 51 89 102 118 300 326 338 394 573 574 633 634 776 777 780 781 821 853 862
    '-' (45) 144 431 437 699 702 704 707
    '.' (46) 43 172 174 175 406 407 408 409 412 460 462 464 510 512 513
    '/' (47) 44 146 439
    ':' (58) 53 54 125 301 302 473 545 551 561 562 575 576 577 614 616
    "end of expression" (59) 15 16 74 222 226 227 234 235 240 241 242 252 283 288 301 302 303 304 321 324 534 536 539 543 547 549 550 553 555 556 575 576 578 592 593 594 600 601 604 675 677 678 683 784 829 851 858 860 863 864 865 866 867 868
    '<' (60) 148 255 258 271 309 312 315 318 320 321 323 324 402 405 441 470 471 476 482 487 681 694 698 713 717 720 723 727 730 734 737 741 744 747 750 809 812 815 818 827 835 838 841 845 849 857 858
    '=' (61) 81 93 94 95 96 97 98 100 334 354 376 557 565 594 599
    '>' (62) 149 255 258 271 309 312 315 318 320 321 323 324 402 405 442 470 471 476 482 487 681 694 698 713 717 720 723 727 730 734 737 741 744 747 750 809 812 815 818 827 835 838 841 845 849 857 858
    '?' (63) 184 185 473 484 487 488 515 710
    '@' (64) 103 104 331 332 399 402 405 517
    '[' (91) 120 170 393 394 459 460 539 684 685 691 699 830 863 864
    ']' (93) 120 170 171 301 303 340 393 394 459 460 461 462 519 539 684 685 691 699 789 791 793 796 830 863 864 865 866
    '^' (94) 157 449
    "begin of code block" (123) 218 219 588 602 611 614 626 758 763 768 854 867
    '|' (124) 156 448 752 753
    "end of code block" (125) 218 219 588 602 611 614 626 758 763 768 787 789 796 854 866 867 868
    '~' (126) 128 429
    error (256) 245 412
    "lexer error" (258)
    "struct" (259) 621 809 835
    "class" (260) 620 812
    "let" (261) 292 295
    "def" (262) 211 536 538
    "while" (263) 78
    "if" (264) 62 74
    "static_if" (265) 63
    "else" (266) 60 66
    "for" (267) 76 863 864 865 866 867 868
    "recover" (268) 291
    "true" (269) 86 97 424
    "false" (270) 87 98 425
    "new" (271) 273 274 275 276 277
    "typeinfo" (272) 319 320 321 322 323 324
    "type" (273) 91 318 476 482 487 694
    "in" (274) 76 92 863 864 865 866 867 868
    "is" (275) 180 182 476 477 478 516
    "as" (276) 46 181 183 184 185 479 482 483 484 487 488 514 515
    "elif" (277) 57
    "static_elif" (278) 58
    "array" (279) 717 835 838 841 842 845
    "return" (280) 280 281 282 284 285
    "null" (281) 418
    "break" (282) 278
    "try" (283) 291
    "options" (284) 36
    "table" (285) 720 856 857 858
    "expect" (286) 49
    "const" (287) 525 701 702 708
    "require" (288) 37 106
    "operator" (289) 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185
    "enum" (290) 611 614
    "finally" (291) 219
    "delete" (292) 178 267 268
    "deref" (293) 468
    "typedef" (294) 602 604
    "typedecl" (295) 695
    "with" (296) 79
    "aka" (297) 572 574 632 634
    "assume" (298) 81
    "cast" (299) 309
    "override" (300) 522
    "abstract" (301) 536
    "upcast" (302) 312
    "iterator" (303) 723 864
    "var" (304) 293 296
    "addr" (305) 469
    "continue" (306) 279
    "where" (307) 786 860
    "pass" (308) 242
    "reinterpret" (309) 315
    "module" (310) 22
    "public" (311) 18 48 214 527 587 597 607 624
    "label" (312) 54 55
    "goto" (313) 55 56
    "implicit" (314) 706
    "explicit" (315) 268 700
    "shared" (316) 584
    "private" (317) 19 107 213 528 586 596 606 623
    "smart_ptr" (318) 713
    "unsafe" (319) 77 500
    "inscope" (320) 297
    "static" (321) 530
    "fixed_array" (322) 846 849
    "default" (323) 818
    "uninitialized" (324) 800
    "bool" (325) 186 635
    "void" (326) 655
    "string" (327) 187 636
    "auto" (328) 671 672
    "int" (329) 188 637 662
    "int2" (330) 189 641
    "int3" (331) 190 642
    "int4" (332) 191 643
    "uint" (333) 192 644 665
    "bitfield" (334) 661 681 768
    "uint2" (335) 193 648
    "uint3" (336) 194 649
    "uint4" (337) 195 650
    "float" (338) 196 651
    "float2" (339) 197 652
    "float3" (340) 198 653
    "float4" (341) 199 654
    "range" (342) 200 656
    "urange" (343) 201 657
    "range64" (344) 202 658
    "urange64" (345) 203 659
    "block" (346) 724 727 730
    "int64" (347) 204 640 668
    "uint64" (348) 205 647 669
    "double" (349) 206 660
    "function" (350) 731 734 737
    "lambda" (351) 738 741 744
    "int8" (352) 207 638 663
    "uint8" (353) 208 645 666
    "int16" (354) 209 639 664
    "uint16" (355) 210 646 667
    "tuple" (356) 747 758 824 827 838
    "variant" (357) 750 763 815 841
    "generator" (358) 470 471
    "yield" (359) 286 287 289 290
    "sealed" (360) 523 618
    "+=" (361) 129 363 384
    "-=" (362) 130 364 385
    "/=" (363) 132 366 387
    "*=" (364) 131 365 386
    "%=" (365) 133 367 388
    "&=" (366) 134 357 378
    "|=" (367) 135 358 379
    "^=" (368) 136 359 380
    "<<" (369) 162 432
    ">>" (370) 163 433
    "++" (371) 158 160 454 456
    "--" (372) 159 161 455 457
    "<=" (373) 153 445
    "<<=" (374) 164 368 389
    ">>=" (375) 165 369 390
    ">=" (376) 154 446
    "==" (377) 151 443 708 709
    "!=" (378) 152 444
    "->" (379) 395 396
    "<-" (380) 282 285 287 290 329 335 355 377 558 566
    "??" (381) 179 472 714
    "?." (382) 173 176 463 464 511 513
    "?[" (383) 171 461 462
    "<|" (384) 496
    " <|" (385) 259
    "$ <|" (386) 262 374
    "@ <|" (387) 260 372
    "@@ <|" (388) 261 373
    "|>" (389) 116 497 498
    ":=" (390) 175 177 336 356 567 775 777 779 781
    "<<<" (391) 166 434
    ">>>" (392) 167 435
    "<<<=" (393) 168 370 391
    ">>>=" (394) 169 371 392
    "=>" (395) 328 329 820 822
    "::" (396) 265 266
    "&&" (397) 112 140 450
    "||" (398) 113 141 451
    "^^" (399) 114 142 452
    "&&=" (400) 137 360 381
    "||=" (401) 138 361 382
    "^^=" (402) 139 362 383
    ".." (403) 150 453
    "$$" (404) 502
    "$i" (405) 398 503 571 631
    "$v" (406) 504
    "$b" (407) 505
    "$a" (408) 506 541
    "$t" (409) 673
    "$c" (410) 508 509 517
    "$f" (411) 510 511 512 513 514 515 516 778 779 780 781
    "..." (412) 507
    "[[" (413) 301 303 340 519 801 802 803 804 831 865
    "[{" (414) 805 806 832 866
    "{{" (415) 855 868
    "integer constant" <i> (416) 52 53 54 55 84 95 346
    "long integer constant" <i64> (417) 348
    "unsigned integer constant" <ui> (418) 347
    "unsigned long integer constant" <ui64> (419) 349
    "unsigned int8 constant" <ui> (420) 350
    "floating point constant" <fd> (421) 85 96 351
    "double constant" <d> (422) 352
    "name" <s> (423) 21 38 46 81 83 90 94 126 174 175 176 182 183 185 264 265 266 299 300 320 321 323 324 333 334 335 336 395 396 406 407 408 409 463 464 478 479 484 499 545 551 570 572 573 574 593 594 599 608 619 630 632 633 634 672 674 675 678 758 763 768 774 775 776 777
    "keyword" <s> (424) 39 246 255
    "type function" <s> (425) 40 258
    "start of the string" (426) 27 31
    STRING_CHARACTER <ch> (427) 23 25 32 33
    STRING_CHARACTER_ESC (428) 24 26
    "end of the string" (429) 27 31
    "{" (430) 30
    "}" (431) 30
    "end of failed eader macro" (432)
    ";}}" (433) 788
    ";}]" (434) 790 797
    ";]]" (435) 792 794
    ",]]" (436) 795
    ",}]" (437) 798
    UNARY_MINUS (438)
    UNARY_PLUS (439)
    PRE_INC (440)
    PRE_DEC (441)
    POST_INC (442)
    POST_DEC (443)
    DEREF (444)


Nonterminals, with rules where they appear

    $accept (217)
        on left: 0
    program (218)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    top_level_reader_macro (219)
        on left: 16
        on right: 14
    optional_public_or_private_module <b> (220)
        on left: 17 18 19
        on right: 22
    module_name <s> (221)
        on left: 20 21
        on right: 22
    module_declaration (222)
        on left: 22
        on right: 2
    character_sequence <s> (223)
        on left: 23 24 25 26
        on right: 25 26 27 29
    string_constant <s> (224)
        on left: 27
        on right: 82 93
    string_builder_body <pExpression> (225)
        on left: 28 29 30
        on right: 29 30 31
    string_builder <pExpression> (226)
        on left: 31
        on right: 422
    reader_character_sequence (227)
        on left: 32 33
        on right: 33 35
    expr_reader <pExpression> (228)
        on left: 35
        on right: 16 421
    $@1 (229)
        on left: 34
        on right: 35
    options_declaration (230)
        on left: 36
        on right: 9
    require_declaration (231)
        on left: 37
        on right: 8
    keyword_or_name <s> (232)
        on left: 38 39 40
        on right: 41 43 44
    require_module_name <s> (233)
        on left: 41 42 43 44
        on right: 42 43 44 45 46
    require_module (234)
        on left: 45 46
        on right: 37
    is_public_module <b> (235)
        on left: 47 48
        on right: 45 46
    expect_declaration (236)
        on left: 49
        on right: 7
    expect_list (237)
        on left: 50 51
        on right: 49 51
    expect_error (238)
        on left: 52 53
        on right: 50 51
    expression_label <pExpression> (239)
        on left: 54
        on right: 240
    expression_goto <pExpression> (240)
        on left: 55 56
        on right: 241
    elif_or_static_elif <b> (241)
        on left: 57 58
        on right: 61
    expression_else <pExpression> (242)
        on left: 59 60 61
        on right: 61 72
    if_or_static_if <b> (243)
        on left: 62 63
        on right: 72
    expression_else_one_liner <pExpression> (244)
        on left: 64 66
        on right: 74
    $@2 (245)
        on left: 65
        on right: 66
    expression_if_one_liner <pExpression> (246)
        on left: 67 68 69 70 71
        on right: 66 74
    expression_if_then_else <pExpression> (247)
        on left: 72 74
        on right: 238
    $@3 (248)
        on left: 73
        on right: 74
    expression_for_loop <pExpression> (249)
        on left: 76
        on right: 233
    $@4 (250)
        on left: 75
        on right: 76
    expression_unsafe <pExpression> (251)
        on left: 77
        on right: 230
    expression_while_loop <pExpression> (252)
        on left: 78
        on right: 229
    expression_with <pExpression> (253)
        on left: 79
        on right: 231
    expression_with_alias <pExpression> (254)
        on left: 81
        on right: 232
    $@5 (255)
        on left: 80
        on right: 81
    annotation_argument_value <aa> (256)
        on left: 82 83 84 85 86 87
        on right: 88 89
    annotation_argument_value_list <aaList> (257)
        on left: 88 89
        on right: 89 100
    annotation_argument_name <s> (258)
        on left: 90 91 92
        on right: 93 94 95 96 97 98 99 100
    annotation_argument <aa> (259)
        on left: 93 94 95 96 97 98 99 100
        on right: 101 102 103 104
    annotation_argument_list <aaList> (260)
        on left: 101 102
        on right: 36 102 109 519
    metadata_argument_list <aaList> (261)
        on left: 103 104
        on right: 104 520
    annotation_declaration_name <s> (262)
        on left: 105 106 107
        on right: 108 109
    annotation_declaration_basic <fa> (263)
        on left: 108 109
        on right: 110
    annotation_declaration <fa> (264)
        on left: 110 111 112 113 114 115 116
        on right: 111 112 113 114 115 116 117 118
    annotation_list <faList> (265)
        on left: 117 118
        on right: 118 120 539
    optional_annotation_list <faList> (266)
        on left: 119 120
        on right: 211 342 343 345 536 538 611 614 629
    optional_function_argument_list <pVarDeclList> (267)
        on left: 121 122 123
        on right: 215 342 343 345 405 730 737 744
    optional_function_type <pTypeDecl> (268)
        on left: 124 125
        on right: 215 342 343 345 405 730 737 744
    function_name <s> (269)
        on left: 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210
        on right: 215
    global_function_declaration (270)
        on left: 211
        on right: 6
    optional_public_or_private_function <b> (271)
        on left: 212 213 214
        on right: 217
    function_declaration_header <pFuncDecl> (272)
        on left: 215
        on right: 217 536 538
    function_declaration <pFuncDecl> (273)
        on left: 217
        on right: 211
    $@6 (274)
        on left: 216
        on right: 217
    expression_block <pExpression> (275)
        on left: 218 219
        on right: 60 61 72 76 77 78 79 217 246 291 327 341 345 538
    expr_call_pipe <pExpression> (276)
        on left: 220 221
        on right: 263 375
    expression_any <pExpression> (277)
        on left: 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242
        on right: 244
    expressions <pExpression> (278)
        on left: 243 244 245
        on right: 218 219 244 245
    expr_keyword <pExpression> (279)
        on left: 246
        on right: 224
    optional_expr_list <pExpression> (280)
        on left: 247 248
        on right: 250 696 698
    optional_expr_list_in_braces <pExpression> (281)
        on left: 249 250
        on right: 258
    type_declaration_no_options_list <pTypeDeclList> (282)
        on left: 251 252
        on right: 252 255 258 698
    expression_keyword <pExpression> (283)
        on left: 255 258
        on right: 221 501
    $@7 (284)
        on left: 253
        on right: 255
    $@8 (285)
        on left: 254
        on right: 255
    $@9 (286)
        on left: 256
        on right: 258
    $@10 (287)
        on left: 257
        on right: 258
    expr_pipe <pExpression> (288)
        on left: 259 260 261 262 263
        on right: 223 284 285 289 290 564 577 579
    name_in_namespace <s> (289)
        on left: 264 265 266
        on right: 35 105 319 320 321 322 323 324 393 394 397 413 414 415 419 499 616 670 696 698
    expression_delete <pExpression> (290)
        on left: 267 268
        on right: 227
    new_type_declaration <pTypeDecl> (291)
        on left: 271 272
        on right: 273 274 275 276
    $@11 (292)
        on left: 269
        on right: 271
    $@12 (293)
        on left: 270
        on right: 271
    expr_new <pExpression> (294)
        on left: 273 274 275 276 277
        on right: 492
    expression_break <pExpression> (295)
        on left: 278
        on right: 70 234
    expression_continue <pExpression> (296)
        on left: 279
        on right: 71 235
    expression_return_no_pipe <pExpression> (297)
        on left: 280 281 282
        on right: 68 283
    expression_return <pExpression> (298)
        on left: 283 284 285
        on right: 236
    expression_yield_no_pipe <pExpression> (299)
        on left: 286 287
        on right: 69 288
    expression_yield <pExpression> (300)
        on left: 288 289 290
        on right: 237
    expression_try_catch <pExpression> (301)
        on left: 291
        on right: 239
    kwd_let_var_or_nothing <b> (302)
        on left: 292 293 294
        on right: 540
    kwd_let <b> (303)
        on left: 295 296
        on right: 305 306 588 590
    optional_in_scope <b> (304)
        on left: 297 298
        on right: 305 306
    tuple_expansion <pNameList> (305)
        on left: 299 300
        on right: 300 301 302 303 304
    tuple_expansion_variable_declaration <pVarDecl> (306)
        on left: 301 302 303 304
        on right: 306
    expression_let <pExpression> (307)
        on left: 305 306
        on right: 228
    expr_cast <pExpression> (308)
        on left: 309 312 315
        on right: 491
    $@13 (309)
        on left: 307
        on right: 309
    $@14 (310)
        on left: 308
        on right: 309
    $@15 (311)
        on left: 310
        on right: 312
    $@16 (312)
        on left: 311
        on right: 312
    $@17 (313)
        on left: 313
        on right: 315
    $@18 (314)
        on left: 314
        on right: 315
    expr_type_decl <pExpression> (315)
        on left: 318
        on right: 490
    $@19 (316)
        on left: 316
        on right: 318
    $@20 (317)
        on left: 317
        on right: 318
    expr_type_info <pExpression> (318)
        on left: 319 320 321 322 323 324
        on right: 489
    expr_list <pExpression> (319)
        on left: 325 326
        on right: 76 248 275 281 282 326 394 396 409 415 417 458 509 824 830 842 845 846 849 863 864 865 866 867 868
    block_or_simple_block <pExpression> (320)
        on left: 327 328 329
        on right: 342 343
    block_or_lambda <i> (321)
        on left: 330 331 332
        on right: 342 343 345
    capture_entry <pCapt> (322)
        on left: 333 334 335 336
        on right: 337 338
    capture_list <pCaptList> (323)
        on left: 337 338
        on right: 338 340
    optional_capture_list <pCaptList> (324)
        on left: 339 340
        on right: 342 343 345 470 471
    expr_block <pExpression> (325)
        on left: 341 342
        on right: 259 260 261 262 372 373 374 786
    expr_full_block <pExpression> (326)
        on left: 343
        on right: 495
    expr_full_block_assumed_piped <pExpression> (327)
        on left: 345
        on right: 220 221
    $@21 (328)
        on left: 344
        on right: 345
    expr_numeric_const <pExpression> (329)
        on left: 346 347 348 349 350 351 352
        on right: 420
    expr_assign <pExpression> (330)
        on left: 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371
        on right: 226 259
    expr_assign_pipe_right <pExpression> (331)
        on left: 372 373 374 375
        on right: 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392
    expr_assign_pipe <pExpression> (332)
        on left: 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392
        on right: 225
    expr_named_call <pExpression> (333)
        on left: 393 394
        on right: 494
    expr_method_call <pExpression> (334)
        on left: 395 396
        on right: 493
    func_addr_name <pExpression> (335)
        on left: 397 398
        on right: 399 402 405
    func_addr_expr <pExpression> (336)
        on left: 399 402 405
        on right: 465
    $@22 (337)
        on left: 400
        on right: 402
    $@23 (338)
        on left: 401
        on right: 402
    $@24 (339)
        on left: 403
        on right: 405
    $@25 (340)
        on left: 404
        on right: 405
    expr_field <pExpression> (341)
        on left: 406 407 408 409 412
        on right: 426
    $@26 (342)
        on left: 410
        on right: 412
    $@27 (343)
        on left: 411
        on right: 412
    expr_call <pExpression> (344)
        on left: 413 414 415 416 417
        on right: 466
    expr <pExpression> (345)
        on left: 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 476 477 478 479 482 483 484 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501
        on right: 30 56 61 67 72 74 78 79 81 220 246 255 267 268 286 287 301 302 303 304 309 312 315 319 320 321 322 323 324 325 326 328 329 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 395 396 398 406 407 408 409 412 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 459 460 461 462 463 464 467 468 469 471 472 473 476 477 478 479 482 483 484 487 488 496 497 498 500 502 503 504 505 506 508 509 510 511 512 513 514 515 516 517 541 562 563 571 576 578 594 631 673 684 685 695 774 775 776 777 778 779 780 781 819 820 821 822 823 860 863 864 865 866
    $@28 (346)
        on left: 474
        on right: 476
    $@29 (347)
        on left: 475
        on right: 476
    $@30 (348)
        on left: 480
        on right: 482
    $@31 (349)
        on left: 481
        on right: 482
    $@32 (350)
        on left: 485
        on right: 487
    $@33 (351)
        on left: 486
        on right: 487
    expr_mtag <pExpression> (352)
        on left: 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517
        on right: 427
    optional_field_annotation <aaList> (353)
        on left: 518 519 520
        on right: 531 540 582 590
    optional_override <i> (354)
        on left: 521 522 523
        on right: 531 538
    optional_constant <b> (355)
        on left: 524 525
        on right: 536 538
    optional_public_or_private_member_variable <b> (356)
        on left: 526 527 528
        on right: 531 536 538
    optional_static_member_variable <b> (357)
        on left: 529 530
        on right: 531 538
    structure_variable_declaration <pVarDecl> (358)
        on left: 531
        on right: 534
    struct_variable_declaration_list <pVarDeclList> (359)
        on left: 532 534 536 538 539
        on right: 534 536 538 539 626
    $@34 (360)
        on left: 533
        on right: 534
    $@35 (361)
        on left: 535
        on right: 536
    $@36 (362)
        on left: 537
        on right: 538
    function_argument_declaration <pVarDecl> (363)
        on left: 540 541
        on right: 542 543
    function_argument_list <pVarDeclList> (364)
        on left: 542 543
        on right: 123 543
    tuple_type <pVarDecl> (365)
        on left: 544 545
        on right: 546 547 550
    tuple_type_list <pVarDeclList> (366)
        on left: 546 547
        on right: 547 747
    tuple_alias_type_list <pVarDeclList> (367)
        on left: 548 549 550
        on right: 549 550 758
    variant_type <pVarDecl> (368)
        on left: 551
        on right: 552 553 556
    variant_type_list <pVarDeclList> (369)
        on left: 552 553
        on right: 553 750
    variant_alias_type_list <pVarDeclList> (370)
        on left: 554 555 556
        on right: 555 556 763
    copy_or_move <b> (371)
        on left: 557 558
        on right: 562 563 564 774 776 778 780
    variable_declaration <pVarDecl> (372)
        on left: 559 560 561 562 563 564
        on right: 531 540
    copy_or_move_or_clone <i> (373)
        on left: 565 566 567
        on right: 301 302 303 304 576 577 578 579
    optional_ref <b> (374)
        on left: 568 569
        on right: 303 304 578 579
    let_variable_name_with_pos_list <pNameWithPosList> (375)
        on left: 570 571 572 573 574
        on right: 573 574 575 576 577 578 579
    let_variable_declaration <pVarDecl> (376)
        on left: 575 576 577 578 579
        on right: 305 582 590
    global_variable_declaration_list <pVarDeclList> (377)
        on left: 580 582
        on right: 582 588
    $@37 (378)
        on left: 581
        on right: 582
    optional_shared <b> (379)
        on left: 583 584
        on right: 22 588 590
    optional_public_or_private_variable <b> (380)
        on left: 585 586 587
        on right: 588 590
    global_let (381)
        on left: 588 590
        on right: 5
    $@38 (382)
        on left: 589
        on right: 590
    enum_list <pEnum> (383)
        on left: 591 592 593 594
        on right: 592 593 594 611 614
    optional_public_or_private_alias <b> (384)
        on left: 595 596 597
        on right: 599 758 763 768
    single_alias (385)
        on left: 599
        on right: 600 601 604
    $@39 (386)
        on left: 598
        on right: 599
    alias_list (387)
        on left: 600 601
        on right: 601 602
    alias_declaration (388)
        on left: 602 604
        on right: 10
    $@40 (389)
        on left: 603
        on right: 604
    optional_public_or_private_enum <b> (390)
        on left: 605 606 607
        on right: 611 614
    enum_name <pEnum> (391)
        on left: 608
        on right: 611 614
    enum_declaration (392)
        on left: 611 614
        on right: 4
    $@41 (393)
        on left: 609
        on right: 611
    $@42 (394)
        on left: 610
        on right: 611
    $@43 (395)
        on left: 612
        on right: 614
    $@44 (396)
        on left: 613
        on right: 614
    optional_structure_parent <s> (397)
        on left: 615 616
        on right: 619
    optional_sealed <b> (398)
        on left: 617 618
        on right: 619
    structure_name <pStructure> (399)
        on left: 619
        on right: 629
    class_or_struct <b> (400)
        on left: 620 621
        on right: 629
    optional_public_or_private_structure <b> (401)
        on left: 622 623 624
        on right: 629
    optional_struct_variable_declaration_list <pVarDeclList> (402)
        on left: 625 626
        on right: 629
    structure_declaration (403)
        on left: 629
        on right: 3
    $@45 (404)
        on left: 627
        on right: 629
    $@46 (405)
        on left: 628
        on right: 629
    variable_name_with_pos_list <pNameWithPosList> (406)
        on left: 630 631 632 633 634
        on right: 76 559 560 561 562 563 564 633 634 863 864 865 866 867 868
    basic_type_declaration <type> (407)
        on left: 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661
        on right: 416 417 477 483 488 498 686
    enum_basic_type_declaration <type> (408)
        on left: 662 663 664 665 666 667 668 669
        on right: 614
    structure_type_declaration <pTypeDecl> (409)
        on left: 670
        on right: 272 689
    auto_type_declaration <pTypeDecl> (410)
        on left: 671 672 673
        on right: 687
    bitfield_bits <pNameList> (411)
        on left: 674 675
        on right: 675 681
    bitfield_alias_bits <pNameList> (412)
        on left: 676 677 678
        on right: 677 678 768
    bitfield_type_declaration <pTypeDecl> (413)
        on left: 681
        on right: 688
    $@47 (414)
        on left: 679
        on right: 681
    $@48 (415)
        on left: 680
        on right: 681
    table_type_pair <aTypePair> (416)
        on left: 682 683
        on right: 720
    dim_list <pTypeDecl> (417)
        on left: 684 685
        on right: 685 690
    type_declaration_no_options <pTypeDecl> (418)
        on left: 686 687 688 689 690 691 694 695 696 698 699 700 701 702 703 704 705 706 707 708 709 710 713 714 717 720 723 724 727 730 731 734 737 738 741 744 747 750
        on right: 301 302 309 312 315 402 470 471 476 575 576 577 690 691 699 700 701 702 703 704 705 706 707 708 709 710 714 751 752 801 802 803 804 805 806 809 812 815 818 827 831 832 835 838 841 845 849 857 858
    $@49 (419)
        on left: 692
        on right: 694
    $@50 (420)
        on left: 693
        on right: 694
    $@51 (421)
        on left: 697
        on right: 698
    $@52 (422)
        on left: 711
        on right: 713
    $@53 (423)
        on left: 712
        on right: 713
    $@54 (424)
        on left: 715
        on right: 717
    $@55 (425)
        on left: 716
        on right: 717
    $@56 (426)
        on left: 718
        on right: 720
    $@57 (427)
        on left: 719
        on right: 720
    $@58 (428)
        on left: 721
        on right: 723
    $@59 (429)
        on left: 722
        on right: 723
    $@60 (430)
        on left: 725
        on right: 727
    $@61 (431)
        on left: 726
        on right: 727
    $@62 (432)
        on left: 728
        on right: 730
    $@63 (433)
        on left: 729
        on right: 730
    $@64 (434)
        on left: 732
        on right: 734
    $@65 (435)
        on left: 733
        on right: 734
    $@66 (436)
        on left: 735
        on right: 737
    $@67 (437)
        on left: 736
        on right: 737
    $@68 (438)
        on left: 739
        on right: 741
    $@69 (439)
        on left: 740
        on right: 741
    $@70 (440)
        on left: 742
        on right: 744
    $@71 (441)
        on left: 743
        on right: 744
    $@72 (442)
        on left: 745
        on right: 747
    $@73 (443)
        on left: 746
        on right: 747
    $@74 (444)
        on left: 748
        on right: 750
    $@75 (445)
        on left: 749
        on right: 750
    type_declaration <pTypeDecl> (446)
        on left: 751 752 753
        on right: 125 251 252 271 318 482 487 544 545 551 561 562 599 682 683 694 713 717 723 727 734 741 752 753
    tuple_alias_declaration (447)
        on left: 758
        on right: 12
    $@76 (448)
        on left: 754
        on right: 758
    $@77 (449)
        on left: 755
        on right: 758
    $@78 (450)
        on left: 756
        on right: 758
    $@79 (451)
        on left: 757
        on right: 758
    variant_alias_declaration (452)
        on left: 763
        on right: 11
    $@80 (453)
        on left: 759
        on right: 763
    $@81 (454)
        on left: 760
        on right: 763
    $@82 (455)
        on left: 761
        on right: 763
    $@83 (456)
        on left: 762
        on right: 763
    bitfield_alias_declaration (457)
        on left: 768
        on right: 13
    $@84 (458)
        on left: 764
        on right: 768
    $@85 (459)
        on left: 765
        on right: 768
    $@86 (460)
        on left: 766
        on right: 768
    $@87 (461)
        on left: 767
        on right: 768
    make_decl <pExpression> (462)
        on left: 769 770 771 772 773
        on right: 277 423
    make_struct_fields <pMakeStruct> (463)
        on left: 774 775 776 777 778 779 780 781
        on right: 393 394 776 777 780 781 782 783 784
    make_struct_single <pExpression> (464)
        on left: 782
        on right: 276 414
    make_struct_dim <pExpression> (465)
        on left: 783 784
        on right: 784 801 804 805 806 809 812 815 827 835 838 841
    optional_block <pExpression> (466)
        on left: 785 786
        on right: 801 802 803 804 805 806
    optional_trailing_semicolon_cur_cur (467)
        on left: 787 788
        on right: 855
    optional_trailing_semicolon_cur_sqr (468)
        on left: 789 790
        on right: 832
    optional_trailing_semicolon_sqr_sqr (469)
        on left: 791 792
        on right: 831
    optional_trailing_delim_sqr_sqr (470)
        on left: 793 794 795
        on right: 801 802 803 804
    optional_trailing_delim_cur_sqr (471)
        on left: 796 797 798
        on right: 805 806
    use_initializer <b> (472)
        on left: 799 800
        on right: 274 276 809 812 818 827 835 838
    make_struct_decl <pExpression> (473)
        on left: 801 802 803 804 805 806 809 812 815 818
        on right: 769
    $@88 (474)
        on left: 807
        on right: 809
    $@89 (475)
        on left: 808
        on right: 809
    $@90 (476)
        on left: 810
        on right: 812
    $@91 (477)
        on left: 811
        on right: 812
    $@92 (478)
        on left: 813
        on right: 815
    $@93 (479)
        on left: 814
        on right: 815
    $@94 (480)
        on left: 816
        on right: 818
    $@95 (481)
        on left: 817
        on right: 818
    make_tuple <pExpression> (482)
        on left: 819 820 821
        on right: 821 828 829
    make_map_tuple <pExpression> (483)
        on left: 822 823
        on right: 850 851 852 853 867 868
    make_tuple_call <pExpression> (484)
        on left: 824 827
        on right: 773
    $@96 (485)
        on left: 825
        on right: 827
    $@97 (486)
        on left: 826
        on right: 827
    make_dim <pExpression> (487)
        on left: 828 829
        on right: 829 831 832
    make_dim_decl <pExpression> (488)
        on left: 830 831 832 835 838 841 842 845 846 849
        on right: 770
    $@98 (489)
        on left: 833
        on right: 835
    $@99 (490)
        on left: 834
        on right: 835
    $@100 (491)
        on left: 836
        on right: 838
    $@101 (492)
        on left: 837
        on right: 838
    $@102 (493)
        on left: 839
        on right: 841
    $@103 (494)
        on left: 840
        on right: 841
    $@104 (495)
        on left: 843
        on right: 845
    $@105 (496)
        on left: 844
        on right: 845
    $@106 (497)
        on left: 847
        on right: 849
    $@107 (498)
        on left: 848
        on right: 849
    make_table <pExpression> (499)
        on left: 850 851
        on right: 851 855
    expr_map_tuple_list <pExpression> (500)
        on left: 852 853
        on right: 853 854 856 857 858
    make_table_decl <pExpression> (501)
        on left: 854 855 856 857 858
        on right: 771
    array_comprehension_where <pExpression> (502)
        on left: 859 860
        on right: 863 864 865 866 867 868
    optional_comma <b> (503)
        on left: 861 862
        on right: 458 824 830 842 845 846 849 854 856 857 858
    array_comprehension <pExpression> (504)
        on left: 863 864 865 866 867 868
        on right: 772


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration
    9        | program . options_declaration
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . tuple_alias_declaration
   13        | program . bitfield_alias_declaration
   14        | program . top_level_reader_macro
   15        | program . "end of expression"

    $end                 shift, and go to state 2
    "let"                shift, and go to state 3
    "options"            shift, and go to state 4
    "expect"             shift, and go to state 5
    "require"            shift, and go to state 6
    "typedef"            shift, and go to state 7
    "var"                shift, and go to state 8
    "module"             shift, and go to state 9
    "bitfield"           shift, and go to state 10
    "tuple"              shift, and go to state 11
    "variant"            shift, and go to state 12
    "end of expression"  shift, and go to state 13
    '%'                  shift, and go to state 14
    '['                  shift, and go to state 15

    $default  reduce using rule 119 (optional_annotation_list)

    top_level_reader_macro       go to state 16
    module_declaration           go to state 17
    expr_reader                  go to state 18
    options_declaration          go to state 19
    require_declaration          go to state 20
    expect_declaration           go to state 21
    optional_annotation_list     go to state 22
    global_function_declaration  go to state 23
    kwd_let                      go to state 24
    global_let                   go to state 25
    alias_declaration            go to state 26
    enum_declaration             go to state 27
    structure_declaration        go to state 28
    tuple_alias_declaration      go to state 29
    variant_alias_declaration    go to state 30
    bitfield_alias_declaration   go to state 31


State 2

    0 $accept: program $end .

    $default  accept


State 3

  295 kwd_let: "let" .

    $default  reduce using rule 295 (kwd_let)


State 4

   36 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 37


State 5

   49 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 38

    expect_list   go to state 39
    expect_error  go to state 40


State 6

   37 require_declaration: "require" . require_module

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43
    '%'              shift, and go to state 44

    keyword_or_name      go to state 45
    require_module_name  go to state 46
    require_module       go to state 47


State 7

  602 alias_declaration: "typedef" . "begin of code block" alias_list "end of code block"
  604                  | "typedef" . $@40 single_alias "end of expression"

    "begin of code block"  shift, and go to state 48

    $default  reduce using rule 603 ($@40)

    $@40  go to state 49


State 8

  296 kwd_let: "var" .

    $default  reduce using rule 296 (kwd_let)


State 9

   22 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 50
    '$'     shift, and go to state 51

    module_name  go to state 52


State 10

  768 bitfield_alias_declaration: "bitfield" . optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 595 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 55


State 11

  758 tuple_alias_declaration: "tuple" . optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 595 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 56


State 12

  763 variant_alias_declaration: "variant" . optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 595 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 57


State 13

   15 program: program "end of expression" .

    $default  reduce using rule 15 (program)


State 14

   35 expr_reader: '%' . name_in_namespace $@1 reader_character_sequence

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 60


State 15

  120 optional_annotation_list: '[' . annotation_list ']'

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 68
    annotation_list               go to state 69
    name_in_namespace             go to state 70


State 16

   14 program: program top_level_reader_macro .

    $default  reduce using rule 14 (program)


State 17

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 18

   16 top_level_reader_macro: expr_reader . "end of expression"

    "end of expression"  shift, and go to state 71


State 19

    9 program: program options_declaration .

    $default  reduce using rule 9 (program)


State 20

    8 program: program require_declaration .

    $default  reduce using rule 8 (program)


State 21

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 22

  211 global_function_declaration: optional_annotation_list . "def" function_declaration
  611 enum_declaration: optional_annotation_list . "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list $@42 "end of code block"
  614                 | optional_annotation_list . "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"
  629 structure_declaration: optional_annotation_list . class_or_struct optional_public_or_private_structure $@45 structure_name $@46 optional_struct_variable_declaration_list

    "struct"  shift, and go to state 72
    "class"   shift, and go to state 73
    "def"     shift, and go to state 74
    "enum"    shift, and go to state 75

    class_or_struct  go to state 76


State 23

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 24

  588 global_let: kwd_let . optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"
  590           | kwd_let . optional_shared optional_public_or_private_variable $@38 optional_field_annotation let_variable_declaration

    "shared"  shift, and go to state 77

    $default  reduce using rule 583 (optional_shared)

    optional_shared  go to state 78


State 25

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 26

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 27

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 28

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 29

   12 program: program tuple_alias_declaration .

    $default  reduce using rule 12 (program)


State 30

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 31

   13 program: program bitfield_alias_declaration .

    $default  reduce using rule 13 (program)


State 32

   91 annotation_argument_name: "type" .

    $default  reduce using rule 91 (annotation_argument_name)


State 33

   92 annotation_argument_name: "in" .

    $default  reduce using rule 92 (annotation_argument_name)


State 34

   90 annotation_argument_name: "name" .

    $default  reduce using rule 90 (annotation_argument_name)


State 35

   93 annotation_argument: annotation_argument_name . '=' string_constant
   94                    | annotation_argument_name . '=' "name"
   95                    | annotation_argument_name . '=' "integer constant"
   96                    | annotation_argument_name . '=' "floating point constant"
   97                    | annotation_argument_name . '=' "true"
   98                    | annotation_argument_name . '=' "false"
   99                    | annotation_argument_name .
  100                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 79

    $default  reduce using rule 99 (annotation_argument)


State 36

  101 annotation_argument_list: annotation_argument .

    $default  reduce using rule 101 (annotation_argument_list)


State 37

   36 options_declaration: "options" annotation_argument_list .
  102 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 80

    $default  reduce using rule 36 (options_declaration)


State 38

   52 expect_error: "integer constant" .
   53             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 81

    $default  reduce using rule 52 (expect_error)


State 39

   49 expect_declaration: "expect" expect_list .
   51 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 82

    $default  reduce using rule 49 (expect_declaration)


State 40

   50 expect_list: expect_error .

    $default  reduce using rule 50 (expect_list)


State 41

   38 keyword_or_name: "name" .

    $default  reduce using rule 38 (keyword_or_name)


State 42

   39 keyword_or_name: "keyword" .

    $default  reduce using rule 39 (keyword_or_name)


State 43

   40 keyword_or_name: "type function" .

    $default  reduce using rule 40 (keyword_or_name)


State 44

   42 require_module_name: '%' . require_module_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43
    '%'              shift, and go to state 44

    keyword_or_name      go to state 45
    require_module_name  go to state 83


State 45

   41 require_module_name: keyword_or_name .

    $default  reduce using rule 41 (require_module_name)


State 46

   43 require_module_name: require_module_name . '.' keyword_or_name
   44                    | require_module_name . '/' keyword_or_name
   45 require_module: require_module_name . is_public_module
   46               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 84
    "public"  shift, and go to state 85
    '/'       shift, and go to state 86
    '.'       shift, and go to state 87

    $default  reduce using rule 47 (is_public_module)

    is_public_module  go to state 88


State 47

   37 require_declaration: "require" require_module .

    $default  reduce using rule 37 (require_declaration)


State 48

  602 alias_declaration: "typedef" "begin of code block" . alias_list "end of code block"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 595 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 89
    single_alias                      go to state 90
    alias_list                        go to state 91


State 49

  604 alias_declaration: "typedef" $@40 . single_alias "end of expression"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 595 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 89
    single_alias                      go to state 92


State 50

   21 module_name: "name" .

    $default  reduce using rule 21 (module_name)


State 51

   20 module_name: '$' .

    $default  reduce using rule 20 (module_name)


State 52

   22 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 77

    $default  reduce using rule 583 (optional_shared)

    optional_shared  go to state 93


State 53

  597 optional_public_or_private_alias: "public" .

    $default  reduce using rule 597 (optional_public_or_private_alias)


State 54

  596 optional_public_or_private_alias: "private" .

    $default  reduce using rule 596 (optional_public_or_private_alias)


State 55

  768 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias . $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

    $default  reduce using rule 764 ($@84)

    $@84  go to state 94


State 56

  758 tuple_alias_declaration: "tuple" optional_public_or_private_alias . $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

    $default  reduce using rule 754 ($@76)

    $@76  go to state 95


State 57

  763 variant_alias_declaration: "variant" optional_public_or_private_alias . $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

    $default  reduce using rule 759 ($@80)

    $@80  go to state 96


State 58

  266 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 97


State 59

  264 name_in_namespace: "name" .
  265                  | "name" . "::" "name"

    "::"  shift, and go to state 98

    "::"      [reduce using rule 264 (name_in_namespace)]
    $default  reduce using rule 264 (name_in_namespace)


State 60

   35 expr_reader: '%' name_in_namespace . $@1 reader_character_sequence

    $default  reduce using rule 34 ($@1)

    $@1  go to state 99


State 61

  106 annotation_declaration_name: "require" .

    $default  reduce using rule 106 (annotation_declaration_name)


State 62

  107 annotation_declaration_name: "private" .

    $default  reduce using rule 107 (annotation_declaration_name)


State 63

  116 annotation_declaration: "|>" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 100
    name_in_namespace             go to state 70


State 64

  111 annotation_declaration: '!' . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 101
    name_in_namespace             go to state 70


State 65

  115 annotation_declaration: '(' . annotation_declaration ')'

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 102
    name_in_namespace             go to state 70


State 66

  108 annotation_declaration_basic: annotation_declaration_name .
  109                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 103

    $default  reduce using rule 108 (annotation_declaration_basic)


State 67

  110 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 110 (annotation_declaration)


State 68

  112 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  113                       | annotation_declaration . "||" annotation_declaration
  114                       | annotation_declaration . "^^" annotation_declaration
  117 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 104
    "||"  shift, and go to state 105
    "^^"  shift, and go to state 106

    $default  reduce using rule 117 (annotation_list)


State 69

  118 annotation_list: annotation_list . ',' annotation_declaration
  120 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 107
    ']'  shift, and go to state 108


State 70

  105 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 105 (annotation_declaration_name)


State 71

   16 top_level_reader_macro: expr_reader "end of expression" .

    $default  reduce using rule 16 (top_level_reader_macro)


State 72

  621 class_or_struct: "struct" .

    $default  reduce using rule 621 (class_or_struct)


State 73

  620 class_or_struct: "class" .

    $default  reduce using rule 620 (class_or_struct)


State 74

  211 global_function_declaration: optional_annotation_list "def" . function_declaration

    "public"   shift, and go to state 109
    "private"  shift, and go to state 110

    $default  reduce using rule 212 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 111
    function_declaration                 go to state 112


State 75

  611 enum_declaration: optional_annotation_list "enum" . optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list $@42 "end of code block"
  614                 | optional_annotation_list "enum" . optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"

    "public"   shift, and go to state 113
    "private"  shift, and go to state 114

    $default  reduce using rule 605 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 115


State 76

  629 structure_declaration: optional_annotation_list class_or_struct . optional_public_or_private_structure $@45 structure_name $@46 optional_struct_variable_declaration_list

    "public"   shift, and go to state 116
    "private"  shift, and go to state 117

    $default  reduce using rule 622 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 118


State 77

  584 optional_shared: "shared" .

    $default  reduce using rule 584 (optional_shared)


State 78

  588 global_let: kwd_let optional_shared . optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"
  590           | kwd_let optional_shared . optional_public_or_private_variable $@38 optional_field_annotation let_variable_declaration

    "public"   shift, and go to state 119
    "private"  shift, and go to state 120

    $default  reduce using rule 585 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 121


State 79

   93 annotation_argument: annotation_argument_name '=' . string_constant
   94                    | annotation_argument_name '=' . "name"
   95                    | annotation_argument_name '=' . "integer constant"
   96                    | annotation_argument_name '=' . "floating point constant"
   97                    | annotation_argument_name '=' . "true"
   98                    | annotation_argument_name '=' . "false"
  100                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 122
    "false"                    shift, and go to state 123
    "integer constant"         shift, and go to state 124
    "floating point constant"  shift, and go to state 125
    "name"                     shift, and go to state 126
    "start of the string"      shift, and go to state 127
    '('                        shift, and go to state 128

    string_constant  go to state 129


State 80

  102 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 130


State 81

   53 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 131


State 82

   51 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 38

    expect_error  go to state 132


State 83

   42 require_module_name: '%' require_module_name .
   43                    | require_module_name . '.' keyword_or_name
   44                    | require_module_name . '/' keyword_or_name

    '.'  shift, and go to state 87

    $default  reduce using rule 42 (require_module_name)


State 84

   46 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 133


State 85

   48 is_public_module: "public" .

    $default  reduce using rule 48 (is_public_module)


State 86

   44 require_module_name: require_module_name '/' . keyword_or_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43

    keyword_or_name  go to state 134


State 87

   43 require_module_name: require_module_name '.' . keyword_or_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43

    keyword_or_name  go to state 135


State 88

   45 require_module: require_module_name is_public_module .

    $default  reduce using rule 45 (require_module)


State 89

  599 single_alias: optional_public_or_private_alias . "name" $@39 '=' type_declaration

    "name"  shift, and go to state 136


State 90

  600 alias_list: single_alias . "end of expression"

    "end of expression"  shift, and go to state 137


State 91

  601 alias_list: alias_list . single_alias "end of expression"
  602 alias_declaration: "typedef" "begin of code block" alias_list . "end of code block"

    "public"             shift, and go to state 53
    "private"            shift, and go to state 54
    "end of code block"  shift, and go to state 138

    $default  reduce using rule 595 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 89
    single_alias                      go to state 139


State 92

  604 alias_declaration: "typedef" $@40 single_alias . "end of expression"

    "end of expression"  shift, and go to state 140


State 93

   22 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 141
    "private"  shift, and go to state 142

    $default  reduce using rule 17 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 143


State 94

  768 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 . "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

    "name"  shift, and go to state 144


State 95

  758 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 . "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

    "name"  shift, and go to state 145


State 96

  763 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 . "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

    "name"  shift, and go to state 146


State 97

  266 name_in_namespace: "::" "name" .

    $default  reduce using rule 266 (name_in_namespace)


State 98

  265 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 147


State 99

   35 expr_reader: '%' name_in_namespace $@1 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 148

    reader_character_sequence  go to state 149


State 100

  112 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  113                       | annotation_declaration . "||" annotation_declaration
  114                       | annotation_declaration . "^^" annotation_declaration
  116                       | "|>" annotation_declaration .

    $default  reduce using rule 116 (annotation_declaration)


State 101

  111 annotation_declaration: '!' annotation_declaration .
  112                       | annotation_declaration . "&&" annotation_declaration
  113                       | annotation_declaration . "||" annotation_declaration
  114                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 111 (annotation_declaration)


State 102

  112 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  113                       | annotation_declaration . "||" annotation_declaration
  114                       | annotation_declaration . "^^" annotation_declaration
  115                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 104
    "||"  shift, and go to state 105
    "^^"  shift, and go to state 106
    ')'   shift, and go to state 150


State 103

  109 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 151


State 104

  112 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 152
    name_in_namespace             go to state 70


State 105

  113 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 153
    name_in_namespace             go to state 70


State 106

  114 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 154
    name_in_namespace             go to state 70


State 107

  118 annotation_list: annotation_list ',' . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 155
    name_in_namespace             go to state 70


State 108

  120 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 120 (optional_annotation_list)


State 109

  214 optional_public_or_private_function: "public" .

    $default  reduce using rule 214 (optional_public_or_private_function)


State 110

  213 optional_public_or_private_function: "private" .

    $default  reduce using rule 213 (optional_public_or_private_function)


State 111

  217 function_declaration: optional_public_or_private_function . $@6 function_declaration_header expression_block

    $default  reduce using rule 216 ($@6)

    $@6  go to state 156


State 112

  211 global_function_declaration: optional_annotation_list "def" function_declaration .

    $default  reduce using rule 211 (global_function_declaration)


State 113

  607 optional_public_or_private_enum: "public" .

    $default  reduce using rule 607 (optional_public_or_private_enum)


State 114

  606 optional_public_or_private_enum: "private" .

    $default  reduce using rule 606 (optional_public_or_private_enum)


State 115

  611 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum . enum_name "begin of code block" $@41 enum_list $@42 "end of code block"
  614                 | optional_annotation_list "enum" optional_public_or_private_enum . enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"

    "name"  shift, and go to state 157

    enum_name  go to state 158


State 116

  624 optional_public_or_private_structure: "public" .

    $default  reduce using rule 624 (optional_public_or_private_structure)


State 117

  623 optional_public_or_private_structure: "private" .

    $default  reduce using rule 623 (optional_public_or_private_structure)


State 118

  629 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure . $@45 structure_name $@46 optional_struct_variable_declaration_list

    $default  reduce using rule 627 ($@45)

    $@45  go to state 159


State 119

  587 optional_public_or_private_variable: "public" .

    $default  reduce using rule 587 (optional_public_or_private_variable)


State 120

  586 optional_public_or_private_variable: "private" .

    $default  reduce using rule 586 (optional_public_or_private_variable)


State 121

  588 global_let: kwd_let optional_shared optional_public_or_private_variable . "begin of code block" global_variable_declaration_list "end of code block"
  590           | kwd_let optional_shared optional_public_or_private_variable . $@38 optional_field_annotation let_variable_declaration

    "begin of code block"  shift, and go to state 160

    $default  reduce using rule 589 ($@38)

    $@38  go to state 161


State 122

   97 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 97 (annotation_argument)


State 123

   98 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 98 (annotation_argument)


State 124

   95 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 95 (annotation_argument)


State 125

   96 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 96 (annotation_argument)


State 126

   94 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 94 (annotation_argument)


State 127

   27 string_constant: "start of the string" . character_sequence "end of the string"

    STRING_CHARACTER      shift, and go to state 162
    STRING_CHARACTER_ESC  shift, and go to state 163

    character_sequence  go to state 164


State 128

  100 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 165
    "false"                    shift, and go to state 166
    "integer constant"         shift, and go to state 167
    "floating point constant"  shift, and go to state 168
    "name"                     shift, and go to state 169
    "start of the string"      shift, and go to state 127

    string_constant                 go to state 170
    annotation_argument_value       go to state 171
    annotation_argument_value_list  go to state 172


State 129

   93 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 93 (annotation_argument)


State 130

  102 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 102 (annotation_argument_list)


State 131

   53 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 53 (expect_error)


State 132

   51 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 51 (expect_list)


State 133

   46 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 85

    $default  reduce using rule 47 (is_public_module)

    is_public_module  go to state 173


State 134

   44 require_module_name: require_module_name '/' keyword_or_name .

    $default  reduce using rule 44 (require_module_name)


State 135

   43 require_module_name: require_module_name '.' keyword_or_name .

    $default  reduce using rule 43 (require_module_name)


State 136

  599 single_alias: optional_public_or_private_alias "name" . $@39 '=' type_declaration

    $default  reduce using rule 598 ($@39)

    $@39  go to state 174


State 137

  600 alias_list: single_alias "end of expression" .

    $default  reduce using rule 600 (alias_list)


State 138

  602 alias_declaration: "typedef" "begin of code block" alias_list "end of code block" .

    $default  reduce using rule 602 (alias_declaration)


State 139

  601 alias_list: alias_list single_alias . "end of expression"

    "end of expression"  shift, and go to state 175


State 140

  604 alias_declaration: "typedef" $@40 single_alias "end of expression" .

    $default  reduce using rule 604 (alias_declaration)


State 141

   18 optional_public_or_private_module: "public" .

    $default  reduce using rule 18 (optional_public_or_private_module)


State 142

   19 optional_public_or_private_module: "private" .

    $default  reduce using rule 19 (optional_public_or_private_module)


State 143

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 22 (module_declaration)


State 144

  768 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" . $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

    $default  reduce using rule 765 ($@85)

    $@85  go to state 176


State 145

  758 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" . $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

    $default  reduce using rule 755 ($@77)

    $@77  go to state 177


State 146

  763 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" . $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

    $default  reduce using rule 760 ($@81)

    $@81  go to state 178


State 147

  265 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 265 (name_in_namespace)


State 148

   32 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 32 (reader_character_sequence)


State 149

   33 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   35 expr_reader: '%' name_in_namespace $@1 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 179

    $default  reduce using rule 35 (expr_reader)


State 150

  115 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 115 (annotation_declaration)


State 151

  102 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  109 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 80
    ')'  shift, and go to state 180


State 152

  112 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  112                       | annotation_declaration "&&" annotation_declaration .
  113                       | annotation_declaration . "||" annotation_declaration
  114                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 112 (annotation_declaration)


State 153

  112 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  113                       | annotation_declaration . "||" annotation_declaration
  113                       | annotation_declaration "||" annotation_declaration .
  114                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 104
    "^^"  shift, and go to state 106

    $default  reduce using rule 113 (annotation_declaration)


State 154

  112 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  113                       | annotation_declaration . "||" annotation_declaration
  114                       | annotation_declaration . "^^" annotation_declaration
  114                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 104

    $default  reduce using rule 114 (annotation_declaration)


State 155

  112 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  113                       | annotation_declaration . "||" annotation_declaration
  114                       | annotation_declaration . "^^" annotation_declaration
  118 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 104
    "||"  shift, and go to state 105
    "^^"  shift, and go to state 106

    $default  reduce using rule 118 (annotation_list)


State 156

  217 function_declaration: optional_public_or_private_function $@6 . function_declaration_header expression_block

    "operator"  shift, and go to state 181
    "bool"      shift, and go to state 182
    "string"    shift, and go to state 183
    "int"       shift, and go to state 184
    "int2"      shift, and go to state 185
    "int3"      shift, and go to state 186
    "int4"      shift, and go to state 187
    "uint"      shift, and go to state 188
    "uint2"     shift, and go to state 189
    "uint3"     shift, and go to state 190
    "uint4"     shift, and go to state 191
    "float"     shift, and go to state 192
    "float2"    shift, and go to state 193
    "float3"    shift, and go to state 194
    "float4"    shift, and go to state 195
    "range"     shift, and go to state 196
    "urange"    shift, and go to state 197
    "range64"   shift, and go to state 198
    "urange64"  shift, and go to state 199
    "int64"     shift, and go to state 200
    "uint64"    shift, and go to state 201
    "double"    shift, and go to state 202
    "int8"      shift, and go to state 203
    "uint8"     shift, and go to state 204
    "int16"     shift, and go to state 205
    "uint16"    shift, and go to state 206
    "++"        shift, and go to state 207
    "--"        shift, and go to state 208
    "name"      shift, and go to state 209

    function_name                go to state 210
    function_declaration_header  go to state 211


State 157

  608 enum_name: "name" .

    $default  reduce using rule 608 (enum_name)


State 158

  611 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name . "begin of code block" $@41 enum_list $@42 "end of code block"
  614                 | optional_annotation_list "enum" optional_public_or_private_enum enum_name . ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"

    "begin of code block"  shift, and go to state 212
    ':'                    shift, and go to state 213


State 159

  629 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 . structure_name $@46 optional_struct_variable_declaration_list

    "sealed"  shift, and go to state 214

    $default  reduce using rule 617 (optional_sealed)

    optional_sealed  go to state 215
    structure_name   go to state 216


State 160

  588 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" . global_variable_declaration_list "end of code block"

    $default  reduce using rule 580 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 217


State 161

  590 global_let: kwd_let optional_shared optional_public_or_private_variable $@38 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 218
    '@'   shift, and go to state 219

    $default  reduce using rule 518 (optional_field_annotation)

    metadata_argument_list     go to state 220
    optional_field_annotation  go to state 221


State 162

   23 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 23 (character_sequence)


State 163

   24 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 24 (character_sequence)


State 164

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   27 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 222
    STRING_CHARACTER_ESC  shift, and go to state 223
    "end of the string"   shift, and go to state 224


State 165

   86 annotation_argument_value: "true" .

    $default  reduce using rule 86 (annotation_argument_value)


State 166

   87 annotation_argument_value: "false" .

    $default  reduce using rule 87 (annotation_argument_value)


State 167

   84 annotation_argument_value: "integer constant" .

    $default  reduce using rule 84 (annotation_argument_value)


State 168

   85 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 85 (annotation_argument_value)


State 169

   83 annotation_argument_value: "name" .

    $default  reduce using rule 83 (annotation_argument_value)


State 170

   82 annotation_argument_value: string_constant .

    $default  reduce using rule 82 (annotation_argument_value)


State 171

   88 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 88 (annotation_argument_value_list)


State 172

   89 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
  100 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 225
    ')'  shift, and go to state 226


State 173

   46 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 46 (require_module)


State 174

  599 single_alias: optional_public_or_private_alias "name" $@39 . '=' type_declaration

    '='  shift, and go to state 227


State 175

  601 alias_list: alias_list single_alias "end of expression" .

    $default  reduce using rule 601 (alias_list)


State 176

  768 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 . "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

    "begin of code block"  shift, and go to state 228


State 177

  758 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 . "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

    "begin of code block"  shift, and go to state 229


State 178

  763 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 . "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

    "begin of code block"  shift, and go to state 230


State 179

   33 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 33 (reader_character_sequence)


State 180

  109 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 109 (annotation_declaration_basic)


State 181

  127 function_name: "operator" . '!'
  128              | "operator" . '~'
  129              | "operator" . "+="
  130              | "operator" . "-="
  131              | "operator" . "*="
  132              | "operator" . "/="
  133              | "operator" . "%="
  134              | "operator" . "&="
  135              | "operator" . "|="
  136              | "operator" . "^="
  137              | "operator" . "&&="
  138              | "operator" . "||="
  139              | "operator" . "^^="
  140              | "operator" . "&&"
  141              | "operator" . "||"
  142              | "operator" . "^^"
  143              | "operator" . '+'
  144              | "operator" . '-'
  145              | "operator" . '*'
  146              | "operator" . '/'
  147              | "operator" . '%'
  148              | "operator" . '<'
  149              | "operator" . '>'
  150              | "operator" . ".."
  151              | "operator" . "=="
  152              | "operator" . "!="
  153              | "operator" . "<="
  154              | "operator" . ">="
  155              | "operator" . '&'
  156              | "operator" . '|'
  157              | "operator" . '^'
  160              | "operator" . "++"
  161              | "operator" . "--"
  162              | "operator" . "<<"
  163              | "operator" . ">>"
  164              | "operator" . "<<="
  165              | "operator" . ">>="
  166              | "operator" . "<<<"
  167              | "operator" . ">>>"
  168              | "operator" . "<<<="
  169              | "operator" . ">>>="
  170              | "operator" . '[' ']'
  171              | "operator" . "?[" ']'
  172              | "operator" . '.'
  173              | "operator" . "?."
  174              | "operator" . '.' "name"
  175              | "operator" . '.' "name" ":="
  176              | "operator" . "?." "name"
  177              | "operator" . ":="
  178              | "operator" . "delete"
  179              | "operator" . "??"
  180              | "operator" . "is"
  181              | "operator" . "as"
  182              | "operator" . "is" "name"
  183              | "operator" . "as" "name"
  184              | "operator" . '?' "as"
  185              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 231
    "as"      shift, and go to state 232
    "delete"  shift, and go to state 233
    "+="      shift, and go to state 234
    "-="      shift, and go to state 235
    "/="      shift, and go to state 236
    "*="      shift, and go to state 237
    "%="      shift, and go to state 238
    "&="      shift, and go to state 239
    "|="      shift, and go to state 240
    "^="      shift, and go to state 241
    "<<"      shift, and go to state 242
    ">>"      shift, and go to state 243
    "++"      shift, and go to state 244
    "--"      shift, and go to state 245
    "<="      shift, and go to state 246
    "<<="     shift, and go to state 247
    ">>="     shift, and go to state 248
    ">="      shift, and go to state 249
    "=="      shift, and go to state 250
    "!="      shift, and go to state 251
    "??"      shift, and go to state 252
    "?."      shift, and go to state 253
    "?["      shift, and go to state 254
    ":="      shift, and go to state 255
    "<<<"     shift, and go to state 256
    ">>>"     shift, and go to state 257
    "<<<="    shift, and go to state 258
    ">>>="    shift, and go to state 259
    "&&"      shift, and go to state 260
    "||"      shift, and go to state 261
    "^^"      shift, and go to state 262
    "&&="     shift, and go to state 263
    "||="     shift, and go to state 264
    "^^="     shift, and go to state 265
    ".."      shift, and go to state 266
    '?'       shift, and go to state 267
    '|'       shift, and go to state 268
    '^'       shift, and go to state 269
    '&'       shift, and go to state 270
    '<'       shift, and go to state 271
    '>'       shift, and go to state 272
    '-'       shift, and go to state 273
    '+'       shift, and go to state 274
    '*'       shift, and go to state 275
    '/'       shift, and go to state 276
    '%'       shift, and go to state 277
    '~'       shift, and go to state 278
    '!'       shift, and go to state 279
    '.'       shift, and go to state 280
    '['       shift, and go to state 281


State 182

  186 function_name: "bool" .

    $default  reduce using rule 186 (function_name)


State 183

  187 function_name: "string" .

    $default  reduce using rule 187 (function_name)


State 184

  188 function_name: "int" .

    $default  reduce using rule 188 (function_name)


State 185

  189 function_name: "int2" .

    $default  reduce using rule 189 (function_name)


State 186

  190 function_name: "int3" .

    $default  reduce using rule 190 (function_name)


State 187

  191 function_name: "int4" .

    $default  reduce using rule 191 (function_name)


State 188

  192 function_name: "uint" .

    $default  reduce using rule 192 (function_name)


State 189

  193 function_name: "uint2" .

    $default  reduce using rule 193 (function_name)


State 190

  194 function_name: "uint3" .

    $default  reduce using rule 194 (function_name)


State 191

  195 function_name: "uint4" .

    $default  reduce using rule 195 (function_name)


State 192

  196 function_name: "float" .

    $default  reduce using rule 196 (function_name)


State 193

  197 function_name: "float2" .

    $default  reduce using rule 197 (function_name)


State 194

  198 function_name: "float3" .

    $default  reduce using rule 198 (function_name)


State 195

  199 function_name: "float4" .

    $default  reduce using rule 199 (function_name)


State 196

  200 function_name: "range" .

    $default  reduce using rule 200 (function_name)


State 197

  201 function_name: "urange" .

    $default  reduce using rule 201 (function_name)


State 198

  202 function_name: "range64" .

    $default  reduce using rule 202 (function_name)


State 199

  203 function_name: "urange64" .

    $default  reduce using rule 203 (function_name)


State 200

  204 function_name: "int64" .

    $default  reduce using rule 204 (function_name)


State 201

  205 function_name: "uint64" .

    $default  reduce using rule 205 (function_name)


State 202

  206 function_name: "double" .

    $default  reduce using rule 206 (function_name)


State 203

  207 function_name: "int8" .

    $default  reduce using rule 207 (function_name)


State 204

  208 function_name: "uint8" .

    $default  reduce using rule 208 (function_name)


State 205

  209 function_name: "int16" .

    $default  reduce using rule 209 (function_name)


State 206

  210 function_name: "uint16" .

    $default  reduce using rule 210 (function_name)


State 207

  158 function_name: "++" . "operator"

    "operator"  shift, and go to state 282


State 208

  159 function_name: "--" . "operator"

    "operator"  shift, and go to state 283


State 209

  126 function_name: "name" .

    $default  reduce using rule 126 (function_name)


State 210

  215 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 284

    $default  reduce using rule 121 (optional_function_argument_list)

    optional_function_argument_list  go to state 285


State 211

  217 function_declaration: optional_public_or_private_function $@6 function_declaration_header . expression_block

    "begin of code block"  shift, and go to state 286

    expression_block  go to state 287


State 212

  611 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" . $@41 enum_list $@42 "end of code block"

    $default  reduce using rule 609 ($@41)

    $@41  go to state 288


State 213

  614 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' . enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"

    "int"     shift, and go to state 289
    "uint"    shift, and go to state 290
    "int64"   shift, and go to state 291
    "uint64"  shift, and go to state 292
    "int8"    shift, and go to state 293
    "uint8"   shift, and go to state 294
    "int16"   shift, and go to state 295
    "uint16"  shift, and go to state 296

    enum_basic_type_declaration  go to state 297


State 214

  618 optional_sealed: "sealed" .

    $default  reduce using rule 618 (optional_sealed)


State 215

  619 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 298


State 216

  629 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 structure_name . $@46 optional_struct_variable_declaration_list

    $default  reduce using rule 628 ($@46)

    $@46  go to state 299


State 217

  582 global_variable_declaration_list: global_variable_declaration_list . $@37 optional_field_annotation let_variable_declaration
  588 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list . "end of code block"

    "end of code block"  shift, and go to state 300

    $default  reduce using rule 581 ($@37)

    $@37  go to state 301


State 218

  519 optional_field_annotation: "[[" . annotation_argument_list ']' ']'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 302


State 219

  103 metadata_argument_list: '@' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 303


State 220

  104 metadata_argument_list: metadata_argument_list . '@' annotation_argument
  520 optional_field_annotation: metadata_argument_list .

    '@'  shift, and go to state 304

    $default  reduce using rule 520 (optional_field_annotation)


State 221

  590 global_let: kwd_let optional_shared optional_public_or_private_variable $@38 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 305
    "name"  shift, and go to state 306

    let_variable_name_with_pos_list  go to state 307
    let_variable_declaration         go to state 308


State 222

   25 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 25 (character_sequence)


State 223

   26 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 26 (character_sequence)


State 224

   27 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 27 (string_constant)


State 225

   89 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 165
    "false"                    shift, and go to state 166
    "integer constant"         shift, and go to state 167
    "floating point constant"  shift, and go to state 168
    "name"                     shift, and go to state 169
    "start of the string"      shift, and go to state 127

    string_constant            go to state 170
    annotation_argument_value  go to state 309


State 226

  100 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 100 (annotation_argument)


State 227

  599 single_alias: optional_public_or_private_alias "name" $@39 '=' . type_declaration

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 357


State 228

  768 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" . $@86 bitfield_alias_bits $@87 "end of code block"

    $default  reduce using rule 766 ($@86)

    $@86  go to state 358


State 229

  758 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" . $@78 tuple_alias_type_list $@79 "end of code block"

    $default  reduce using rule 756 ($@78)

    $@78  go to state 359


State 230

  763 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" . $@82 variant_alias_type_list $@83 "end of code block"

    $default  reduce using rule 761 ($@82)

    $@82  go to state 360


State 231

  180 function_name: "operator" "is" .
  182              | "operator" "is" . "name"

    "name"  shift, and go to state 361

    $default  reduce using rule 180 (function_name)


State 232

  181 function_name: "operator" "as" .
  183              | "operator" "as" . "name"

    "name"  shift, and go to state 362

    $default  reduce using rule 181 (function_name)


State 233

  178 function_name: "operator" "delete" .

    $default  reduce using rule 178 (function_name)


State 234

  129 function_name: "operator" "+=" .

    $default  reduce using rule 129 (function_name)


State 235

  130 function_name: "operator" "-=" .

    $default  reduce using rule 130 (function_name)


State 236

  132 function_name: "operator" "/=" .

    $default  reduce using rule 132 (function_name)


State 237

  131 function_name: "operator" "*=" .

    $default  reduce using rule 131 (function_name)


State 238

  133 function_name: "operator" "%=" .

    $default  reduce using rule 133 (function_name)


State 239

  134 function_name: "operator" "&=" .

    $default  reduce using rule 134 (function_name)


State 240

  135 function_name: "operator" "|=" .

    $default  reduce using rule 135 (function_name)


State 241

  136 function_name: "operator" "^=" .

    $default  reduce using rule 136 (function_name)


State 242

  162 function_name: "operator" "<<" .

    $default  reduce using rule 162 (function_name)


State 243

  163 function_name: "operator" ">>" .

    $default  reduce using rule 163 (function_name)


State 244

  160 function_name: "operator" "++" .

    $default  reduce using rule 160 (function_name)


State 245

  161 function_name: "operator" "--" .

    $default  reduce using rule 161 (function_name)


State 246

  153 function_name: "operator" "<=" .

    $default  reduce using rule 153 (function_name)


State 247

  164 function_name: "operator" "<<=" .

    $default  reduce using rule 164 (function_name)


State 248

  165 function_name: "operator" ">>=" .

    $default  reduce using rule 165 (function_name)


State 249

  154 function_name: "operator" ">=" .

    $default  reduce using rule 154 (function_name)


State 250

  151 function_name: "operator" "==" .

    $default  reduce using rule 151 (function_name)


State 251

  152 function_name: "operator" "!=" .

    $default  reduce using rule 152 (function_name)


State 252

  179 function_name: "operator" "??" .

    $default  reduce using rule 179 (function_name)


State 253

  173 function_name: "operator" "?." .
  176              | "operator" "?." . "name"

    "name"  shift, and go to state 363

    $default  reduce using rule 173 (function_name)


State 254

  171 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 364


State 255

  177 function_name: "operator" ":=" .

    $default  reduce using rule 177 (function_name)


State 256

  166 function_name: "operator" "<<<" .

    $default  reduce using rule 166 (function_name)


State 257

  167 function_name: "operator" ">>>" .

    $default  reduce using rule 167 (function_name)


State 258

  168 function_name: "operator" "<<<=" .

    $default  reduce using rule 168 (function_name)


State 259

  169 function_name: "operator" ">>>=" .

    $default  reduce using rule 169 (function_name)


State 260

  140 function_name: "operator" "&&" .

    $default  reduce using rule 140 (function_name)


State 261

  141 function_name: "operator" "||" .

    $default  reduce using rule 141 (function_name)


State 262

  142 function_name: "operator" "^^" .

    $default  reduce using rule 142 (function_name)


State 263

  137 function_name: "operator" "&&=" .

    $default  reduce using rule 137 (function_name)


State 264

  138 function_name: "operator" "||=" .

    $default  reduce using rule 138 (function_name)


State 265

  139 function_name: "operator" "^^=" .

    $default  reduce using rule 139 (function_name)


State 266

  150 function_name: "operator" ".." .

    $default  reduce using rule 150 (function_name)


State 267

  184 function_name: "operator" '?' . "as"
  185              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 365


State 268

  156 function_name: "operator" '|' .

    $default  reduce using rule 156 (function_name)


State 269

  157 function_name: "operator" '^' .

    $default  reduce using rule 157 (function_name)


State 270

  155 function_name: "operator" '&' .

    $default  reduce using rule 155 (function_name)


State 271

  148 function_name: "operator" '<' .

    $default  reduce using rule 148 (function_name)


State 272

  149 function_name: "operator" '>' .

    $default  reduce using rule 149 (function_name)


State 273

  144 function_name: "operator" '-' .

    $default  reduce using rule 144 (function_name)


State 274

  143 function_name: "operator" '+' .

    $default  reduce using rule 143 (function_name)


State 275

  145 function_name: "operator" '*' .

    $default  reduce using rule 145 (function_name)


State 276

  146 function_name: "operator" '/' .

    $default  reduce using rule 146 (function_name)


State 277

  147 function_name: "operator" '%' .

    $default  reduce using rule 147 (function_name)


State 278

  128 function_name: "operator" '~' .

    $default  reduce using rule 128 (function_name)


State 279

  127 function_name: "operator" '!' .

    $default  reduce using rule 127 (function_name)


State 280

  172 function_name: "operator" '.' .
  174              | "operator" '.' . "name"
  175              | "operator" '.' . "name" ":="

    "name"  shift, and go to state 366

    $default  reduce using rule 172 (function_name)


State 281

  170 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 367


State 282

  158 function_name: "++" "operator" .

    $default  reduce using rule 158 (function_name)


State 283

  159 function_name: "--" "operator" .

    $default  reduce using rule 159 (function_name)


State 284

  122 optional_function_argument_list: '(' . ')'
  123                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 368
    "[["  shift, and go to state 218
    ')'   shift, and go to state 369
    '@'   shift, and go to state 219

    $default  reduce using rule 518 (optional_field_annotation)

    metadata_argument_list         go to state 220
    optional_field_annotation      go to state 370
    function_argument_declaration  go to state 371
    function_argument_list         go to state 372


State 285

  215 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 373

    $default  reduce using rule 124 (optional_function_type)

    optional_function_type  go to state 374


State 286

  218 expression_block: "begin of code block" . expressions "end of code block"
  219                 | "begin of code block" . expressions "end of code block" "finally" "begin of code block" expressions "end of code block"

    $default  reduce using rule 243 (expressions)

    expressions  go to state 375


State 287

  217 function_declaration: optional_public_or_private_function $@6 function_declaration_header expression_block .

    $default  reduce using rule 217 (function_declaration)


State 288

  611 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 . enum_list $@42 "end of code block"

    $default  reduce using rule 591 (enum_list)

    enum_list  go to state 376


State 289

  662 enum_basic_type_declaration: "int" .

    $default  reduce using rule 662 (enum_basic_type_declaration)


State 290

  665 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 665 (enum_basic_type_declaration)


State 291

  668 enum_basic_type_declaration: "int64" .

    $default  reduce using rule 668 (enum_basic_type_declaration)


State 292

  669 enum_basic_type_declaration: "uint64" .

    $default  reduce using rule 669 (enum_basic_type_declaration)


State 293

  663 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 663 (enum_basic_type_declaration)


State 294

  666 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 666 (enum_basic_type_declaration)


State 295

  664 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 664 (enum_basic_type_declaration)


State 296

  667 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 667 (enum_basic_type_declaration)


State 297

  614 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration . "begin of code block" $@43 enum_list $@44 "end of code block"

    "begin of code block"  shift, and go to state 377


State 298

  619 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 378

    $default  reduce using rule 615 (optional_structure_parent)

    optional_structure_parent  go to state 379


State 299

  629 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 structure_name $@46 . optional_struct_variable_declaration_list

    "begin of code block"  shift, and go to state 380

    $default  reduce using rule 625 (optional_struct_variable_declaration_list)

    optional_struct_variable_declaration_list  go to state 381


State 300

  588 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block" .

    $default  reduce using rule 588 (global_let)


State 301

  582 global_variable_declaration_list: global_variable_declaration_list $@37 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 218
    '@'   shift, and go to state 219

    $default  reduce using rule 518 (optional_field_annotation)

    metadata_argument_list     go to state 220
    optional_field_annotation  go to state 382


State 302

  102 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  519 optional_field_annotation: "[[" annotation_argument_list . ']' ']'

    ','  shift, and go to state 80
    ']'  shift, and go to state 383


State 303

  103 metadata_argument_list: '@' annotation_argument .

    $default  reduce using rule 103 (metadata_argument_list)


State 304

  104 metadata_argument_list: metadata_argument_list '@' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 384


State 305

  571 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 385


State 306

  570 let_variable_name_with_pos_list: "name" .
  572                                | "name" . "aka" "name"

    "aka"  shift, and go to state 386

    $default  reduce using rule 570 (let_variable_name_with_pos_list)


State 307

  573 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  574                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  575 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options "end of expression"
  576                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  577                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  578                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr "end of expression"
  579                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 387
    ':'  shift, and go to state 388
    '&'  shift, and go to state 389

    $default  reduce using rule 568 (optional_ref)

    optional_ref  go to state 390


State 308

  590 global_let: kwd_let optional_shared optional_public_or_private_variable $@38 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 590 (global_let)


State 309

   89 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 89 (annotation_argument_value_list)


State 310

  694 type_declaration_no_options: "type" . '<' $@49 type_declaration '>' $@50

    '<'  shift, and go to state 391


State 311

  717 type_declaration_no_options: "array" . '<' $@54 type_declaration '>' $@55

    '<'  shift, and go to state 392


State 312

  720 type_declaration_no_options: "table" . '<' $@56 table_type_pair '>' $@57

    '<'  shift, and go to state 393


State 313

  695 type_declaration_no_options: "typedecl" . '(' expr ')'

    '('  shift, and go to state 394


State 314

  723 type_declaration_no_options: "iterator" . '<' $@58 type_declaration '>' $@59

    '<'  shift, and go to state 395


State 315

  713 type_declaration_no_options: "smart_ptr" . '<' $@52 type_declaration '>' $@53

    '<'  shift, and go to state 396


State 316

  635 basic_type_declaration: "bool" .

    $default  reduce using rule 635 (basic_type_declaration)


State 317

  655 basic_type_declaration: "void" .

    $default  reduce using rule 655 (basic_type_declaration)


State 318

  636 basic_type_declaration: "string" .

    $default  reduce using rule 636 (basic_type_declaration)


State 319

  671 auto_type_declaration: "auto" .
  672                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 397

    '('       [reduce using rule 671 (auto_type_declaration)]
    $default  reduce using rule 671 (auto_type_declaration)


State 320

  637 basic_type_declaration: "int" .

    $default  reduce using rule 637 (basic_type_declaration)


State 321

  641 basic_type_declaration: "int2" .

    $default  reduce using rule 641 (basic_type_declaration)


State 322

  642 basic_type_declaration: "int3" .

    $default  reduce using rule 642 (basic_type_declaration)


State 323

  643 basic_type_declaration: "int4" .

    $default  reduce using rule 643 (basic_type_declaration)


State 324

  644 basic_type_declaration: "uint" .

    $default  reduce using rule 644 (basic_type_declaration)


State 325

  661 basic_type_declaration: "bitfield" .
  681 bitfield_type_declaration: "bitfield" . '<' $@47 bitfield_bits '>' $@48

    '<'  shift, and go to state 398

    $default  reduce using rule 661 (basic_type_declaration)


State 326

  648 basic_type_declaration: "uint2" .

    $default  reduce using rule 648 (basic_type_declaration)


State 327

  649 basic_type_declaration: "uint3" .

    $default  reduce using rule 649 (basic_type_declaration)


State 328

  650 basic_type_declaration: "uint4" .

    $default  reduce using rule 650 (basic_type_declaration)


State 329

  651 basic_type_declaration: "float" .

    $default  reduce using rule 651 (basic_type_declaration)


State 330

  652 basic_type_declaration: "float2" .

    $default  reduce using rule 652 (basic_type_declaration)


State 331

  653 basic_type_declaration: "float3" .

    $default  reduce using rule 653 (basic_type_declaration)


State 332

  654 basic_type_declaration: "float4" .

    $default  reduce using rule 654 (basic_type_declaration)


State 333

  656 basic_type_declaration: "range" .

    $default  reduce using rule 656 (basic_type_declaration)


State 334

  657 basic_type_declaration: "urange" .

    $default  reduce using rule 657 (basic_type_declaration)


State 335

  658 basic_type_declaration: "range64" .

    $default  reduce using rule 658 (basic_type_declaration)


State 336

  659 basic_type_declaration: "urange64" .

    $default  reduce using rule 659 (basic_type_declaration)


State 337

  724 type_declaration_no_options: "block" .
  727                            | "block" . '<' $@60 type_declaration '>' $@61
  730                            | "block" . '<' $@62 optional_function_argument_list optional_function_type '>' $@63

    '<'  shift, and go to state 399

    $default  reduce using rule 724 (type_declaration_no_options)


State 338

  640 basic_type_declaration: "int64" .

    $default  reduce using rule 640 (basic_type_declaration)


State 339

  647 basic_type_declaration: "uint64" .

    $default  reduce using rule 647 (basic_type_declaration)


State 340

  660 basic_type_declaration: "double" .

    $default  reduce using rule 660 (basic_type_declaration)


State 341

  731 type_declaration_no_options: "function" .
  734                            | "function" . '<' $@64 type_declaration '>' $@65
  737                            | "function" . '<' $@66 optional_function_argument_list optional_function_type '>' $@67

    '<'  shift, and go to state 400

    $default  reduce using rule 731 (type_declaration_no_options)


State 342

  738 type_declaration_no_options: "lambda" .
  741                            | "lambda" . '<' $@68 type_declaration '>' $@69
  744                            | "lambda" . '<' $@70 optional_function_argument_list optional_function_type '>' $@71

    '<'  shift, and go to state 401

    $default  reduce using rule 738 (type_declaration_no_options)


State 343

  638 basic_type_declaration: "int8" .

    $default  reduce using rule 638 (basic_type_declaration)


State 344

  645 basic_type_declaration: "uint8" .

    $default  reduce using rule 645 (basic_type_declaration)


State 345

  639 basic_type_declaration: "int16" .

    $default  reduce using rule 639 (basic_type_declaration)


State 346

  646 basic_type_declaration: "uint16" .

    $default  reduce using rule 646 (basic_type_declaration)


State 347

  747 type_declaration_no_options: "tuple" . '<' $@72 tuple_type_list '>' $@73

    '<'  shift, and go to state 402


State 348

  750 type_declaration_no_options: "variant" . '<' $@74 variant_type_list '>' $@75

    '<'  shift, and go to state 403


State 349

  673 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 404


State 350

  696 type_declaration_no_options: '$' . name_in_namespace '(' optional_expr_list ')'
  698                            | '$' . name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 405


State 351

  670 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 670 (structure_type_declaration)


State 352

  686 type_declaration_no_options: basic_type_declaration .

    $default  reduce using rule 686 (type_declaration_no_options)


State 353

  689 type_declaration_no_options: structure_type_declaration .

    $default  reduce using rule 689 (type_declaration_no_options)


State 354

  687 type_declaration_no_options: auto_type_declaration .

    $default  reduce using rule 687 (type_declaration_no_options)


State 355

  688 type_declaration_no_options: bitfield_type_declaration .

    $default  reduce using rule 688 (type_declaration_no_options)


State 356

  690 type_declaration_no_options: type_declaration_no_options . dim_list
  691                            | type_declaration_no_options . '[' ']'
  699                            | type_declaration_no_options . '-' '[' ']'
  700                            | type_declaration_no_options . "explicit"
  701                            | type_declaration_no_options . "const"
  702                            | type_declaration_no_options . '-' "const"
  703                            | type_declaration_no_options . '&'
  704                            | type_declaration_no_options . '-' '&'
  705                            | type_declaration_no_options . '#'
  706                            | type_declaration_no_options . "implicit"
  707                            | type_declaration_no_options . '-' '#'
  708                            | type_declaration_no_options . "==" "const"
  709                            | type_declaration_no_options . "==" '&'
  710                            | type_declaration_no_options . '?'
  714                            | type_declaration_no_options . "??"
  751 type_declaration: type_declaration_no_options .

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    $default  reduce using rule 751 (type_declaration)

    dim_list  go to state 416


State 357

  599 single_alias: optional_public_or_private_alias "name" $@39 '=' type_declaration .
  752 type_declaration: type_declaration . '|' type_declaration_no_options
  753                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417

    $default  reduce using rule 599 (single_alias)


State 358

  768 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 . bitfield_alias_bits $@87 "end of code block"

    $default  reduce using rule 676 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 418


State 359

  758 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 . tuple_alias_type_list $@79 "end of code block"

    $default  reduce using rule 548 (tuple_alias_type_list)

    tuple_alias_type_list  go to state 419


State 360

  763 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 . variant_alias_type_list $@83 "end of code block"

    $default  reduce using rule 554 (variant_alias_type_list)

    variant_alias_type_list  go to state 420


State 361

  182 function_name: "operator" "is" "name" .

    $default  reduce using rule 182 (function_name)


State 362

  183 function_name: "operator" "as" "name" .

    $default  reduce using rule 183 (function_name)


State 363

  176 function_name: "operator" "?." "name" .

    $default  reduce using rule 176 (function_name)


State 364

  171 function_name: "operator" "?[" ']' .

    $default  reduce using rule 171 (function_name)


State 365

  184 function_name: "operator" '?' "as" .
  185              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 421

    $default  reduce using rule 184 (function_name)


State 366

  174 function_name: "operator" '.' "name" .
  175              | "operator" '.' "name" . ":="

    ":="  shift, and go to state 422

    $default  reduce using rule 174 (function_name)


State 367

  170 function_name: "operator" '[' ']' .

    $default  reduce using rule 170 (function_name)


State 368

  541 function_argument_declaration: "$a" . '(' expr ')'

    '('  shift, and go to state 423


State 369

  122 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 122 (optional_function_argument_list)


State 370

  540 function_argument_declaration: optional_field_annotation . kwd_let_var_or_nothing variable_declaration

    "let"  shift, and go to state 424
    "var"  shift, and go to state 425

    $default  reduce using rule 294 (kwd_let_var_or_nothing)

    kwd_let_var_or_nothing  go to state 426


State 371

  542 function_argument_list: function_argument_declaration .

    $default  reduce using rule 542 (function_argument_list)


State 372

  123 optional_function_argument_list: '(' function_argument_list . ')'
  543 function_argument_list: function_argument_list . "end of expression" function_argument_declaration

    "end of expression"  shift, and go to state 427
    ')'                  shift, and go to state 428


State 373

  125 optional_function_type: ':' . type_declaration

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 429


State 374

  215 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 215 (function_declaration_header)


State 375

  218 expression_block: "begin of code block" expressions . "end of code block"
  219                 | "begin of code block" expressions . "end of code block" "finally" "begin of code block" expressions "end of code block"
  244 expressions: expressions . expression_any
  245            | expressions . error

    error                             shift, and go to state 430
    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 433
    "if"                              shift, and go to state 434
    "static_if"                       shift, and go to state 435
    "for"                             shift, and go to state 436
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "return"                          shift, and go to state 443
    "null"                            shift, and go to state 444
    "break"                           shift, and go to state 445
    "try"                             shift, and go to state 446
    "table"                           shift, and go to state 447
    "delete"                          shift, and go to state 448
    "deref"                           shift, and go to state 449
    "with"                            shift, and go to state 450
    "assume"                          shift, and go to state 451
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 454
    "continue"                        shift, and go to state 455
    "pass"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 457
    "label"                           shift, and go to state 458
    "goto"                            shift, and go to state 459
    "unsafe"                          shift, and go to state 460
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "yield"                           shift, and go to state 467
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 470
    "@ <|"                            shift, and go to state 471
    "@@ <|"                           shift, and go to state 472
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 490
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    "end of code block"               shift, and go to state 494
    "end of expression"               shift, and go to state 495
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder             go to state 505
    expr_reader                go to state 506
    expression_label           go to state 507
    expression_goto            go to state 508
    if_or_static_if            go to state 509
    expression_if_one_liner    go to state 510
    expression_if_then_else    go to state 511
    expression_for_loop        go to state 512
    expression_unsafe          go to state 513
    expression_while_loop      go to state 514
    expression_with            go to state 515
    expression_with_alias      go to state 516
    expr_call_pipe             go to state 517
    expression_any             go to state 518
    expr_keyword               go to state 519
    expression_keyword         go to state 520
    expr_pipe                  go to state 521
    name_in_namespace          go to state 522
    expression_delete          go to state 523
    expr_new                   go to state 524
    expression_break           go to state 525
    expression_continue        go to state 526
    expression_return_no_pipe  go to state 527
    expression_return          go to state 528
    expression_yield_no_pipe   go to state 529
    expression_yield           go to state 530
    expression_try_catch       go to state 531
    kwd_let                    go to state 532
    expression_let             go to state 533
    expr_cast                  go to state 534
    expr_type_decl             go to state 535
    expr_type_info             go to state 536
    block_or_lambda            go to state 537
    expr_full_block            go to state 538
    expr_numeric_const         go to state 539
    expr_assign                go to state 540
    expr_assign_pipe           go to state 541
    expr_named_call            go to state 542
    expr_method_call           go to state 543
    func_addr_expr             go to state 544
    expr_field                 go to state 545
    expr_call                  go to state 546
    expr                       go to state 547
    expr_mtag                  go to state 548
    basic_type_declaration     go to state 549
    make_decl                  go to state 550
    make_struct_decl           go to state 551
    make_tuple_call            go to state 552
    make_dim_decl              go to state 553
    make_table_decl            go to state 554
    array_comprehension        go to state 555


State 376

  592 enum_list: enum_list . "end of expression"
  593          | enum_list . "name" "end of expression"
  594          | enum_list . "name" '=' expr "end of expression"
  611 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list . $@42 "end of code block"

    "name"               shift, and go to state 556
    "end of expression"  shift, and go to state 557

    $default  reduce using rule 610 ($@42)

    $@42  go to state 558


State 377

  614 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" . $@43 enum_list $@44 "end of code block"

    $default  reduce using rule 612 ($@43)

    $@43  go to state 559


State 378

  616 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 560


State 379

  619 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 619 (structure_name)


State 380

  626 optional_struct_variable_declaration_list: "begin of code block" . struct_variable_declaration_list "end of code block"

    $default  reduce using rule 532 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 561


State 381

  629 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 structure_name $@46 optional_struct_variable_declaration_list .

    $default  reduce using rule 629 (structure_declaration)


State 382

  582 global_variable_declaration_list: global_variable_declaration_list $@37 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 305
    "name"  shift, and go to state 306

    let_variable_name_with_pos_list  go to state 307
    let_variable_declaration         go to state 562


State 383

  519 optional_field_annotation: "[[" annotation_argument_list ']' . ']'

    ']'  shift, and go to state 563


State 384

  104 metadata_argument_list: metadata_argument_list '@' annotation_argument .

    $default  reduce using rule 104 (metadata_argument_list)


State 385

  571 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 567
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 386

  572 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 568


State 387

  573 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  574                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 569


State 388

  575 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options "end of expression"
  576                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  577                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr_pipe

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 570


State 389

  569 optional_ref: '&' .

    $default  reduce using rule 569 (optional_ref)


State 390

  578 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr "end of expression"
  579                         | let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 571
    ":="  shift, and go to state 572
    '='   shift, and go to state 573

    copy_or_move_or_clone  go to state 574


State 391

  694 type_declaration_no_options: "type" '<' . $@49 type_declaration '>' $@50

    $default  reduce using rule 692 ($@49)

    $@49  go to state 575


State 392

  717 type_declaration_no_options: "array" '<' . $@54 type_declaration '>' $@55

    $default  reduce using rule 715 ($@54)

    $@54  go to state 576


State 393

  720 type_declaration_no_options: "table" '<' . $@56 table_type_pair '>' $@57

    $default  reduce using rule 718 ($@56)

    $@56  go to state 577


State 394

  695 type_declaration_no_options: "typedecl" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 578
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 395

  723 type_declaration_no_options: "iterator" '<' . $@58 type_declaration '>' $@59

    $default  reduce using rule 721 ($@58)

    $@58  go to state 579


State 396

  713 type_declaration_no_options: "smart_ptr" '<' . $@52 type_declaration '>' $@53

    $default  reduce using rule 711 ($@52)

    $@52  go to state 580


State 397

  672 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 581


State 398

  681 bitfield_type_declaration: "bitfield" '<' . $@47 bitfield_bits '>' $@48

    $default  reduce using rule 679 ($@47)

    $@47  go to state 582


State 399

  727 type_declaration_no_options: "block" '<' . $@60 type_declaration '>' $@61
  730                            | "block" '<' . $@62 optional_function_argument_list optional_function_type '>' $@63

    ':'       reduce using rule 728 ($@62)
    '>'       reduce using rule 728 ($@62)
    '('       reduce using rule 728 ($@62)
    $default  reduce using rule 725 ($@60)

    $@60  go to state 583
    $@62  go to state 584


State 400

  734 type_declaration_no_options: "function" '<' . $@64 type_declaration '>' $@65
  737                            | "function" '<' . $@66 optional_function_argument_list optional_function_type '>' $@67

    ':'       reduce using rule 735 ($@66)
    '>'       reduce using rule 735 ($@66)
    '('       reduce using rule 735 ($@66)
    $default  reduce using rule 732 ($@64)

    $@64  go to state 585
    $@66  go to state 586


State 401

  741 type_declaration_no_options: "lambda" '<' . $@68 type_declaration '>' $@69
  744                            | "lambda" '<' . $@70 optional_function_argument_list optional_function_type '>' $@71

    ':'       reduce using rule 742 ($@70)
    '>'       reduce using rule 742 ($@70)
    '('       reduce using rule 742 ($@70)
    $default  reduce using rule 739 ($@68)

    $@68  go to state 587
    $@70  go to state 588


State 402

  747 type_declaration_no_options: "tuple" '<' . $@72 tuple_type_list '>' $@73

    $default  reduce using rule 745 ($@72)

    $@72  go to state 589


State 403

  750 type_declaration_no_options: "variant" '<' . $@74 variant_type_list '>' $@75

    $default  reduce using rule 748 ($@74)

    $@74  go to state 590


State 404

  673 auto_type_declaration: "$t" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 591
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 405

  696 type_declaration_no_options: '$' name_in_namespace . '(' optional_expr_list ')'
  698                            | '$' name_in_namespace . '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    '<'  shift, and go to state 592
    '('  shift, and go to state 593


State 406

  701 type_declaration_no_options: type_declaration_no_options "const" .

    $default  reduce using rule 701 (type_declaration_no_options)


State 407

  706 type_declaration_no_options: type_declaration_no_options "implicit" .

    $default  reduce using rule 706 (type_declaration_no_options)


State 408

  700 type_declaration_no_options: type_declaration_no_options "explicit" .

    $default  reduce using rule 700 (type_declaration_no_options)


State 409

  708 type_declaration_no_options: type_declaration_no_options "==" . "const"
  709                            | type_declaration_no_options "==" . '&'

    "const"  shift, and go to state 594
    '&'      shift, and go to state 595


State 410

  714 type_declaration_no_options: type_declaration_no_options "??" .

    $default  reduce using rule 714 (type_declaration_no_options)


State 411

  710 type_declaration_no_options: type_declaration_no_options '?' .

    $default  reduce using rule 710 (type_declaration_no_options)


State 412

  703 type_declaration_no_options: type_declaration_no_options '&' .

    $default  reduce using rule 703 (type_declaration_no_options)


State 413

  699 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  702                            | type_declaration_no_options '-' . "const"
  704                            | type_declaration_no_options '-' . '&'
  707                            | type_declaration_no_options '-' . '#'

    "const"  shift, and go to state 596
    '&'      shift, and go to state 597
    '['      shift, and go to state 598
    '#'      shift, and go to state 599


State 414

  684 dim_list: '[' . expr ']'
  691 type_declaration_no_options: type_declaration_no_options '[' . ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    ']'                               shift, and go to state 600
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 601
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 415

  705 type_declaration_no_options: type_declaration_no_options '#' .

    $default  reduce using rule 705 (type_declaration_no_options)


State 416

  685 dim_list: dim_list . '[' expr ']'
  690 type_declaration_no_options: type_declaration_no_options dim_list .

    '['  shift, and go to state 602

    '['       [reduce using rule 690 (type_declaration_no_options)]
    $default  reduce using rule 690 (type_declaration_no_options)


State 417

  752 type_declaration: type_declaration '|' . type_declaration_no_options
  753                 | type_declaration '|' . '#'

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350
    '#'          shift, and go to state 603

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 604


State 418

  677 bitfield_alias_bits: bitfield_alias_bits . "end of expression"
  678                    | bitfield_alias_bits . "name" "end of expression"
  768 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits . $@87 "end of code block"

    "name"               shift, and go to state 605
    "end of expression"  shift, and go to state 606

    $default  reduce using rule 767 ($@87)

    $@87  go to state 607


State 419

  549 tuple_alias_type_list: tuple_alias_type_list . "end of expression"
  550                      | tuple_alias_type_list . tuple_type "end of expression"
  758 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list . $@79 "end of code block"

    "type"               shift, and go to state 310
    "array"              shift, and go to state 311
    "table"              shift, and go to state 312
    "typedecl"           shift, and go to state 313
    "iterator"           shift, and go to state 314
    "smart_ptr"          shift, and go to state 315
    "bool"               shift, and go to state 316
    "void"               shift, and go to state 317
    "string"             shift, and go to state 318
    "auto"               shift, and go to state 319
    "int"                shift, and go to state 320
    "int2"               shift, and go to state 321
    "int3"               shift, and go to state 322
    "int4"               shift, and go to state 323
    "uint"               shift, and go to state 324
    "bitfield"           shift, and go to state 325
    "uint2"              shift, and go to state 326
    "uint3"              shift, and go to state 327
    "uint4"              shift, and go to state 328
    "float"              shift, and go to state 329
    "float2"             shift, and go to state 330
    "float3"             shift, and go to state 331
    "float4"             shift, and go to state 332
    "range"              shift, and go to state 333
    "urange"             shift, and go to state 334
    "range64"            shift, and go to state 335
    "urange64"           shift, and go to state 336
    "block"              shift, and go to state 337
    "int64"              shift, and go to state 338
    "uint64"             shift, and go to state 339
    "double"             shift, and go to state 340
    "function"           shift, and go to state 341
    "lambda"             shift, and go to state 342
    "int8"               shift, and go to state 343
    "uint8"              shift, and go to state 344
    "int16"              shift, and go to state 345
    "uint16"             shift, and go to state 346
    "tuple"              shift, and go to state 347
    "variant"            shift, and go to state 348
    "::"                 shift, and go to state 58
    "$t"                 shift, and go to state 349
    "name"               shift, and go to state 608
    "end of expression"  shift, and go to state 609
    '$'                  shift, and go to state 350

    $default  reduce using rule 757 ($@79)

    name_in_namespace            go to state 351
    tuple_type                   go to state 610
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 611
    $@79                         go to state 612


State 420

  555 variant_alias_type_list: variant_alias_type_list . "end of expression"
  556                        | variant_alias_type_list . variant_type "end of expression"
  763 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list . $@83 "end of code block"

    "name"               shift, and go to state 613
    "end of expression"  shift, and go to state 614

    $default  reduce using rule 762 ($@83)

    variant_type  go to state 615
    $@83          go to state 616


State 421

  185 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 185 (function_name)


State 422

  175 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 175 (function_name)


State 423

  541 function_argument_declaration: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 617
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 424

  292 kwd_let_var_or_nothing: "let" .

    $default  reduce using rule 292 (kwd_let_var_or_nothing)


State 425

  293 kwd_let_var_or_nothing: "var" .

    $default  reduce using rule 293 (kwd_let_var_or_nothing)


State 426

  540 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing . variable_declaration

    "$i"    shift, and go to state 618
    "name"  shift, and go to state 619

    variable_declaration         go to state 620
    variable_name_with_pos_list  go to state 621


State 427

  543 function_argument_list: function_argument_list "end of expression" . function_argument_declaration

    "$a"  shift, and go to state 368
    "[["  shift, and go to state 218
    '@'   shift, and go to state 219

    $default  reduce using rule 518 (optional_field_annotation)

    metadata_argument_list         go to state 220
    optional_field_annotation      go to state 370
    function_argument_declaration  go to state 622


State 428

  123 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 123 (optional_function_argument_list)


State 429

  125 optional_function_type: ':' type_declaration .
  752 type_declaration: type_declaration . '|' type_declaration_no_options
  753                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417

    $default  reduce using rule 125 (optional_function_type)


State 430

  245 expressions: expressions error .

    $default  reduce using rule 245 (expressions)


State 431

  809 make_struct_decl: "struct" . '<' $@88 type_declaration_no_options '>' $@89 '(' use_initializer make_struct_dim ')'

    '<'  shift, and go to state 623


State 432

  812 make_struct_decl: "class" . '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer make_struct_dim ')'

    '<'  shift, and go to state 624


State 433

   78 expression_while_loop: "while" . expr expression_block

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 625
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 434

   62 if_or_static_if: "if" .

    $default  reduce using rule 62 (if_or_static_if)


State 435

   63 if_or_static_if: "static_if" .

    $default  reduce using rule 63 (if_or_static_if)


State 436

   76 expression_for_loop: "for" . $@4 variable_name_with_pos_list "in" expr_list expression_block

    $default  reduce using rule 75 ($@4)

    $@4  go to state 626


State 437

  424 expr: "true" .

    $default  reduce using rule 424 (expr)


State 438

  425 expr: "false" .

    $default  reduce using rule 425 (expr)


State 439

  273 expr_new: "new" . new_type_declaration
  274         | "new" . new_type_declaration '(' use_initializer ')'
  275         | "new" . new_type_declaration '(' expr_list ')'
  276         | "new" . new_type_declaration '(' use_initializer make_struct_single ')'
  277         | "new" . make_decl

    "struct"               shift, and go to state 431
    "class"                shift, and go to state 432
    "array"                shift, and go to state 442
    "table"                shift, and go to state 447
    "fixed_array"          shift, and go to state 461
    "default"              shift, and go to state 462
    "tuple"                shift, and go to state 464
    "variant"              shift, and go to state 465
    "::"                   shift, and go to state 58
    "[["                   shift, and go to state 480
    "[{"                   shift, and go to state 481
    "{{"                   shift, and go to state 482
    "name"                 shift, and go to state 59
    "begin of code block"  shift, and go to state 493
    '<'                    shift, and go to state 627
    '['                    shift, and go to state 501

    name_in_namespace           go to state 351
    new_type_declaration        go to state 628
    structure_type_declaration  go to state 629
    make_decl                   go to state 630
    make_struct_decl            go to state 551
    make_tuple_call             go to state 552
    make_dim_decl               go to state 553
    make_table_decl             go to state 554
    array_comprehension         go to state 555


State 440

  319 expr_type_info: "typeinfo" . '(' name_in_namespace expr ')'
  320               | "typeinfo" . '(' name_in_namespace '<' "name" '>' expr ')'
  321               | "typeinfo" . '(' name_in_namespace '<' "name" "end of expression" "name" '>' expr ')'
  322               | "typeinfo" . name_in_namespace '(' expr ')'
  323               | "typeinfo" . name_in_namespace '<' "name" '>' '(' expr ')'
  324               | "typeinfo" . name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr ')'

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59
    '('     shift, and go to state 631

    name_in_namespace  go to state 632


State 441

  318 expr_type_decl: "type" . '<' $@19 type_declaration '>' $@20

    '<'  shift, and go to state 633


State 442

  835 make_dim_decl: "array" . "struct" '<' $@98 type_declaration_no_options '>' $@99 '(' use_initializer make_struct_dim ')'
  838              | "array" . "tuple" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer make_struct_dim ')'
  841              | "array" . "variant" '<' $@102 type_declaration_no_options '>' $@103 '(' make_struct_dim ')'
  842              | "array" . '(' expr_list optional_comma ')'
  845              | "array" . '<' $@104 type_declaration_no_options '>' $@105 '(' expr_list optional_comma ')'

    "struct"   shift, and go to state 634
    "tuple"    shift, and go to state 635
    "variant"  shift, and go to state 636
    '<'        shift, and go to state 637
    '('        shift, and go to state 638


State 443

  280 expression_return_no_pipe: "return" .
  281                          | "return" . expr_list
  282                          | "return" . "<-" expr_list
  284 expression_return: "return" . expr_pipe
  285                  | "return" . "<-" expr_pipe

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "<-"                              shift, and go to state 639
    "$ <|"                            shift, and go to state 470
    "@ <|"                            shift, and go to state 471
    "@@ <|"                           shift, and go to state 472
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    $default  reduce using rule 280 (expression_return_no_pipe)

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 517
    expression_keyword      go to state 520
    expr_pipe               go to state 640
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 641
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign             go to state 642
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 643
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 444

  418 expr: "null" .

    $default  reduce using rule 418 (expr)


State 445

  278 expression_break: "break" .

    $default  reduce using rule 278 (expression_break)


State 446

  291 expression_try_catch: "try" . expression_block "recover" expression_block

    "begin of code block"  shift, and go to state 286

    expression_block  go to state 644


State 447

  856 make_table_decl: "table" . '(' expr_map_tuple_list optional_comma ')'
  857                | "table" . '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'
  858                | "table" . '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    '<'  shift, and go to state 645
    '('  shift, and go to state 646


State 448

  267 expression_delete: "delete" . expr
  268                  | "delete" . "explicit" expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "explicit"                        shift, and go to state 647
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 648
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 449

  468 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 649


State 450

   79 expression_with: "with" . expr expression_block

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 650
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 451

   81 expression_with_alias: "assume" . "name" '=' $@5 expr

    "name"  shift, and go to state 651


State 452

  309 expr_cast: "cast" . '<' $@13 type_declaration_no_options '>' $@14 expr

    '<'  shift, and go to state 652


State 453

  312 expr_cast: "upcast" . '<' $@15 type_declaration_no_options '>' $@16 expr

    '<'  shift, and go to state 653


State 454

  469 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 654


State 455

  279 expression_continue: "continue" .

    $default  reduce using rule 279 (expression_continue)


State 456

  242 expression_any: "pass" . "end of expression"

    "end of expression"  shift, and go to state 655


State 457

  315 expr_cast: "reinterpret" . '<' $@17 type_declaration_no_options '>' $@18 expr

    '<'  shift, and go to state 656


State 458

   54 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 657


State 459

   55 expression_goto: "goto" . "label" "integer constant"
   56                | "goto" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "label"                           shift, and go to state 658
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 659
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 460

   77 expression_unsafe: "unsafe" . expression_block
  500 expr: "unsafe" . '(' expr ')'

    "begin of code block"  shift, and go to state 286
    '('                    shift, and go to state 660

    expression_block  go to state 661


State 461

  846 make_dim_decl: "fixed_array" . '(' expr_list optional_comma ')'
  849              | "fixed_array" . '<' $@106 type_declaration_no_options '>' $@107 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 662
    '('  shift, and go to state 663


State 462

  818 make_struct_decl: "default" . '<' $@94 type_declaration_no_options '>' $@95 use_initializer

    '<'  shift, and go to state 664


State 463

  661 basic_type_declaration: "bitfield" .

    $default  reduce using rule 661 (basic_type_declaration)


State 464

  824 make_tuple_call: "tuple" . '(' expr_list optional_comma ')'
  827                | "tuple" . '<' $@96 type_declaration_no_options '>' $@97 '(' use_initializer make_struct_dim ')'

    '<'  shift, and go to state 665
    '('  shift, and go to state 666


State 465

  815 make_struct_decl: "variant" . '<' $@92 type_declaration_no_options '>' $@93 '(' make_struct_dim ')'

    '<'  shift, and go to state 667


State 466

  470 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  471     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'

    '<'  shift, and go to state 668


State 467

  286 expression_yield_no_pipe: "yield" . expr
  287                         | "yield" . "<-" expr
  289 expression_yield: "yield" . expr_pipe
  290                 | "yield" . "<-" expr_pipe

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "<-"                              shift, and go to state 669
    "$ <|"                            shift, and go to state 470
    "@ <|"                            shift, and go to state 471
    "@@ <|"                           shift, and go to state 472
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 517
    expression_keyword      go to state 520
    expr_pipe               go to state 670
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign             go to state 642
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 671
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 468

  454 expr: "++" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 672
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 469

  455 expr: "--" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 673
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 470

  262 expr_pipe: "$ <|" . expr_block

    "begin of code block"  shift, and go to state 286
    '$'                    shift, and go to state 503
    '@'                    shift, and go to state 674

    expression_block  go to state 675
    block_or_lambda   go to state 676
    expr_block        go to state 677


State 471

  260 expr_pipe: "@ <|" . expr_block

    "begin of code block"  shift, and go to state 286
    '$'                    shift, and go to state 503
    '@'                    shift, and go to state 674

    expression_block  go to state 675
    block_or_lambda   go to state 676
    expr_block        go to state 678


State 472

  261 expr_pipe: "@@ <|" . expr_block

    "begin of code block"  shift, and go to state 286
    '$'                    shift, and go to state 503
    '@'                    shift, and go to state 674

    expression_block  go to state 675
    block_or_lambda   go to state 676
    expr_block        go to state 679


State 473

  502 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 680


State 474

  503 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 681


State 475

  504 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 682


State 476

  505 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 683


State 477

  506 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 684


State 478

  508 expr_mtag: "$c" . '(' expr ')' '(' ')'
  509          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 685


State 479

  507 expr_mtag: "..." .

    $default  reduce using rule 507 (expr_mtag)


State 480

  801 make_struct_decl: "[[" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  802                 | "[[" . type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  803                 | "[[" . type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  804                 | "[[" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  831 make_dim_decl: "[[" . type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  865 array_comprehension: "[[" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']'

    "for"        shift, and go to state 686
    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 687


State 481

  805 make_struct_decl: "[{" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  806                 | "[{" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  832 make_dim_decl: "[{" . type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr
  866 array_comprehension: "[{" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "for"        shift, and go to state 688
    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 689


State 482

  855 make_table_decl: "{{" . make_table optional_trailing_semicolon_cur_cur
  868 array_comprehension: "{{" . "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "for"                             shift, and go to state 690
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 691
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_map_tuple          go to state 692
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table              go to state 693
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 483

  346 expr_numeric_const: "integer constant" .

    $default  reduce using rule 346 (expr_numeric_const)


State 484

  348 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 348 (expr_numeric_const)


State 485

  347 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 347 (expr_numeric_const)


State 486

  349 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 349 (expr_numeric_const)


State 487

  350 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 350 (expr_numeric_const)


State 488

  351 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 351 (expr_numeric_const)


State 489

  352 expr_numeric_const: "double constant" .

    $default  reduce using rule 352 (expr_numeric_const)


State 490

  246 expr_keyword: "keyword" . expr expression_block
  255 expression_keyword: "keyword" . '<' $@7 type_declaration_no_options_list '>' $@8 expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '<'                               shift, and go to state 694
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 695
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 491

  258 expression_keyword: "type function" . '<' $@9 type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces

    '<'  shift, and go to state 696


State 492

   31 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 28 (string_builder_body)

    string_builder_body  go to state 697


State 493

  854 make_table_decl: "begin of code block" . expr_map_tuple_list optional_comma "end of code block"
  867 array_comprehension: "begin of code block" . "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "for"                             shift, and go to state 698
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 691
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_map_tuple          go to state 699
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    expr_map_tuple_list     go to state 700
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 494

  218 expression_block: "begin of code block" expressions "end of code block" .
  219                 | "begin of code block" expressions "end of code block" . "finally" "begin of code block" expressions "end of code block"

    "finally"  shift, and go to state 701

    $default  reduce using rule 218 (expression_block)


State 495

  222 expression_any: "end of expression" .

    $default  reduce using rule 222 (expression_any)


State 496

  431 expr: '-' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 702
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 497

  430 expr: '+' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 703
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 498

  467 expr: '*' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 704
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 499

  429 expr: '~' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 705
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 500

  428 expr: '!' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 706
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 501

  830 make_dim_decl: '[' . expr_list optional_comma ']'
  863 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  864                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "for"                             shift, and go to state 707
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "iterator"                        shift, and go to state 708
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 709
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 710
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 502

  458 expr: '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 711
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 710
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 503

  330 block_or_lambda: '$' .

    $default  reduce using rule 330 (block_or_lambda)


State 504

  331 block_or_lambda: '@' .
  332                | '@' . '@'
  399 func_addr_expr: '@' . '@' func_addr_name
  402               | '@' . '@' '<' $@22 type_declaration_no_options '>' $@23 func_addr_name
  405               | '@' . '@' '<' $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name
  517 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 712

    $default  reduce using rule 331 (block_or_lambda)


State 505

  422 expr: string_builder .

    $default  reduce using rule 422 (expr)


State 506

  421 expr: expr_reader .

    $default  reduce using rule 421 (expr)


State 507

  240 expression_any: expression_label . "end of expression"

    "end of expression"  shift, and go to state 713


State 508

  241 expression_any: expression_goto . "end of expression"

    "end of expression"  shift, and go to state 714


State 509

   72 expression_if_then_else: if_or_static_if . expr expression_block expression_else

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 715
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 510

   74 expression_if_then_else: expression_if_one_liner . "if" $@3 expr expression_else_one_liner "end of expression"

    "if"  shift, and go to state 716


State 511

  238 expression_any: expression_if_then_else .

    $default  reduce using rule 238 (expression_any)


State 512

  233 expression_any: expression_for_loop .

    $default  reduce using rule 233 (expression_any)


State 513

  230 expression_any: expression_unsafe .

    $default  reduce using rule 230 (expression_any)


State 514

  229 expression_any: expression_while_loop .

    $default  reduce using rule 229 (expression_any)


State 515

  231 expression_any: expression_with .

    $default  reduce using rule 231 (expression_any)


State 516

  232 expression_any: expression_with_alias .

    $default  reduce using rule 232 (expression_any)


State 517

  263 expr_pipe: expr_call_pipe .

    $default  reduce using rule 263 (expr_pipe)


State 518

  244 expressions: expressions expression_any .

    $default  reduce using rule 244 (expressions)


State 519

  224 expression_any: expr_keyword .

    $default  reduce using rule 224 (expression_any)


State 520

  221 expr_call_pipe: expression_keyword . expr_full_block_assumed_piped
  501 expr: expression_keyword .

    '$'  shift, and go to state 503
    '@'  shift, and go to state 674

    '$'       [reduce using rule 501 (expr)]
    '@'       [reduce using rule 501 (expr)]
    $default  reduce using rule 501 (expr)

    block_or_lambda                go to state 717
    expr_full_block_assumed_piped  go to state 718


State 521

  223 expression_any: expr_pipe .

    $default  reduce using rule 223 (expression_any)


State 522

  393 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  394                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  413 expr_call: name_in_namespace . '(' ')'
  414          | name_in_namespace . '(' make_struct_single ')'
  415          | name_in_namespace . '(' expr_list ')'
  419 expr: name_in_namespace .
  499     | name_in_namespace . "name"

    "name"  shift, and go to state 719
    '('     shift, and go to state 720

    "name"    [reduce using rule 419 (expr)]
    '('       [reduce using rule 419 (expr)]
    $default  reduce using rule 419 (expr)


State 523

  227 expression_any: expression_delete . "end of expression"

    "end of expression"  shift, and go to state 721


State 524

  492 expr: expr_new .

    $default  reduce using rule 492 (expr)


State 525

   70 expression_if_one_liner: expression_break .
  234 expression_any: expression_break . "end of expression"

    "end of expression"  shift, and go to state 722

    $default  reduce using rule 70 (expression_if_one_liner)


State 526

   71 expression_if_one_liner: expression_continue .
  235 expression_any: expression_continue . "end of expression"

    "end of expression"  shift, and go to state 723

    $default  reduce using rule 71 (expression_if_one_liner)


State 527

   68 expression_if_one_liner: expression_return_no_pipe .
  283 expression_return: expression_return_no_pipe . "end of expression"

    "end of expression"  shift, and go to state 724

    $default  reduce using rule 68 (expression_if_one_liner)


State 528

  236 expression_any: expression_return .

    $default  reduce using rule 236 (expression_any)


State 529

   69 expression_if_one_liner: expression_yield_no_pipe .
  288 expression_yield: expression_yield_no_pipe . "end of expression"

    "end of expression"  shift, and go to state 725

    $default  reduce using rule 69 (expression_if_one_liner)


State 530

  237 expression_any: expression_yield .

    $default  reduce using rule 237 (expression_any)


State 531

  239 expression_any: expression_try_catch .

    $default  reduce using rule 239 (expression_any)


State 532

  305 expression_let: kwd_let . optional_in_scope let_variable_declaration
  306               | kwd_let . optional_in_scope tuple_expansion_variable_declaration

    "inscope"  shift, and go to state 726

    $default  reduce using rule 298 (optional_in_scope)

    optional_in_scope  go to state 727


State 533

  228 expression_any: expression_let .

    $default  reduce using rule 228 (expression_any)


State 534

  491 expr: expr_cast .

    $default  reduce using rule 491 (expr)


State 535

  490 expr: expr_type_decl .

    $default  reduce using rule 490 (expr)


State 536

  489 expr: expr_type_info .

    $default  reduce using rule 489 (expr)


State 537

  343 expr_full_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 15

    $default  reduce using rule 119 (optional_annotation_list)

    optional_annotation_list  go to state 728


State 538

  495 expr: expr_full_block .

    $default  reduce using rule 495 (expr)


State 539

  420 expr: expr_numeric_const .

    $default  reduce using rule 420 (expr)


State 540

  226 expression_any: expr_assign . "end of expression"
  259 expr_pipe: expr_assign . " <|" expr_block

    " <|"                shift, and go to state 729
    "end of expression"  shift, and go to state 730


State 541

  225 expression_any: expr_assign_pipe .

    $default  reduce using rule 225 (expression_any)


State 542

  494 expr: expr_named_call .

    $default  reduce using rule 494 (expr)


State 543

  493 expr: expr_method_call .

    $default  reduce using rule 493 (expr)


State 544

  465 expr: func_addr_expr .

    $default  reduce using rule 465 (expr)


State 545

  426 expr: expr_field .

    $default  reduce using rule 426 (expr)


State 546

  466 expr: expr_call .

    $default  reduce using rule 466 (expr)


State 547

   67 expression_if_one_liner: expr .
  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  353 expr_assign: expr .
  354            | expr . '=' expr
  355            | expr . "<-" expr
  356            | expr . ":=" expr
  357            | expr . "&=" expr
  358            | expr . "|=" expr
  359            | expr . "^=" expr
  360            | expr . "&&=" expr
  361            | expr . "||=" expr
  362            | expr . "^^=" expr
  363            | expr . "+=" expr
  364            | expr . "-=" expr
  365            | expr . "*=" expr
  366            | expr . "/=" expr
  367            | expr . "%=" expr
  368            | expr . "<<=" expr
  369            | expr . ">>=" expr
  370            | expr . "<<<=" expr
  371            | expr . ">>>=" expr
  376 expr_assign_pipe: expr . '=' expr_assign_pipe_right
  377                 | expr . "<-" expr_assign_pipe_right
  378                 | expr . "&=" expr_assign_pipe_right
  379                 | expr . "|=" expr_assign_pipe_right
  380                 | expr . "^=" expr_assign_pipe_right
  381                 | expr . "&&=" expr_assign_pipe_right
  382                 | expr . "||=" expr_assign_pipe_right
  383                 | expr . "^^=" expr_assign_pipe_right
  384                 | expr . "+=" expr_assign_pipe_right
  385                 | expr . "-=" expr_assign_pipe_right
  386                 | expr . "*=" expr_assign_pipe_right
  387                 | expr . "/=" expr_assign_pipe_right
  388                 | expr . "%=" expr_assign_pipe_right
  389                 | expr . "<<=" expr_assign_pipe_right
  390                 | expr . ">>=" expr_assign_pipe_right
  391                 | expr . "<<<=" expr_assign_pipe_right
  392                 | expr . ">>>=" expr_assign_pipe_right
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 731
    "as"    shift, and go to state 732
    "+="    shift, and go to state 733
    "-="    shift, and go to state 734
    "/="    shift, and go to state 735
    "*="    shift, and go to state 736
    "%="    shift, and go to state 737
    "&="    shift, and go to state 738
    "|="    shift, and go to state 739
    "^="    shift, and go to state 740
    "<<"    shift, and go to state 741
    ">>"    shift, and go to state 742
    "++"    shift, and go to state 743
    "--"    shift, and go to state 744
    "<="    shift, and go to state 745
    "<<="   shift, and go to state 746
    ">>="   shift, and go to state 747
    ">="    shift, and go to state 748
    "=="    shift, and go to state 749
    "!="    shift, and go to state 750
    "->"    shift, and go to state 751
    "<-"    shift, and go to state 752
    "??"    shift, and go to state 753
    "?."    shift, and go to state 754
    "?["    shift, and go to state 755
    "<|"    shift, and go to state 756
    "|>"    shift, and go to state 757
    ":="    shift, and go to state 758
    "<<<"   shift, and go to state 759
    ">>>"   shift, and go to state 760
    "<<<="  shift, and go to state 761
    ">>>="  shift, and go to state 762
    "&&"    shift, and go to state 763
    "||"    shift, and go to state 764
    "^^"    shift, and go to state 765
    "&&="   shift, and go to state 766
    "||="   shift, and go to state 767
    "^^="   shift, and go to state 768
    ".."    shift, and go to state 769
    '='     shift, and go to state 770
    '?'     shift, and go to state 771
    '|'     shift, and go to state 772
    '^'     shift, and go to state 773
    '&'     shift, and go to state 774
    '<'     shift, and go to state 775
    '>'     shift, and go to state 776
    '-'     shift, and go to state 777
    '+'     shift, and go to state 778
    '*'     shift, and go to state 779
    '/'     shift, and go to state 780
    '%'     shift, and go to state 781
    '.'     shift, and go to state 782
    '['     shift, and go to state 783
    '$'     shift, and go to state 503
    '@'     shift, and go to state 674

    "if"      reduce using rule 67 (expression_if_one_liner)
    $default  reduce using rule 353 (expr_assign)

    block_or_lambda                go to state 717
    expr_full_block_assumed_piped  go to state 784


State 548

  427 expr: expr_mtag .

    $default  reduce using rule 427 (expr)


State 549

  416 expr_call: basic_type_declaration . '(' ')'
  417          | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 785


State 550

  423 expr: make_decl .

    $default  reduce using rule 423 (expr)


State 551

  769 make_decl: make_struct_decl .

    $default  reduce using rule 769 (make_decl)


State 552

  773 make_decl: make_tuple_call .

    $default  reduce using rule 773 (make_decl)


State 553

  770 make_decl: make_dim_decl .

    $default  reduce using rule 770 (make_decl)


State 554

  771 make_decl: make_table_decl .

    $default  reduce using rule 771 (make_decl)


State 555

  772 make_decl: array_comprehension .

    $default  reduce using rule 772 (make_decl)


State 556

  593 enum_list: enum_list "name" . "end of expression"
  594          | enum_list "name" . '=' expr "end of expression"

    "end of expression"  shift, and go to state 786
    '='                  shift, and go to state 787


State 557

  592 enum_list: enum_list "end of expression" .

    $default  reduce using rule 592 (enum_list)


State 558

  611 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list $@42 . "end of code block"

    "end of code block"  shift, and go to state 788


State 559

  614 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 . enum_list $@44 "end of code block"

    $default  reduce using rule 591 (enum_list)

    enum_list  go to state 789


State 560

  616 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 616 (optional_structure_parent)


State 561

  534 struct_variable_declaration_list: struct_variable_declaration_list . $@34 structure_variable_declaration "end of expression"
  536                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header "end of expression"
  538                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block
  539                                 | struct_variable_declaration_list . '[' annotation_list ']' "end of expression"
  626 optional_struct_variable_declaration_list: "begin of code block" struct_variable_declaration_list . "end of code block"

    "end of code block"  shift, and go to state 790
    '['                  shift, and go to state 791

    "def"     reduce using rule 119 (optional_annotation_list)
    $default  reduce using rule 533 ($@34)

    optional_annotation_list  go to state 792
    $@34                      go to state 793


State 562

  582 global_variable_declaration_list: global_variable_declaration_list $@37 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 582 (global_variable_declaration_list)


State 563

  519 optional_field_annotation: "[[" annotation_argument_list ']' ']' .

    $default  reduce using rule 519 (optional_field_annotation)


State 564

  500 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 660


State 565

  255 expression_keyword: "keyword" . '<' $@7 type_declaration_no_options_list '>' $@8 expr

    '<'  shift, and go to state 694


State 566

  501 expr: expression_keyword .

    $default  reduce using rule 501 (expr)


State 567

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'
  571 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783
    ')'    shift, and go to state 794


State 568

  572 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 572 (let_variable_name_with_pos_list)


State 569

  573 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  574                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 795

    $default  reduce using rule 573 (let_variable_name_with_pos_list)


State 570

  575 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . "end of expression"
  576                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"
  577                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr_pipe
  690 type_declaration_no_options: type_declaration_no_options . dim_list
  691                            | type_declaration_no_options . '[' ']'
  699                            | type_declaration_no_options . '-' '[' ']'
  700                            | type_declaration_no_options . "explicit"
  701                            | type_declaration_no_options . "const"
  702                            | type_declaration_no_options . '-' "const"
  703                            | type_declaration_no_options . '&'
  704                            | type_declaration_no_options . '-' '&'
  705                            | type_declaration_no_options . '#'
  706                            | type_declaration_no_options . "implicit"
  707                            | type_declaration_no_options . '-' '#'
  708                            | type_declaration_no_options . "==" "const"
  709                            | type_declaration_no_options . "==" '&'
  710                            | type_declaration_no_options . '?'
  714                            | type_declaration_no_options . "??"

    "const"              shift, and go to state 406
    "implicit"           shift, and go to state 407
    "explicit"           shift, and go to state 408
    "=="                 shift, and go to state 409
    "<-"                 shift, and go to state 571
    "??"                 shift, and go to state 410
    ":="                 shift, and go to state 572
    "end of expression"  shift, and go to state 796
    '='                  shift, and go to state 573
    '?'                  shift, and go to state 411
    '&'                  shift, and go to state 412
    '-'                  shift, and go to state 413
    '['                  shift, and go to state 414
    '#'                  shift, and go to state 415

    copy_or_move_or_clone  go to state 797
    dim_list               go to state 416


State 571

  566 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 566 (copy_or_move_or_clone)


State 572

  567 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 567 (copy_or_move_or_clone)


State 573

  565 copy_or_move_or_clone: '=' .

    $default  reduce using rule 565 (copy_or_move_or_clone)


State 574

  578 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr "end of expression"
  579                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 470
    "@ <|"                            shift, and go to state 471
    "@@ <|"                           shift, and go to state 472
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 517
    expression_keyword      go to state 520
    expr_pipe               go to state 798
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign             go to state 642
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 799
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 575

  694 type_declaration_no_options: "type" '<' $@49 . type_declaration '>' $@50

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 800


State 576

  717 type_declaration_no_options: "array" '<' $@54 . type_declaration '>' $@55

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 801


State 577

  720 type_declaration_no_options: "table" '<' $@56 . table_type_pair '>' $@57

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    table_type_pair              go to state 802
    type_declaration_no_options  go to state 356
    type_declaration             go to state 803


State 578

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'
  695 type_declaration_no_options: "typedecl" '(' expr . ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783
    ')'    shift, and go to state 804


State 579

  723 type_declaration_no_options: "iterator" '<' $@58 . type_declaration '>' $@59

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 805


State 580

  713 type_declaration_no_options: "smart_ptr" '<' $@52 . type_declaration '>' $@53

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 806


State 581

  672 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 807


State 582

  681 bitfield_type_declaration: "bitfield" '<' $@47 . bitfield_bits '>' $@48

    "name"  shift, and go to state 808

    bitfield_bits  go to state 809


State 583

  727 type_declaration_no_options: "block" '<' $@60 . type_declaration '>' $@61

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 810


State 584

  730 type_declaration_no_options: "block" '<' $@62 . optional_function_argument_list optional_function_type '>' $@63

    '('  shift, and go to state 284

    $default  reduce using rule 121 (optional_function_argument_list)

    optional_function_argument_list  go to state 811


State 585

  734 type_declaration_no_options: "function" '<' $@64 . type_declaration '>' $@65

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 812


State 586

  737 type_declaration_no_options: "function" '<' $@66 . optional_function_argument_list optional_function_type '>' $@67

    '('  shift, and go to state 284

    $default  reduce using rule 121 (optional_function_argument_list)

    optional_function_argument_list  go to state 813


State 587

  741 type_declaration_no_options: "lambda" '<' $@68 . type_declaration '>' $@69

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 814


State 588

  744 type_declaration_no_options: "lambda" '<' $@70 . optional_function_argument_list optional_function_type '>' $@71

    '('  shift, and go to state 284

    $default  reduce using rule 121 (optional_function_argument_list)

    optional_function_argument_list  go to state 815


State 589

  747 type_declaration_no_options: "tuple" '<' $@72 . tuple_type_list '>' $@73

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 608
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    tuple_type                   go to state 816
    tuple_type_list              go to state 817
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 611


State 590

  750 type_declaration_no_options: "variant" '<' $@74 . variant_type_list '>' $@75

    "name"  shift, and go to state 613

    variant_type       go to state 818
    variant_type_list  go to state 819


State 591

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'
  673 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783
    ')'    shift, and go to state 820


State 592

  698 type_declaration_no_options: '$' name_in_namespace '<' . $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    $default  reduce using rule 697 ($@51)

    $@51  go to state 821


State 593

  696 type_declaration_no_options: '$' name_in_namespace '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    $default  reduce using rule 247 (optional_expr_list)

    string_builder          go to state 505
    expr_reader             go to state 506
    optional_expr_list      go to state 822
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 823
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 710
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 594

  708 type_declaration_no_options: type_declaration_no_options "==" "const" .

    $default  reduce using rule 708 (type_declaration_no_options)


State 595

  709 type_declaration_no_options: type_declaration_no_options "==" '&' .

    $default  reduce using rule 709 (type_declaration_no_options)


State 596

  702 type_declaration_no_options: type_declaration_no_options '-' "const" .

    $default  reduce using rule 702 (type_declaration_no_options)


State 597

  704 type_declaration_no_options: type_declaration_no_options '-' '&' .

    $default  reduce using rule 704 (type_declaration_no_options)


State 598

  699 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'

    ']'  shift, and go to state 824


State 599

  707 type_declaration_no_options: type_declaration_no_options '-' '#' .

    $default  reduce using rule 707 (type_declaration_no_options)


State 600

  691 type_declaration_no_options: type_declaration_no_options '[' ']' .

    $default  reduce using rule 691 (type_declaration_no_options)


State 601

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'
  684 dim_list: '[' expr . ']'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783
    ']'    shift, and go to state 825


State 602

  685 dim_list: dim_list '[' . expr ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 826
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 603

  753 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 753 (type_declaration)


State 604

  690 type_declaration_no_options: type_declaration_no_options . dim_list
  691                            | type_declaration_no_options . '[' ']'
  699                            | type_declaration_no_options . '-' '[' ']'
  700                            | type_declaration_no_options . "explicit"
  701                            | type_declaration_no_options . "const"
  702                            | type_declaration_no_options . '-' "const"
  703                            | type_declaration_no_options . '&'
  704                            | type_declaration_no_options . '-' '&'
  705                            | type_declaration_no_options . '#'
  706                            | type_declaration_no_options . "implicit"
  707                            | type_declaration_no_options . '-' '#'
  708                            | type_declaration_no_options . "==" "const"
  709                            | type_declaration_no_options . "==" '&'
  710                            | type_declaration_no_options . '?'
  714                            | type_declaration_no_options . "??"
  752 type_declaration: type_declaration '|' type_declaration_no_options .

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    $default  reduce using rule 752 (type_declaration)

    dim_list  go to state 416


State 605

  678 bitfield_alias_bits: bitfield_alias_bits "name" . "end of expression"

    "end of expression"  shift, and go to state 827


State 606

  677 bitfield_alias_bits: bitfield_alias_bits "end of expression" .

    $default  reduce using rule 677 (bitfield_alias_bits)


State 607

  768 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 . "end of code block"

    "end of code block"  shift, and go to state 828


State 608

  264 name_in_namespace: "name" .
  265                  | "name" . "::" "name"
  545 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 98
    ':'   shift, and go to state 829

    $default  reduce using rule 264 (name_in_namespace)


State 609

  549 tuple_alias_type_list: tuple_alias_type_list "end of expression" .

    $default  reduce using rule 549 (tuple_alias_type_list)


State 610

  550 tuple_alias_type_list: tuple_alias_type_list tuple_type . "end of expression"

    "end of expression"  shift, and go to state 830


State 611

  544 tuple_type: type_declaration .
  752 type_declaration: type_declaration . '|' type_declaration_no_options
  753                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417

    $default  reduce using rule 544 (tuple_type)


State 612

  758 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 . "end of code block"

    "end of code block"  shift, and go to state 831


State 613

  551 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 832


State 614

  555 variant_alias_type_list: variant_alias_type_list "end of expression" .

    $default  reduce using rule 555 (variant_alias_type_list)


State 615

  556 variant_alias_type_list: variant_alias_type_list variant_type . "end of expression"

    "end of expression"  shift, and go to state 833


State 616

  763 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 . "end of code block"

    "end of code block"  shift, and go to state 834


State 617

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'
  541 function_argument_declaration: "$a" '(' expr . ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783
    ')'    shift, and go to state 835


State 618

  631 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 836


State 619

  630 variable_name_with_pos_list: "name" .
  632                            | "name" . "aka" "name"

    "aka"  shift, and go to state 837

    $default  reduce using rule 630 (variable_name_with_pos_list)


State 620

  540 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration .

    $default  reduce using rule 540 (function_argument_declaration)


State 621

  559 variable_declaration: variable_name_with_pos_list .
  560                     | variable_name_with_pos_list . '&'
  561                     | variable_name_with_pos_list . ':' type_declaration
  562                     | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  563                     | variable_name_with_pos_list . copy_or_move expr
  564                     | variable_name_with_pos_list . copy_or_move expr_pipe
  633 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  634                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 838
    ','   shift, and go to state 839
    '='   shift, and go to state 840
    ':'   shift, and go to state 841
    '&'   shift, and go to state 842

    $default  reduce using rule 559 (variable_declaration)

    copy_or_move  go to state 843


State 622

  543 function_argument_list: function_argument_list "end of expression" function_argument_declaration .

    $default  reduce using rule 543 (function_argument_list)


State 623

  809 make_struct_decl: "struct" '<' . $@88 type_declaration_no_options '>' $@89 '(' use_initializer make_struct_dim ')'

    $default  reduce using rule 807 ($@88)

    $@88  go to state 844


State 624

  812 make_struct_decl: "class" '<' . $@90 type_declaration_no_options '>' $@91 '(' use_initializer make_struct_dim ')'

    $default  reduce using rule 810 ($@90)

    $@90  go to state 845


State 625

   78 expression_while_loop: "while" expr . expression_block
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 731
    "as"                   shift, and go to state 732
    "<<"                   shift, and go to state 741
    ">>"                   shift, and go to state 742
    "++"                   shift, and go to state 743
    "--"                   shift, and go to state 744
    "<="                   shift, and go to state 745
    ">="                   shift, and go to state 748
    "=="                   shift, and go to state 749
    "!="                   shift, and go to state 750
    "->"                   shift, and go to state 751
    "??"                   shift, and go to state 753
    "?."                   shift, and go to state 754
    "?["                   shift, and go to state 755
    "<|"                   shift, and go to state 756
    "|>"                   shift, and go to state 757
    "<<<"                  shift, and go to state 759
    ">>>"                  shift, and go to state 760
    "&&"                   shift, and go to state 763
    "||"                   shift, and go to state 764
    "^^"                   shift, and go to state 765
    ".."                   shift, and go to state 769
    "begin of code block"  shift, and go to state 286
    '?'                    shift, and go to state 771
    '|'                    shift, and go to state 772
    '^'                    shift, and go to state 773
    '&'                    shift, and go to state 774
    '<'                    shift, and go to state 775
    '>'                    shift, and go to state 776
    '-'                    shift, and go to state 777
    '+'                    shift, and go to state 778
    '*'                    shift, and go to state 779
    '/'                    shift, and go to state 780
    '%'                    shift, and go to state 781
    '.'                    shift, and go to state 782
    '['                    shift, and go to state 783

    expression_block  go to state 846


State 626

   76 expression_for_loop: "for" $@4 . variable_name_with_pos_list "in" expr_list expression_block

    "$i"    shift, and go to state 618
    "name"  shift, and go to state 619

    variable_name_with_pos_list  go to state 847


State 627

  271 new_type_declaration: '<' . $@11 type_declaration '>' $@12

    $default  reduce using rule 269 ($@11)

    $@11  go to state 848


State 628

  273 expr_new: "new" new_type_declaration .
  274         | "new" new_type_declaration . '(' use_initializer ')'
  275         | "new" new_type_declaration . '(' expr_list ')'
  276         | "new" new_type_declaration . '(' use_initializer make_struct_single ')'

    '('  shift, and go to state 849

    '('       [reduce using rule 273 (expr_new)]
    $default  reduce using rule 273 (expr_new)


State 629

  272 new_type_declaration: structure_type_declaration .

    $default  reduce using rule 272 (new_type_declaration)


State 630

  277 expr_new: "new" make_decl .

    $default  reduce using rule 277 (expr_new)


State 631

  319 expr_type_info: "typeinfo" '(' . name_in_namespace expr ')'
  320               | "typeinfo" '(' . name_in_namespace '<' "name" '>' expr ')'
  321               | "typeinfo" '(' . name_in_namespace '<' "name" "end of expression" "name" '>' expr ')'

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 850


State 632

  322 expr_type_info: "typeinfo" name_in_namespace . '(' expr ')'
  323               | "typeinfo" name_in_namespace . '<' "name" '>' '(' expr ')'
  324               | "typeinfo" name_in_namespace . '<' "name" "end of expression" "name" '>' '(' expr ')'

    '<'  shift, and go to state 851
    '('  shift, and go to state 852


State 633

  318 expr_type_decl: "type" '<' . $@19 type_declaration '>' $@20

    $default  reduce using rule 316 ($@19)

    $@19  go to state 853


State 634

  835 make_dim_decl: "array" "struct" . '<' $@98 type_declaration_no_options '>' $@99 '(' use_initializer make_struct_dim ')'

    '<'  shift, and go to state 854


State 635

  838 make_dim_decl: "array" "tuple" . '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer make_struct_dim ')'

    '<'  shift, and go to state 855


State 636

  841 make_dim_decl: "array" "variant" . '<' $@102 type_declaration_no_options '>' $@103 '(' make_struct_dim ')'

    '<'  shift, and go to state 856


State 637

  845 make_dim_decl: "array" '<' . $@104 type_declaration_no_options '>' $@105 '(' expr_list optional_comma ')'

    $default  reduce using rule 843 ($@104)

    $@104  go to state 857


State 638

  842 make_dim_decl: "array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 858
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 710
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 639

  282 expression_return_no_pipe: "return" "<-" . expr_list
  285 expression_return: "return" "<-" . expr_pipe

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 470
    "@ <|"                            shift, and go to state 471
    "@@ <|"                           shift, and go to state 472
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 517
    expression_keyword      go to state 520
    expr_pipe               go to state 859
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 860
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign             go to state 642
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 643
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 640

  284 expression_return: "return" expr_pipe .

    $default  reduce using rule 284 (expression_return)


State 641

  281 expression_return_no_pipe: "return" expr_list .
  326 expr_list: expr_list . ',' expr

    ','  shift, and go to state 861

    $default  reduce using rule 281 (expression_return_no_pipe)


State 642

  259 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 729


State 643

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  325 expr_list: expr .
  353 expr_assign: expr .
  354            | expr . '=' expr
  355            | expr . "<-" expr
  356            | expr . ":=" expr
  357            | expr . "&=" expr
  358            | expr . "|=" expr
  359            | expr . "^=" expr
  360            | expr . "&&=" expr
  361            | expr . "||=" expr
  362            | expr . "^^=" expr
  363            | expr . "+=" expr
  364            | expr . "-=" expr
  365            | expr . "*=" expr
  366            | expr . "/=" expr
  367            | expr . "%=" expr
  368            | expr . "<<=" expr
  369            | expr . ">>=" expr
  370            | expr . "<<<=" expr
  371            | expr . ">>>=" expr
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 731
    "as"    shift, and go to state 732
    "+="    shift, and go to state 862
    "-="    shift, and go to state 863
    "/="    shift, and go to state 864
    "*="    shift, and go to state 865
    "%="    shift, and go to state 866
    "&="    shift, and go to state 867
    "|="    shift, and go to state 868
    "^="    shift, and go to state 869
    "<<"    shift, and go to state 741
    ">>"    shift, and go to state 742
    "++"    shift, and go to state 743
    "--"    shift, and go to state 744
    "<="    shift, and go to state 745
    "<<="   shift, and go to state 870
    ">>="   shift, and go to state 871
    ">="    shift, and go to state 748
    "=="    shift, and go to state 749
    "!="    shift, and go to state 750
    "->"    shift, and go to state 751
    "<-"    shift, and go to state 872
    "??"    shift, and go to state 753
    "?."    shift, and go to state 754
    "?["    shift, and go to state 755
    "<|"    shift, and go to state 756
    "|>"    shift, and go to state 757
    ":="    shift, and go to state 758
    "<<<"   shift, and go to state 759
    ">>>"   shift, and go to state 760
    "<<<="  shift, and go to state 873
    ">>>="  shift, and go to state 874
    "&&"    shift, and go to state 763
    "||"    shift, and go to state 764
    "^^"    shift, and go to state 765
    "&&="   shift, and go to state 875
    "||="   shift, and go to state 876
    "^^="   shift, and go to state 877
    ".."    shift, and go to state 769
    '='     shift, and go to state 878
    '?'     shift, and go to state 771
    '|'     shift, and go to state 772
    '^'     shift, and go to state 773
    '&'     shift, and go to state 774
    '<'     shift, and go to state 775
    '>'     shift, and go to state 776
    '-'     shift, and go to state 777
    '+'     shift, and go to state 778
    '*'     shift, and go to state 779
    '/'     shift, and go to state 780
    '%'     shift, and go to state 781
    '.'     shift, and go to state 782
    '['     shift, and go to state 783
    '$'     shift, and go to state 503
    '@'     shift, and go to state 674

    " <|"     reduce using rule 353 (expr_assign)
    $default  reduce using rule 325 (expr_list)

    block_or_lambda                go to state 717
    expr_full_block_assumed_piped  go to state 784


State 644

  291 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 879


State 645

  857 make_table_decl: "table" '<' . type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'
  858                | "table" '<' . type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 880


State 646

  856 make_table_decl: "table" '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 691
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_map_tuple          go to state 699
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    expr_map_tuple_list     go to state 881
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 647

  268 expression_delete: "delete" "explicit" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 882
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 648

  267 expression_delete: "delete" expr .
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783

    $default  reduce using rule 267 (expression_delete)


State 649

  468 expr: "deref" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 883
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 650

   79 expression_with: "with" expr . expression_block
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 731
    "as"                   shift, and go to state 732
    "<<"                   shift, and go to state 741
    ">>"                   shift, and go to state 742
    "++"                   shift, and go to state 743
    "--"                   shift, and go to state 744
    "<="                   shift, and go to state 745
    ">="                   shift, and go to state 748
    "=="                   shift, and go to state 749
    "!="                   shift, and go to state 750
    "->"                   shift, and go to state 751
    "??"                   shift, and go to state 753
    "?."                   shift, and go to state 754
    "?["                   shift, and go to state 755
    "<|"                   shift, and go to state 756
    "|>"                   shift, and go to state 757
    "<<<"                  shift, and go to state 759
    ">>>"                  shift, and go to state 760
    "&&"                   shift, and go to state 763
    "||"                   shift, and go to state 764
    "^^"                   shift, and go to state 765
    ".."                   shift, and go to state 769
    "begin of code block"  shift, and go to state 286
    '?'                    shift, and go to state 771
    '|'                    shift, and go to state 772
    '^'                    shift, and go to state 773
    '&'                    shift, and go to state 774
    '<'                    shift, and go to state 775
    '>'                    shift, and go to state 776
    '-'                    shift, and go to state 777
    '+'                    shift, and go to state 778
    '*'                    shift, and go to state 779
    '/'                    shift, and go to state 780
    '%'                    shift, and go to state 781
    '.'                    shift, and go to state 782
    '['                    shift, and go to state 783

    expression_block  go to state 884


State 651

   81 expression_with_alias: "assume" "name" . '=' $@5 expr

    '='  shift, and go to state 885


State 652

  309 expr_cast: "cast" '<' . $@13 type_declaration_no_options '>' $@14 expr

    $default  reduce using rule 307 ($@13)

    $@13  go to state 886


State 653

  312 expr_cast: "upcast" '<' . $@15 type_declaration_no_options '>' $@16 expr

    $default  reduce using rule 310 ($@15)

    $@15  go to state 887


State 654

  469 expr: "addr" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 888
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 655

  242 expression_any: "pass" "end of expression" .

    $default  reduce using rule 242 (expression_any)


State 656

  315 expr_cast: "reinterpret" '<' . $@17 type_declaration_no_options '>' $@18 expr

    $default  reduce using rule 313 ($@17)

    $@17  go to state 889


State 657

   54 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 890


State 658

   55 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 891


State 659

   56 expression_goto: "goto" expr .
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783

    $default  reduce using rule 56 (expression_goto)


State 660

  500 expr: "unsafe" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 892
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 661

   77 expression_unsafe: "unsafe" expression_block .

    $default  reduce using rule 77 (expression_unsafe)


State 662

  849 make_dim_decl: "fixed_array" '<' . $@106 type_declaration_no_options '>' $@107 '(' expr_list optional_comma ')'

    $default  reduce using rule 847 ($@106)

    $@106  go to state 893


State 663

  846 make_dim_decl: "fixed_array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 894
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 710
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 664

  818 make_struct_decl: "default" '<' . $@94 type_declaration_no_options '>' $@95 use_initializer

    $default  reduce using rule 816 ($@94)

    $@94  go to state 895


State 665

  827 make_tuple_call: "tuple" '<' . $@96 type_declaration_no_options '>' $@97 '(' use_initializer make_struct_dim ')'

    $default  reduce using rule 825 ($@96)

    $@96  go to state 896


State 666

  824 make_tuple_call: "tuple" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 897
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 710
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 667

  815 make_struct_decl: "variant" '<' . $@92 type_declaration_no_options '>' $@93 '(' make_struct_dim ')'

    $default  reduce using rule 813 ($@92)

    $@92  go to state 898


State 668

  470 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  471     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 899


State 669

  287 expression_yield_no_pipe: "yield" "<-" . expr
  290 expression_yield: "yield" "<-" . expr_pipe

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 470
    "@ <|"                            shift, and go to state 471
    "@@ <|"                           shift, and go to state 472
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 517
    expression_keyword      go to state 520
    expr_pipe               go to state 900
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign             go to state 642
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 901
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 670

  289 expression_yield: "yield" expr_pipe .

    $default  reduce using rule 289 (expression_yield)


State 671

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  286 expression_yield_no_pipe: "yield" expr .
  353 expr_assign: expr .
  354            | expr . '=' expr
  355            | expr . "<-" expr
  356            | expr . ":=" expr
  357            | expr . "&=" expr
  358            | expr . "|=" expr
  359            | expr . "^=" expr
  360            | expr . "&&=" expr
  361            | expr . "||=" expr
  362            | expr . "^^=" expr
  363            | expr . "+=" expr
  364            | expr . "-=" expr
  365            | expr . "*=" expr
  366            | expr . "/=" expr
  367            | expr . "%=" expr
  368            | expr . "<<=" expr
  369            | expr . ">>=" expr
  370            | expr . "<<<=" expr
  371            | expr . ">>>=" expr
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 731
    "as"    shift, and go to state 732
    "+="    shift, and go to state 862
    "-="    shift, and go to state 863
    "/="    shift, and go to state 864
    "*="    shift, and go to state 865
    "%="    shift, and go to state 866
    "&="    shift, and go to state 867
    "|="    shift, and go to state 868
    "^="    shift, and go to state 869
    "<<"    shift, and go to state 741
    ">>"    shift, and go to state 742
    "++"    shift, and go to state 743
    "--"    shift, and go to state 744
    "<="    shift, and go to state 745
    "<<="   shift, and go to state 870
    ">>="   shift, and go to state 871
    ">="    shift, and go to state 748
    "=="    shift, and go to state 749
    "!="    shift, and go to state 750
    "->"    shift, and go to state 751
    "<-"    shift, and go to state 872
    "??"    shift, and go to state 753
    "?."    shift, and go to state 754
    "?["    shift, and go to state 755
    "<|"    shift, and go to state 756
    "|>"    shift, and go to state 757
    ":="    shift, and go to state 758
    "<<<"   shift, and go to state 759
    ">>>"   shift, and go to state 760
    "<<<="  shift, and go to state 873
    ">>>="  shift, and go to state 874
    "&&"    shift, and go to state 763
    "||"    shift, and go to state 764
    "^^"    shift, and go to state 765
    "&&="   shift, and go to state 875
    "||="   shift, and go to state 876
    "^^="   shift, and go to state 877
    ".."    shift, and go to state 769
    '='     shift, and go to state 878
    '?'     shift, and go to state 771
    '|'     shift, and go to state 772
    '^'     shift, and go to state 773
    '&'     shift, and go to state 774
    '<'     shift, and go to state 775
    '>'     shift, and go to state 776
    '-'     shift, and go to state 777
    '+'     shift, and go to state 778
    '*'     shift, and go to state 779
    '/'     shift, and go to state 780
    '%'     shift, and go to state 781
    '.'     shift, and go to state 782
    '['     shift, and go to state 783
    '$'     shift, and go to state 503
    '@'     shift, and go to state 674

    " <|"     reduce using rule 353 (expr_assign)
    $default  reduce using rule 286 (expression_yield_no_pipe)

    block_or_lambda                go to state 717
    expr_full_block_assumed_piped  go to state 784


State 672

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  454     | "++" expr .
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 731
    "as"  shift, and go to state 732
    "++"  shift, and go to state 743
    "--"  shift, and go to state 744
    "->"  shift, and go to state 751
    "?."  shift, and go to state 754
    "?["  shift, and go to state 755
    "<|"  shift, and go to state 756
    "|>"  shift, and go to state 757
    '.'   shift, and go to state 782
    '['   shift, and go to state 783

    $default  reduce using rule 454 (expr)


State 673

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  455     | "--" expr .
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 731
    "as"  shift, and go to state 732
    "++"  shift, and go to state 743
    "--"  shift, and go to state 744
    "->"  shift, and go to state 751
    "?."  shift, and go to state 754
    "?["  shift, and go to state 755
    "<|"  shift, and go to state 756
    "|>"  shift, and go to state 757
    '.'   shift, and go to state 782
    '['   shift, and go to state 783

    $default  reduce using rule 455 (expr)


State 674

  331 block_or_lambda: '@' .
  332                | '@' . '@'

    '@'  shift, and go to state 902

    $default  reduce using rule 331 (block_or_lambda)


State 675

  341 expr_block: expression_block .

    $default  reduce using rule 341 (expr_block)


State 676

  342 expr_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 15

    $default  reduce using rule 119 (optional_annotation_list)

    optional_annotation_list  go to state 903


State 677

  262 expr_pipe: "$ <|" expr_block .

    $default  reduce using rule 262 (expr_pipe)


State 678

  260 expr_pipe: "@ <|" expr_block .

    $default  reduce using rule 260 (expr_pipe)


State 679

  261 expr_pipe: "@@ <|" expr_block .

    $default  reduce using rule 261 (expr_pipe)


State 680

  502 expr_mtag: "$$" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 904
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 681

  503 expr_mtag: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 905
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 682

  504 expr_mtag: "$v" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 906
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 683

  505 expr_mtag: "$b" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 907
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 684

  506 expr_mtag: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 908
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 685

  508 expr_mtag: "$c" '(' . expr ')' '(' ')'
  509          | "$c" '(' . expr ')' '(' expr_list ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 909
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 686

  865 array_comprehension: "[[" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']'

    "$i"    shift, and go to state 618
    "name"  shift, and go to state 619

    variable_name_with_pos_list  go to state 910


State 687

  690 type_declaration_no_options: type_declaration_no_options . dim_list
  691                            | type_declaration_no_options . '[' ']'
  699                            | type_declaration_no_options . '-' '[' ']'
  700                            | type_declaration_no_options . "explicit"
  701                            | type_declaration_no_options . "const"
  702                            | type_declaration_no_options . '-' "const"
  703                            | type_declaration_no_options . '&'
  704                            | type_declaration_no_options . '-' '&'
  705                            | type_declaration_no_options . '#'
  706                            | type_declaration_no_options . "implicit"
  707                            | type_declaration_no_options . '-' '#'
  708                            | type_declaration_no_options . "==" "const"
  709                            | type_declaration_no_options . "==" '&'
  710                            | type_declaration_no_options . '?'
  714                            | type_declaration_no_options . "??"
  801 make_struct_decl: "[[" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  802                 | "[[" type_declaration_no_options . optional_block optional_trailing_delim_sqr_sqr
  803                 | "[[" type_declaration_no_options . '(' ')' optional_block optional_trailing_delim_sqr_sqr
  804                 | "[[" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  831 make_dim_decl: "[[" type_declaration_no_options . make_dim optional_trailing_semicolon_sqr_sqr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "const"                           shift, and go to state 406
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "where"                           shift, and go to state 911
    "reinterpret"                     shift, and go to state 457
    "implicit"                        shift, and go to state 407
    "explicit"                        shift, and go to state 408
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "=="                              shift, and go to state 409
    "??"                              shift, and go to state 410
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "$f"                              shift, and go to state 912
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 913
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '?'                               shift, and go to state 411
    '&'                               shift, and go to state 412
    '-'                               shift, and go to state 914
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 915
    '('                               shift, and go to state 916
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504
    '#'                               shift, and go to state 415

    $default  reduce using rule 785 (optional_block)

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 917
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    dim_list                go to state 416
    make_decl               go to state 550
    make_struct_fields      go to state 918
    make_struct_dim         go to state 919
    optional_block          go to state 920
    make_struct_decl        go to state 551
    make_tuple              go to state 921
    make_tuple_call         go to state 552
    make_dim                go to state 922
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 688

  866 array_comprehension: "[{" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "$i"    shift, and go to state 618
    "name"  shift, and go to state 619

    variable_name_with_pos_list  go to state 923


State 689

  690 type_declaration_no_options: type_declaration_no_options . dim_list
  691                            | type_declaration_no_options . '[' ']'
  699                            | type_declaration_no_options . '-' '[' ']'
  700                            | type_declaration_no_options . "explicit"
  701                            | type_declaration_no_options . "const"
  702                            | type_declaration_no_options . '-' "const"
  703                            | type_declaration_no_options . '&'
  704                            | type_declaration_no_options . '-' '&'
  705                            | type_declaration_no_options . '#'
  706                            | type_declaration_no_options . "implicit"
  707                            | type_declaration_no_options . '-' '#'
  708                            | type_declaration_no_options . "==" "const"
  709                            | type_declaration_no_options . "==" '&'
  710                            | type_declaration_no_options . '?'
  714                            | type_declaration_no_options . "??"
  805 make_struct_decl: "[{" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_cur_sqr
  806                 | "[{" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  832 make_dim_decl: "[{" type_declaration_no_options . make_dim optional_trailing_semicolon_cur_sqr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "const"                           shift, and go to state 406
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "implicit"                        shift, and go to state 407
    "explicit"                        shift, and go to state 408
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "=="                              shift, and go to state 409
    "??"                              shift, and go to state 410
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "$f"                              shift, and go to state 912
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 913
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '?'                               shift, and go to state 411
    '&'                               shift, and go to state 412
    '-'                               shift, and go to state 914
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 915
    '('                               shift, and go to state 924
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504
    '#'                               shift, and go to state 415

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 917
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    dim_list                go to state 416
    make_decl               go to state 550
    make_struct_fields      go to state 918
    make_struct_dim         go to state 925
    make_struct_decl        go to state 551
    make_tuple              go to state 921
    make_tuple_call         go to state 552
    make_dim                go to state 926
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 690

  868 array_comprehension: "{{" "for" . variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "$i"    shift, and go to state 618
    "name"  shift, and go to state 619

    variable_name_with_pos_list  go to state 927


State 691

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'
  822 make_map_tuple: expr . "=>" expr
  823               | expr .

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "=>"   shift, and go to state 928
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783

    $default  reduce using rule 823 (make_map_tuple)


State 692

  850 make_table: make_map_tuple .

    $default  reduce using rule 850 (make_table)


State 693

  851 make_table: make_table . "end of expression" make_map_tuple
  855 make_table_decl: "{{" make_table . optional_trailing_semicolon_cur_cur

    "end of code block"  shift, and go to state 929
    "end of expression"  shift, and go to state 930
    ";}}"                shift, and go to state 931

    optional_trailing_semicolon_cur_cur  go to state 932


State 694

  255 expression_keyword: "keyword" '<' . $@7 type_declaration_no_options_list '>' $@8 expr

    $default  reduce using rule 253 ($@7)

    $@7  go to state 933


State 695

  246 expr_keyword: "keyword" expr . expression_block
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 731
    "as"                   shift, and go to state 732
    "<<"                   shift, and go to state 741
    ">>"                   shift, and go to state 742
    "++"                   shift, and go to state 743
    "--"                   shift, and go to state 744
    "<="                   shift, and go to state 745
    ">="                   shift, and go to state 748
    "=="                   shift, and go to state 749
    "!="                   shift, and go to state 750
    "->"                   shift, and go to state 751
    "??"                   shift, and go to state 753
    "?."                   shift, and go to state 754
    "?["                   shift, and go to state 755
    "<|"                   shift, and go to state 756
    "|>"                   shift, and go to state 757
    "<<<"                  shift, and go to state 759
    ">>>"                  shift, and go to state 760
    "&&"                   shift, and go to state 763
    "||"                   shift, and go to state 764
    "^^"                   shift, and go to state 765
    ".."                   shift, and go to state 769
    "begin of code block"  shift, and go to state 286
    '?'                    shift, and go to state 771
    '|'                    shift, and go to state 772
    '^'                    shift, and go to state 773
    '&'                    shift, and go to state 774
    '<'                    shift, and go to state 775
    '>'                    shift, and go to state 776
    '-'                    shift, and go to state 777
    '+'                    shift, and go to state 778
    '*'                    shift, and go to state 779
    '/'                    shift, and go to state 780
    '%'                    shift, and go to state 781
    '.'                    shift, and go to state 782
    '['                    shift, and go to state 783

    expression_block  go to state 934


State 696

  258 expression_keyword: "type function" '<' . $@9 type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces

    $default  reduce using rule 256 ($@9)

    $@9  go to state 935


State 697

   29 string_builder_body: string_builder_body . character_sequence
   30                    | string_builder_body . "{" expr "}"
   31 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 162
    STRING_CHARACTER_ESC  shift, and go to state 163
    "end of the string"   shift, and go to state 936
    "{"                   shift, and go to state 937

    character_sequence  go to state 938


State 698

  867 array_comprehension: "begin of code block" "for" . variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "$i"    shift, and go to state 618
    "name"  shift, and go to state 619

    variable_name_with_pos_list  go to state 939


State 699

  852 expr_map_tuple_list: make_map_tuple .

    $default  reduce using rule 852 (expr_map_tuple_list)


State 700

  853 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  854 make_table_decl: "begin of code block" expr_map_tuple_list . optional_comma "end of code block"

    ','  shift, and go to state 940

    $default  reduce using rule 861 (optional_comma)

    optional_comma  go to state 941


State 701

  219 expression_block: "begin of code block" expressions "end of code block" "finally" . "begin of code block" expressions "end of code block"

    "begin of code block"  shift, and go to state 942


State 702

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  431 expr: '-' expr .
  432     | expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 731
    "as"  shift, and go to state 732
    "++"  shift, and go to state 743
    "--"  shift, and go to state 744
    "->"  shift, and go to state 751
    "?."  shift, and go to state 754
    "?["  shift, and go to state 755
    "<|"  shift, and go to state 756
    "|>"  shift, and go to state 757
    '.'   shift, and go to state 782
    '['   shift, and go to state 783

    $default  reduce using rule 431 (expr)


State 703

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  430 expr: '+' expr .
  432     | expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 731
    "as"  shift, and go to state 732
    "++"  shift, and go to state 743
    "--"  shift, and go to state 744
    "->"  shift, and go to state 751
    "?."  shift, and go to state 754
    "?["  shift, and go to state 755
    "<|"  shift, and go to state 756
    "|>"  shift, and go to state 757
    '.'   shift, and go to state 782
    '['   shift, and go to state 783

    $default  reduce using rule 430 (expr)


State 704

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  467     | '*' expr .
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 754
    "?["  shift, and go to state 755
    '.'   shift, and go to state 782
    '['   shift, and go to state 783

    $default  reduce using rule 467 (expr)


State 705

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  429 expr: '~' expr .
  432     | expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 731
    "as"  shift, and go to state 732
    "++"  shift, and go to state 743
    "--"  shift, and go to state 744
    "->"  shift, and go to state 751
    "?."  shift, and go to state 754
    "?["  shift, and go to state 755
    "<|"  shift, and go to state 756
    "|>"  shift, and go to state 757
    '.'   shift, and go to state 782
    '['   shift, and go to state 783

    $default  reduce using rule 429 (expr)


State 706

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  428 expr: '!' expr .
  432     | expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 731
    "as"  shift, and go to state 732
    "++"  shift, and go to state 743
    "--"  shift, and go to state 744
    "->"  shift, and go to state 751
    "?."  shift, and go to state 754
    "?["  shift, and go to state 755
    "<|"  shift, and go to state 756
    "|>"  shift, and go to state 757
    '.'   shift, and go to state 782
    '['   shift, and go to state 783

    $default  reduce using rule 428 (expr)


State 707

  863 array_comprehension: '[' "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 618
    "name"  shift, and go to state 619

    variable_name_with_pos_list  go to state 943


State 708

  864 array_comprehension: '[' "iterator" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "for"  shift, and go to state 944


State 709

  326 expr_list: expr_list . ',' expr
  830 make_dim_decl: '[' expr_list . optional_comma ']'

    ','  shift, and go to state 945

    $default  reduce using rule 861 (optional_comma)

    optional_comma  go to state 946


State 710

  325 expr_list: expr .
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783

    $default  reduce using rule 325 (expr_list)


State 711

  326 expr_list: expr_list . ',' expr
  458 expr: '(' expr_list . optional_comma ')'

    ','  shift, and go to state 945

    $default  reduce using rule 861 (optional_comma)

    optional_comma  go to state 947


State 712

  332 block_or_lambda: '@' '@' .
  399 func_addr_expr: '@' '@' . func_addr_name
  402               | '@' '@' . '<' $@22 type_declaration_no_options '>' $@23 func_addr_name
  405               | '@' '@' . '<' $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name
  517 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 948
    "$c"    shift, and go to state 949
    "name"  shift, and go to state 59
    '<'     shift, and go to state 950

    $default  reduce using rule 332 (block_or_lambda)

    name_in_namespace  go to state 951
    func_addr_name     go to state 952


State 713

  240 expression_any: expression_label "end of expression" .

    $default  reduce using rule 240 (expression_any)


State 714

  241 expression_any: expression_goto "end of expression" .

    $default  reduce using rule 241 (expression_any)


State 715

   72 expression_if_then_else: if_or_static_if expr . expression_block expression_else
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 731
    "as"                   shift, and go to state 732
    "<<"                   shift, and go to state 741
    ">>"                   shift, and go to state 742
    "++"                   shift, and go to state 743
    "--"                   shift, and go to state 744
    "<="                   shift, and go to state 745
    ">="                   shift, and go to state 748
    "=="                   shift, and go to state 749
    "!="                   shift, and go to state 750
    "->"                   shift, and go to state 751
    "??"                   shift, and go to state 753
    "?."                   shift, and go to state 754
    "?["                   shift, and go to state 755
    "<|"                   shift, and go to state 756
    "|>"                   shift, and go to state 757
    "<<<"                  shift, and go to state 759
    ">>>"                  shift, and go to state 760
    "&&"                   shift, and go to state 763
    "||"                   shift, and go to state 764
    "^^"                   shift, and go to state 765
    ".."                   shift, and go to state 769
    "begin of code block"  shift, and go to state 286
    '?'                    shift, and go to state 771
    '|'                    shift, and go to state 772
    '^'                    shift, and go to state 773
    '&'                    shift, and go to state 774
    '<'                    shift, and go to state 775
    '>'                    shift, and go to state 776
    '-'                    shift, and go to state 777
    '+'                    shift, and go to state 778
    '*'                    shift, and go to state 779
    '/'                    shift, and go to state 780
    '%'                    shift, and go to state 781
    '.'                    shift, and go to state 782
    '['                    shift, and go to state 783

    expression_block  go to state 953


State 716

   74 expression_if_then_else: expression_if_one_liner "if" . $@3 expr expression_else_one_liner "end of expression"

    $default  reduce using rule 73 ($@3)

    $@3  go to state 954


State 717

  345 expr_full_block_assumed_piped: block_or_lambda . $@21 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

    $default  reduce using rule 344 ($@21)

    $@21  go to state 955


State 718

  221 expr_call_pipe: expression_keyword expr_full_block_assumed_piped .

    $default  reduce using rule 221 (expr_call_pipe)


State 719

  499 expr: name_in_namespace "name" .

    $default  reduce using rule 499 (expr)


State 720

  393 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  394                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  413 expr_call: name_in_namespace '(' . ')'
  414          | name_in_namespace '(' . make_struct_single ')'
  415          | name_in_namespace '(' . expr_list ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "$f"                              shift, and go to state 912
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 913
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 956
    '('                               shift, and go to state 502
    ')'                               shift, and go to state 957
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 958
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 710
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_fields      go to state 959
    make_struct_single      go to state 960
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 721

  227 expression_any: expression_delete "end of expression" .

    $default  reduce using rule 227 (expression_any)


State 722

  234 expression_any: expression_break "end of expression" .

    $default  reduce using rule 234 (expression_any)


State 723

  235 expression_any: expression_continue "end of expression" .

    $default  reduce using rule 235 (expression_any)


State 724

  283 expression_return: expression_return_no_pipe "end of expression" .

    $default  reduce using rule 283 (expression_return)


State 725

  288 expression_yield: expression_yield_no_pipe "end of expression" .

    $default  reduce using rule 288 (expression_yield)


State 726

  297 optional_in_scope: "inscope" .

    $default  reduce using rule 297 (optional_in_scope)


State 727

  305 expression_let: kwd_let optional_in_scope . let_variable_declaration
  306               | kwd_let optional_in_scope . tuple_expansion_variable_declaration

    "$i"    shift, and go to state 305
    "[["    shift, and go to state 961
    "name"  shift, and go to state 306
    '('     shift, and go to state 962

    tuple_expansion_variable_declaration  go to state 963
    let_variable_name_with_pos_list       go to state 307
    let_variable_declaration              go to state 964


State 728

  343 expr_full_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "[["  shift, and go to state 965

    $default  reduce using rule 339 (optional_capture_list)

    optional_capture_list  go to state 966


State 729

  259 expr_pipe: expr_assign " <|" . expr_block

    "begin of code block"  shift, and go to state 286
    '$'                    shift, and go to state 503
    '@'                    shift, and go to state 674

    expression_block  go to state 675
    block_or_lambda   go to state 676
    expr_block        go to state 967


State 730

  226 expression_any: expr_assign "end of expression" .

    $default  reduce using rule 226 (expression_any)


State 731

  476 expr: expr "is" . "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr "is" . basic_type_declaration
  478     | expr "is" . "name"
  516 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 968
    "bool"      shift, and go to state 316
    "void"      shift, and go to state 317
    "string"    shift, and go to state 318
    "int"       shift, and go to state 320
    "int2"      shift, and go to state 321
    "int3"      shift, and go to state 322
    "int4"      shift, and go to state 323
    "uint"      shift, and go to state 324
    "bitfield"  shift, and go to state 463
    "uint2"     shift, and go to state 326
    "uint3"     shift, and go to state 327
    "uint4"     shift, and go to state 328
    "float"     shift, and go to state 329
    "float2"    shift, and go to state 330
    "float3"    shift, and go to state 331
    "float4"    shift, and go to state 332
    "range"     shift, and go to state 333
    "urange"    shift, and go to state 334
    "range64"   shift, and go to state 335
    "urange64"  shift, and go to state 336
    "int64"     shift, and go to state 338
    "uint64"    shift, and go to state 339
    "double"    shift, and go to state 340
    "int8"      shift, and go to state 343
    "uint8"     shift, and go to state 344
    "int16"     shift, and go to state 345
    "uint16"    shift, and go to state 346
    "$f"        shift, and go to state 969
    "name"      shift, and go to state 970

    basic_type_declaration  go to state 971


State 732

  479 expr: expr "as" . "name"
  482     | expr "as" . "type" '<' $@30 type_declaration '>' $@31
  483     | expr "as" . basic_type_declaration
  514 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 972
    "bool"      shift, and go to state 316
    "void"      shift, and go to state 317
    "string"    shift, and go to state 318
    "int"       shift, and go to state 320
    "int2"      shift, and go to state 321
    "int3"      shift, and go to state 322
    "int4"      shift, and go to state 323
    "uint"      shift, and go to state 324
    "bitfield"  shift, and go to state 463
    "uint2"     shift, and go to state 326
    "uint3"     shift, and go to state 327
    "uint4"     shift, and go to state 328
    "float"     shift, and go to state 329
    "float2"    shift, and go to state 330
    "float3"    shift, and go to state 331
    "float4"    shift, and go to state 332
    "range"     shift, and go to state 333
    "urange"    shift, and go to state 334
    "range64"   shift, and go to state 335
    "urange64"  shift, and go to state 336
    "int64"     shift, and go to state 338
    "uint64"    shift, and go to state 339
    "double"    shift, and go to state 340
    "int8"      shift, and go to state 343
    "uint8"     shift, and go to state 344
    "int16"     shift, and go to state 345
    "uint16"    shift, and go to state 346
    "$f"        shift, and go to state 973
    "name"      shift, and go to state 974

    basic_type_declaration  go to state 975


State 733

  363 expr_assign: expr "+=" . expr
  384 expr_assign_pipe: expr "+=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 976
    "@ <|"                            shift, and go to state 977
    "@@ <|"                           shift, and go to state 978
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 979
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 980
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 981
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 734

  364 expr_assign: expr "-=" . expr
  385 expr_assign_pipe: expr "-=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 976
    "@ <|"                            shift, and go to state 977
    "@@ <|"                           shift, and go to state 978
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 979
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 982
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 983
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 735

  366 expr_assign: expr "/=" . expr
  387 expr_assign_pipe: expr "/=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 976
    "@ <|"                            shift, and go to state 977
    "@@ <|"                           shift, and go to state 978
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 979
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 984
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 985
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 736

  365 expr_assign: expr "*=" . expr
  386 expr_assign_pipe: expr "*=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 976
    "@ <|"                            shift, and go to state 977
    "@@ <|"                           shift, and go to state 978
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 979
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 986
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 987
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 737

  367 expr_assign: expr "%=" . expr
  388 expr_assign_pipe: expr "%=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 976
    "@ <|"                            shift, and go to state 977
    "@@ <|"                           shift, and go to state 978
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 979
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 988
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 989
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 738

  357 expr_assign: expr "&=" . expr
  378 expr_assign_pipe: expr "&=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 976
    "@ <|"                            shift, and go to state 977
    "@@ <|"                           shift, and go to state 978
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 979
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 990
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 991
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 739

  358 expr_assign: expr "|=" . expr
  379 expr_assign_pipe: expr "|=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 976
    "@ <|"                            shift, and go to state 977
    "@@ <|"                           shift, and go to state 978
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 979
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 992
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 993
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 740

  359 expr_assign: expr "^=" . expr
  380 expr_assign_pipe: expr "^=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 976
    "@ <|"                            shift, and go to state 977
    "@@ <|"                           shift, and go to state 978
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 979
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 994
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 995
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 741

  432 expr: expr "<<" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 996
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 742

  433 expr: expr ">>" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 997
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 743

  456 expr: expr "++" .

    $default  reduce using rule 456 (expr)


State 744

  457 expr: expr "--" .

    $default  reduce using rule 457 (expr)


State 745

  445 expr: expr "<=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 998
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 746

  368 expr_assign: expr "<<=" . expr
  389 expr_assign_pipe: expr "<<=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 976
    "@ <|"                            shift, and go to state 977
    "@@ <|"                           shift, and go to state 978
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 979
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 999
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1000
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 747

  369 expr_assign: expr ">>=" . expr
  390 expr_assign_pipe: expr ">>=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 976
    "@ <|"                            shift, and go to state 977
    "@@ <|"                           shift, and go to state 978
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 979
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 1001
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1002
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 748

  446 expr: expr ">=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1003
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 749

  443 expr: expr "==" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1004
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 750

  444 expr: expr "!=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1005
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 751

  395 expr_method_call: expr "->" . "name" '(' ')'
  396                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 1006


State 752

  355 expr_assign: expr "<-" . expr
  377 expr_assign_pipe: expr "<-" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 976
    "@ <|"                            shift, and go to state 977
    "@@ <|"                           shift, and go to state 978
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 979
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 1007
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1008
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 753

  472 expr: expr "??" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1009
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 754

  463 expr: expr "?." . "name"
  511 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1010
    "name"  shift, and go to state 1011


State 755

  461 expr: expr "?[" . expr ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1012
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 756

  496 expr: expr "<|" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1013
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 757

  497 expr: expr "|>" . expr
  498     | expr "|>" . basic_type_declaration

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1014
    expr_mtag               go to state 548
    basic_type_declaration  go to state 1015
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 758

  356 expr_assign: expr ":=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1016
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 759

  434 expr: expr "<<<" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1017
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 760

  435 expr: expr ">>>" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1018
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 761

  370 expr_assign: expr "<<<=" . expr
  391 expr_assign_pipe: expr "<<<=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 976
    "@ <|"                            shift, and go to state 977
    "@@ <|"                           shift, and go to state 978
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 979
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 1019
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1020
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 762

  371 expr_assign: expr ">>>=" . expr
  392 expr_assign_pipe: expr ">>>=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 976
    "@ <|"                            shift, and go to state 977
    "@@ <|"                           shift, and go to state 978
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 979
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 1021
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1022
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 763

  450 expr: expr "&&" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1023
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 764

  451 expr: expr "||" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1024
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 765

  452 expr: expr "^^" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1025
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 766

  360 expr_assign: expr "&&=" . expr
  381 expr_assign_pipe: expr "&&=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 976
    "@ <|"                            shift, and go to state 977
    "@@ <|"                           shift, and go to state 978
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 979
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 1026
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1027
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 767

  361 expr_assign: expr "||=" . expr
  382 expr_assign_pipe: expr "||=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 976
    "@ <|"                            shift, and go to state 977
    "@@ <|"                           shift, and go to state 978
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 979
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 1028
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1029
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 768

  362 expr_assign: expr "^^=" . expr
  383 expr_assign_pipe: expr "^^=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 976
    "@ <|"                            shift, and go to state 977
    "@@ <|"                           shift, and go to state 978
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 979
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 1030
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1031
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 769

  453 expr: expr ".." . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1032
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 770

  354 expr_assign: expr '=' . expr
  376 expr_assign_pipe: expr '=' . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 976
    "@ <|"                            shift, and go to state 977
    "@@ <|"                           shift, and go to state 978
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 979
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 1033
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1034
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 771

  473 expr: expr '?' . expr ':' expr
  484     | expr '?' . "as" "name"
  487     | expr '?' . "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr '?' . "as" basic_type_declaration
  515 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "as"                              shift, and go to state 1035
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1036
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 772

  448 expr: expr '|' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1037
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 773

  449 expr: expr '^' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1038
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 774

  447 expr: expr '&' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1039
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 775

  441 expr: expr '<' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1040
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 776

  442 expr: expr '>' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1041
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 777

  437 expr: expr '-' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1042
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 778

  436 expr: expr '+' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1043
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 779

  438 expr: expr '*' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1044
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 780

  439 expr: expr '/' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1045
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 781

  440 expr: expr '%' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1046
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 782

  406 expr_field: expr '.' . "name"
  407           | expr '.' . '.' "name"
  408           | expr '.' . "name" '(' ')'
  409           | expr '.' . "name" '(' expr_list ')'
  412           | expr '.' . $@26 error $@27
  460 expr: expr '.' . '[' expr ']'
  462     | expr '.' . "?[" expr ']'
  464     | expr '.' . "?." "name"
  510 expr_mtag: expr '.' . "$f" '(' expr ')'
  512          | expr '.' . '.' "$f" '(' expr ')'
  513          | expr '.' . "?." "$f" '(' expr ')'

    "?."    shift, and go to state 1047
    "?["    shift, and go to state 1048
    "$f"    shift, and go to state 1049
    "name"  shift, and go to state 1050
    '.'     shift, and go to state 1051
    '['     shift, and go to state 1052

    $default  reduce using rule 410 ($@26)

    $@26  go to state 1053


State 783

  459 expr: expr '[' . expr ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1054
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 784

  220 expr_call_pipe: expr expr_full_block_assumed_piped .

    $default  reduce using rule 220 (expr_call_pipe)


State 785

  416 expr_call: basic_type_declaration '(' . ')'
  417          | basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    ')'                               shift, and go to state 1055
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 1056
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 710
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 786

  593 enum_list: enum_list "name" "end of expression" .

    $default  reduce using rule 593 (enum_list)


State 787

  594 enum_list: enum_list "name" '=' . expr "end of expression"

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1057
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 788

  611 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list $@42 "end of code block" .

    $default  reduce using rule 611 (enum_declaration)


State 789

  592 enum_list: enum_list . "end of expression"
  593          | enum_list . "name" "end of expression"
  594          | enum_list . "name" '=' expr "end of expression"
  614 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list . $@44 "end of code block"

    "name"               shift, and go to state 556
    "end of expression"  shift, and go to state 557

    $default  reduce using rule 613 ($@44)

    $@44  go to state 1058


State 790

  626 optional_struct_variable_declaration_list: "begin of code block" struct_variable_declaration_list "end of code block" .

    $default  reduce using rule 626 (optional_struct_variable_declaration_list)


State 791

  120 optional_annotation_list: '[' . annotation_list ']'
  539 struct_variable_declaration_list: struct_variable_declaration_list '[' . annotation_list ']' "end of expression"

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 68
    annotation_list               go to state 1059
    name_in_namespace             go to state 70


State 792

  536 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header "end of expression"
  538                                 | struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block

    "def"  shift, and go to state 1060


State 793

  534 struct_variable_declaration_list: struct_variable_declaration_list $@34 . structure_variable_declaration "end of expression"

    "[["  shift, and go to state 218
    '@'   shift, and go to state 219

    $default  reduce using rule 518 (optional_field_annotation)

    metadata_argument_list          go to state 220
    optional_field_annotation       go to state 1061
    structure_variable_declaration  go to state 1062


State 794

  571 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 571 (let_variable_name_with_pos_list)


State 795

  574 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1063


State 796

  575 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression" .

    $default  reduce using rule 575 (let_variable_declaration)


State 797

  576 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"
  577                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 470
    "@ <|"                            shift, and go to state 471
    "@@ <|"                           shift, and go to state 472
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 517
    expression_keyword      go to state 520
    expr_pipe               go to state 1064
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign             go to state 642
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1065
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 798

  579 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 579 (let_variable_declaration)


State 799

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  353 expr_assign: expr .
  354            | expr . '=' expr
  355            | expr . "<-" expr
  356            | expr . ":=" expr
  357            | expr . "&=" expr
  358            | expr . "|=" expr
  359            | expr . "^=" expr
  360            | expr . "&&=" expr
  361            | expr . "||=" expr
  362            | expr . "^^=" expr
  363            | expr . "+=" expr
  364            | expr . "-=" expr
  365            | expr . "*=" expr
  366            | expr . "/=" expr
  367            | expr . "%=" expr
  368            | expr . "<<=" expr
  369            | expr . ">>=" expr
  370            | expr . "<<<=" expr
  371            | expr . ">>>=" expr
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'
  578 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 731
    "as"                 shift, and go to state 732
    "+="                 shift, and go to state 862
    "-="                 shift, and go to state 863
    "/="                 shift, and go to state 864
    "*="                 shift, and go to state 865
    "%="                 shift, and go to state 866
    "&="                 shift, and go to state 867
    "|="                 shift, and go to state 868
    "^="                 shift, and go to state 869
    "<<"                 shift, and go to state 741
    ">>"                 shift, and go to state 742
    "++"                 shift, and go to state 743
    "--"                 shift, and go to state 744
    "<="                 shift, and go to state 745
    "<<="                shift, and go to state 870
    ">>="                shift, and go to state 871
    ">="                 shift, and go to state 748
    "=="                 shift, and go to state 749
    "!="                 shift, and go to state 750
    "->"                 shift, and go to state 751
    "<-"                 shift, and go to state 872
    "??"                 shift, and go to state 753
    "?."                 shift, and go to state 754
    "?["                 shift, and go to state 755
    "<|"                 shift, and go to state 756
    "|>"                 shift, and go to state 757
    ":="                 shift, and go to state 758
    "<<<"                shift, and go to state 759
    ">>>"                shift, and go to state 760
    "<<<="               shift, and go to state 873
    ">>>="               shift, and go to state 874
    "&&"                 shift, and go to state 763
    "||"                 shift, and go to state 764
    "^^"                 shift, and go to state 765
    "&&="                shift, and go to state 875
    "||="                shift, and go to state 876
    "^^="                shift, and go to state 877
    ".."                 shift, and go to state 769
    "end of expression"  shift, and go to state 1066
    '='                  shift, and go to state 878
    '?'                  shift, and go to state 771
    '|'                  shift, and go to state 772
    '^'                  shift, and go to state 773
    '&'                  shift, and go to state 774
    '<'                  shift, and go to state 775
    '>'                  shift, and go to state 776
    '-'                  shift, and go to state 777
    '+'                  shift, and go to state 778
    '*'                  shift, and go to state 779
    '/'                  shift, and go to state 780
    '%'                  shift, and go to state 781
    '.'                  shift, and go to state 782
    '['                  shift, and go to state 783
    '$'                  shift, and go to state 503
    '@'                  shift, and go to state 674

    $default  reduce using rule 353 (expr_assign)

    block_or_lambda                go to state 717
    expr_full_block_assumed_piped  go to state 784


State 800

  694 type_declaration_no_options: "type" '<' $@49 type_declaration . '>' $@50
  752 type_declaration: type_declaration . '|' type_declaration_no_options
  753                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417
    '>'  shift, and go to state 1067


State 801

  717 type_declaration_no_options: "array" '<' $@54 type_declaration . '>' $@55
  752 type_declaration: type_declaration . '|' type_declaration_no_options
  753                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417
    '>'  shift, and go to state 1068


State 802

  720 type_declaration_no_options: "table" '<' $@56 table_type_pair . '>' $@57

    '>'  shift, and go to state 1069


State 803

  682 table_type_pair: type_declaration .
  683                | type_declaration . "end of expression" type_declaration
  752 type_declaration: type_declaration . '|' type_declaration_no_options
  753                 | type_declaration . '|' '#'

    "end of expression"  shift, and go to state 1070
    '|'                  shift, and go to state 417

    $default  reduce using rule 682 (table_type_pair)


State 804

  695 type_declaration_no_options: "typedecl" '(' expr ')' .

    $default  reduce using rule 695 (type_declaration_no_options)


State 805

  723 type_declaration_no_options: "iterator" '<' $@58 type_declaration . '>' $@59
  752 type_declaration: type_declaration . '|' type_declaration_no_options
  753                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417
    '>'  shift, and go to state 1071


State 806

  713 type_declaration_no_options: "smart_ptr" '<' $@52 type_declaration . '>' $@53
  752 type_declaration: type_declaration . '|' type_declaration_no_options
  753                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417
    '>'  shift, and go to state 1072


State 807

  672 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 672 (auto_type_declaration)


State 808

  674 bitfield_bits: "name" .

    $default  reduce using rule 674 (bitfield_bits)


State 809

  675 bitfield_bits: bitfield_bits . "end of expression" "name"
  681 bitfield_type_declaration: "bitfield" '<' $@47 bitfield_bits . '>' $@48

    "end of expression"  shift, and go to state 1073
    '>'                  shift, and go to state 1074


State 810

  727 type_declaration_no_options: "block" '<' $@60 type_declaration . '>' $@61
  752 type_declaration: type_declaration . '|' type_declaration_no_options
  753                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417
    '>'  shift, and go to state 1075


State 811

  730 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list . optional_function_type '>' $@63

    ':'  shift, and go to state 373

    $default  reduce using rule 124 (optional_function_type)

    optional_function_type  go to state 1076


State 812

  734 type_declaration_no_options: "function" '<' $@64 type_declaration . '>' $@65
  752 type_declaration: type_declaration . '|' type_declaration_no_options
  753                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417
    '>'  shift, and go to state 1077


State 813

  737 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list . optional_function_type '>' $@67

    ':'  shift, and go to state 373

    $default  reduce using rule 124 (optional_function_type)

    optional_function_type  go to state 1078


State 814

  741 type_declaration_no_options: "lambda" '<' $@68 type_declaration . '>' $@69
  752 type_declaration: type_declaration . '|' type_declaration_no_options
  753                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417
    '>'  shift, and go to state 1079


State 815

  744 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list . optional_function_type '>' $@71

    ':'  shift, and go to state 373

    $default  reduce using rule 124 (optional_function_type)

    optional_function_type  go to state 1080


State 816

  546 tuple_type_list: tuple_type .

    $default  reduce using rule 546 (tuple_type_list)


State 817

  547 tuple_type_list: tuple_type_list . "end of expression" tuple_type
  747 type_declaration_no_options: "tuple" '<' $@72 tuple_type_list . '>' $@73

    "end of expression"  shift, and go to state 1081
    '>'                  shift, and go to state 1082


State 818

  552 variant_type_list: variant_type .

    $default  reduce using rule 552 (variant_type_list)


State 819

  553 variant_type_list: variant_type_list . "end of expression" variant_type
  750 type_declaration_no_options: "variant" '<' $@74 variant_type_list . '>' $@75

    "end of expression"  shift, and go to state 1083
    '>'                  shift, and go to state 1084


State 820

  673 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 673 (auto_type_declaration)


State 821

  698 type_declaration_no_options: '$' name_in_namespace '<' $@51 . type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    type_declaration_no_options_list  go to state 1085
    name_in_namespace                 go to state 351
    basic_type_declaration            go to state 352
    structure_type_declaration        go to state 353
    auto_type_declaration             go to state 354
    bitfield_type_declaration         go to state 355
    type_declaration_no_options       go to state 356
    type_declaration                  go to state 1086


State 822

  696 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list . ')'

    ')'  shift, and go to state 1087


State 823

  248 optional_expr_list: expr_list .
  326 expr_list: expr_list . ',' expr

    ','  shift, and go to state 861

    $default  reduce using rule 248 (optional_expr_list)


State 824

  699 type_declaration_no_options: type_declaration_no_options '-' '[' ']' .

    $default  reduce using rule 699 (type_declaration_no_options)


State 825

  684 dim_list: '[' expr ']' .

    $default  reduce using rule 684 (dim_list)


State 826

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'
  685 dim_list: dim_list '[' expr . ']'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783
    ']'    shift, and go to state 1088


State 827

  678 bitfield_alias_bits: bitfield_alias_bits "name" "end of expression" .

    $default  reduce using rule 678 (bitfield_alias_bits)


State 828

  768 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block" .

    $default  reduce using rule 768 (bitfield_alias_declaration)


State 829

  545 tuple_type: "name" ':' . type_declaration

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 1089


State 830

  550 tuple_alias_type_list: tuple_alias_type_list tuple_type "end of expression" .

    $default  reduce using rule 550 (tuple_alias_type_list)


State 831

  758 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block" .

    $default  reduce using rule 758 (tuple_alias_declaration)


State 832

  551 variant_type: "name" ':' . type_declaration

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 1090


State 833

  556 variant_alias_type_list: variant_alias_type_list variant_type "end of expression" .

    $default  reduce using rule 556 (variant_alias_type_list)


State 834

  763 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block" .

    $default  reduce using rule 763 (variant_alias_declaration)


State 835

  541 function_argument_declaration: "$a" '(' expr ')' .

    $default  reduce using rule 541 (function_argument_declaration)


State 836

  631 variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1091
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 837

  632 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1092


State 838

  558 copy_or_move: "<-" .

    $default  reduce using rule 558 (copy_or_move)


State 839

  633 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  634                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 1093


State 840

  557 copy_or_move: '=' .

    $default  reduce using rule 557 (copy_or_move)


State 841

  561 variable_declaration: variable_name_with_pos_list ':' . type_declaration
  562                     | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 1094


State 842

  560 variable_declaration: variable_name_with_pos_list '&' .

    $default  reduce using rule 560 (variable_declaration)


State 843

  563 variable_declaration: variable_name_with_pos_list copy_or_move . expr
  564                     | variable_name_with_pos_list copy_or_move . expr_pipe

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 470
    "@ <|"                            shift, and go to state 471
    "@@ <|"                           shift, and go to state 472
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 517
    expression_keyword      go to state 520
    expr_pipe               go to state 1095
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign             go to state 642
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1096
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 844

  809 make_struct_decl: "struct" '<' $@88 . type_declaration_no_options '>' $@89 '(' use_initializer make_struct_dim ')'

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1097


State 845

  812 make_struct_decl: "class" '<' $@90 . type_declaration_no_options '>' $@91 '(' use_initializer make_struct_dim ')'

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1098


State 846

   78 expression_while_loop: "while" expr expression_block .

    $default  reduce using rule 78 (expression_while_loop)


State 847

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list . "in" expr_list expression_block
  633 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  634                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 1099
    ','   shift, and go to state 839


State 848

  271 new_type_declaration: '<' $@11 . type_declaration '>' $@12

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 1100


State 849

  274 expr_new: "new" new_type_declaration '(' . use_initializer ')'
  275         | "new" new_type_declaration '(' . expr_list ')'
  276         | "new" new_type_declaration '(' . use_initializer make_struct_single ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "uninitialized"                   shift, and go to state 1101
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    "name"    [reduce using rule 799 (use_initializer)]
    $default  reduce using rule 799 (use_initializer)

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 1102
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 710
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    use_initializer         go to state 1103
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 850

  319 expr_type_info: "typeinfo" '(' name_in_namespace . expr ')'
  320               | "typeinfo" '(' name_in_namespace . '<' "name" '>' expr ')'
  321               | "typeinfo" '(' name_in_namespace . '<' "name" "end of expression" "name" '>' expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '<'                               shift, and go to state 1104
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1105
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 851

  323 expr_type_info: "typeinfo" name_in_namespace '<' . "name" '>' '(' expr ')'
  324               | "typeinfo" name_in_namespace '<' . "name" "end of expression" "name" '>' '(' expr ')'

    "name"  shift, and go to state 1106


State 852

  322 expr_type_info: "typeinfo" name_in_namespace '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1107
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 853

  318 expr_type_decl: "type" '<' $@19 . type_declaration '>' $@20

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 1108


State 854

  835 make_dim_decl: "array" "struct" '<' . $@98 type_declaration_no_options '>' $@99 '(' use_initializer make_struct_dim ')'

    $default  reduce using rule 833 ($@98)

    $@98  go to state 1109


State 855

  838 make_dim_decl: "array" "tuple" '<' . $@100 type_declaration_no_options '>' $@101 '(' use_initializer make_struct_dim ')'

    $default  reduce using rule 836 ($@100)

    $@100  go to state 1110


State 856

  841 make_dim_decl: "array" "variant" '<' . $@102 type_declaration_no_options '>' $@103 '(' make_struct_dim ')'

    $default  reduce using rule 839 ($@102)

    $@102  go to state 1111


State 857

  845 make_dim_decl: "array" '<' $@104 . type_declaration_no_options '>' $@105 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1112


State 858

  326 expr_list: expr_list . ',' expr
  842 make_dim_decl: "array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 945

    $default  reduce using rule 861 (optional_comma)

    optional_comma  go to state 1113


State 859

  285 expression_return: "return" "<-" expr_pipe .

    $default  reduce using rule 285 (expression_return)


State 860

  282 expression_return_no_pipe: "return" "<-" expr_list .
  326 expr_list: expr_list . ',' expr

    ','  shift, and go to state 861

    $default  reduce using rule 282 (expression_return_no_pipe)


State 861

  326 expr_list: expr_list ',' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1114
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 862

  363 expr_assign: expr "+=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1115
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 863

  364 expr_assign: expr "-=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1116
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 864

  366 expr_assign: expr "/=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1117
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 865

  365 expr_assign: expr "*=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1118
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 866

  367 expr_assign: expr "%=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1119
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 867

  357 expr_assign: expr "&=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1120
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 868

  358 expr_assign: expr "|=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1121
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 869

  359 expr_assign: expr "^=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1122
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 870

  368 expr_assign: expr "<<=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1123
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 871

  369 expr_assign: expr ">>=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1124
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 872

  355 expr_assign: expr "<-" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1125
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 873

  370 expr_assign: expr "<<<=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1126
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 874

  371 expr_assign: expr ">>>=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1127
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 875

  360 expr_assign: expr "&&=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1128
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 876

  361 expr_assign: expr "||=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1129
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 877

  362 expr_assign: expr "^^=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1130
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 878

  354 expr_assign: expr '=' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1131
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 879

  291 expression_try_catch: "try" expression_block "recover" . expression_block

    "begin of code block"  shift, and go to state 286

    expression_block  go to state 1132


State 880

  690 type_declaration_no_options: type_declaration_no_options . dim_list
  691                            | type_declaration_no_options . '[' ']'
  699                            | type_declaration_no_options . '-' '[' ']'
  700                            | type_declaration_no_options . "explicit"
  701                            | type_declaration_no_options . "const"
  702                            | type_declaration_no_options . '-' "const"
  703                            | type_declaration_no_options . '&'
  704                            | type_declaration_no_options . '-' '&'
  705                            | type_declaration_no_options . '#'
  706                            | type_declaration_no_options . "implicit"
  707                            | type_declaration_no_options . '-' '#'
  708                            | type_declaration_no_options . "==" "const"
  709                            | type_declaration_no_options . "==" '&'
  710                            | type_declaration_no_options . '?'
  714                            | type_declaration_no_options . "??"
  857 make_table_decl: "table" '<' type_declaration_no_options . '>' '(' expr_map_tuple_list optional_comma ')'
  858                | "table" '<' type_declaration_no_options . "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    "const"              shift, and go to state 406
    "implicit"           shift, and go to state 407
    "explicit"           shift, and go to state 408
    "=="                 shift, and go to state 409
    "??"                 shift, and go to state 410
    "end of expression"  shift, and go to state 1133
    '?'                  shift, and go to state 411
    '&'                  shift, and go to state 412
    '>'                  shift, and go to state 1134
    '-'                  shift, and go to state 413
    '['                  shift, and go to state 414
    '#'                  shift, and go to state 415

    dim_list  go to state 416


State 881

  853 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  856 make_table_decl: "table" '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 940

    $default  reduce using rule 861 (optional_comma)

    optional_comma  go to state 1135


State 882

  268 expression_delete: "delete" "explicit" expr .
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783

    $default  reduce using rule 268 (expression_delete)


State 883

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  468     | "deref" '(' expr . ')'
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783
    ')'    shift, and go to state 1136


State 884

   79 expression_with: "with" expr expression_block .

    $default  reduce using rule 79 (expression_with)


State 885

   81 expression_with_alias: "assume" "name" '=' . $@5 expr

    $default  reduce using rule 80 ($@5)

    $@5  go to state 1137


State 886

  309 expr_cast: "cast" '<' $@13 . type_declaration_no_options '>' $@14 expr

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1138


State 887

  312 expr_cast: "upcast" '<' $@15 . type_declaration_no_options '>' $@16 expr

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1139


State 888

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  469     | "addr" '(' expr . ')'
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783
    ')'    shift, and go to state 1140


State 889

  315 expr_cast: "reinterpret" '<' $@17 . type_declaration_no_options '>' $@18 expr

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1141


State 890

   54 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 54 (expression_label)


State 891

   55 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 55 (expression_goto)


State 892

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  500     | "unsafe" '(' expr . ')'
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783
    ')'    shift, and go to state 1142


State 893

  849 make_dim_decl: "fixed_array" '<' $@106 . type_declaration_no_options '>' $@107 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1143


State 894

  326 expr_list: expr_list . ',' expr
  846 make_dim_decl: "fixed_array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 945

    $default  reduce using rule 861 (optional_comma)

    optional_comma  go to state 1144


State 895

  818 make_struct_decl: "default" '<' $@94 . type_declaration_no_options '>' $@95 use_initializer

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1145


State 896

  827 make_tuple_call: "tuple" '<' $@96 . type_declaration_no_options '>' $@97 '(' use_initializer make_struct_dim ')'

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1146


State 897

  326 expr_list: expr_list . ',' expr
  824 make_tuple_call: "tuple" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 945

    $default  reduce using rule 861 (optional_comma)

    optional_comma  go to state 1147


State 898

  815 make_struct_decl: "variant" '<' $@92 . type_declaration_no_options '>' $@93 '(' make_struct_dim ')'

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1148


State 899

  470 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  471     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  690 type_declaration_no_options: type_declaration_no_options . dim_list
  691                            | type_declaration_no_options . '[' ']'
  699                            | type_declaration_no_options . '-' '[' ']'
  700                            | type_declaration_no_options . "explicit"
  701                            | type_declaration_no_options . "const"
  702                            | type_declaration_no_options . '-' "const"
  703                            | type_declaration_no_options . '&'
  704                            | type_declaration_no_options . '-' '&'
  705                            | type_declaration_no_options . '#'
  706                            | type_declaration_no_options . "implicit"
  707                            | type_declaration_no_options . '-' '#'
  708                            | type_declaration_no_options . "==" "const"
  709                            | type_declaration_no_options . "==" '&'
  710                            | type_declaration_no_options . '?'
  714                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1149
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 900

  290 expression_yield: "yield" "<-" expr_pipe .

    $default  reduce using rule 290 (expression_yield)


State 901

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  287 expression_yield_no_pipe: "yield" "<-" expr .
  353 expr_assign: expr .
  354            | expr . '=' expr
  355            | expr . "<-" expr
  356            | expr . ":=" expr
  357            | expr . "&=" expr
  358            | expr . "|=" expr
  359            | expr . "^=" expr
  360            | expr . "&&=" expr
  361            | expr . "||=" expr
  362            | expr . "^^=" expr
  363            | expr . "+=" expr
  364            | expr . "-=" expr
  365            | expr . "*=" expr
  366            | expr . "/=" expr
  367            | expr . "%=" expr
  368            | expr . "<<=" expr
  369            | expr . ">>=" expr
  370            | expr . "<<<=" expr
  371            | expr . ">>>=" expr
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 731
    "as"    shift, and go to state 732
    "+="    shift, and go to state 862
    "-="    shift, and go to state 863
    "/="    shift, and go to state 864
    "*="    shift, and go to state 865
    "%="    shift, and go to state 866
    "&="    shift, and go to state 867
    "|="    shift, and go to state 868
    "^="    shift, and go to state 869
    "<<"    shift, and go to state 741
    ">>"    shift, and go to state 742
    "++"    shift, and go to state 743
    "--"    shift, and go to state 744
    "<="    shift, and go to state 745
    "<<="   shift, and go to state 870
    ">>="   shift, and go to state 871
    ">="    shift, and go to state 748
    "=="    shift, and go to state 749
    "!="    shift, and go to state 750
    "->"    shift, and go to state 751
    "<-"    shift, and go to state 872
    "??"    shift, and go to state 753
    "?."    shift, and go to state 754
    "?["    shift, and go to state 755
    "<|"    shift, and go to state 756
    "|>"    shift, and go to state 757
    ":="    shift, and go to state 758
    "<<<"   shift, and go to state 759
    ">>>"   shift, and go to state 760
    "<<<="  shift, and go to state 873
    ">>>="  shift, and go to state 874
    "&&"    shift, and go to state 763
    "||"    shift, and go to state 764
    "^^"    shift, and go to state 765
    "&&="   shift, and go to state 875
    "||="   shift, and go to state 876
    "^^="   shift, and go to state 877
    ".."    shift, and go to state 769
    '='     shift, and go to state 878
    '?'     shift, and go to state 771
    '|'     shift, and go to state 772
    '^'     shift, and go to state 773
    '&'     shift, and go to state 774
    '<'     shift, and go to state 775
    '>'     shift, and go to state 776
    '-'     shift, and go to state 777
    '+'     shift, and go to state 778
    '*'     shift, and go to state 779
    '/'     shift, and go to state 780
    '%'     shift, and go to state 781
    '.'     shift, and go to state 782
    '['     shift, and go to state 783
    '$'     shift, and go to state 503
    '@'     shift, and go to state 674

    " <|"     reduce using rule 353 (expr_assign)
    $default  reduce using rule 287 (expression_yield_no_pipe)

    block_or_lambda                go to state 717
    expr_full_block_assumed_piped  go to state 784


State 902

  332 block_or_lambda: '@' '@' .

    $default  reduce using rule 332 (block_or_lambda)


State 903

  342 expr_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "[["  shift, and go to state 965

    $default  reduce using rule 339 (optional_capture_list)

    optional_capture_list  go to state 1150


State 904

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  502 expr_mtag: "$$" '(' expr . ')'
  510          | expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783
    ')'    shift, and go to state 1151


State 905

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  503 expr_mtag: "$i" '(' expr . ')'
  510          | expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783
    ')'    shift, and go to state 1152


State 906

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  504 expr_mtag: "$v" '(' expr . ')'
  510          | expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783
    ')'    shift, and go to state 1153


State 907

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  505 expr_mtag: "$b" '(' expr . ')'
  510          | expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783
    ')'    shift, and go to state 1154


State 908

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  506 expr_mtag: "$a" '(' expr . ')'
  510          | expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783
    ')'    shift, and go to state 1155


State 909

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  508 expr_mtag: "$c" '(' expr . ')' '(' ')'
  509          | "$c" '(' expr . ')' '(' expr_list ')'
  510          | expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783
    ')'    shift, and go to state 1156


State 910

  633 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  634                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  865 array_comprehension: "[[" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']' ']'

    "in"  shift, and go to state 1157
    ','   shift, and go to state 839


State 911

  786 optional_block: "where" . expr_block

    "begin of code block"  shift, and go to state 286
    '$'                    shift, and go to state 503
    '@'                    shift, and go to state 674

    expression_block  go to state 675
    block_or_lambda   go to state 676
    expr_block        go to state 1158


State 912

  778 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  779                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1159


State 913

  264 name_in_namespace: "name" .
  265                  | "name" . "::" "name"
  774 make_struct_fields: "name" . copy_or_move expr
  775                   | "name" . ":=" expr

    "<-"  shift, and go to state 838
    ":="  shift, and go to state 1160
    "::"  shift, and go to state 98
    '='   shift, and go to state 840

    $default  reduce using rule 264 (name_in_namespace)

    copy_or_move  go to state 1161


State 914

  431 expr: '-' . expr
  699 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  702                            | type_declaration_no_options '-' . "const"
  704                            | type_declaration_no_options '-' . '&'
  707                            | type_declaration_no_options '-' . '#'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "const"                           shift, and go to state 596
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '&'                               shift, and go to state 597
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 1162
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504
    '#'                               shift, and go to state 599

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 702
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 915

  684 dim_list: '[' . expr ']'
  691 type_declaration_no_options: type_declaration_no_options '[' . ']'
  830 make_dim_decl: '[' . expr_list optional_comma ']'
  863 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  864                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "for"                             shift, and go to state 707
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "iterator"                        shift, and go to state 708
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    ']'                               shift, and go to state 600
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 709
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1163
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 916

  458 expr: '(' . expr_list optional_comma ')'
  803 make_struct_decl: "[[" type_declaration_no_options '(' . ')' optional_block optional_trailing_delim_sqr_sqr
  804                 | "[[" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    ')'                               shift, and go to state 1164
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 711
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 710
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 917

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'
  819 make_tuple: expr .
  820           | expr . "=>" expr

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "=>"   shift, and go to state 1165
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783

    $default  reduce using rule 819 (make_tuple)


State 918

  776 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  777                   | make_struct_fields . ',' "name" ":=" expr
  780                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  781                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  783 make_struct_dim: make_struct_fields .

    ','  shift, and go to state 1166

    $default  reduce using rule 783 (make_struct_dim)


State 919

  784 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  801 make_struct_decl: "[[" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"              shift, and go to state 911
    "end of expression"  shift, and go to state 1167

    $default  reduce using rule 785 (optional_block)

    optional_block  go to state 1168


State 920

  802 make_struct_decl: "[[" type_declaration_no_options optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1169
    ",]]"  shift, and go to state 1170
    ']'    shift, and go to state 1171

    optional_trailing_delim_sqr_sqr  go to state 1172


State 921

  821 make_tuple: make_tuple . ',' expr
  828 make_dim: make_tuple .

    ','  shift, and go to state 1173

    $default  reduce using rule 828 (make_dim)


State 922

  829 make_dim: make_dim . "end of expression" make_tuple
  831 make_dim_decl: "[[" type_declaration_no_options make_dim . optional_trailing_semicolon_sqr_sqr

    "end of expression"  shift, and go to state 1174
    ";]]"                shift, and go to state 1175
    ']'                  shift, and go to state 1176

    optional_trailing_semicolon_sqr_sqr  go to state 1177


State 923

  633 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  634                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  866 array_comprehension: "[{" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "in"  shift, and go to state 1178
    ','   shift, and go to state 839


State 924

  458 expr: '(' . expr_list optional_comma ')'
  806 make_struct_decl: "[{" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    ')'                               shift, and go to state 1179
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 711
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 710
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 925

  784 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  805 make_struct_decl: "[{" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"              shift, and go to state 911
    "end of expression"  shift, and go to state 1167

    $default  reduce using rule 785 (optional_block)

    optional_block  go to state 1180


State 926

  829 make_dim: make_dim . "end of expression" make_tuple
  832 make_dim_decl: "[{" type_declaration_no_options make_dim . optional_trailing_semicolon_cur_sqr

    "end of code block"  shift, and go to state 1181
    "end of expression"  shift, and go to state 1174
    ";}]"                shift, and go to state 1182

    optional_trailing_semicolon_cur_sqr  go to state 1183


State 927

  633 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  634                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  868 array_comprehension: "{{" "for" variable_name_with_pos_list . "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "in"  shift, and go to state 1184
    ','   shift, and go to state 839


State 928

  822 make_map_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1185
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 929

  787 optional_trailing_semicolon_cur_cur: "end of code block" . "end of code block"

    "end of code block"  shift, and go to state 1186


State 930

  851 make_table: make_table "end of expression" . make_map_tuple

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 691
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_map_tuple          go to state 1187
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 931

  788 optional_trailing_semicolon_cur_cur: ";}}" .

    $default  reduce using rule 788 (optional_trailing_semicolon_cur_cur)


State 932

  855 make_table_decl: "{{" make_table optional_trailing_semicolon_cur_cur .

    $default  reduce using rule 855 (make_table_decl)


State 933

  255 expression_keyword: "keyword" '<' $@7 . type_declaration_no_options_list '>' $@8 expr

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    type_declaration_no_options_list  go to state 1188
    name_in_namespace                 go to state 351
    basic_type_declaration            go to state 352
    structure_type_declaration        go to state 353
    auto_type_declaration             go to state 354
    bitfield_type_declaration         go to state 355
    type_declaration_no_options       go to state 356
    type_declaration                  go to state 1086


State 934

  246 expr_keyword: "keyword" expr expression_block .

    $default  reduce using rule 246 (expr_keyword)


State 935

  258 expression_keyword: "type function" '<' $@9 . type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    type_declaration_no_options_list  go to state 1189
    name_in_namespace                 go to state 351
    basic_type_declaration            go to state 352
    structure_type_declaration        go to state 353
    auto_type_declaration             go to state 354
    bitfield_type_declaration         go to state 355
    type_declaration_no_options       go to state 356
    type_declaration                  go to state 1086


State 936

   31 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 31 (string_builder)


State 937

   30 string_builder_body: string_builder_body "{" . expr "}"

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1190
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 938

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   29 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 222
    STRING_CHARACTER_ESC  shift, and go to state 223

    STRING_CHARACTER      [reduce using rule 29 (string_builder_body)]
    STRING_CHARACTER_ESC  [reduce using rule 29 (string_builder_body)]
    $default              reduce using rule 29 (string_builder_body)


State 939

  633 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  634                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  867 array_comprehension: "begin of code block" "for" variable_name_with_pos_list . "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "in"  shift, and go to state 1191
    ','   shift, and go to state 839


State 940

  853 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple
  862 optional_comma: ',' .

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    $default  reduce using rule 862 (optional_comma)

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 691
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_map_tuple          go to state 1192
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 941

  854 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma . "end of code block"

    "end of code block"  shift, and go to state 1193


State 942

  219 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" . expressions "end of code block"

    $default  reduce using rule 243 (expressions)

    expressions  go to state 1194


State 943

  633 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  634                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  863 array_comprehension: '[' "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1195
    ','   shift, and go to state 839


State 944

  864 array_comprehension: '[' "iterator" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 618
    "name"  shift, and go to state 619

    variable_name_with_pos_list  go to state 1196


State 945

  326 expr_list: expr_list ',' . expr
  862 optional_comma: ',' .

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    $default  reduce using rule 862 (optional_comma)

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1114
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 946

  830 make_dim_decl: '[' expr_list optional_comma . ']'

    ']'  shift, and go to state 1197


State 947

  458 expr: '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1198


State 948

  398 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 1199


State 949

  517 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 1200


State 950

  402 func_addr_expr: '@' '@' '<' . $@22 type_declaration_no_options '>' $@23 func_addr_name
  405               | '@' '@' '<' . $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name

    ':'       reduce using rule 403 ($@24)
    '>'       reduce using rule 403 ($@24)
    '('       reduce using rule 403 ($@24)
    $default  reduce using rule 400 ($@22)

    $@22  go to state 1201
    $@24  go to state 1202


State 951

  397 func_addr_name: name_in_namespace .

    $default  reduce using rule 397 (func_addr_name)


State 952

  399 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 399 (func_addr_expr)


State 953

   72 expression_if_then_else: if_or_static_if expr expression_block . expression_else

    "else"         shift, and go to state 1203
    "elif"         shift, and go to state 1204
    "static_elif"  shift, and go to state 1205

    $default  reduce using rule 59 (expression_else)

    elif_or_static_elif  go to state 1206
    expression_else      go to state 1207


State 954

   74 expression_if_then_else: expression_if_one_liner "if" $@3 . expr expression_else_one_liner "end of expression"

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1208
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 955

  345 expr_full_block_assumed_piped: block_or_lambda $@21 . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

    '['  shift, and go to state 15

    $default  reduce using rule 119 (optional_annotation_list)

    optional_annotation_list  go to state 1209


State 956

  393 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'
  830 make_dim_decl: '[' . expr_list optional_comma ']'
  863 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  864                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "for"                             shift, and go to state 707
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "iterator"                        shift, and go to state 708
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "$f"                              shift, and go to state 912
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 913
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 709
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 710
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_fields      go to state 1210
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 957

  413 expr_call: name_in_namespace '(' ')' .

    $default  reduce using rule 413 (expr_call)


State 958

  326 expr_list: expr_list . ',' expr
  394 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  415 expr_call: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 1211
    ')'  shift, and go to state 1212


State 959

  776 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  777                   | make_struct_fields . ',' "name" ":=" expr
  780                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  781                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  782 make_struct_single: make_struct_fields .

    ','  shift, and go to state 1166

    $default  reduce using rule 782 (make_struct_single)


State 960

  414 expr_call: name_in_namespace '(' make_struct_single . ')'

    ')'  shift, and go to state 1213


State 961

  301 tuple_expansion_variable_declaration: "[[" . tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  303                                     | "[[" . tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr "end of expression"

    "name"  shift, and go to state 1214

    tuple_expansion  go to state 1215


State 962

  302 tuple_expansion_variable_declaration: '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  304                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression"

    "name"  shift, and go to state 1214

    tuple_expansion  go to state 1216


State 963

  306 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 306 (expression_let)


State 964

  305 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 305 (expression_let)


State 965

  340 optional_capture_list: "[[" . capture_list ']' ']'

    "<-"  shift, and go to state 1217
    ":="  shift, and go to state 1218
    '='   shift, and go to state 1219
    '&'   shift, and go to state 1220

    capture_entry  go to state 1221
    capture_list   go to state 1222


State 966

  343 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 284

    $default  reduce using rule 121 (optional_function_argument_list)

    optional_function_argument_list  go to state 1223


State 967

  259 expr_pipe: expr_assign " <|" expr_block .

    $default  reduce using rule 259 (expr_pipe)


State 968

  476 expr: expr "is" "type" . '<' $@28 type_declaration_no_options '>' $@29

    '<'  shift, and go to state 1224


State 969

  516 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 1225


State 970

  478 expr: expr "is" "name" .

    $default  reduce using rule 478 (expr)


State 971

  477 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 477 (expr)


State 972

  482 expr: expr "as" "type" . '<' $@30 type_declaration '>' $@31

    '<'  shift, and go to state 1226


State 973

  514 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1227


State 974

  479 expr: expr "as" "name" .

    $default  reduce using rule 479 (expr)


State 975

  483 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 483 (expr)


State 976

  374 expr_assign_pipe_right: "$ <|" . expr_block

    "begin of code block"  shift, and go to state 286
    '$'                    shift, and go to state 503
    '@'                    shift, and go to state 674

    expression_block  go to state 675
    block_or_lambda   go to state 676
    expr_block        go to state 1228


State 977

  372 expr_assign_pipe_right: "@ <|" . expr_block

    "begin of code block"  shift, and go to state 286
    '$'                    shift, and go to state 503
    '@'                    shift, and go to state 674

    expression_block  go to state 675
    block_or_lambda   go to state 676
    expr_block        go to state 1229


State 978

  373 expr_assign_pipe_right: "@@ <|" . expr_block

    "begin of code block"  shift, and go to state 286
    '$'                    shift, and go to state 503
    '@'                    shift, and go to state 674

    expression_block  go to state 675
    block_or_lambda   go to state 676
    expr_block        go to state 1230


State 979

  375 expr_assign_pipe_right: expr_call_pipe .

    $default  reduce using rule 375 (expr_assign_pipe_right)


State 980

  384 expr_assign_pipe: expr "+=" expr_assign_pipe_right .

    $default  reduce using rule 384 (expr_assign_pipe)


State 981

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  363 expr_assign: expr "+=" expr .
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783
    '$'    shift, and go to state 503
    '@'    shift, and go to state 674

    $default  reduce using rule 363 (expr_assign)

    block_or_lambda                go to state 717
    expr_full_block_assumed_piped  go to state 784


State 982

  385 expr_assign_pipe: expr "-=" expr_assign_pipe_right .

    $default  reduce using rule 385 (expr_assign_pipe)


State 983

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  364 expr_assign: expr "-=" expr .
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783
    '$'    shift, and go to state 503
    '@'    shift, and go to state 674

    $default  reduce using rule 364 (expr_assign)

    block_or_lambda                go to state 717
    expr_full_block_assumed_piped  go to state 784


State 984

  387 expr_assign_pipe: expr "/=" expr_assign_pipe_right .

    $default  reduce using rule 387 (expr_assign_pipe)


State 985

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  366 expr_assign: expr "/=" expr .
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783
    '$'    shift, and go to state 503
    '@'    shift, and go to state 674

    $default  reduce using rule 366 (expr_assign)

    block_or_lambda                go to state 717
    expr_full_block_assumed_piped  go to state 784


State 986

  386 expr_assign_pipe: expr "*=" expr_assign_pipe_right .

    $default  reduce using rule 386 (expr_assign_pipe)


State 987

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  365 expr_assign: expr "*=" expr .
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783
    '$'    shift, and go to state 503
    '@'    shift, and go to state 674

    $default  reduce using rule 365 (expr_assign)

    block_or_lambda                go to state 717
    expr_full_block_assumed_piped  go to state 784


State 988

  388 expr_assign_pipe: expr "%=" expr_assign_pipe_right .

    $default  reduce using rule 388 (expr_assign_pipe)


State 989

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  367 expr_assign: expr "%=" expr .
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783
    '$'    shift, and go to state 503
    '@'    shift, and go to state 674

    $default  reduce using rule 367 (expr_assign)

    block_or_lambda                go to state 717
    expr_full_block_assumed_piped  go to state 784


State 990

  378 expr_assign_pipe: expr "&=" expr_assign_pipe_right .

    $default  reduce using rule 378 (expr_assign_pipe)


State 991

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  357 expr_assign: expr "&=" expr .
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783
    '$'    shift, and go to state 503
    '@'    shift, and go to state 674

    $default  reduce using rule 357 (expr_assign)

    block_or_lambda                go to state 717
    expr_full_block_assumed_piped  go to state 784


State 992

  379 expr_assign_pipe: expr "|=" expr_assign_pipe_right .

    $default  reduce using rule 379 (expr_assign_pipe)


State 993

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  358 expr_assign: expr "|=" expr .
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783
    '$'    shift, and go to state 503
    '@'    shift, and go to state 674

    $default  reduce using rule 358 (expr_assign)

    block_or_lambda                go to state 717
    expr_full_block_assumed_piped  go to state 784


State 994

  380 expr_assign_pipe: expr "^=" expr_assign_pipe_right .

    $default  reduce using rule 380 (expr_assign_pipe)


State 995

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  359 expr_assign: expr "^=" expr .
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783
    '$'    shift, and go to state 503
    '@'    shift, and go to state 674

    $default  reduce using rule 359 (expr_assign)

    block_or_lambda                go to state 717
    expr_full_block_assumed_piped  go to state 784


State 996

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  432     | expr "<<" expr .
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 731
    "as"  shift, and go to state 732
    "++"  shift, and go to state 743
    "--"  shift, and go to state 744
    "->"  shift, and go to state 751
    "??"  shift, and go to state 753
    "?."  shift, and go to state 754
    "?["  shift, and go to state 755
    "<|"  shift, and go to state 756
    "|>"  shift, and go to state 757
    '-'   shift, and go to state 777
    '+'   shift, and go to state 778
    '*'   shift, and go to state 779
    '/'   shift, and go to state 780
    '%'   shift, and go to state 781
    '.'   shift, and go to state 782
    '['   shift, and go to state 783

    $default  reduce using rule 432 (expr)


State 997

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  433     | expr ">>" expr .
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 731
    "as"  shift, and go to state 732
    "++"  shift, and go to state 743
    "--"  shift, and go to state 744
    "->"  shift, and go to state 751
    "??"  shift, and go to state 753
    "?."  shift, and go to state 754
    "?["  shift, and go to state 755
    "<|"  shift, and go to state 756
    "|>"  shift, and go to state 757
    '-'   shift, and go to state 777
    '+'   shift, and go to state 778
    '*'   shift, and go to state 779
    '/'   shift, and go to state 780
    '%'   shift, and go to state 781
    '.'   shift, and go to state 782
    '['   shift, and go to state 783

    $default  reduce using rule 433 (expr)


State 998

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  445     | expr "<=" expr .
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783

    $default  reduce using rule 445 (expr)


State 999

  389 expr_assign_pipe: expr "<<=" expr_assign_pipe_right .

    $default  reduce using rule 389 (expr_assign_pipe)


State 1000

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  368 expr_assign: expr "<<=" expr .
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783
    '$'    shift, and go to state 503
    '@'    shift, and go to state 674

    $default  reduce using rule 368 (expr_assign)

    block_or_lambda                go to state 717
    expr_full_block_assumed_piped  go to state 784


State 1001

  390 expr_assign_pipe: expr ">>=" expr_assign_pipe_right .

    $default  reduce using rule 390 (expr_assign_pipe)


State 1002

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  369 expr_assign: expr ">>=" expr .
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783
    '$'    shift, and go to state 503
    '@'    shift, and go to state 674

    $default  reduce using rule 369 (expr_assign)

    block_or_lambda                go to state 717
    expr_full_block_assumed_piped  go to state 784


State 1003

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  446     | expr ">=" expr .
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783

    $default  reduce using rule 446 (expr)


State 1004

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  443     | expr "==" expr .
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783

    $default  reduce using rule 443 (expr)


State 1005

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  444     | expr "!=" expr .
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783

    $default  reduce using rule 444 (expr)


State 1006

  395 expr_method_call: expr "->" "name" . '(' ')'
  396                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 1231


State 1007

  377 expr_assign_pipe: expr "<-" expr_assign_pipe_right .

    $default  reduce using rule 377 (expr_assign_pipe)


State 1008

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  355 expr_assign: expr "<-" expr .
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783
    '$'    shift, and go to state 503
    '@'    shift, and go to state 674

    $default  reduce using rule 355 (expr_assign)

    block_or_lambda                go to state 717
    expr_full_block_assumed_piped  go to state 784


State 1009

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  472     | expr "??" expr .
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 731
    "as"  shift, and go to state 732
    "++"  shift, and go to state 743
    "--"  shift, and go to state 744
    "->"  shift, and go to state 751
    "??"  shift, and go to state 753
    "?."  shift, and go to state 754
    "?["  shift, and go to state 755
    "<|"  shift, and go to state 756
    "|>"  shift, and go to state 757
    '.'   shift, and go to state 782
    '['   shift, and go to state 783

    $default  reduce using rule 472 (expr)


State 1010

  511 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1232


State 1011

  463 expr: expr "?." "name" .

    $default  reduce using rule 463 (expr)


State 1012

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  461     | expr "?[" expr . ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783
    ']'    shift, and go to state 1233


State 1013

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  496     | expr "<|" expr .
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 751
    "?."  shift, and go to state 754
    "?["  shift, and go to state 755
    '.'   shift, and go to state 782
    '['   shift, and go to state 783

    $default  reduce using rule 496 (expr)


State 1014

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  497     | expr "|>" expr .
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 751
    "?."  shift, and go to state 754
    "?["  shift, and go to state 755
    '.'   shift, and go to state 782
    '['   shift, and go to state 783

    $default  reduce using rule 497 (expr)


State 1015

  416 expr_call: basic_type_declaration . '(' ')'
  417          | basic_type_declaration . '(' expr_list ')'
  498 expr: expr "|>" basic_type_declaration .

    '('  shift, and go to state 785

    $default  reduce using rule 498 (expr)


State 1016

  356 expr_assign: expr ":=" expr .
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783

    $default  reduce using rule 356 (expr_assign)


State 1017

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  434     | expr "<<<" expr .
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 731
    "as"  shift, and go to state 732
    "++"  shift, and go to state 743
    "--"  shift, and go to state 744
    "->"  shift, and go to state 751
    "??"  shift, and go to state 753
    "?."  shift, and go to state 754
    "?["  shift, and go to state 755
    "<|"  shift, and go to state 756
    "|>"  shift, and go to state 757
    '-'   shift, and go to state 777
    '+'   shift, and go to state 778
    '*'   shift, and go to state 779
    '/'   shift, and go to state 780
    '%'   shift, and go to state 781
    '.'   shift, and go to state 782
    '['   shift, and go to state 783

    $default  reduce using rule 434 (expr)


State 1018

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  435     | expr ">>>" expr .
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 731
    "as"  shift, and go to state 732
    "++"  shift, and go to state 743
    "--"  shift, and go to state 744
    "->"  shift, and go to state 751
    "??"  shift, and go to state 753
    "?."  shift, and go to state 754
    "?["  shift, and go to state 755
    "<|"  shift, and go to state 756
    "|>"  shift, and go to state 757
    '-'   shift, and go to state 777
    '+'   shift, and go to state 778
    '*'   shift, and go to state 779
    '/'   shift, and go to state 780
    '%'   shift, and go to state 781
    '.'   shift, and go to state 782
    '['   shift, and go to state 783

    $default  reduce using rule 435 (expr)


State 1019

  391 expr_assign_pipe: expr "<<<=" expr_assign_pipe_right .

    $default  reduce using rule 391 (expr_assign_pipe)


State 1020

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  370 expr_assign: expr "<<<=" expr .
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783
    '$'    shift, and go to state 503
    '@'    shift, and go to state 674

    $default  reduce using rule 370 (expr_assign)

    block_or_lambda                go to state 717
    expr_full_block_assumed_piped  go to state 784


State 1021

  392 expr_assign_pipe: expr ">>>=" expr_assign_pipe_right .

    $default  reduce using rule 392 (expr_assign_pipe)


State 1022

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  371 expr_assign: expr ">>>=" expr .
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783
    '$'    shift, and go to state 503
    '@'    shift, and go to state 674

    $default  reduce using rule 371 (expr_assign)

    block_or_lambda                go to state 717
    expr_full_block_assumed_piped  go to state 784


State 1023

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  450     | expr "&&" expr .
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783

    $default  reduce using rule 450 (expr)


State 1024

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  451     | expr "||" expr .
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "^^"   shift, and go to state 765
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783

    $default  reduce using rule 451 (expr)


State 1025

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  452     | expr "^^" expr .
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783

    $default  reduce using rule 452 (expr)


State 1026

  381 expr_assign_pipe: expr "&&=" expr_assign_pipe_right .

    $default  reduce using rule 381 (expr_assign_pipe)


State 1027

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  360 expr_assign: expr "&&=" expr .
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783
    '$'    shift, and go to state 503
    '@'    shift, and go to state 674

    $default  reduce using rule 360 (expr_assign)

    block_or_lambda                go to state 717
    expr_full_block_assumed_piped  go to state 784


State 1028

  382 expr_assign_pipe: expr "||=" expr_assign_pipe_right .

    $default  reduce using rule 382 (expr_assign_pipe)


State 1029

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  361 expr_assign: expr "||=" expr .
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783
    '$'    shift, and go to state 503
    '@'    shift, and go to state 674

    $default  reduce using rule 361 (expr_assign)

    block_or_lambda                go to state 717
    expr_full_block_assumed_piped  go to state 784


State 1030

  383 expr_assign_pipe: expr "^^=" expr_assign_pipe_right .

    $default  reduce using rule 383 (expr_assign_pipe)


State 1031

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  362 expr_assign: expr "^^=" expr .
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783
    '$'    shift, and go to state 503
    '@'    shift, and go to state 674

    $default  reduce using rule 362 (expr_assign)

    block_or_lambda                go to state 717
    expr_full_block_assumed_piped  go to state 784


State 1032

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  453     | expr ".." expr .
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783

    ".."  error (nonassociative)

    $default  reduce using rule 453 (expr)


State 1033

  376 expr_assign_pipe: expr '=' expr_assign_pipe_right .

    $default  reduce using rule 376 (expr_assign_pipe)


State 1034

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  354 expr_assign: expr '=' expr .
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783
    '$'    shift, and go to state 503
    '@'    shift, and go to state 674

    $default  reduce using rule 354 (expr_assign)

    block_or_lambda                go to state 717
    expr_full_block_assumed_piped  go to state 784


State 1035

  484 expr: expr '?' "as" . "name"
  487     | expr '?' "as" . "type" '<' $@32 type_declaration '>' $@33
  488     | expr '?' "as" . basic_type_declaration
  515 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1234
    "bool"      shift, and go to state 316
    "void"      shift, and go to state 317
    "string"    shift, and go to state 318
    "int"       shift, and go to state 320
    "int2"      shift, and go to state 321
    "int3"      shift, and go to state 322
    "int4"      shift, and go to state 323
    "uint"      shift, and go to state 324
    "bitfield"  shift, and go to state 463
    "uint2"     shift, and go to state 326
    "uint3"     shift, and go to state 327
    "uint4"     shift, and go to state 328
    "float"     shift, and go to state 329
    "float2"    shift, and go to state 330
    "float3"    shift, and go to state 331
    "float4"    shift, and go to state 332
    "range"     shift, and go to state 333
    "urange"    shift, and go to state 334
    "range64"   shift, and go to state 335
    "urange64"  shift, and go to state 336
    "int64"     shift, and go to state 338
    "uint64"    shift, and go to state 339
    "double"    shift, and go to state 340
    "int8"      shift, and go to state 343
    "uint8"     shift, and go to state 344
    "int16"     shift, and go to state 345
    "uint16"    shift, and go to state 346
    "$f"        shift, and go to state 1235
    "name"      shift, and go to state 1236

    basic_type_declaration  go to state 1237


State 1036

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  473     | expr '?' expr . ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    ':'    shift, and go to state 1238
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783


State 1037

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  448     | expr '|' expr .
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783

    $default  reduce using rule 448 (expr)


State 1038

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  449     | expr '^' expr .
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783

    $default  reduce using rule 449 (expr)


State 1039

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  447     | expr '&' expr .
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783

    $default  reduce using rule 447 (expr)


State 1040

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  441     | expr '<' expr .
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783

    $default  reduce using rule 441 (expr)


State 1041

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  442     | expr '>' expr .
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783

    $default  reduce using rule 442 (expr)


State 1042

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  437     | expr '-' expr .
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 731
    "as"  shift, and go to state 732
    "++"  shift, and go to state 743
    "--"  shift, and go to state 744
    "->"  shift, and go to state 751
    "??"  shift, and go to state 753
    "?."  shift, and go to state 754
    "?["  shift, and go to state 755
    "<|"  shift, and go to state 756
    "|>"  shift, and go to state 757
    '*'   shift, and go to state 779
    '/'   shift, and go to state 780
    '%'   shift, and go to state 781
    '.'   shift, and go to state 782
    '['   shift, and go to state 783

    $default  reduce using rule 437 (expr)


State 1043

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  436     | expr '+' expr .
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 731
    "as"  shift, and go to state 732
    "++"  shift, and go to state 743
    "--"  shift, and go to state 744
    "->"  shift, and go to state 751
    "??"  shift, and go to state 753
    "?."  shift, and go to state 754
    "?["  shift, and go to state 755
    "<|"  shift, and go to state 756
    "|>"  shift, and go to state 757
    '*'   shift, and go to state 779
    '/'   shift, and go to state 780
    '%'   shift, and go to state 781
    '.'   shift, and go to state 782
    '['   shift, and go to state 783

    $default  reduce using rule 436 (expr)


State 1044

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  438     | expr '*' expr .
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 731
    "as"  shift, and go to state 732
    "++"  shift, and go to state 743
    "--"  shift, and go to state 744
    "->"  shift, and go to state 751
    "??"  shift, and go to state 753
    "?."  shift, and go to state 754
    "?["  shift, and go to state 755
    "<|"  shift, and go to state 756
    "|>"  shift, and go to state 757
    '.'   shift, and go to state 782
    '['   shift, and go to state 783

    $default  reduce using rule 438 (expr)


State 1045

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  439     | expr '/' expr .
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 731
    "as"  shift, and go to state 732
    "++"  shift, and go to state 743
    "--"  shift, and go to state 744
    "->"  shift, and go to state 751
    "??"  shift, and go to state 753
    "?."  shift, and go to state 754
    "?["  shift, and go to state 755
    "<|"  shift, and go to state 756
    "|>"  shift, and go to state 757
    '.'   shift, and go to state 782
    '['   shift, and go to state 783

    $default  reduce using rule 439 (expr)


State 1046

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  440     | expr '%' expr .
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 731
    "as"  shift, and go to state 732
    "++"  shift, and go to state 743
    "--"  shift, and go to state 744
    "->"  shift, and go to state 751
    "??"  shift, and go to state 753
    "?."  shift, and go to state 754
    "?["  shift, and go to state 755
    "<|"  shift, and go to state 756
    "|>"  shift, and go to state 757
    '.'   shift, and go to state 782
    '['   shift, and go to state 783

    $default  reduce using rule 440 (expr)


State 1047

  464 expr: expr '.' "?." . "name"
  513 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1239
    "name"  shift, and go to state 1240


State 1048

  462 expr: expr '.' "?[" . expr ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1241
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1049

  510 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1242


State 1050

  406 expr_field: expr '.' "name" .
  408           | expr '.' "name" . '(' ')'
  409           | expr '.' "name" . '(' expr_list ')'

    '('  shift, and go to state 1243

    '('       [reduce using rule 406 (expr_field)]
    $default  reduce using rule 406 (expr_field)


State 1051

  407 expr_field: expr '.' '.' . "name"
  512 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1244
    "name"  shift, and go to state 1245


State 1052

  460 expr: expr '.' '[' . expr ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1246
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1053

  412 expr_field: expr '.' $@26 . error $@27

    error  shift, and go to state 1247


State 1054

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  459     | expr '[' expr . ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783
    ']'    shift, and go to state 1248


State 1055

  416 expr_call: basic_type_declaration '(' ')' .

    $default  reduce using rule 416 (expr_call)


State 1056

  326 expr_list: expr_list . ',' expr
  417 expr_call: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 861
    ')'  shift, and go to state 1249


State 1057

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'
  594 enum_list: enum_list "name" '=' expr . "end of expression"

    "is"                 shift, and go to state 731
    "as"                 shift, and go to state 732
    "<<"                 shift, and go to state 741
    ">>"                 shift, and go to state 742
    "++"                 shift, and go to state 743
    "--"                 shift, and go to state 744
    "<="                 shift, and go to state 745
    ">="                 shift, and go to state 748
    "=="                 shift, and go to state 749
    "!="                 shift, and go to state 750
    "->"                 shift, and go to state 751
    "??"                 shift, and go to state 753
    "?."                 shift, and go to state 754
    "?["                 shift, and go to state 755
    "<|"                 shift, and go to state 756
    "|>"                 shift, and go to state 757
    "<<<"                shift, and go to state 759
    ">>>"                shift, and go to state 760
    "&&"                 shift, and go to state 763
    "||"                 shift, and go to state 764
    "^^"                 shift, and go to state 765
    ".."                 shift, and go to state 769
    "end of expression"  shift, and go to state 1250
    '?'                  shift, and go to state 771
    '|'                  shift, and go to state 772
    '^'                  shift, and go to state 773
    '&'                  shift, and go to state 774
    '<'                  shift, and go to state 775
    '>'                  shift, and go to state 776
    '-'                  shift, and go to state 777
    '+'                  shift, and go to state 778
    '*'                  shift, and go to state 779
    '/'                  shift, and go to state 780
    '%'                  shift, and go to state 781
    '.'                  shift, and go to state 782
    '['                  shift, and go to state 783


State 1058

  614 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 . "end of code block"

    "end of code block"  shift, and go to state 1251


State 1059

  118 annotation_list: annotation_list . ',' annotation_declaration
  120 optional_annotation_list: '[' annotation_list . ']'
  539 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list . ']' "end of expression"

    ','  shift, and go to state 107
    ']'  shift, and go to state 1252


State 1060

  536 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header "end of expression"
  538                                 | struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block

    "public"   shift, and go to state 1253
    "private"  shift, and go to state 1254

    $default  reduce using rule 526 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1255


State 1061

  531 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1256

    $default  reduce using rule 529 (optional_static_member_variable)

    optional_static_member_variable  go to state 1257


State 1062

  534 struct_variable_declaration_list: struct_variable_declaration_list $@34 structure_variable_declaration . "end of expression"

    "end of expression"  shift, and go to state 1258


State 1063

  574 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 574 (let_variable_name_with_pos_list)


State 1064

  577 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 577 (let_variable_declaration)


State 1065

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  353 expr_assign: expr .
  354            | expr . '=' expr
  355            | expr . "<-" expr
  356            | expr . ":=" expr
  357            | expr . "&=" expr
  358            | expr . "|=" expr
  359            | expr . "^=" expr
  360            | expr . "&&=" expr
  361            | expr . "||=" expr
  362            | expr . "^^=" expr
  363            | expr . "+=" expr
  364            | expr . "-=" expr
  365            | expr . "*=" expr
  366            | expr . "/=" expr
  367            | expr . "%=" expr
  368            | expr . "<<=" expr
  369            | expr . ">>=" expr
  370            | expr . "<<<=" expr
  371            | expr . ">>>=" expr
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'
  576 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 731
    "as"                 shift, and go to state 732
    "+="                 shift, and go to state 862
    "-="                 shift, and go to state 863
    "/="                 shift, and go to state 864
    "*="                 shift, and go to state 865
    "%="                 shift, and go to state 866
    "&="                 shift, and go to state 867
    "|="                 shift, and go to state 868
    "^="                 shift, and go to state 869
    "<<"                 shift, and go to state 741
    ">>"                 shift, and go to state 742
    "++"                 shift, and go to state 743
    "--"                 shift, and go to state 744
    "<="                 shift, and go to state 745
    "<<="                shift, and go to state 870
    ">>="                shift, and go to state 871
    ">="                 shift, and go to state 748
    "=="                 shift, and go to state 749
    "!="                 shift, and go to state 750
    "->"                 shift, and go to state 751
    "<-"                 shift, and go to state 872
    "??"                 shift, and go to state 753
    "?."                 shift, and go to state 754
    "?["                 shift, and go to state 755
    "<|"                 shift, and go to state 756
    "|>"                 shift, and go to state 757
    ":="                 shift, and go to state 758
    "<<<"                shift, and go to state 759
    ">>>"                shift, and go to state 760
    "<<<="               shift, and go to state 873
    ">>>="               shift, and go to state 874
    "&&"                 shift, and go to state 763
    "||"                 shift, and go to state 764
    "^^"                 shift, and go to state 765
    "&&="                shift, and go to state 875
    "||="                shift, and go to state 876
    "^^="                shift, and go to state 877
    ".."                 shift, and go to state 769
    "end of expression"  shift, and go to state 1259
    '='                  shift, and go to state 878
    '?'                  shift, and go to state 771
    '|'                  shift, and go to state 772
    '^'                  shift, and go to state 773
    '&'                  shift, and go to state 774
    '<'                  shift, and go to state 775
    '>'                  shift, and go to state 776
    '-'                  shift, and go to state 777
    '+'                  shift, and go to state 778
    '*'                  shift, and go to state 779
    '/'                  shift, and go to state 780
    '%'                  shift, and go to state 781
    '.'                  shift, and go to state 782
    '['                  shift, and go to state 783
    '$'                  shift, and go to state 503
    '@'                  shift, and go to state 674

    $default  reduce using rule 353 (expr_assign)

    block_or_lambda                go to state 717
    expr_full_block_assumed_piped  go to state 784


State 1066

  578 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 578 (let_variable_declaration)


State 1067

  694 type_declaration_no_options: "type" '<' $@49 type_declaration '>' . $@50

    $default  reduce using rule 693 ($@50)

    $@50  go to state 1260


State 1068

  717 type_declaration_no_options: "array" '<' $@54 type_declaration '>' . $@55

    $default  reduce using rule 716 ($@55)

    $@55  go to state 1261


State 1069

  720 type_declaration_no_options: "table" '<' $@56 table_type_pair '>' . $@57

    $default  reduce using rule 719 ($@57)

    $@57  go to state 1262


State 1070

  683 table_type_pair: type_declaration "end of expression" . type_declaration

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 1263


State 1071

  723 type_declaration_no_options: "iterator" '<' $@58 type_declaration '>' . $@59

    $default  reduce using rule 722 ($@59)

    $@59  go to state 1264


State 1072

  713 type_declaration_no_options: "smart_ptr" '<' $@52 type_declaration '>' . $@53

    $default  reduce using rule 712 ($@53)

    $@53  go to state 1265


State 1073

  675 bitfield_bits: bitfield_bits "end of expression" . "name"

    "name"  shift, and go to state 1266


State 1074

  681 bitfield_type_declaration: "bitfield" '<' $@47 bitfield_bits '>' . $@48

    $default  reduce using rule 680 ($@48)

    $@48  go to state 1267


State 1075

  727 type_declaration_no_options: "block" '<' $@60 type_declaration '>' . $@61

    $default  reduce using rule 726 ($@61)

    $@61  go to state 1268


State 1076

  730 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list optional_function_type . '>' $@63

    '>'  shift, and go to state 1269


State 1077

  734 type_declaration_no_options: "function" '<' $@64 type_declaration '>' . $@65

    $default  reduce using rule 733 ($@65)

    $@65  go to state 1270


State 1078

  737 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list optional_function_type . '>' $@67

    '>'  shift, and go to state 1271


State 1079

  741 type_declaration_no_options: "lambda" '<' $@68 type_declaration '>' . $@69

    $default  reduce using rule 740 ($@69)

    $@69  go to state 1272


State 1080

  744 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list optional_function_type . '>' $@71

    '>'  shift, and go to state 1273


State 1081

  547 tuple_type_list: tuple_type_list "end of expression" . tuple_type

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 608
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    tuple_type                   go to state 1274
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 611


State 1082

  747 type_declaration_no_options: "tuple" '<' $@72 tuple_type_list '>' . $@73

    $default  reduce using rule 746 ($@73)

    $@73  go to state 1275


State 1083

  553 variant_type_list: variant_type_list "end of expression" . variant_type

    "name"  shift, and go to state 613

    variant_type  go to state 1276


State 1084

  750 type_declaration_no_options: "variant" '<' $@74 variant_type_list '>' . $@75

    $default  reduce using rule 749 ($@75)

    $@75  go to state 1277


State 1085

  252 type_declaration_no_options_list: type_declaration_no_options_list . "end of expression" type_declaration
  698 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list . '>' '(' optional_expr_list ')'

    "end of expression"  shift, and go to state 1278
    '>'                  shift, and go to state 1279


State 1086

  251 type_declaration_no_options_list: type_declaration .
  752 type_declaration: type_declaration . '|' type_declaration_no_options
  753                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417

    $default  reduce using rule 251 (type_declaration_no_options_list)


State 1087

  696 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list ')' .

    $default  reduce using rule 696 (type_declaration_no_options)


State 1088

  685 dim_list: dim_list '[' expr ']' .

    $default  reduce using rule 685 (dim_list)


State 1089

  545 tuple_type: "name" ':' type_declaration .
  752 type_declaration: type_declaration . '|' type_declaration_no_options
  753                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417

    $default  reduce using rule 545 (tuple_type)


State 1090

  551 variant_type: "name" ':' type_declaration .
  752 type_declaration: type_declaration . '|' type_declaration_no_options
  753                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417

    $default  reduce using rule 551 (variant_type)


State 1091

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'
  631 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783
    ')'    shift, and go to state 1280


State 1092

  632 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 632 (variable_name_with_pos_list)


State 1093

  633 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  634                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1281

    $default  reduce using rule 633 (variable_name_with_pos_list)


State 1094

  561 variable_declaration: variable_name_with_pos_list ':' type_declaration .
  562                     | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  752 type_declaration: type_declaration . '|' type_declaration_no_options
  753                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 838
    '='   shift, and go to state 840
    '|'   shift, and go to state 417

    $default  reduce using rule 561 (variable_declaration)

    copy_or_move  go to state 1282


State 1095

  564 variable_declaration: variable_name_with_pos_list copy_or_move expr_pipe .

    $default  reduce using rule 564 (variable_declaration)


State 1096

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  353 expr_assign: expr .
  354            | expr . '=' expr
  355            | expr . "<-" expr
  356            | expr . ":=" expr
  357            | expr . "&=" expr
  358            | expr . "|=" expr
  359            | expr . "^=" expr
  360            | expr . "&&=" expr
  361            | expr . "||=" expr
  362            | expr . "^^=" expr
  363            | expr . "+=" expr
  364            | expr . "-=" expr
  365            | expr . "*=" expr
  366            | expr . "/=" expr
  367            | expr . "%=" expr
  368            | expr . "<<=" expr
  369            | expr . ">>=" expr
  370            | expr . "<<<=" expr
  371            | expr . ">>>=" expr
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'
  563 variable_declaration: variable_name_with_pos_list copy_or_move expr .

    "is"    shift, and go to state 731
    "as"    shift, and go to state 732
    "+="    shift, and go to state 862
    "-="    shift, and go to state 863
    "/="    shift, and go to state 864
    "*="    shift, and go to state 865
    "%="    shift, and go to state 866
    "&="    shift, and go to state 867
    "|="    shift, and go to state 868
    "^="    shift, and go to state 869
    "<<"    shift, and go to state 741
    ">>"    shift, and go to state 742
    "++"    shift, and go to state 743
    "--"    shift, and go to state 744
    "<="    shift, and go to state 745
    "<<="   shift, and go to state 870
    ">>="   shift, and go to state 871
    ">="    shift, and go to state 748
    "=="    shift, and go to state 749
    "!="    shift, and go to state 750
    "->"    shift, and go to state 751
    "<-"    shift, and go to state 872
    "??"    shift, and go to state 753
    "?."    shift, and go to state 754
    "?["    shift, and go to state 755
    "<|"    shift, and go to state 756
    "|>"    shift, and go to state 757
    ":="    shift, and go to state 758
    "<<<"   shift, and go to state 759
    ">>>"   shift, and go to state 760
    "<<<="  shift, and go to state 873
    ">>>="  shift, and go to state 874
    "&&"    shift, and go to state 763
    "||"    shift, and go to state 764
    "^^"    shift, and go to state 765
    "&&="   shift, and go to state 875
    "||="   shift, and go to state 876
    "^^="   shift, and go to state 877
    ".."    shift, and go to state 769
    '='     shift, and go to state 878
    '?'     shift, and go to state 771
    '|'     shift, and go to state 772
    '^'     shift, and go to state 773
    '&'     shift, and go to state 774
    '<'     shift, and go to state 775
    '>'     shift, and go to state 776
    '-'     shift, and go to state 777
    '+'     shift, and go to state 778
    '*'     shift, and go to state 779
    '/'     shift, and go to state 780
    '%'     shift, and go to state 781
    '.'     shift, and go to state 782
    '['     shift, and go to state 783
    '$'     shift, and go to state 503
    '@'     shift, and go to state 674

    " <|"     reduce using rule 353 (expr_assign)
    $default  reduce using rule 563 (variable_declaration)

    block_or_lambda                go to state 717
    expr_full_block_assumed_piped  go to state 784


State 1097

  690 type_declaration_no_options: type_declaration_no_options . dim_list
  691                            | type_declaration_no_options . '[' ']'
  699                            | type_declaration_no_options . '-' '[' ']'
  700                            | type_declaration_no_options . "explicit"
  701                            | type_declaration_no_options . "const"
  702                            | type_declaration_no_options . '-' "const"
  703                            | type_declaration_no_options . '&'
  704                            | type_declaration_no_options . '-' '&'
  705                            | type_declaration_no_options . '#'
  706                            | type_declaration_no_options . "implicit"
  707                            | type_declaration_no_options . '-' '#'
  708                            | type_declaration_no_options . "==" "const"
  709                            | type_declaration_no_options . "==" '&'
  710                            | type_declaration_no_options . '?'
  714                            | type_declaration_no_options . "??"
  809 make_struct_decl: "struct" '<' $@88 type_declaration_no_options . '>' $@89 '(' use_initializer make_struct_dim ')'

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1283
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1098

  690 type_declaration_no_options: type_declaration_no_options . dim_list
  691                            | type_declaration_no_options . '[' ']'
  699                            | type_declaration_no_options . '-' '[' ']'
  700                            | type_declaration_no_options . "explicit"
  701                            | type_declaration_no_options . "const"
  702                            | type_declaration_no_options . '-' "const"
  703                            | type_declaration_no_options . '&'
  704                            | type_declaration_no_options . '-' '&'
  705                            | type_declaration_no_options . '#'
  706                            | type_declaration_no_options . "implicit"
  707                            | type_declaration_no_options . '-' '#'
  708                            | type_declaration_no_options . "==" "const"
  709                            | type_declaration_no_options . "==" '&'
  710                            | type_declaration_no_options . '?'
  714                            | type_declaration_no_options . "??"
  812 make_struct_decl: "class" '<' $@90 type_declaration_no_options . '>' $@91 '(' use_initializer make_struct_dim ')'

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1284
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1099

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" . expr_list expression_block

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 1285
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 710
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1100

  271 new_type_declaration: '<' $@11 type_declaration . '>' $@12
  752 type_declaration: type_declaration . '|' type_declaration_no_options
  753                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417
    '>'  shift, and go to state 1286


State 1101

  800 use_initializer: "uninitialized" .

    $default  reduce using rule 800 (use_initializer)


State 1102

  275 expr_new: "new" new_type_declaration '(' expr_list . ')'
  326 expr_list: expr_list . ',' expr

    ','  shift, and go to state 861
    ')'  shift, and go to state 1287


State 1103

  274 expr_new: "new" new_type_declaration '(' use_initializer . ')'
  276         | "new" new_type_declaration '(' use_initializer . make_struct_single ')'

    "$f"    shift, and go to state 912
    "name"  shift, and go to state 1288
    ')'     shift, and go to state 1289

    make_struct_fields  go to state 959
    make_struct_single  go to state 1290


State 1104

  320 expr_type_info: "typeinfo" '(' name_in_namespace '<' . "name" '>' expr ')'
  321               | "typeinfo" '(' name_in_namespace '<' . "name" "end of expression" "name" '>' expr ')'

    "name"  shift, and go to state 1291


State 1105

  319 expr_type_info: "typeinfo" '(' name_in_namespace expr . ')'
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783
    ')'    shift, and go to state 1292


State 1106

  323 expr_type_info: "typeinfo" name_in_namespace '<' "name" . '>' '(' expr ')'
  324               | "typeinfo" name_in_namespace '<' "name" . "end of expression" "name" '>' '(' expr ')'

    "end of expression"  shift, and go to state 1293
    '>'                  shift, and go to state 1294


State 1107

  322 expr_type_info: "typeinfo" name_in_namespace '(' expr . ')'
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783
    ')'    shift, and go to state 1295


State 1108

  318 expr_type_decl: "type" '<' $@19 type_declaration . '>' $@20
  752 type_declaration: type_declaration . '|' type_declaration_no_options
  753                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417
    '>'  shift, and go to state 1296


State 1109

  835 make_dim_decl: "array" "struct" '<' $@98 . type_declaration_no_options '>' $@99 '(' use_initializer make_struct_dim ')'

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1297


State 1110

  838 make_dim_decl: "array" "tuple" '<' $@100 . type_declaration_no_options '>' $@101 '(' use_initializer make_struct_dim ')'

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1298


State 1111

  841 make_dim_decl: "array" "variant" '<' $@102 . type_declaration_no_options '>' $@103 '(' make_struct_dim ')'

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1299


State 1112

  690 type_declaration_no_options: type_declaration_no_options . dim_list
  691                            | type_declaration_no_options . '[' ']'
  699                            | type_declaration_no_options . '-' '[' ']'
  700                            | type_declaration_no_options . "explicit"
  701                            | type_declaration_no_options . "const"
  702                            | type_declaration_no_options . '-' "const"
  703                            | type_declaration_no_options . '&'
  704                            | type_declaration_no_options . '-' '&'
  705                            | type_declaration_no_options . '#'
  706                            | type_declaration_no_options . "implicit"
  707                            | type_declaration_no_options . '-' '#'
  708                            | type_declaration_no_options . "==" "const"
  709                            | type_declaration_no_options . "==" '&'
  710                            | type_declaration_no_options . '?'
  714                            | type_declaration_no_options . "??"
  845 make_dim_decl: "array" '<' $@104 type_declaration_no_options . '>' $@105 '(' expr_list optional_comma ')'

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1300
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1113

  842 make_dim_decl: "array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1301


State 1114

  326 expr_list: expr_list ',' expr .
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783

    $default  reduce using rule 326 (expr_list)


State 1115

  363 expr_assign: expr "+=" expr .
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783

    $default  reduce using rule 363 (expr_assign)


State 1116

  364 expr_assign: expr "-=" expr .
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783

    $default  reduce using rule 364 (expr_assign)


State 1117

  366 expr_assign: expr "/=" expr .
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783

    $default  reduce using rule 366 (expr_assign)


State 1118

  365 expr_assign: expr "*=" expr .
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783

    $default  reduce using rule 365 (expr_assign)


State 1119

  367 expr_assign: expr "%=" expr .
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783

    $default  reduce using rule 367 (expr_assign)


State 1120

  357 expr_assign: expr "&=" expr .
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783

    $default  reduce using rule 357 (expr_assign)


State 1121

  358 expr_assign: expr "|=" expr .
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783

    $default  reduce using rule 358 (expr_assign)


State 1122

  359 expr_assign: expr "^=" expr .
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783

    $default  reduce using rule 359 (expr_assign)


State 1123

  368 expr_assign: expr "<<=" expr .
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783

    $default  reduce using rule 368 (expr_assign)


State 1124

  369 expr_assign: expr ">>=" expr .
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783

    $default  reduce using rule 369 (expr_assign)


State 1125

  355 expr_assign: expr "<-" expr .
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783

    $default  reduce using rule 355 (expr_assign)


State 1126

  370 expr_assign: expr "<<<=" expr .
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783

    $default  reduce using rule 370 (expr_assign)


State 1127

  371 expr_assign: expr ">>>=" expr .
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783

    $default  reduce using rule 371 (expr_assign)


State 1128

  360 expr_assign: expr "&&=" expr .
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783

    $default  reduce using rule 360 (expr_assign)


State 1129

  361 expr_assign: expr "||=" expr .
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783

    $default  reduce using rule 361 (expr_assign)


State 1130

  362 expr_assign: expr "^^=" expr .
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783

    $default  reduce using rule 362 (expr_assign)


State 1131

  354 expr_assign: expr '=' expr .
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783

    $default  reduce using rule 354 (expr_assign)


State 1132

  291 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 291 (expression_try_catch)


State 1133

  858 make_table_decl: "table" '<' type_declaration_no_options "end of expression" . type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1302


State 1134

  857 make_table_decl: "table" '<' type_declaration_no_options '>' . '(' expr_map_tuple_list optional_comma ')'

    '('  shift, and go to state 1303


State 1135

  856 make_table_decl: "table" '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1304


State 1136

  468 expr: "deref" '(' expr ')' .

    $default  reduce using rule 468 (expr)


State 1137

   81 expression_with_alias: "assume" "name" '=' $@5 . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1305
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1138

  309 expr_cast: "cast" '<' $@13 type_declaration_no_options . '>' $@14 expr
  690 type_declaration_no_options: type_declaration_no_options . dim_list
  691                            | type_declaration_no_options . '[' ']'
  699                            | type_declaration_no_options . '-' '[' ']'
  700                            | type_declaration_no_options . "explicit"
  701                            | type_declaration_no_options . "const"
  702                            | type_declaration_no_options . '-' "const"
  703                            | type_declaration_no_options . '&'
  704                            | type_declaration_no_options . '-' '&'
  705                            | type_declaration_no_options . '#'
  706                            | type_declaration_no_options . "implicit"
  707                            | type_declaration_no_options . '-' '#'
  708                            | type_declaration_no_options . "==" "const"
  709                            | type_declaration_no_options . "==" '&'
  710                            | type_declaration_no_options . '?'
  714                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1306
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1139

  312 expr_cast: "upcast" '<' $@15 type_declaration_no_options . '>' $@16 expr
  690 type_declaration_no_options: type_declaration_no_options . dim_list
  691                            | type_declaration_no_options . '[' ']'
  699                            | type_declaration_no_options . '-' '[' ']'
  700                            | type_declaration_no_options . "explicit"
  701                            | type_declaration_no_options . "const"
  702                            | type_declaration_no_options . '-' "const"
  703                            | type_declaration_no_options . '&'
  704                            | type_declaration_no_options . '-' '&'
  705                            | type_declaration_no_options . '#'
  706                            | type_declaration_no_options . "implicit"
  707                            | type_declaration_no_options . '-' '#'
  708                            | type_declaration_no_options . "==" "const"
  709                            | type_declaration_no_options . "==" '&'
  710                            | type_declaration_no_options . '?'
  714                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1307
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1140

  469 expr: "addr" '(' expr ')' .

    $default  reduce using rule 469 (expr)


State 1141

  315 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options . '>' $@18 expr
  690 type_declaration_no_options: type_declaration_no_options . dim_list
  691                            | type_declaration_no_options . '[' ']'
  699                            | type_declaration_no_options . '-' '[' ']'
  700                            | type_declaration_no_options . "explicit"
  701                            | type_declaration_no_options . "const"
  702                            | type_declaration_no_options . '-' "const"
  703                            | type_declaration_no_options . '&'
  704                            | type_declaration_no_options . '-' '&'
  705                            | type_declaration_no_options . '#'
  706                            | type_declaration_no_options . "implicit"
  707                            | type_declaration_no_options . '-' '#'
  708                            | type_declaration_no_options . "==" "const"
  709                            | type_declaration_no_options . "==" '&'
  710                            | type_declaration_no_options . '?'
  714                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1308
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1142

  500 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 500 (expr)


State 1143

  690 type_declaration_no_options: type_declaration_no_options . dim_list
  691                            | type_declaration_no_options . '[' ']'
  699                            | type_declaration_no_options . '-' '[' ']'
  700                            | type_declaration_no_options . "explicit"
  701                            | type_declaration_no_options . "const"
  702                            | type_declaration_no_options . '-' "const"
  703                            | type_declaration_no_options . '&'
  704                            | type_declaration_no_options . '-' '&'
  705                            | type_declaration_no_options . '#'
  706                            | type_declaration_no_options . "implicit"
  707                            | type_declaration_no_options . '-' '#'
  708                            | type_declaration_no_options . "==" "const"
  709                            | type_declaration_no_options . "==" '&'
  710                            | type_declaration_no_options . '?'
  714                            | type_declaration_no_options . "??"
  849 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options . '>' $@107 '(' expr_list optional_comma ')'

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1309
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1144

  846 make_dim_decl: "fixed_array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1310


State 1145

  690 type_declaration_no_options: type_declaration_no_options . dim_list
  691                            | type_declaration_no_options . '[' ']'
  699                            | type_declaration_no_options . '-' '[' ']'
  700                            | type_declaration_no_options . "explicit"
  701                            | type_declaration_no_options . "const"
  702                            | type_declaration_no_options . '-' "const"
  703                            | type_declaration_no_options . '&'
  704                            | type_declaration_no_options . '-' '&'
  705                            | type_declaration_no_options . '#'
  706                            | type_declaration_no_options . "implicit"
  707                            | type_declaration_no_options . '-' '#'
  708                            | type_declaration_no_options . "==" "const"
  709                            | type_declaration_no_options . "==" '&'
  710                            | type_declaration_no_options . '?'
  714                            | type_declaration_no_options . "??"
  818 make_struct_decl: "default" '<' $@94 type_declaration_no_options . '>' $@95 use_initializer

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1311
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1146

  690 type_declaration_no_options: type_declaration_no_options . dim_list
  691                            | type_declaration_no_options . '[' ']'
  699                            | type_declaration_no_options . '-' '[' ']'
  700                            | type_declaration_no_options . "explicit"
  701                            | type_declaration_no_options . "const"
  702                            | type_declaration_no_options . '-' "const"
  703                            | type_declaration_no_options . '&'
  704                            | type_declaration_no_options . '-' '&'
  705                            | type_declaration_no_options . '#'
  706                            | type_declaration_no_options . "implicit"
  707                            | type_declaration_no_options . '-' '#'
  708                            | type_declaration_no_options . "==" "const"
  709                            | type_declaration_no_options . "==" '&'
  710                            | type_declaration_no_options . '?'
  714                            | type_declaration_no_options . "??"
  827 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options . '>' $@97 '(' use_initializer make_struct_dim ')'

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1312
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1147

  824 make_tuple_call: "tuple" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1313


State 1148

  690 type_declaration_no_options: type_declaration_no_options . dim_list
  691                            | type_declaration_no_options . '[' ']'
  699                            | type_declaration_no_options . '-' '[' ']'
  700                            | type_declaration_no_options . "explicit"
  701                            | type_declaration_no_options . "const"
  702                            | type_declaration_no_options . '-' "const"
  703                            | type_declaration_no_options . '&'
  704                            | type_declaration_no_options . '-' '&'
  705                            | type_declaration_no_options . '#'
  706                            | type_declaration_no_options . "implicit"
  707                            | type_declaration_no_options . '-' '#'
  708                            | type_declaration_no_options . "==" "const"
  709                            | type_declaration_no_options . "==" '&'
  710                            | type_declaration_no_options . '?'
  714                            | type_declaration_no_options . "??"
  815 make_struct_decl: "variant" '<' $@92 type_declaration_no_options . '>' $@93 '(' make_struct_dim ')'

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1314
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1149

  470 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  471     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'

    "[["  shift, and go to state 965

    $default  reduce using rule 339 (optional_capture_list)

    optional_capture_list  go to state 1315


State 1150

  342 expr_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 284

    $default  reduce using rule 121 (optional_function_argument_list)

    optional_function_argument_list  go to state 1316


State 1151

  502 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 502 (expr_mtag)


State 1152

  503 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 503 (expr_mtag)


State 1153

  504 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 504 (expr_mtag)


State 1154

  505 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 505 (expr_mtag)


State 1155

  506 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 506 (expr_mtag)


State 1156

  508 expr_mtag: "$c" '(' expr ')' . '(' ')'
  509          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1317


State 1157

  865 array_comprehension: "[[" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']' ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 1318
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 710
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1158

  786 optional_block: "where" expr_block .

    $default  reduce using rule 786 (optional_block)


State 1159

  778 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  779                   | "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1319
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1160

  775 make_struct_fields: "name" ":=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1320
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1161

  774 make_struct_fields: "name" copy_or_move . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1321
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1162

  699 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'
  830 make_dim_decl: '[' . expr_list optional_comma ']'
  863 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  864                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "for"                             shift, and go to state 707
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "iterator"                        shift, and go to state 708
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    ']'                               shift, and go to state 824
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 709
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 710
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1163

  325 expr_list: expr .
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'
  684 dim_list: '[' expr . ']'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783
    ']'    shift, and go to state 825

    ']'       [reduce using rule 325 (expr_list)]
    $default  reduce using rule 325 (expr_list)


State 1164

  803 make_struct_decl: "[[" type_declaration_no_options '(' ')' . optional_block optional_trailing_delim_sqr_sqr
  804                 | "[[" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "where"  shift, and go to state 911
    "$f"     shift, and go to state 912
    "name"   shift, and go to state 1288

    $default  reduce using rule 785 (optional_block)

    make_struct_fields  go to state 918
    make_struct_dim     go to state 1322
    optional_block      go to state 1323


State 1165

  820 make_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1324
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1166

  776 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  777                   | make_struct_fields ',' . "name" ":=" expr
  780                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  781                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 1325
    "name"  shift, and go to state 1326


State 1167

  784 make_struct_dim: make_struct_dim "end of expression" . make_struct_fields

    "$f"    shift, and go to state 912
    "name"  shift, and go to state 1288

    make_struct_fields  go to state 1327


State 1168

  801 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1169
    ",]]"  shift, and go to state 1170
    ']'    shift, and go to state 1171

    optional_trailing_delim_sqr_sqr  go to state 1328


State 1169

  794 optional_trailing_delim_sqr_sqr: ";]]" .

    $default  reduce using rule 794 (optional_trailing_delim_sqr_sqr)


State 1170

  795 optional_trailing_delim_sqr_sqr: ",]]" .

    $default  reduce using rule 795 (optional_trailing_delim_sqr_sqr)


State 1171

  793 optional_trailing_delim_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1329


State 1172

  802 make_struct_decl: "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 802 (make_struct_decl)


State 1173

  821 make_tuple: make_tuple ',' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1330
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1174

  829 make_dim: make_dim "end of expression" . make_tuple

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 917
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple              go to state 1331
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1175

  792 optional_trailing_semicolon_sqr_sqr: ";]]" .

    $default  reduce using rule 792 (optional_trailing_semicolon_sqr_sqr)


State 1176

  791 optional_trailing_semicolon_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1332


State 1177

  831 make_dim_decl: "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr .

    $default  reduce using rule 831 (make_dim_decl)


State 1178

  866 array_comprehension: "[{" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 1333
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 710
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1179

  806 make_struct_decl: "[{" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "$f"    shift, and go to state 912
    "name"  shift, and go to state 1288

    make_struct_fields  go to state 918
    make_struct_dim     go to state 1334


State 1180

  805 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    "end of code block"  shift, and go to state 1335
    ";}]"                shift, and go to state 1336
    ",}]"                shift, and go to state 1337

    optional_trailing_delim_cur_sqr  go to state 1338


State 1181

  789 optional_trailing_semicolon_cur_sqr: "end of code block" . ']'

    ']'  shift, and go to state 1339


State 1182

  790 optional_trailing_semicolon_cur_sqr: ";}]" .

    $default  reduce using rule 790 (optional_trailing_semicolon_cur_sqr)


State 1183

  832 make_dim_decl: "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr .

    $default  reduce using rule 832 (make_dim_decl)


State 1184

  868 array_comprehension: "{{" "for" variable_name_with_pos_list "in" . expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 1340
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 710
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1185

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'
  822 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783

    $default  reduce using rule 822 (make_map_tuple)


State 1186

  787 optional_trailing_semicolon_cur_cur: "end of code block" "end of code block" .

    $default  reduce using rule 787 (optional_trailing_semicolon_cur_cur)


State 1187

  851 make_table: make_table "end of expression" make_map_tuple .

    $default  reduce using rule 851 (make_table)


State 1188

  252 type_declaration_no_options_list: type_declaration_no_options_list . "end of expression" type_declaration
  255 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list . '>' $@8 expr

    "end of expression"  shift, and go to state 1278
    '>'                  shift, and go to state 1341


State 1189

  252 type_declaration_no_options_list: type_declaration_no_options_list . "end of expression" type_declaration
  258 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list . '>' $@10 optional_expr_list_in_braces

    "end of expression"  shift, and go to state 1278
    '>'                  shift, and go to state 1342


State 1190

   30 string_builder_body: string_builder_body "{" expr . "}"
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    "}"    shift, and go to state 1343
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783


State 1191

  867 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" . expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 1344
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 710
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1192

  853 expr_map_tuple_list: expr_map_tuple_list ',' make_map_tuple .

    $default  reduce using rule 853 (expr_map_tuple_list)


State 1193

  854 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma "end of code block" .

    $default  reduce using rule 854 (make_table_decl)


State 1194

  219 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions . "end of code block"
  244 expressions: expressions . expression_any
  245            | expressions . error

    error                             shift, and go to state 430
    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 433
    "if"                              shift, and go to state 434
    "static_if"                       shift, and go to state 435
    "for"                             shift, and go to state 436
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "return"                          shift, and go to state 443
    "null"                            shift, and go to state 444
    "break"                           shift, and go to state 445
    "try"                             shift, and go to state 446
    "table"                           shift, and go to state 447
    "delete"                          shift, and go to state 448
    "deref"                           shift, and go to state 449
    "with"                            shift, and go to state 450
    "assume"                          shift, and go to state 451
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 454
    "continue"                        shift, and go to state 455
    "pass"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 457
    "label"                           shift, and go to state 458
    "goto"                            shift, and go to state 459
    "unsafe"                          shift, and go to state 460
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "yield"                           shift, and go to state 467
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 470
    "@ <|"                            shift, and go to state 471
    "@@ <|"                           shift, and go to state 472
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 490
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    "end of code block"               shift, and go to state 1345
    "end of expression"               shift, and go to state 495
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder             go to state 505
    expr_reader                go to state 506
    expression_label           go to state 507
    expression_goto            go to state 508
    if_or_static_if            go to state 509
    expression_if_one_liner    go to state 510
    expression_if_then_else    go to state 511
    expression_for_loop        go to state 512
    expression_unsafe          go to state 513
    expression_while_loop      go to state 514
    expression_with            go to state 515
    expression_with_alias      go to state 516
    expr_call_pipe             go to state 517
    expression_any             go to state 518
    expr_keyword               go to state 519
    expression_keyword         go to state 520
    expr_pipe                  go to state 521
    name_in_namespace          go to state 522
    expression_delete          go to state 523
    expr_new                   go to state 524
    expression_break           go to state 525
    expression_continue        go to state 526
    expression_return_no_pipe  go to state 527
    expression_return          go to state 528
    expression_yield_no_pipe   go to state 529
    expression_yield           go to state 530
    expression_try_catch       go to state 531
    kwd_let                    go to state 532
    expression_let             go to state 533
    expr_cast                  go to state 534
    expr_type_decl             go to state 535
    expr_type_info             go to state 536
    block_or_lambda            go to state 537
    expr_full_block            go to state 538
    expr_numeric_const         go to state 539
    expr_assign                go to state 540
    expr_assign_pipe           go to state 541
    expr_named_call            go to state 542
    expr_method_call           go to state 543
    func_addr_expr             go to state 544
    expr_field                 go to state 545
    expr_call                  go to state 546
    expr                       go to state 547
    expr_mtag                  go to state 548
    basic_type_declaration     go to state 549
    make_decl                  go to state 550
    make_struct_decl           go to state 551
    make_tuple_call            go to state 552
    make_dim_decl              go to state 553
    make_table_decl            go to state 554
    array_comprehension        go to state 555


State 1195

  863 array_comprehension: '[' "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 1346
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 710
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1196

  633 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  634                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  864 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1347
    ','   shift, and go to state 839


State 1197

  830 make_dim_decl: '[' expr_list optional_comma ']' .

    $default  reduce using rule 830 (make_dim_decl)


State 1198

  458 expr: '(' expr_list optional_comma ')' .

    $default  reduce using rule 458 (expr)


State 1199

  398 func_addr_name: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1348
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1200

  517 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1349
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1201

  402 func_addr_expr: '@' '@' '<' $@22 . type_declaration_no_options '>' $@23 func_addr_name

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1350


State 1202

  405 func_addr_expr: '@' '@' '<' $@24 . optional_function_argument_list optional_function_type '>' $@25 func_addr_name

    '('  shift, and go to state 284

    $default  reduce using rule 121 (optional_function_argument_list)

    optional_function_argument_list  go to state 1351


State 1203

   60 expression_else: "else" . expression_block

    "begin of code block"  shift, and go to state 286

    expression_block  go to state 1352


State 1204

   57 elif_or_static_elif: "elif" .

    $default  reduce using rule 57 (elif_or_static_elif)


State 1205

   58 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 58 (elif_or_static_elif)


State 1206

   61 expression_else: elif_or_static_elif . expr expression_block expression_else

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1353
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1207

   72 expression_if_then_else: if_or_static_if expr expression_block expression_else .

    $default  reduce using rule 72 (expression_if_then_else)


State 1208

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr . expression_else_one_liner "end of expression"
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "else"  shift, and go to state 1354
    "is"    shift, and go to state 731
    "as"    shift, and go to state 732
    "<<"    shift, and go to state 741
    ">>"    shift, and go to state 742
    "++"    shift, and go to state 743
    "--"    shift, and go to state 744
    "<="    shift, and go to state 745
    ">="    shift, and go to state 748
    "=="    shift, and go to state 749
    "!="    shift, and go to state 750
    "->"    shift, and go to state 751
    "??"    shift, and go to state 753
    "?."    shift, and go to state 754
    "?["    shift, and go to state 755
    "<|"    shift, and go to state 756
    "|>"    shift, and go to state 757
    "<<<"   shift, and go to state 759
    ">>>"   shift, and go to state 760
    "&&"    shift, and go to state 763
    "||"    shift, and go to state 764
    "^^"    shift, and go to state 765
    ".."    shift, and go to state 769
    '?'     shift, and go to state 771
    '|'     shift, and go to state 772
    '^'     shift, and go to state 773
    '&'     shift, and go to state 774
    '<'     shift, and go to state 775
    '>'     shift, and go to state 776
    '-'     shift, and go to state 777
    '+'     shift, and go to state 778
    '*'     shift, and go to state 779
    '/'     shift, and go to state 780
    '%'     shift, and go to state 781
    '.'     shift, and go to state 782
    '['     shift, and go to state 783

    $default  reduce using rule 64 (expression_else_one_liner)

    expression_else_one_liner  go to state 1355


State 1209

  345 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type expression_block

    "[["  shift, and go to state 965

    $default  reduce using rule 339 (optional_capture_list)

    optional_capture_list  go to state 1356


State 1210

  393 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  776 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  777                   | make_struct_fields . ',' "name" ":=" expr
  780                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  781                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1166
    ']'  shift, and go to state 1357


State 1211

  326 expr_list: expr_list ',' . expr
  394 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 1358
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1114
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1212

  415 expr_call: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 415 (expr_call)


State 1213

  414 expr_call: name_in_namespace '(' make_struct_single ')' .

    $default  reduce using rule 414 (expr_call)


State 1214

  299 tuple_expansion: "name" .

    $default  reduce using rule 299 (tuple_expansion)


State 1215

  300 tuple_expansion: tuple_expansion . ',' "name"
  301 tuple_expansion_variable_declaration: "[[" tuple_expansion . ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  303                                     | "[[" tuple_expansion . ']' ']' optional_ref copy_or_move_or_clone expr "end of expression"

    ','  shift, and go to state 1359
    ']'  shift, and go to state 1360


State 1216

  300 tuple_expansion: tuple_expansion . ',' "name"
  302 tuple_expansion_variable_declaration: '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  304                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr "end of expression"

    ','  shift, and go to state 1359
    ')'  shift, and go to state 1361


State 1217

  335 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1362


State 1218

  336 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1363


State 1219

  334 capture_entry: '=' . "name"

    "name"  shift, and go to state 1364


State 1220

  333 capture_entry: '&' . "name"

    "name"  shift, and go to state 1365


State 1221

  337 capture_list: capture_entry .

    $default  reduce using rule 337 (capture_list)


State 1222

  338 capture_list: capture_list . ',' capture_entry
  340 optional_capture_list: "[[" capture_list . ']' ']'

    ','  shift, and go to state 1366
    ']'  shift, and go to state 1367


State 1223

  343 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 373

    $default  reduce using rule 124 (optional_function_type)

    optional_function_type  go to state 1368


State 1224

  476 expr: expr "is" "type" '<' . $@28 type_declaration_no_options '>' $@29

    $default  reduce using rule 474 ($@28)

    $@28  go to state 1369


State 1225

  516 expr_mtag: expr "is" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1370
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1226

  482 expr: expr "as" "type" '<' . $@30 type_declaration '>' $@31

    $default  reduce using rule 480 ($@30)

    $@30  go to state 1371


State 1227

  514 expr_mtag: expr "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1372
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1228

  374 expr_assign_pipe_right: "$ <|" expr_block .

    $default  reduce using rule 374 (expr_assign_pipe_right)


State 1229

  372 expr_assign_pipe_right: "@ <|" expr_block .

    $default  reduce using rule 372 (expr_assign_pipe_right)


State 1230

  373 expr_assign_pipe_right: "@@ <|" expr_block .

    $default  reduce using rule 373 (expr_assign_pipe_right)


State 1231

  395 expr_method_call: expr "->" "name" '(' . ')'
  396                 | expr "->" "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    ')'                               shift, and go to state 1373
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 1374
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 710
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1232

  511 expr_mtag: expr "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1375
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1233

  461 expr: expr "?[" expr ']' .

    $default  reduce using rule 461 (expr)


State 1234

  487 expr: expr '?' "as" "type" . '<' $@32 type_declaration '>' $@33

    '<'  shift, and go to state 1376


State 1235

  515 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1377


State 1236

  484 expr: expr '?' "as" "name" .

    $default  reduce using rule 484 (expr)


State 1237

  488 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 488 (expr)


State 1238

  473 expr: expr '?' expr ':' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1378
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1239

  513 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1379


State 1240

  464 expr: expr '.' "?." "name" .

    $default  reduce using rule 464 (expr)


State 1241

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  462     | expr '.' "?[" expr . ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783
    ']'    shift, and go to state 1380


State 1242

  510 expr_mtag: expr '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1381
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1243

  408 expr_field: expr '.' "name" '(' . ')'
  409           | expr '.' "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    ')'                               shift, and go to state 1382
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 1383
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 710
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1244

  512 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1384


State 1245

  407 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 407 (expr_field)


State 1246

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  460     | expr '.' '[' expr . ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783
    ']'    shift, and go to state 1385


State 1247

  412 expr_field: expr '.' $@26 error . $@27

    $default  reduce using rule 411 ($@27)

    $@27  go to state 1386


State 1248

  459 expr: expr '[' expr ']' .

    $default  reduce using rule 459 (expr)


State 1249

  417 expr_call: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 417 (expr_call)


State 1250

  594 enum_list: enum_list "name" '=' expr "end of expression" .

    $default  reduce using rule 594 (enum_list)


State 1251

  614 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block" .

    $default  reduce using rule 614 (enum_declaration)


State 1252

  120 optional_annotation_list: '[' annotation_list ']' .
  539 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' . "end of expression"

    "end of expression"  shift, and go to state 1387

    $default  reduce using rule 120 (optional_annotation_list)


State 1253

  527 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 527 (optional_public_or_private_member_variable)


State 1254

  528 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 528 (optional_public_or_private_member_variable)


State 1255

  536 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . "abstract" optional_constant $@35 function_declaration_header "end of expression"
  538                                 | struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block

    "abstract"  shift, and go to state 1388
    "static"    shift, and go to state 1256

    $default  reduce using rule 529 (optional_static_member_variable)

    optional_static_member_variable  go to state 1389


State 1256

  530 optional_static_member_variable: "static" .

    $default  reduce using rule 530 (optional_static_member_variable)


State 1257

  531 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1390
    "sealed"    shift, and go to state 1391

    $default  reduce using rule 521 (optional_override)

    optional_override  go to state 1392


State 1258

  534 struct_variable_declaration_list: struct_variable_declaration_list $@34 structure_variable_declaration "end of expression" .

    $default  reduce using rule 534 (struct_variable_declaration_list)


State 1259

  576 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 576 (let_variable_declaration)


State 1260

  694 type_declaration_no_options: "type" '<' $@49 type_declaration '>' $@50 .

    $default  reduce using rule 694 (type_declaration_no_options)


State 1261

  717 type_declaration_no_options: "array" '<' $@54 type_declaration '>' $@55 .

    $default  reduce using rule 717 (type_declaration_no_options)


State 1262

  720 type_declaration_no_options: "table" '<' $@56 table_type_pair '>' $@57 .

    $default  reduce using rule 720 (type_declaration_no_options)


State 1263

  683 table_type_pair: type_declaration "end of expression" type_declaration .
  752 type_declaration: type_declaration . '|' type_declaration_no_options
  753                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417

    $default  reduce using rule 683 (table_type_pair)


State 1264

  723 type_declaration_no_options: "iterator" '<' $@58 type_declaration '>' $@59 .

    $default  reduce using rule 723 (type_declaration_no_options)


State 1265

  713 type_declaration_no_options: "smart_ptr" '<' $@52 type_declaration '>' $@53 .

    $default  reduce using rule 713 (type_declaration_no_options)


State 1266

  675 bitfield_bits: bitfield_bits "end of expression" "name" .

    $default  reduce using rule 675 (bitfield_bits)


State 1267

  681 bitfield_type_declaration: "bitfield" '<' $@47 bitfield_bits '>' $@48 .

    $default  reduce using rule 681 (bitfield_type_declaration)


State 1268

  727 type_declaration_no_options: "block" '<' $@60 type_declaration '>' $@61 .

    $default  reduce using rule 727 (type_declaration_no_options)


State 1269

  730 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list optional_function_type '>' . $@63

    $default  reduce using rule 729 ($@63)

    $@63  go to state 1393


State 1270

  734 type_declaration_no_options: "function" '<' $@64 type_declaration '>' $@65 .

    $default  reduce using rule 734 (type_declaration_no_options)


State 1271

  737 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list optional_function_type '>' . $@67

    $default  reduce using rule 736 ($@67)

    $@67  go to state 1394


State 1272

  741 type_declaration_no_options: "lambda" '<' $@68 type_declaration '>' $@69 .

    $default  reduce using rule 741 (type_declaration_no_options)


State 1273

  744 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list optional_function_type '>' . $@71

    $default  reduce using rule 743 ($@71)

    $@71  go to state 1395


State 1274

  547 tuple_type_list: tuple_type_list "end of expression" tuple_type .

    $default  reduce using rule 547 (tuple_type_list)


State 1275

  747 type_declaration_no_options: "tuple" '<' $@72 tuple_type_list '>' $@73 .

    $default  reduce using rule 747 (type_declaration_no_options)


State 1276

  553 variant_type_list: variant_type_list "end of expression" variant_type .

    $default  reduce using rule 553 (variant_type_list)


State 1277

  750 type_declaration_no_options: "variant" '<' $@74 variant_type_list '>' $@75 .

    $default  reduce using rule 750 (type_declaration_no_options)


State 1278

  252 type_declaration_no_options_list: type_declaration_no_options_list "end of expression" . type_declaration

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 1396


State 1279

  698 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' . '(' optional_expr_list ')'

    '('  shift, and go to state 1397


State 1280

  631 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 631 (variable_name_with_pos_list)


State 1281

  634 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1398


State 1282

  562 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1399
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1283

  809 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' . $@89 '(' use_initializer make_struct_dim ')'

    $default  reduce using rule 808 ($@89)

    $@89  go to state 1400


State 1284

  812 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' . $@91 '(' use_initializer make_struct_dim ')'

    $default  reduce using rule 811 ($@91)

    $@91  go to state 1401


State 1285

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" expr_list . expression_block
  326 expr_list: expr_list . ',' expr

    "begin of code block"  shift, and go to state 286
    ','                    shift, and go to state 861

    expression_block  go to state 1402


State 1286

  271 new_type_declaration: '<' $@11 type_declaration '>' . $@12

    $default  reduce using rule 270 ($@12)

    $@12  go to state 1403


State 1287

  275 expr_new: "new" new_type_declaration '(' expr_list ')' .

    $default  reduce using rule 275 (expr_new)


State 1288

  774 make_struct_fields: "name" . copy_or_move expr
  775                   | "name" . ":=" expr

    "<-"  shift, and go to state 838
    ":="  shift, and go to state 1160
    '='   shift, and go to state 840

    copy_or_move  go to state 1161


State 1289

  274 expr_new: "new" new_type_declaration '(' use_initializer ')' .

    $default  reduce using rule 274 (expr_new)


State 1290

  276 expr_new: "new" new_type_declaration '(' use_initializer make_struct_single . ')'

    ')'  shift, and go to state 1404


State 1291

  320 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" . '>' expr ')'
  321               | "typeinfo" '(' name_in_namespace '<' "name" . "end of expression" "name" '>' expr ')'

    "end of expression"  shift, and go to state 1405
    '>'                  shift, and go to state 1406


State 1292

  319 expr_type_info: "typeinfo" '(' name_in_namespace expr ')' .

    $default  reduce using rule 319 (expr_type_info)


State 1293

  324 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" . "name" '>' '(' expr ')'

    "name"  shift, and go to state 1407


State 1294

  323 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' . '(' expr ')'

    '('  shift, and go to state 1408


State 1295

  322 expr_type_info: "typeinfo" name_in_namespace '(' expr ')' .

    $default  reduce using rule 322 (expr_type_info)


State 1296

  318 expr_type_decl: "type" '<' $@19 type_declaration '>' . $@20

    $default  reduce using rule 317 ($@20)

    $@20  go to state 1409


State 1297

  690 type_declaration_no_options: type_declaration_no_options . dim_list
  691                            | type_declaration_no_options . '[' ']'
  699                            | type_declaration_no_options . '-' '[' ']'
  700                            | type_declaration_no_options . "explicit"
  701                            | type_declaration_no_options . "const"
  702                            | type_declaration_no_options . '-' "const"
  703                            | type_declaration_no_options . '&'
  704                            | type_declaration_no_options . '-' '&'
  705                            | type_declaration_no_options . '#'
  706                            | type_declaration_no_options . "implicit"
  707                            | type_declaration_no_options . '-' '#'
  708                            | type_declaration_no_options . "==" "const"
  709                            | type_declaration_no_options . "==" '&'
  710                            | type_declaration_no_options . '?'
  714                            | type_declaration_no_options . "??"
  835 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options . '>' $@99 '(' use_initializer make_struct_dim ')'

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1410
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1298

  690 type_declaration_no_options: type_declaration_no_options . dim_list
  691                            | type_declaration_no_options . '[' ']'
  699                            | type_declaration_no_options . '-' '[' ']'
  700                            | type_declaration_no_options . "explicit"
  701                            | type_declaration_no_options . "const"
  702                            | type_declaration_no_options . '-' "const"
  703                            | type_declaration_no_options . '&'
  704                            | type_declaration_no_options . '-' '&'
  705                            | type_declaration_no_options . '#'
  706                            | type_declaration_no_options . "implicit"
  707                            | type_declaration_no_options . '-' '#'
  708                            | type_declaration_no_options . "==" "const"
  709                            | type_declaration_no_options . "==" '&'
  710                            | type_declaration_no_options . '?'
  714                            | type_declaration_no_options . "??"
  838 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options . '>' $@101 '(' use_initializer make_struct_dim ')'

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1411
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1299

  690 type_declaration_no_options: type_declaration_no_options . dim_list
  691                            | type_declaration_no_options . '[' ']'
  699                            | type_declaration_no_options . '-' '[' ']'
  700                            | type_declaration_no_options . "explicit"
  701                            | type_declaration_no_options . "const"
  702                            | type_declaration_no_options . '-' "const"
  703                            | type_declaration_no_options . '&'
  704                            | type_declaration_no_options . '-' '&'
  705                            | type_declaration_no_options . '#'
  706                            | type_declaration_no_options . "implicit"
  707                            | type_declaration_no_options . '-' '#'
  708                            | type_declaration_no_options . "==" "const"
  709                            | type_declaration_no_options . "==" '&'
  710                            | type_declaration_no_options . '?'
  714                            | type_declaration_no_options . "??"
  841 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options . '>' $@103 '(' make_struct_dim ')'

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1412
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1300

  845 make_dim_decl: "array" '<' $@104 type_declaration_no_options '>' . $@105 '(' expr_list optional_comma ')'

    $default  reduce using rule 844 ($@105)

    $@105  go to state 1413


State 1301

  842 make_dim_decl: "array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 842 (make_dim_decl)


State 1302

  690 type_declaration_no_options: type_declaration_no_options . dim_list
  691                            | type_declaration_no_options . '[' ']'
  699                            | type_declaration_no_options . '-' '[' ']'
  700                            | type_declaration_no_options . "explicit"
  701                            | type_declaration_no_options . "const"
  702                            | type_declaration_no_options . '-' "const"
  703                            | type_declaration_no_options . '&'
  704                            | type_declaration_no_options . '-' '&'
  705                            | type_declaration_no_options . '#'
  706                            | type_declaration_no_options . "implicit"
  707                            | type_declaration_no_options . '-' '#'
  708                            | type_declaration_no_options . "==" "const"
  709                            | type_declaration_no_options . "==" '&'
  710                            | type_declaration_no_options . '?'
  714                            | type_declaration_no_options . "??"
  858 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options . '>' '(' expr_map_tuple_list optional_comma ')'

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1414
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1303

  857 make_table_decl: "table" '<' type_declaration_no_options '>' '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 691
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_map_tuple          go to state 699
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    expr_map_tuple_list     go to state 1415
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1304

  856 make_table_decl: "table" '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 856 (make_table_decl)


State 1305

   81 expression_with_alias: "assume" "name" '=' $@5 expr .
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783

    $default  reduce using rule 81 (expression_with_alias)


State 1306

  309 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' . $@14 expr

    $default  reduce using rule 308 ($@14)

    $@14  go to state 1416


State 1307

  312 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' . $@16 expr

    $default  reduce using rule 311 ($@16)

    $@16  go to state 1417


State 1308

  315 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' . $@18 expr

    $default  reduce using rule 314 ($@18)

    $@18  go to state 1418


State 1309

  849 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' . $@107 '(' expr_list optional_comma ')'

    $default  reduce using rule 848 ($@107)

    $@107  go to state 1419


State 1310

  846 make_dim_decl: "fixed_array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 846 (make_dim_decl)


State 1311

  818 make_struct_decl: "default" '<' $@94 type_declaration_no_options '>' . $@95 use_initializer

    $default  reduce using rule 817 ($@95)

    $@95  go to state 1420


State 1312

  827 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' . $@97 '(' use_initializer make_struct_dim ')'

    $default  reduce using rule 826 ($@97)

    $@97  go to state 1421


State 1313

  824 make_tuple_call: "tuple" '(' expr_list optional_comma ')' .

    $default  reduce using rule 824 (make_tuple_call)


State 1314

  815 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' . $@93 '(' make_struct_dim ')'

    $default  reduce using rule 814 ($@93)

    $@93  go to state 1422


State 1315

  470 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  471     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'

    '('  shift, and go to state 1423


State 1316

  342 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 373

    $default  reduce using rule 124 (optional_function_type)

    optional_function_type  go to state 1424


State 1317

  508 expr_mtag: "$c" '(' expr ')' '(' . ')'
  509          | "$c" '(' expr ')' '(' . expr_list ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    ')'                               shift, and go to state 1425
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 1426
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 710
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1318

  326 expr_list: expr_list . ',' expr
  865 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']' ']'

    "end of expression"  shift, and go to state 1427
    ','                  shift, and go to state 861


State 1319

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'
  778 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  779                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783
    ')'    shift, and go to state 1428


State 1320

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'
  775 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783

    $default  reduce using rule 775 (make_struct_fields)


State 1321

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'
  774 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783

    $default  reduce using rule 774 (make_struct_fields)


State 1322

  784 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  804 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"              shift, and go to state 911
    "end of expression"  shift, and go to state 1167

    $default  reduce using rule 785 (optional_block)

    optional_block  go to state 1429


State 1323

  803 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1169
    ",]]"  shift, and go to state 1170
    ']'    shift, and go to state 1171

    optional_trailing_delim_sqr_sqr  go to state 1430


State 1324

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'
  820 make_tuple: expr "=>" expr .

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783

    $default  reduce using rule 820 (make_tuple)


State 1325

  780 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  781                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1431


State 1326

  776 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  777                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 838
    ":="  shift, and go to state 1432
    '='   shift, and go to state 840

    copy_or_move  go to state 1433


State 1327

  776 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  777                   | make_struct_fields . ',' "name" ":=" expr
  780                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  781                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  784 make_struct_dim: make_struct_dim "end of expression" make_struct_fields .

    ','  shift, and go to state 1166

    $default  reduce using rule 784 (make_struct_dim)


State 1328

  801 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 801 (make_struct_decl)


State 1329

  793 optional_trailing_delim_sqr_sqr: ']' ']' .

    $default  reduce using rule 793 (optional_trailing_delim_sqr_sqr)


State 1330

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'
  821 make_tuple: make_tuple ',' expr .

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783

    $default  reduce using rule 821 (make_tuple)


State 1331

  821 make_tuple: make_tuple . ',' expr
  829 make_dim: make_dim "end of expression" make_tuple .

    ','  shift, and go to state 1173

    $default  reduce using rule 829 (make_dim)


State 1332

  791 optional_trailing_semicolon_sqr_sqr: ']' ']' .

    $default  reduce using rule 791 (optional_trailing_semicolon_sqr_sqr)


State 1333

  326 expr_list: expr_list . ',' expr
  866 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where "end of code block" ']'

    "end of expression"  shift, and go to state 1434
    ','                  shift, and go to state 861


State 1334

  784 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  806 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"              shift, and go to state 911
    "end of expression"  shift, and go to state 1167

    $default  reduce using rule 785 (optional_block)

    optional_block  go to state 1435


State 1335

  796 optional_trailing_delim_cur_sqr: "end of code block" . ']'

    ']'  shift, and go to state 1436


State 1336

  797 optional_trailing_delim_cur_sqr: ";}]" .

    $default  reduce using rule 797 (optional_trailing_delim_cur_sqr)


State 1337

  798 optional_trailing_delim_cur_sqr: ",}]" .

    $default  reduce using rule 798 (optional_trailing_delim_cur_sqr)


State 1338

  805 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 805 (make_struct_decl)


State 1339

  789 optional_trailing_semicolon_cur_sqr: "end of code block" ']' .

    $default  reduce using rule 789 (optional_trailing_semicolon_cur_sqr)


State 1340

  326 expr_list: expr_list . ',' expr
  868 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list . "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "end of expression"  shift, and go to state 1437
    ','                  shift, and go to state 861


State 1341

  255 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list '>' . $@8 expr

    $default  reduce using rule 254 ($@8)

    $@8  go to state 1438


State 1342

  258 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list '>' . $@10 optional_expr_list_in_braces

    $default  reduce using rule 257 ($@10)

    $@10  go to state 1439


State 1343

   30 string_builder_body: string_builder_body "{" expr "}" .

    $default  reduce using rule 30 (string_builder_body)


State 1344

  326 expr_list: expr_list . ',' expr
  867 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list . "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1440
    ','                  shift, and go to state 861


State 1345

  219 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions "end of code block" .

    $default  reduce using rule 219 (expression_block)


State 1346

  326 expr_list: expr_list . ',' expr
  863 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1441
    ','                  shift, and go to state 861


State 1347

  864 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 1442
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 710
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1348

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  398 func_addr_name: "$i" '(' expr . ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783
    ')'    shift, and go to state 1443


State 1349

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'
  517          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783
    ')'    shift, and go to state 1444


State 1350

  402 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options . '>' $@23 func_addr_name
  690 type_declaration_no_options: type_declaration_no_options . dim_list
  691                            | type_declaration_no_options . '[' ']'
  699                            | type_declaration_no_options . '-' '[' ']'
  700                            | type_declaration_no_options . "explicit"
  701                            | type_declaration_no_options . "const"
  702                            | type_declaration_no_options . '-' "const"
  703                            | type_declaration_no_options . '&'
  704                            | type_declaration_no_options . '-' '&'
  705                            | type_declaration_no_options . '#'
  706                            | type_declaration_no_options . "implicit"
  707                            | type_declaration_no_options . '-' '#'
  708                            | type_declaration_no_options . "==" "const"
  709                            | type_declaration_no_options . "==" '&'
  710                            | type_declaration_no_options . '?'
  714                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1445
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1351

  405 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list . optional_function_type '>' $@25 func_addr_name

    ':'  shift, and go to state 373

    $default  reduce using rule 124 (optional_function_type)

    optional_function_type  go to state 1446


State 1352

   60 expression_else: "else" expression_block .

    $default  reduce using rule 60 (expression_else)


State 1353

   61 expression_else: elif_or_static_elif expr . expression_block expression_else
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 731
    "as"                   shift, and go to state 732
    "<<"                   shift, and go to state 741
    ">>"                   shift, and go to state 742
    "++"                   shift, and go to state 743
    "--"                   shift, and go to state 744
    "<="                   shift, and go to state 745
    ">="                   shift, and go to state 748
    "=="                   shift, and go to state 749
    "!="                   shift, and go to state 750
    "->"                   shift, and go to state 751
    "??"                   shift, and go to state 753
    "?."                   shift, and go to state 754
    "?["                   shift, and go to state 755
    "<|"                   shift, and go to state 756
    "|>"                   shift, and go to state 757
    "<<<"                  shift, and go to state 759
    ">>>"                  shift, and go to state 760
    "&&"                   shift, and go to state 763
    "||"                   shift, and go to state 764
    "^^"                   shift, and go to state 765
    ".."                   shift, and go to state 769
    "begin of code block"  shift, and go to state 286
    '?'                    shift, and go to state 771
    '|'                    shift, and go to state 772
    '^'                    shift, and go to state 773
    '&'                    shift, and go to state 774
    '<'                    shift, and go to state 775
    '>'                    shift, and go to state 776
    '-'                    shift, and go to state 777
    '+'                    shift, and go to state 778
    '*'                    shift, and go to state 779
    '/'                    shift, and go to state 780
    '%'                    shift, and go to state 781
    '.'                    shift, and go to state 782
    '['                    shift, and go to state 783

    expression_block  go to state 1447


State 1354

   66 expression_else_one_liner: "else" . $@2 expression_if_one_liner

    $default  reduce using rule 65 ($@2)

    $@2  go to state 1448


State 1355

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner . "end of expression"

    "end of expression"  shift, and go to state 1449


State 1356

  345 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type expression_block

    '('  shift, and go to state 284

    $default  reduce using rule 121 (optional_function_argument_list)

    optional_function_argument_list  go to state 1450


State 1357

  393 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1451


State 1358

  394 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'
  830 make_dim_decl: '[' . expr_list optional_comma ']'
  863 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  864                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "for"                             shift, and go to state 707
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "iterator"                        shift, and go to state 708
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "$f"                              shift, and go to state 912
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 913
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 709
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 710
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_fields      go to state 1452
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1359

  300 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1453


State 1360

  301 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' . ']' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  303                                     | "[[" tuple_expansion ']' . ']' optional_ref copy_or_move_or_clone expr "end of expression"

    ']'  shift, and go to state 1454


State 1361

  302 tuple_expansion_variable_declaration: '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  304                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr "end of expression"

    ':'  shift, and go to state 1455
    '&'  shift, and go to state 389

    $default  reduce using rule 568 (optional_ref)

    optional_ref  go to state 1456


State 1362

  335 capture_entry: "<-" "name" .

    $default  reduce using rule 335 (capture_entry)


State 1363

  336 capture_entry: ":=" "name" .

    $default  reduce using rule 336 (capture_entry)


State 1364

  334 capture_entry: '=' "name" .

    $default  reduce using rule 334 (capture_entry)


State 1365

  333 capture_entry: '&' "name" .

    $default  reduce using rule 333 (capture_entry)


State 1366

  338 capture_list: capture_list ',' . capture_entry

    "<-"  shift, and go to state 1217
    ":="  shift, and go to state 1218
    '='   shift, and go to state 1219
    '&'   shift, and go to state 1220

    capture_entry  go to state 1457


State 1367

  340 optional_capture_list: "[[" capture_list ']' . ']'

    ']'  shift, and go to state 1458


State 1368

  343 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"                   shift, and go to state 1459
    "begin of code block"  shift, and go to state 286

    expression_block       go to state 1460
    block_or_simple_block  go to state 1461


State 1369

  476 expr: expr "is" "type" '<' $@28 . type_declaration_no_options '>' $@29

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1462


State 1370

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'
  516          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783
    ')'    shift, and go to state 1463


State 1371

  482 expr: expr "as" "type" '<' $@30 . type_declaration '>' $@31

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 1464


State 1372

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  514          | expr "as" "$f" '(' expr . ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783
    ')'    shift, and go to state 1465


State 1373

  395 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 395 (expr_method_call)


State 1374

  326 expr_list: expr_list . ',' expr
  396 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 861
    ')'  shift, and go to state 1466


State 1375

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  511          | expr "?." "$f" '(' expr . ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783
    ')'    shift, and go to state 1467


State 1376

  487 expr: expr '?' "as" "type" '<' . $@32 type_declaration '>' $@33

    $default  reduce using rule 485 ($@32)

    $@32  go to state 1468


State 1377

  515 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1469
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1378

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  473     | expr '?' expr ':' expr .
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783

    $default  reduce using rule 473 (expr)


State 1379

  513 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1470
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1380

  462 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 462 (expr)


State 1381

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  510          | expr '.' "$f" '(' expr . ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783
    ')'    shift, and go to state 1471


State 1382

  408 expr_field: expr '.' "name" '(' ')' .

    $default  reduce using rule 408 (expr_field)


State 1383

  326 expr_list: expr_list . ',' expr
  409 expr_field: expr '.' "name" '(' expr_list . ')'

    ','  shift, and go to state 861
    ')'  shift, and go to state 1472


State 1384

  512 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1473
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1385

  460 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 460 (expr)


State 1386

  412 expr_field: expr '.' $@26 error $@27 .

    $default  reduce using rule 412 (expr_field)


State 1387

  539 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' "end of expression" .

    $default  reduce using rule 539 (struct_variable_declaration_list)


State 1388

  536 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" . optional_constant $@35 function_declaration_header "end of expression"

    "const"  shift, and go to state 1474

    $default  reduce using rule 524 (optional_constant)

    optional_constant  go to state 1475


State 1389

  538 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@36 function_declaration_header expression_block

    "override"  shift, and go to state 1390
    "sealed"    shift, and go to state 1391

    $default  reduce using rule 521 (optional_override)

    optional_override  go to state 1476


State 1390

  522 optional_override: "override" .

    $default  reduce using rule 522 (optional_override)


State 1391

  523 optional_override: "sealed" .

    $default  reduce using rule 523 (optional_override)


State 1392

  531 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1253
    "private"  shift, and go to state 1254

    $default  reduce using rule 526 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1477


State 1393

  730 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list optional_function_type '>' $@63 .

    $default  reduce using rule 730 (type_declaration_no_options)


State 1394

  737 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list optional_function_type '>' $@67 .

    $default  reduce using rule 737 (type_declaration_no_options)


State 1395

  744 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list optional_function_type '>' $@71 .

    $default  reduce using rule 744 (type_declaration_no_options)


State 1396

  252 type_declaration_no_options_list: type_declaration_no_options_list "end of expression" type_declaration .
  752 type_declaration: type_declaration . '|' type_declaration_no_options
  753                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417

    $default  reduce using rule 252 (type_declaration_no_options_list)


State 1397

  698 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    $default  reduce using rule 247 (optional_expr_list)

    string_builder          go to state 505
    expr_reader             go to state 506
    optional_expr_list      go to state 1478
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 823
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 710
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1398

  634 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 634 (variable_name_with_pos_list)


State 1399

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'
  562 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783

    $default  reduce using rule 562 (variable_declaration)


State 1400

  809 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 . '(' use_initializer make_struct_dim ')'

    '('  shift, and go to state 1479


State 1401

  812 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 . '(' use_initializer make_struct_dim ')'

    '('  shift, and go to state 1480


State 1402

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" expr_list expression_block .

    $default  reduce using rule 76 (expression_for_loop)


State 1403

  271 new_type_declaration: '<' $@11 type_declaration '>' $@12 .

    $default  reduce using rule 271 (new_type_declaration)


State 1404

  276 expr_new: "new" new_type_declaration '(' use_initializer make_struct_single ')' .

    $default  reduce using rule 276 (expr_new)


State 1405

  321 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" . "name" '>' expr ')'

    "name"  shift, and go to state 1481


State 1406

  320 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1482
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1407

  324 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" . '>' '(' expr ')'

    '>'  shift, and go to state 1483


State 1408

  323 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1484
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1409

  318 expr_type_decl: "type" '<' $@19 type_declaration '>' $@20 .

    $default  reduce using rule 318 (expr_type_decl)


State 1410

  835 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' . $@99 '(' use_initializer make_struct_dim ')'

    $default  reduce using rule 834 ($@99)

    $@99  go to state 1485


State 1411

  838 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' . $@101 '(' use_initializer make_struct_dim ')'

    $default  reduce using rule 837 ($@101)

    $@101  go to state 1486


State 1412

  841 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options '>' . $@103 '(' make_struct_dim ')'

    $default  reduce using rule 840 ($@103)

    $@103  go to state 1487


State 1413

  845 make_dim_decl: "array" '<' $@104 type_declaration_no_options '>' $@105 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1488


State 1414

  858 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' . '(' expr_map_tuple_list optional_comma ')'

    '('  shift, and go to state 1489


State 1415

  853 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  857 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 940

    $default  reduce using rule 861 (optional_comma)

    optional_comma  go to state 1490


State 1416

  309 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1491
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1417

  312 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1492
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1418

  315 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1493
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1419

  849 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' $@107 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1494


State 1420

  818 make_struct_decl: "default" '<' $@94 type_declaration_no_options '>' $@95 . use_initializer

    "uninitialized"  shift, and go to state 1101

    $default  reduce using rule 799 (use_initializer)

    use_initializer  go to state 1495


State 1421

  827 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 . '(' use_initializer make_struct_dim ')'

    '('  shift, and go to state 1496


State 1422

  815 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 . '(' make_struct_dim ')'

    '('  shift, and go to state 1497


State 1423

  470 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  471     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    ')'                               shift, and go to state 1498
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1499
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1424

  342 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"                   shift, and go to state 1459
    "begin of code block"  shift, and go to state 286

    expression_block       go to state 1460
    block_or_simple_block  go to state 1500


State 1425

  508 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 508 (expr_mtag)


State 1426

  326 expr_list: expr_list . ',' expr
  509 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 861
    ')'  shift, and go to state 1501


State 1427

  865 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']' ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1502
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1428

  778 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  779                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 838
    ":="  shift, and go to state 1503
    '='   shift, and go to state 840

    copy_or_move  go to state 1504


State 1429

  804 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1169
    ",]]"  shift, and go to state 1170
    ']'    shift, and go to state 1171

    optional_trailing_delim_sqr_sqr  go to state 1505


State 1430

  803 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 803 (make_struct_decl)


State 1431

  780 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  781                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1506
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1432

  777 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1507
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1433

  776 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1508
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1434

  866 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where "end of code block" ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1509
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1435

  806 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    "end of code block"  shift, and go to state 1335
    ";}]"                shift, and go to state 1336
    ",}]"                shift, and go to state 1337

    optional_trailing_delim_cur_sqr  go to state 1510


State 1436

  796 optional_trailing_delim_cur_sqr: "end of code block" ']' .

    $default  reduce using rule 796 (optional_trailing_delim_cur_sqr)


State 1437

  868 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" . make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 691
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_map_tuple          go to state 1511
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1438

  255 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list '>' $@8 . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1512
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1439

  258 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list '>' $@10 . optional_expr_list_in_braces

    '('  shift, and go to state 1513

    '('       [reduce using rule 249 (optional_expr_list_in_braces)]
    $default  reduce using rule 249 (optional_expr_list_in_braces)

    optional_expr_list_in_braces  go to state 1514


State 1440

  867 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" . make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 691
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_map_tuple          go to state 1515
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1441

  863 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1516
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1442

  326 expr_list: expr_list . ',' expr
  864 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1517
    ','                  shift, and go to state 861


State 1443

  398 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 398 (func_addr_name)


State 1444

  517 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 517 (expr_mtag)


State 1445

  402 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options '>' . $@23 func_addr_name

    $default  reduce using rule 401 ($@23)

    $@23  go to state 1518


State 1446

  405 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type . '>' $@25 func_addr_name

    '>'  shift, and go to state 1519


State 1447

   61 expression_else: elif_or_static_elif expr expression_block . expression_else

    "else"         shift, and go to state 1203
    "elif"         shift, and go to state 1204
    "static_elif"  shift, and go to state 1205

    $default  reduce using rule 59 (expression_else)

    elif_or_static_elif  go to state 1206
    expression_else      go to state 1520


State 1448

   66 expression_else_one_liner: "else" $@2 . expression_if_one_liner

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "return"                          shift, and go to state 1521
    "null"                            shift, and go to state 444
    "break"                           shift, and go to state 445
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "continue"                        shift, and go to state 455
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "yield"                           shift, and go to state 1522
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder             go to state 505
    expr_reader                go to state 506
    expression_if_one_liner    go to state 1523
    expression_keyword         go to state 566
    name_in_namespace          go to state 522
    expr_new                   go to state 524
    expression_break           go to state 1524
    expression_continue        go to state 1525
    expression_return_no_pipe  go to state 1526
    expression_yield_no_pipe   go to state 1527
    expr_cast                  go to state 534
    expr_type_decl             go to state 535
    expr_type_info             go to state 536
    block_or_lambda            go to state 537
    expr_full_block            go to state 538
    expr_numeric_const         go to state 539
    expr_named_call            go to state 542
    expr_method_call           go to state 543
    func_addr_expr             go to state 544
    expr_field                 go to state 545
    expr_call                  go to state 546
    expr                       go to state 1528
    expr_mtag                  go to state 548
    basic_type_declaration     go to state 549
    make_decl                  go to state 550
    make_struct_decl           go to state 551
    make_tuple_call            go to state 552
    make_dim_decl              go to state 553
    make_table_decl            go to state 554
    array_comprehension        go to state 555


State 1449

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner "end of expression" .

    $default  reduce using rule 74 (expression_if_then_else)


State 1450

  345 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type expression_block

    ':'  shift, and go to state 373

    $default  reduce using rule 124 (optional_function_type)

    optional_function_type  go to state 1529


State 1451

  393 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 393 (expr_named_call)


State 1452

  394 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  776 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  777                   | make_struct_fields . ',' "name" ":=" expr
  780                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  781                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1166
    ']'  shift, and go to state 1530


State 1453

  300 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 300 (tuple_expansion)


State 1454

  301 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  303                                     | "[[" tuple_expansion ']' ']' . optional_ref copy_or_move_or_clone expr "end of expression"

    ':'  shift, and go to state 1531
    '&'  shift, and go to state 389

    $default  reduce using rule 568 (optional_ref)

    optional_ref  go to state 1532


State 1455

  302 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1533


State 1456

  304 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr "end of expression"

    "<-"  shift, and go to state 571
    ":="  shift, and go to state 572
    '='   shift, and go to state 573

    copy_or_move_or_clone  go to state 1534


State 1457

  338 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 338 (capture_list)


State 1458

  340 optional_capture_list: "[[" capture_list ']' ']' .

    $default  reduce using rule 340 (optional_capture_list)


State 1459

  328 block_or_simple_block: "=>" . expr
  329                      | "=>" . "<-" expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "<-"                              shift, and go to state 1535
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1536
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1460

  327 block_or_simple_block: expression_block .

    $default  reduce using rule 327 (block_or_simple_block)


State 1461

  343 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 343 (expr_full_block)


State 1462

  476 expr: expr "is" "type" '<' $@28 type_declaration_no_options . '>' $@29
  690 type_declaration_no_options: type_declaration_no_options . dim_list
  691                            | type_declaration_no_options . '[' ']'
  699                            | type_declaration_no_options . '-' '[' ']'
  700                            | type_declaration_no_options . "explicit"
  701                            | type_declaration_no_options . "const"
  702                            | type_declaration_no_options . '-' "const"
  703                            | type_declaration_no_options . '&'
  704                            | type_declaration_no_options . '-' '&'
  705                            | type_declaration_no_options . '#'
  706                            | type_declaration_no_options . "implicit"
  707                            | type_declaration_no_options . '-' '#'
  708                            | type_declaration_no_options . "==" "const"
  709                            | type_declaration_no_options . "==" '&'
  710                            | type_declaration_no_options . '?'
  714                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1537
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1463

  516 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 516 (expr_mtag)


State 1464

  482 expr: expr "as" "type" '<' $@30 type_declaration . '>' $@31
  752 type_declaration: type_declaration . '|' type_declaration_no_options
  753                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417
    '>'  shift, and go to state 1538


State 1465

  514 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 514 (expr_mtag)


State 1466

  396 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 396 (expr_method_call)


State 1467

  511 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 511 (expr_mtag)


State 1468

  487 expr: expr '?' "as" "type" '<' $@32 . type_declaration '>' $@33

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 1539


State 1469

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  515          | expr '?' "as" "$f" '(' expr . ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783
    ')'    shift, and go to state 1540


State 1470

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  513          | expr '.' "?." "$f" '(' expr . ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783
    ')'    shift, and go to state 1541


State 1471

  510 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 510 (expr_mtag)


State 1472

  409 expr_field: expr '.' "name" '(' expr_list ')' .

    $default  reduce using rule 409 (expr_field)


State 1473

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  512          | expr '.' '.' "$f" '(' expr . ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783
    ')'    shift, and go to state 1542


State 1474

  525 optional_constant: "const" .

    $default  reduce using rule 525 (optional_constant)


State 1475

  536 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant . $@35 function_declaration_header "end of expression"

    $default  reduce using rule 535 ($@35)

    $@35  go to state 1543


State 1476

  538 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@36 function_declaration_header expression_block

    "const"  shift, and go to state 1474

    $default  reduce using rule 524 (optional_constant)

    optional_constant  go to state 1544


State 1477

  531 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 618
    "name"  shift, and go to state 619

    variable_declaration         go to state 1545
    variable_name_with_pos_list  go to state 621


State 1478

  698 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list . ')'

    ')'  shift, and go to state 1546


State 1479

  809 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' . use_initializer make_struct_dim ')'

    "uninitialized"  shift, and go to state 1101

    $default  reduce using rule 799 (use_initializer)

    use_initializer  go to state 1547


State 1480

  812 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' . use_initializer make_struct_dim ')'

    "uninitialized"  shift, and go to state 1101

    $default  reduce using rule 799 (use_initializer)

    use_initializer  go to state 1548


State 1481

  321 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" . '>' expr ')'

    '>'  shift, and go to state 1549


State 1482

  320 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr . ')'
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783
    ')'    shift, and go to state 1550


State 1483

  324 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' . '(' expr ')'

    '('  shift, and go to state 1551


State 1484

  323 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr . ')'
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783
    ')'    shift, and go to state 1552


State 1485

  835 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' $@99 . '(' use_initializer make_struct_dim ')'

    '('  shift, and go to state 1553


State 1486

  838 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' $@101 . '(' use_initializer make_struct_dim ')'

    '('  shift, and go to state 1554


State 1487

  841 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options '>' $@103 . '(' make_struct_dim ')'

    '('  shift, and go to state 1555


State 1488

  845 make_dim_decl: "array" '<' $@104 type_declaration_no_options '>' $@105 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 1556
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 710
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1489

  858 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 691
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_map_tuple          go to state 699
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    expr_map_tuple_list     go to state 1557
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1490

  857 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1558


State 1491

  309 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 expr .
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783

    $default  reduce using rule 309 (expr_cast)


State 1492

  312 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 expr .
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783

    $default  reduce using rule 312 (expr_cast)


State 1493

  315 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 expr .
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783

    $default  reduce using rule 315 (expr_cast)


State 1494

  849 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' $@107 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 1559
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 710
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1495

  818 make_struct_decl: "default" '<' $@94 type_declaration_no_options '>' $@95 use_initializer .

    $default  reduce using rule 818 (make_struct_decl)


State 1496

  827 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' . use_initializer make_struct_dim ')'

    "uninitialized"  shift, and go to state 1101

    $default  reduce using rule 799 (use_initializer)

    use_initializer  go to state 1560


State 1497

  815 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 '(' . make_struct_dim ')'

    "$f"    shift, and go to state 912
    "name"  shift, and go to state 1288

    make_struct_fields  go to state 918
    make_struct_dim     go to state 1561


State 1498

  470 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 470 (expr)


State 1499

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783
    ')'    shift, and go to state 1562


State 1500

  342 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 342 (expr_block)


State 1501

  509 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 509 (expr_mtag)


State 1502

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'
  865 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']' ']'

    "is"                 shift, and go to state 731
    "as"                 shift, and go to state 732
    "<<"                 shift, and go to state 741
    ">>"                 shift, and go to state 742
    "++"                 shift, and go to state 743
    "--"                 shift, and go to state 744
    "<="                 shift, and go to state 745
    ">="                 shift, and go to state 748
    "=="                 shift, and go to state 749
    "!="                 shift, and go to state 750
    "->"                 shift, and go to state 751
    "??"                 shift, and go to state 753
    "?."                 shift, and go to state 754
    "?["                 shift, and go to state 755
    "<|"                 shift, and go to state 756
    "|>"                 shift, and go to state 757
    "<<<"                shift, and go to state 759
    ">>>"                shift, and go to state 760
    "&&"                 shift, and go to state 763
    "||"                 shift, and go to state 764
    "^^"                 shift, and go to state 765
    ".."                 shift, and go to state 769
    "end of expression"  shift, and go to state 1563
    '?'                  shift, and go to state 771
    '|'                  shift, and go to state 772
    '^'                  shift, and go to state 773
    '&'                  shift, and go to state 774
    '<'                  shift, and go to state 775
    '>'                  shift, and go to state 776
    '-'                  shift, and go to state 777
    '+'                  shift, and go to state 778
    '*'                  shift, and go to state 779
    '/'                  shift, and go to state 780
    '%'                  shift, and go to state 781
    '.'                  shift, and go to state 782
    '['                  shift, and go to state 783

    $default  reduce using rule 859 (array_comprehension_where)

    array_comprehension_where  go to state 1564


State 1503

  779 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1565
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1504

  778 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1566
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1505

  804 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 804 (make_struct_decl)


State 1506

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'
  780 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  781                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783
    ')'    shift, and go to state 1567


State 1507

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'
  777 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783

    $default  reduce using rule 777 (make_struct_fields)


State 1508

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'
  776 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783

    $default  reduce using rule 776 (make_struct_fields)


State 1509

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'
  866 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where "end of code block" ']'

    "is"                 shift, and go to state 731
    "as"                 shift, and go to state 732
    "<<"                 shift, and go to state 741
    ">>"                 shift, and go to state 742
    "++"                 shift, and go to state 743
    "--"                 shift, and go to state 744
    "<="                 shift, and go to state 745
    ">="                 shift, and go to state 748
    "=="                 shift, and go to state 749
    "!="                 shift, and go to state 750
    "->"                 shift, and go to state 751
    "??"                 shift, and go to state 753
    "?."                 shift, and go to state 754
    "?["                 shift, and go to state 755
    "<|"                 shift, and go to state 756
    "|>"                 shift, and go to state 757
    "<<<"                shift, and go to state 759
    ">>>"                shift, and go to state 760
    "&&"                 shift, and go to state 763
    "||"                 shift, and go to state 764
    "^^"                 shift, and go to state 765
    ".."                 shift, and go to state 769
    "end of expression"  shift, and go to state 1563
    '?'                  shift, and go to state 771
    '|'                  shift, and go to state 772
    '^'                  shift, and go to state 773
    '&'                  shift, and go to state 774
    '<'                  shift, and go to state 775
    '>'                  shift, and go to state 776
    '-'                  shift, and go to state 777
    '+'                  shift, and go to state 778
    '*'                  shift, and go to state 779
    '/'                  shift, and go to state 780
    '%'                  shift, and go to state 781
    '.'                  shift, and go to state 782
    '['                  shift, and go to state 783

    $default  reduce using rule 859 (array_comprehension_where)

    array_comprehension_where  go to state 1568


State 1510

  806 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 806 (make_struct_decl)


State 1511

  868 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple . array_comprehension_where "end of code block" "end of code block"

    "end of expression"  shift, and go to state 1563

    $default  reduce using rule 859 (array_comprehension_where)

    array_comprehension_where  go to state 1569


State 1512

  255 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list '>' $@8 expr .
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783

    $default  reduce using rule 255 (expression_keyword)


State 1513

  250 optional_expr_list_in_braces: '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    $default  reduce using rule 247 (optional_expr_list)

    string_builder          go to state 505
    expr_reader             go to state 506
    optional_expr_list      go to state 1570
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 823
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 710
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1514

  258 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces .

    $default  reduce using rule 258 (expression_keyword)


State 1515

  867 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple . array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1563

    $default  reduce using rule 859 (array_comprehension_where)

    array_comprehension_where  go to state 1571


State 1516

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'
  863 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 731
    "as"                 shift, and go to state 732
    "<<"                 shift, and go to state 741
    ">>"                 shift, and go to state 742
    "++"                 shift, and go to state 743
    "--"                 shift, and go to state 744
    "<="                 shift, and go to state 745
    ">="                 shift, and go to state 748
    "=="                 shift, and go to state 749
    "!="                 shift, and go to state 750
    "->"                 shift, and go to state 751
    "??"                 shift, and go to state 753
    "?."                 shift, and go to state 754
    "?["                 shift, and go to state 755
    "<|"                 shift, and go to state 756
    "|>"                 shift, and go to state 757
    "<<<"                shift, and go to state 759
    ">>>"                shift, and go to state 760
    "&&"                 shift, and go to state 763
    "||"                 shift, and go to state 764
    "^^"                 shift, and go to state 765
    ".."                 shift, and go to state 769
    "end of expression"  shift, and go to state 1563
    '?'                  shift, and go to state 771
    '|'                  shift, and go to state 772
    '^'                  shift, and go to state 773
    '&'                  shift, and go to state 774
    '<'                  shift, and go to state 775
    '>'                  shift, and go to state 776
    '-'                  shift, and go to state 777
    '+'                  shift, and go to state 778
    '*'                  shift, and go to state 779
    '/'                  shift, and go to state 780
    '%'                  shift, and go to state 781
    '.'                  shift, and go to state 782
    '['                  shift, and go to state 783

    $default  reduce using rule 859 (array_comprehension_where)

    array_comprehension_where  go to state 1572


State 1517

  864 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1573
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1518

  402 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options '>' $@23 . func_addr_name

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 948
    "name"  shift, and go to state 59

    name_in_namespace  go to state 951
    func_addr_name     go to state 1574


State 1519

  405 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type '>' . $@25 func_addr_name

    $default  reduce using rule 404 ($@25)

    $@25  go to state 1575


State 1520

   61 expression_else: elif_or_static_elif expr expression_block expression_else .

    $default  reduce using rule 61 (expression_else)


State 1521

  280 expression_return_no_pipe: "return" .
  281                          | "return" . expr_list
  282                          | "return" . "<-" expr_list

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "<-"                              shift, and go to state 1576
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    $default  reduce using rule 280 (expression_return_no_pipe)

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 641
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 710
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1522

  286 expression_yield_no_pipe: "yield" . expr
  287                         | "yield" . "<-" expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "<-"                              shift, and go to state 1577
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1578
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1523

   66 expression_else_one_liner: "else" $@2 expression_if_one_liner .

    $default  reduce using rule 66 (expression_else_one_liner)


State 1524

   70 expression_if_one_liner: expression_break .

    $default  reduce using rule 70 (expression_if_one_liner)


State 1525

   71 expression_if_one_liner: expression_continue .

    $default  reduce using rule 71 (expression_if_one_liner)


State 1526

   68 expression_if_one_liner: expression_return_no_pipe .

    $default  reduce using rule 68 (expression_if_one_liner)


State 1527

   69 expression_if_one_liner: expression_yield_no_pipe .

    $default  reduce using rule 69 (expression_if_one_liner)


State 1528

   67 expression_if_one_liner: expr .
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783

    $default  reduce using rule 67 (expression_if_one_liner)


State 1529

  345 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . expression_block

    "begin of code block"  shift, and go to state 286

    expression_block  go to state 1579


State 1530

  394 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1580


State 1531

  301 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1581


State 1532

  303 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref . copy_or_move_or_clone expr "end of expression"

    "<-"  shift, and go to state 571
    ":="  shift, and go to state 572
    '='   shift, and go to state 573

    copy_or_move_or_clone  go to state 1582


State 1533

  302 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"
  690 type_declaration_no_options: type_declaration_no_options . dim_list
  691                            | type_declaration_no_options . '[' ']'
  699                            | type_declaration_no_options . '-' '[' ']'
  700                            | type_declaration_no_options . "explicit"
  701                            | type_declaration_no_options . "const"
  702                            | type_declaration_no_options . '-' "const"
  703                            | type_declaration_no_options . '&'
  704                            | type_declaration_no_options . '-' '&'
  705                            | type_declaration_no_options . '#'
  706                            | type_declaration_no_options . "implicit"
  707                            | type_declaration_no_options . '-' '#'
  708                            | type_declaration_no_options . "==" "const"
  709                            | type_declaration_no_options . "==" '&'
  710                            | type_declaration_no_options . '?'
  714                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "<-"        shift, and go to state 571
    "??"        shift, and go to state 410
    ":="        shift, and go to state 572
    '='         shift, and go to state 573
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    copy_or_move_or_clone  go to state 1583
    dim_list               go to state 416


State 1534

  304 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1584
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1535

  329 block_or_simple_block: "=>" "<-" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1585
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1536

  328 block_or_simple_block: "=>" expr .
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783

    ".."  error (nonassociative)

    $default  reduce using rule 328 (block_or_simple_block)


State 1537

  476 expr: expr "is" "type" '<' $@28 type_declaration_no_options '>' . $@29

    $default  reduce using rule 475 ($@29)

    $@29  go to state 1586


State 1538

  482 expr: expr "as" "type" '<' $@30 type_declaration '>' . $@31

    $default  reduce using rule 481 ($@31)

    $@31  go to state 1587


State 1539

  487 expr: expr '?' "as" "type" '<' $@32 type_declaration . '>' $@33
  752 type_declaration: type_declaration . '|' type_declaration_no_options
  753                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417
    '>'  shift, and go to state 1588


State 1540

  515 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 515 (expr_mtag)


State 1541

  513 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 513 (expr_mtag)


State 1542

  512 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 512 (expr_mtag)


State 1543

  536 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 . function_declaration_header "end of expression"

    "operator"  shift, and go to state 181
    "bool"      shift, and go to state 182
    "string"    shift, and go to state 183
    "int"       shift, and go to state 184
    "int2"      shift, and go to state 185
    "int3"      shift, and go to state 186
    "int4"      shift, and go to state 187
    "uint"      shift, and go to state 188
    "uint2"     shift, and go to state 189
    "uint3"     shift, and go to state 190
    "uint4"     shift, and go to state 191
    "float"     shift, and go to state 192
    "float2"    shift, and go to state 193
    "float3"    shift, and go to state 194
    "float4"    shift, and go to state 195
    "range"     shift, and go to state 196
    "urange"    shift, and go to state 197
    "range64"   shift, and go to state 198
    "urange64"  shift, and go to state 199
    "int64"     shift, and go to state 200
    "uint64"    shift, and go to state 201
    "double"    shift, and go to state 202
    "int8"      shift, and go to state 203
    "uint8"     shift, and go to state 204
    "int16"     shift, and go to state 205
    "uint16"    shift, and go to state 206
    "++"        shift, and go to state 207
    "--"        shift, and go to state 208
    "name"      shift, and go to state 209

    function_name                go to state 210
    function_declaration_header  go to state 1589


State 1544

  538 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@36 function_declaration_header expression_block

    $default  reduce using rule 537 ($@36)

    $@36  go to state 1590


State 1545

  531 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 531 (structure_variable_declaration)


State 1546

  698 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')' .

    $default  reduce using rule 698 (type_declaration_no_options)


State 1547

  809 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' use_initializer . make_struct_dim ')'

    "$f"    shift, and go to state 912
    "name"  shift, and go to state 1288

    make_struct_fields  go to state 918
    make_struct_dim     go to state 1591


State 1548

  812 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer . make_struct_dim ')'

    "$f"    shift, and go to state 912
    "name"  shift, and go to state 1288

    make_struct_fields  go to state 918
    make_struct_dim     go to state 1592


State 1549

  321 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" '>' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1593
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1550

  320 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')' .

    $default  reduce using rule 320 (expr_type_info)


State 1551

  324 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1594
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1552

  323 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')' .

    $default  reduce using rule 323 (expr_type_info)


State 1553

  835 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' $@99 '(' . use_initializer make_struct_dim ')'

    "uninitialized"  shift, and go to state 1101

    $default  reduce using rule 799 (use_initializer)

    use_initializer  go to state 1595


State 1554

  838 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' $@101 '(' . use_initializer make_struct_dim ')'

    "uninitialized"  shift, and go to state 1101

    $default  reduce using rule 799 (use_initializer)

    use_initializer  go to state 1596


State 1555

  841 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options '>' $@103 '(' . make_struct_dim ')'

    "$f"    shift, and go to state 912
    "name"  shift, and go to state 1288

    make_struct_fields  go to state 918
    make_struct_dim     go to state 1597


State 1556

  326 expr_list: expr_list . ',' expr
  845 make_dim_decl: "array" '<' $@104 type_declaration_no_options '>' $@105 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 945

    $default  reduce using rule 861 (optional_comma)

    optional_comma  go to state 1598


State 1557

  853 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  858 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 940

    $default  reduce using rule 861 (optional_comma)

    optional_comma  go to state 1599


State 1558

  857 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 857 (make_table_decl)


State 1559

  326 expr_list: expr_list . ',' expr
  849 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' $@107 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 945

    $default  reduce using rule 861 (optional_comma)

    optional_comma  go to state 1600


State 1560

  827 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' use_initializer . make_struct_dim ')'

    "$f"    shift, and go to state 912
    "name"  shift, and go to state 1288

    make_struct_fields  go to state 918
    make_struct_dim     go to state 1601


State 1561

  784 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  815 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 '(' make_struct_dim . ')'

    "end of expression"  shift, and go to state 1167
    ')'                  shift, and go to state 1602


State 1562

  471 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 471 (expr)


State 1563

  860 array_comprehension_where: "end of expression" . "where" expr

    "where"  shift, and go to state 1603


State 1564

  865 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']' ']'

    ']'  shift, and go to state 1604


State 1565

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'
  779 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783

    $default  reduce using rule 779 (make_struct_fields)


State 1566

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'
  778 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783

    $default  reduce using rule 778 (make_struct_fields)


State 1567

  780 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  781                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 838
    ":="  shift, and go to state 1605
    '='   shift, and go to state 840

    copy_or_move  go to state 1606


State 1568

  866 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . "end of code block" ']'

    "end of code block"  shift, and go to state 1607


State 1569

  868 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where . "end of code block" "end of code block"

    "end of code block"  shift, and go to state 1608


State 1570

  250 optional_expr_list_in_braces: '(' optional_expr_list . ')'

    ')'  shift, and go to state 1609


State 1571

  867 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where . "end of code block"

    "end of code block"  shift, and go to state 1610


State 1572

  863 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1611


State 1573

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'
  864 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 731
    "as"                 shift, and go to state 732
    "<<"                 shift, and go to state 741
    ">>"                 shift, and go to state 742
    "++"                 shift, and go to state 743
    "--"                 shift, and go to state 744
    "<="                 shift, and go to state 745
    ">="                 shift, and go to state 748
    "=="                 shift, and go to state 749
    "!="                 shift, and go to state 750
    "->"                 shift, and go to state 751
    "??"                 shift, and go to state 753
    "?."                 shift, and go to state 754
    "?["                 shift, and go to state 755
    "<|"                 shift, and go to state 756
    "|>"                 shift, and go to state 757
    "<<<"                shift, and go to state 759
    ">>>"                shift, and go to state 760
    "&&"                 shift, and go to state 763
    "||"                 shift, and go to state 764
    "^^"                 shift, and go to state 765
    ".."                 shift, and go to state 769
    "end of expression"  shift, and go to state 1563
    '?'                  shift, and go to state 771
    '|'                  shift, and go to state 772
    '^'                  shift, and go to state 773
    '&'                  shift, and go to state 774
    '<'                  shift, and go to state 775
    '>'                  shift, and go to state 776
    '-'                  shift, and go to state 777
    '+'                  shift, and go to state 778
    '*'                  shift, and go to state 779
    '/'                  shift, and go to state 780
    '%'                  shift, and go to state 781
    '.'                  shift, and go to state 782
    '['                  shift, and go to state 783

    $default  reduce using rule 859 (array_comprehension_where)

    array_comprehension_where  go to state 1612


State 1574

  402 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options '>' $@23 func_addr_name .

    $default  reduce using rule 402 (func_addr_expr)


State 1575

  405 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type '>' $@25 . func_addr_name

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 948
    "name"  shift, and go to state 59

    name_in_namespace  go to state 951
    func_addr_name     go to state 1613


State 1576

  282 expression_return_no_pipe: "return" "<-" . expr_list

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 860
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 710
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1577

  287 expression_yield_no_pipe: "yield" "<-" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1614
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1578

  286 expression_yield_no_pipe: "yield" expr .
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783

    $default  reduce using rule 286 (expression_yield_no_pipe)


State 1579

  345 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block .

    $default  reduce using rule 345 (expr_full_block_assumed_piped)


State 1580

  394 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 394 (expr_named_call)


State 1581

  301 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"
  690 type_declaration_no_options: type_declaration_no_options . dim_list
  691                            | type_declaration_no_options . '[' ']'
  699                            | type_declaration_no_options . '-' '[' ']'
  700                            | type_declaration_no_options . "explicit"
  701                            | type_declaration_no_options . "const"
  702                            | type_declaration_no_options . '-' "const"
  703                            | type_declaration_no_options . '&'
  704                            | type_declaration_no_options . '-' '&'
  705                            | type_declaration_no_options . '#'
  706                            | type_declaration_no_options . "implicit"
  707                            | type_declaration_no_options . '-' '#'
  708                            | type_declaration_no_options . "==" "const"
  709                            | type_declaration_no_options . "==" '&'
  710                            | type_declaration_no_options . '?'
  714                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "<-"        shift, and go to state 571
    "??"        shift, and go to state 410
    ":="        shift, and go to state 572
    '='         shift, and go to state 573
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    copy_or_move_or_clone  go to state 1615
    dim_list               go to state 416


State 1582

  303 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1616
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1583

  302 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1617
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1584

  304 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr . "end of expression"
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 731
    "as"                 shift, and go to state 732
    "<<"                 shift, and go to state 741
    ">>"                 shift, and go to state 742
    "++"                 shift, and go to state 743
    "--"                 shift, and go to state 744
    "<="                 shift, and go to state 745
    ">="                 shift, and go to state 748
    "=="                 shift, and go to state 749
    "!="                 shift, and go to state 750
    "->"                 shift, and go to state 751
    "??"                 shift, and go to state 753
    "?."                 shift, and go to state 754
    "?["                 shift, and go to state 755
    "<|"                 shift, and go to state 756
    "|>"                 shift, and go to state 757
    "<<<"                shift, and go to state 759
    ">>>"                shift, and go to state 760
    "&&"                 shift, and go to state 763
    "||"                 shift, and go to state 764
    "^^"                 shift, and go to state 765
    ".."                 shift, and go to state 769
    "end of expression"  shift, and go to state 1618
    '?'                  shift, and go to state 771
    '|'                  shift, and go to state 772
    '^'                  shift, and go to state 773
    '&'                  shift, and go to state 774
    '<'                  shift, and go to state 775
    '>'                  shift, and go to state 776
    '-'                  shift, and go to state 777
    '+'                  shift, and go to state 778
    '*'                  shift, and go to state 779
    '/'                  shift, and go to state 780
    '%'                  shift, and go to state 781
    '.'                  shift, and go to state 782
    '['                  shift, and go to state 783


State 1585

  329 block_or_simple_block: "=>" "<-" expr .
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783

    $default  reduce using rule 329 (block_or_simple_block)


State 1586

  476 expr: expr "is" "type" '<' $@28 type_declaration_no_options '>' $@29 .

    $default  reduce using rule 476 (expr)


State 1587

  482 expr: expr "as" "type" '<' $@30 type_declaration '>' $@31 .

    $default  reduce using rule 482 (expr)


State 1588

  487 expr: expr '?' "as" "type" '<' $@32 type_declaration '>' . $@33

    $default  reduce using rule 486 ($@33)

    $@33  go to state 1619


State 1589

  536 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header . "end of expression"

    "end of expression"  shift, and go to state 1620


State 1590

  538 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 . function_declaration_header expression_block

    "operator"  shift, and go to state 181
    "bool"      shift, and go to state 182
    "string"    shift, and go to state 183
    "int"       shift, and go to state 184
    "int2"      shift, and go to state 185
    "int3"      shift, and go to state 186
    "int4"      shift, and go to state 187
    "uint"      shift, and go to state 188
    "uint2"     shift, and go to state 189
    "uint3"     shift, and go to state 190
    "uint4"     shift, and go to state 191
    "float"     shift, and go to state 192
    "float2"    shift, and go to state 193
    "float3"    shift, and go to state 194
    "float4"    shift, and go to state 195
    "range"     shift, and go to state 196
    "urange"    shift, and go to state 197
    "range64"   shift, and go to state 198
    "urange64"  shift, and go to state 199
    "int64"     shift, and go to state 200
    "uint64"    shift, and go to state 201
    "double"    shift, and go to state 202
    "int8"      shift, and go to state 203
    "uint8"     shift, and go to state 204
    "int16"     shift, and go to state 205
    "uint16"    shift, and go to state 206
    "++"        shift, and go to state 207
    "--"        shift, and go to state 208
    "name"      shift, and go to state 209

    function_name                go to state 210
    function_declaration_header  go to state 1621


State 1591

  784 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  809 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' use_initializer make_struct_dim . ')'

    "end of expression"  shift, and go to state 1167
    ')'                  shift, and go to state 1622


State 1592

  784 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  812 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer make_struct_dim . ')'

    "end of expression"  shift, and go to state 1167
    ')'                  shift, and go to state 1623


State 1593

  321 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" '>' expr . ')'
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783
    ')'    shift, and go to state 1624


State 1594

  324 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr . ')'
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783
    ')'    shift, and go to state 1625


State 1595

  835 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' $@99 '(' use_initializer . make_struct_dim ')'

    "$f"    shift, and go to state 912
    "name"  shift, and go to state 1288

    make_struct_fields  go to state 918
    make_struct_dim     go to state 1626


State 1596

  838 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer . make_struct_dim ')'

    "$f"    shift, and go to state 912
    "name"  shift, and go to state 1288

    make_struct_fields  go to state 918
    make_struct_dim     go to state 1627


State 1597

  784 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  841 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options '>' $@103 '(' make_struct_dim . ')'

    "end of expression"  shift, and go to state 1167
    ')'                  shift, and go to state 1628


State 1598

  845 make_dim_decl: "array" '<' $@104 type_declaration_no_options '>' $@105 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1629


State 1599

  858 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1630


State 1600

  849 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' $@107 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1631


State 1601

  784 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  827 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' use_initializer make_struct_dim . ')'

    "end of expression"  shift, and go to state 1167
    ')'                  shift, and go to state 1632


State 1602

  815 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 '(' make_struct_dim ')' .

    $default  reduce using rule 815 (make_struct_decl)


State 1603

  860 array_comprehension_where: "end of expression" "where" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1633
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1604

  865 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' . ']'

    ']'  shift, and go to state 1634


State 1605

  781 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1635
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1606

  780 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1636
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1607

  866 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" . ']'

    ']'  shift, and go to state 1637


State 1608

  868 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" . "end of code block"

    "end of code block"  shift, and go to state 1638


State 1609

  250 optional_expr_list_in_braces: '(' optional_expr_list ')' .

    $default  reduce using rule 250 (optional_expr_list_in_braces)


State 1610

  867 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" .

    $default  reduce using rule 867 (array_comprehension)


State 1611

  863 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 863 (array_comprehension)


State 1612

  864 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1639


State 1613

  405 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name .

    $default  reduce using rule 405 (func_addr_expr)


State 1614

  287 expression_yield_no_pipe: "yield" "<-" expr .
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783

    $default  reduce using rule 287 (expression_yield_no_pipe)


State 1615

  301 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1640
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1616

  303 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr . "end of expression"
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 731
    "as"                 shift, and go to state 732
    "<<"                 shift, and go to state 741
    ">>"                 shift, and go to state 742
    "++"                 shift, and go to state 743
    "--"                 shift, and go to state 744
    "<="                 shift, and go to state 745
    ">="                 shift, and go to state 748
    "=="                 shift, and go to state 749
    "!="                 shift, and go to state 750
    "->"                 shift, and go to state 751
    "??"                 shift, and go to state 753
    "?."                 shift, and go to state 754
    "?["                 shift, and go to state 755
    "<|"                 shift, and go to state 756
    "|>"                 shift, and go to state 757
    "<<<"                shift, and go to state 759
    ">>>"                shift, and go to state 760
    "&&"                 shift, and go to state 763
    "||"                 shift, and go to state 764
    "^^"                 shift, and go to state 765
    ".."                 shift, and go to state 769
    "end of expression"  shift, and go to state 1641
    '?'                  shift, and go to state 771
    '|'                  shift, and go to state 772
    '^'                  shift, and go to state 773
    '&'                  shift, and go to state 774
    '<'                  shift, and go to state 775
    '>'                  shift, and go to state 776
    '-'                  shift, and go to state 777
    '+'                  shift, and go to state 778
    '*'                  shift, and go to state 779
    '/'                  shift, and go to state 780
    '%'                  shift, and go to state 781
    '.'                  shift, and go to state 782
    '['                  shift, and go to state 783


State 1617

  302 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 731
    "as"                 shift, and go to state 732
    "<<"                 shift, and go to state 741
    ">>"                 shift, and go to state 742
    "++"                 shift, and go to state 743
    "--"                 shift, and go to state 744
    "<="                 shift, and go to state 745
    ">="                 shift, and go to state 748
    "=="                 shift, and go to state 749
    "!="                 shift, and go to state 750
    "->"                 shift, and go to state 751
    "??"                 shift, and go to state 753
    "?."                 shift, and go to state 754
    "?["                 shift, and go to state 755
    "<|"                 shift, and go to state 756
    "|>"                 shift, and go to state 757
    "<<<"                shift, and go to state 759
    ">>>"                shift, and go to state 760
    "&&"                 shift, and go to state 763
    "||"                 shift, and go to state 764
    "^^"                 shift, and go to state 765
    ".."                 shift, and go to state 769
    "end of expression"  shift, and go to state 1642
    '?'                  shift, and go to state 771
    '|'                  shift, and go to state 772
    '^'                  shift, and go to state 773
    '&'                  shift, and go to state 774
    '<'                  shift, and go to state 775
    '>'                  shift, and go to state 776
    '-'                  shift, and go to state 777
    '+'                  shift, and go to state 778
    '*'                  shift, and go to state 779
    '/'                  shift, and go to state 780
    '%'                  shift, and go to state 781
    '.'                  shift, and go to state 782
    '['                  shift, and go to state 783


State 1618

  304 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 304 (tuple_expansion_variable_declaration)


State 1619

  487 expr: expr '?' "as" "type" '<' $@32 type_declaration '>' $@33 .

    $default  reduce using rule 487 (expr)


State 1620

  536 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header "end of expression" .

    $default  reduce using rule 536 (struct_variable_declaration_list)


State 1621

  538 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header . expression_block

    "begin of code block"  shift, and go to state 286

    expression_block  go to state 1643


State 1622

  809 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' use_initializer make_struct_dim ')' .

    $default  reduce using rule 809 (make_struct_decl)


State 1623

  812 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer make_struct_dim ')' .

    $default  reduce using rule 812 (make_struct_decl)


State 1624

  321 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" '>' expr ')' .

    $default  reduce using rule 321 (expr_type_info)


State 1625

  324 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr ')' .

    $default  reduce using rule 324 (expr_type_info)


State 1626

  784 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  835 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' $@99 '(' use_initializer make_struct_dim . ')'

    "end of expression"  shift, and go to state 1167
    ')'                  shift, and go to state 1644


State 1627

  784 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  838 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer make_struct_dim . ')'

    "end of expression"  shift, and go to state 1167
    ')'                  shift, and go to state 1645


State 1628

  841 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options '>' $@103 '(' make_struct_dim ')' .

    $default  reduce using rule 841 (make_dim_decl)


State 1629

  845 make_dim_decl: "array" '<' $@104 type_declaration_no_options '>' $@105 '(' expr_list optional_comma ')' .

    $default  reduce using rule 845 (make_dim_decl)


State 1630

  858 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 858 (make_table_decl)


State 1631

  849 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' $@107 '(' expr_list optional_comma ')' .

    $default  reduce using rule 849 (make_dim_decl)


State 1632

  827 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' use_initializer make_struct_dim ')' .

    $default  reduce using rule 827 (make_tuple_call)


State 1633

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'
  860 array_comprehension_where: "end of expression" "where" expr .

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783

    $default  reduce using rule 860 (array_comprehension_where)


State 1634

  865 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']' .

    $default  reduce using rule 865 (array_comprehension)


State 1635

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'
  781 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783

    $default  reduce using rule 781 (make_struct_fields)


State 1636

  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'
  780 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 731
    "as"   shift, and go to state 732
    "<<"   shift, and go to state 741
    ">>"   shift, and go to state 742
    "++"   shift, and go to state 743
    "--"   shift, and go to state 744
    "<="   shift, and go to state 745
    ">="   shift, and go to state 748
    "=="   shift, and go to state 749
    "!="   shift, and go to state 750
    "->"   shift, and go to state 751
    "??"   shift, and go to state 753
    "?."   shift, and go to state 754
    "?["   shift, and go to state 755
    "<|"   shift, and go to state 756
    "|>"   shift, and go to state 757
    "<<<"  shift, and go to state 759
    ">>>"  shift, and go to state 760
    "&&"   shift, and go to state 763
    "||"   shift, and go to state 764
    "^^"   shift, and go to state 765
    ".."   shift, and go to state 769
    '?'    shift, and go to state 771
    '|'    shift, and go to state 772
    '^'    shift, and go to state 773
    '&'    shift, and go to state 774
    '<'    shift, and go to state 775
    '>'    shift, and go to state 776
    '-'    shift, and go to state 777
    '+'    shift, and go to state 778
    '*'    shift, and go to state 779
    '/'    shift, and go to state 780
    '%'    shift, and go to state 781
    '.'    shift, and go to state 782
    '['    shift, and go to state 783

    $default  reduce using rule 780 (make_struct_fields)


State 1637

  866 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']' .

    $default  reduce using rule 866 (array_comprehension)


State 1638

  868 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block" .

    $default  reduce using rule 868 (array_comprehension)


State 1639

  864 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 864 (array_comprehension)


State 1640

  301 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"
  395 expr_method_call: expr . "->" "name" '(' ')'
  396                 | expr . "->" "name" '(' expr_list ')'
  406 expr_field: expr . '.' "name"
  407           | expr . '.' '.' "name"
  408           | expr . '.' "name" '(' ')'
  409           | expr . '.' "name" '(' expr_list ')'
  412           | expr . '.' $@26 error $@27
  432 expr: expr . "<<" expr
  433     | expr . ">>" expr
  434     | expr . "<<<" expr
  435     | expr . ">>>" expr
  436     | expr . '+' expr
  437     | expr . '-' expr
  438     | expr . '*' expr
  439     | expr . '/' expr
  440     | expr . '%' expr
  441     | expr . '<' expr
  442     | expr . '>' expr
  443     | expr . "==" expr
  444     | expr . "!=" expr
  445     | expr . "<=" expr
  446     | expr . ">=" expr
  447     | expr . '&' expr
  448     | expr . '|' expr
  449     | expr . '^' expr
  450     | expr . "&&" expr
  451     | expr . "||" expr
  452     | expr . "^^" expr
  453     | expr . ".." expr
  456     | expr . "++"
  457     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  472     | expr . "??" expr
  473     | expr . '?' expr ':' expr
  476     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  477     | expr . "is" basic_type_declaration
  478     | expr . "is" "name"
  479     | expr . "as" "name"
  482     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  483     | expr . "as" basic_type_declaration
  484     | expr . '?' "as" "name"
  487     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  488     | expr . '?' "as" basic_type_declaration
  496     | expr . "<|" expr
  497     | expr . "|>" expr
  498     | expr . "|>" basic_type_declaration
  510 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr . "?." "$f" '(' expr ')'
  512          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr . "as" "$f" '(' expr ')'
  515          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 731
    "as"                 shift, and go to state 732
    "<<"                 shift, and go to state 741
    ">>"                 shift, and go to state 742
    "++"                 shift, and go to state 743
    "--"                 shift, and go to state 744
    "<="                 shift, and go to state 745
    ">="                 shift, and go to state 748
    "=="                 shift, and go to state 749
    "!="                 shift, and go to state 750
    "->"                 shift, and go to state 751
    "??"                 shift, and go to state 753
    "?."                 shift, and go to state 754
    "?["                 shift, and go to state 755
    "<|"                 shift, and go to state 756
    "|>"                 shift, and go to state 757
    "<<<"                shift, and go to state 759
    ">>>"                shift, and go to state 760
    "&&"                 shift, and go to state 763
    "||"                 shift, and go to state 764
    "^^"                 shift, and go to state 765
    ".."                 shift, and go to state 769
    "end of expression"  shift, and go to state 1646
    '?'                  shift, and go to state 771
    '|'                  shift, and go to state 772
    '^'                  shift, and go to state 773
    '&'                  shift, and go to state 774
    '<'                  shift, and go to state 775
    '>'                  shift, and go to state 776
    '-'                  shift, and go to state 777
    '+'                  shift, and go to state 778
    '*'                  shift, and go to state 779
    '/'                  shift, and go to state 780
    '%'                  shift, and go to state 781
    '.'                  shift, and go to state 782
    '['                  shift, and go to state 783


State 1641

  303 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 303 (tuple_expansion_variable_declaration)


State 1642

  302 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 302 (tuple_expansion_variable_declaration)


State 1643

  538 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block .

    $default  reduce using rule 538 (struct_variable_declaration_list)


State 1644

  835 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' $@99 '(' use_initializer make_struct_dim ')' .

    $default  reduce using rule 835 (make_dim_decl)


State 1645

  838 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer make_struct_dim ')' .

    $default  reduce using rule 838 (make_dim_decl)


State 1646

  301 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 301 (tuple_expansion_variable_declaration)
