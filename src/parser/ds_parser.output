Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"


State 59 conflicts: 1 shift/reduce
State 313 conflicts: 1 shift/reduce
State 409 conflicts: 1 shift/reduce
State 513 conflicts: 2 shift/reduce
State 515 conflicts: 2 shift/reduce
State 621 conflicts: 1 shift/reduce
State 921 conflicts: 2 shift/reduce
State 1031 conflicts: 1 shift/reduce
State 1139 conflicts: 1 shift/reduce
State 1400 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration
    9        | program options_declaration
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program tuple_alias_declaration
   13        | program bitfield_alias_declaration
   14        | program top_level_reader_macro
   15        | program "end of expression"

   16 top_level_reader_macro: expr_reader "end of expression"

   17 optional_public_or_private_module: %empty
   18                                  | "public"
   19                                  | "private"

   20 module_name: '$'
   21            | "name"

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   23 character_sequence: STRING_CHARACTER
   24                   | STRING_CHARACTER_ESC
   25                   | character_sequence STRING_CHARACTER
   26                   | character_sequence STRING_CHARACTER_ESC

   27 string_constant: "start of the string" character_sequence "end of the string"

   28 string_builder_body: %empty
   29                    | string_builder_body character_sequence
   30                    | string_builder_body "{" expr "}"

   31 string_builder: "start of the string" string_builder_body "end of the string"

   32 reader_character_sequence: STRING_CHARACTER
   33                          | reader_character_sequence STRING_CHARACTER

   34 $@1: %empty

   35 expr_reader: '%' name_in_namespace $@1 reader_character_sequence

   36 options_declaration: "options" annotation_argument_list

   37 require_declaration: "require" require_module

   38 keyword_or_name: "name"
   39                | "keyword"
   40                | "type function"

   41 require_module_name: keyword_or_name
   42                    | '%' require_module_name
   43                    | require_module_name '.' keyword_or_name
   44                    | require_module_name '/' keyword_or_name

   45 require_module: require_module_name is_public_module
   46               | require_module_name "as" "name" is_public_module

   47 is_public_module: %empty
   48                 | "public"

   49 expect_declaration: "expect" expect_list

   50 expect_list: expect_error
   51            | expect_list ',' expect_error

   52 expect_error: "integer constant"
   53             | "integer constant" ':' "integer constant"

   54 expression_label: "label" "integer constant" ':'

   55 expression_goto: "goto" "label" "integer constant"
   56                | "goto" expr

   57 elif_or_static_elif: "elif"
   58                    | "static_elif"

   59 expression_else: %empty
   60                | "else" expression_block
   61                | elif_or_static_elif expr expression_block expression_else

   62 if_or_static_if: "if"
   63                | "static_if"

   64 expression_else_one_liner: %empty

   65 $@2: %empty

   66 expression_else_one_liner: "else" $@2 expression_if_one_liner

   67 expression_if_one_liner: expr
   68                        | expression_return_no_pipe
   69                        | expression_yield_no_pipe
   70                        | expression_break
   71                        | expression_continue

   72 expression_if_then_else: if_or_static_if expr expression_block expression_else

   73 $@3: %empty

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner "end of expression"

   75 $@4: %empty

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" expr_list expression_block

   77 expression_unsafe: "unsafe" expression_block

   78 expression_while_loop: "while" expr expression_block

   79 expression_with: "with" expr expression_block

   80 $@5: %empty

   81 expression_with_alias: "assume" "name" '=' $@5 expr

   82 annotation_argument_value: string_constant
   83                          | "name"
   84                          | "integer constant"
   85                          | "floating point constant"
   86                          | "true"
   87                          | "false"

   88 annotation_argument_value_list: annotation_argument_value
   89                               | annotation_argument_value_list ',' annotation_argument_value

   90 annotation_argument_name: "name"
   91                         | "type"
   92                         | "in"

   93 annotation_argument: annotation_argument_name '=' string_constant
   94                    | annotation_argument_name '=' "name"
   95                    | annotation_argument_name '=' "integer constant"
   96                    | annotation_argument_name '=' "floating point constant"
   97                    | annotation_argument_name '=' "true"
   98                    | annotation_argument_name '=' "false"
   99                    | annotation_argument_name
  100                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

  101 annotation_argument_list: annotation_argument
  102                         | annotation_argument_list ',' annotation_argument

  103 annotation_declaration_name: name_in_namespace
  104                            | "require"
  105                            | "private"

  106 annotation_declaration_basic: annotation_declaration_name
  107                             | annotation_declaration_name '(' annotation_argument_list ')'

  108 annotation_declaration: annotation_declaration_basic
  109                       | '!' annotation_declaration
  110                       | annotation_declaration "&&" annotation_declaration
  111                       | annotation_declaration "||" annotation_declaration
  112                       | annotation_declaration "^^" annotation_declaration
  113                       | '(' annotation_declaration ')'
  114                       | "|>" annotation_declaration

  115 annotation_list: annotation_declaration
  116                | annotation_list ',' annotation_declaration

  117 optional_annotation_list: %empty
  118                         | '[' annotation_list ']'

  119 optional_function_argument_list: %empty
  120                                | '(' ')'
  121                                | '(' function_argument_list ')'

  122 optional_function_type: %empty
  123                       | ':' type_declaration

  124 function_name: "name"
  125              | "operator" '!'
  126              | "operator" '~'
  127              | "operator" "+="
  128              | "operator" "-="
  129              | "operator" "*="
  130              | "operator" "/="
  131              | "operator" "%="
  132              | "operator" "&="
  133              | "operator" "|="
  134              | "operator" "^="
  135              | "operator" "&&="
  136              | "operator" "||="
  137              | "operator" "^^="
  138              | "operator" "&&"
  139              | "operator" "||"
  140              | "operator" "^^"
  141              | "operator" '+'
  142              | "operator" '-'
  143              | "operator" '*'
  144              | "operator" '/'
  145              | "operator" '%'
  146              | "operator" '<'
  147              | "operator" '>'
  148              | "operator" ".."
  149              | "operator" "=="
  150              | "operator" "!="
  151              | "operator" "<="
  152              | "operator" ">="
  153              | "operator" '&'
  154              | "operator" '|'
  155              | "operator" '^'
  156              | "++" "operator"
  157              | "--" "operator"
  158              | "operator" "++"
  159              | "operator" "--"
  160              | "operator" "<<"
  161              | "operator" ">>"
  162              | "operator" "<<="
  163              | "operator" ">>="
  164              | "operator" "<<<"
  165              | "operator" ">>>"
  166              | "operator" "<<<="
  167              | "operator" ">>>="
  168              | "operator" '[' ']'
  169              | "operator" "?[" ']'
  170              | "operator" '.'
  171              | "operator" "?."
  172              | "operator" '.' "name"
  173              | "operator" '.' "name" ":="
  174              | "operator" "?." "name"
  175              | "operator" ":="
  176              | "operator" "delete"
  177              | "operator" "??"
  178              | "operator" "is"
  179              | "operator" "as"
  180              | "operator" "is" "name"
  181              | "operator" "as" "name"
  182              | "operator" '?' "as"
  183              | "operator" '?' "as" "name"
  184              | "bool"
  185              | "string"
  186              | "int"
  187              | "int2"
  188              | "int3"
  189              | "int4"
  190              | "uint"
  191              | "uint2"
  192              | "uint3"
  193              | "uint4"
  194              | "float"
  195              | "float2"
  196              | "float3"
  197              | "float4"
  198              | "range"
  199              | "urange"
  200              | "range64"
  201              | "urange64"
  202              | "int64"
  203              | "uint64"
  204              | "double"
  205              | "int8"
  206              | "uint8"
  207              | "int16"
  208              | "uint16"

  209 global_function_declaration: optional_annotation_list "def" function_declaration

  210 optional_public_or_private_function: %empty
  211                                    | "private"
  212                                    | "public"

  213 function_declaration_header: function_name optional_function_argument_list optional_function_type

  214 $@6: %empty

  215 function_declaration: optional_public_or_private_function $@6 function_declaration_header expression_block

  216 expression_block: "begin of code block" expressions "end of code block"
  217                 | "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions "end of code block"

  218 expr_call_pipe: expr expr_full_block_assumed_piped
  219               | expression_keyword expr_full_block_assumed_piped

  220 expression_any: "end of expression"
  221               | expr_pipe
  222               | expr_keyword
  223               | expr_assign_pipe
  224               | expr_assign "end of expression"
  225               | expression_delete "end of expression"
  226               | expression_let
  227               | expression_while_loop
  228               | expression_unsafe
  229               | expression_with
  230               | expression_with_alias
  231               | expression_for_loop
  232               | expression_break "end of expression"
  233               | expression_continue "end of expression"
  234               | expression_return
  235               | expression_yield
  236               | expression_if_then_else
  237               | expression_try_catch
  238               | expression_label "end of expression"
  239               | expression_goto "end of expression"
  240               | "pass" "end of expression"

  241 expressions: %empty
  242            | expressions expression_any
  243            | expressions error

  244 expr_keyword: "keyword" expr expression_block

  245 optional_expr_list: %empty
  246                   | expr_list

  247 optional_expr_list_in_braces: %empty
  248                             | '(' optional_expr_list ')'

  249 type_declaration_no_options_list: type_declaration
  250                                 | type_declaration_no_options_list "end of expression" type_declaration

  251 $@7: %empty

  252 $@8: %empty

  253 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list '>' $@8 expr

  254 $@9: %empty

  255 $@10: %empty

  256 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces

  257 expr_pipe: expr_assign " <|" expr_block
  258          | "@ <|" expr_block
  259          | "@@ <|" expr_block
  260          | "$ <|" expr_block
  261          | expr_call_pipe

  262 name_in_namespace: "name"
  263                  | "name" "::" "name"
  264                  | "::" "name"

  265 expression_delete: "delete" expr
  266                  | "delete" "explicit" expr

  267 $@11: %empty

  268 $@12: %empty

  269 new_type_declaration: '<' $@11 type_declaration '>' $@12
  270                     | structure_type_declaration

  271 expr_new: "new" new_type_declaration
  272         | "new" new_type_declaration '(' ')'
  273         | "new" new_type_declaration '(' expr_list ')'
  274         | "new" new_type_declaration '(' make_struct_dim ')'
  275         | "new" make_decl

  276 expression_break: "break"

  277 expression_continue: "continue"

  278 expression_return_no_pipe: "return"
  279                          | "return" expr_list
  280                          | "return" "<-" expr_list

  281 expression_return: expression_return_no_pipe "end of expression"
  282                  | "return" expr_pipe
  283                  | "return" "<-" expr_pipe

  284 expression_yield_no_pipe: "yield" expr
  285                         | "yield" "<-" expr

  286 expression_yield: expression_yield_no_pipe "end of expression"
  287                 | "yield" expr_pipe
  288                 | "yield" "<-" expr_pipe

  289 expression_try_catch: "try" expression_block "recover" expression_block

  290 kwd_let_var_or_nothing: "let"
  291                       | "var"
  292                       | %empty

  293 kwd_let: "let"
  294        | "var"

  295 optional_in_scope: "inscope"
  296                  | %empty

  297 tuple_expansion: "name"
  298                | tuple_expansion ',' "name"

  299 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  300                                     | '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  301                                     | "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr "end of expression"
  302                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression"

  303 expression_let: kwd_let optional_in_scope let_variable_declaration
  304               | kwd_let optional_in_scope tuple_expansion_variable_declaration

  305 $@13: %empty

  306 $@14: %empty

  307 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 expr

  308 $@15: %empty

  309 $@16: %empty

  310 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 expr

  311 $@17: %empty

  312 $@18: %empty

  313 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 expr

  314 $@19: %empty

  315 $@20: %empty

  316 expr_type_decl: "type" '<' $@19 type_declaration '>' $@20

  317 expr_type_info: "typeinfo" '(' name_in_namespace expr ')'
  318               | "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')'
  319               | "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" '>' expr ')'

  320 expr_list: expr
  321          | expr_list ',' expr

  322 block_or_simple_block: expression_block
  323                      | "=>" expr
  324                      | "=>" "<-" expr

  325 block_or_lambda: '$'
  326                | '@'
  327                | '@' '@'

  328 capture_entry: '&' "name"
  329              | '=' "name"
  330              | "<-" "name"
  331              | ":=" "name"

  332 capture_list: capture_entry
  333             | capture_list ',' capture_entry

  334 optional_capture_list: %empty
  335                      | "[[" capture_list ']' ']'

  336 expr_block: expression_block
  337           | block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  338 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  339 $@21: %empty

  340 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

  341 expr_numeric_const: "integer constant"
  342                   | "unsigned integer constant"
  343                   | "long integer constant"
  344                   | "unsigned long integer constant"
  345                   | "unsigned int8 constant"
  346                   | "floating point constant"
  347                   | "double constant"

  348 expr_assign: expr
  349            | expr '=' expr
  350            | expr "<-" expr
  351            | expr ":=" expr
  352            | expr "&=" expr
  353            | expr "|=" expr
  354            | expr "^=" expr
  355            | expr "&&=" expr
  356            | expr "||=" expr
  357            | expr "^^=" expr
  358            | expr "+=" expr
  359            | expr "-=" expr
  360            | expr "*=" expr
  361            | expr "/=" expr
  362            | expr "%=" expr
  363            | expr "<<=" expr
  364            | expr ">>=" expr
  365            | expr "<<<=" expr
  366            | expr ">>>=" expr

  367 expr_assign_pipe_right: "@ <|" expr_block
  368                       | "@@ <|" expr_block
  369                       | "$ <|" expr_block
  370                       | expr_call_pipe

  371 expr_assign_pipe: expr '=' expr_assign_pipe_right
  372                 | expr "<-" expr_assign_pipe_right
  373                 | expr "&=" expr_assign_pipe_right
  374                 | expr "|=" expr_assign_pipe_right
  375                 | expr "^=" expr_assign_pipe_right
  376                 | expr "&&=" expr_assign_pipe_right
  377                 | expr "||=" expr_assign_pipe_right
  378                 | expr "^^=" expr_assign_pipe_right
  379                 | expr "+=" expr_assign_pipe_right
  380                 | expr "-=" expr_assign_pipe_right
  381                 | expr "*=" expr_assign_pipe_right
  382                 | expr "/=" expr_assign_pipe_right
  383                 | expr "%=" expr_assign_pipe_right
  384                 | expr "<<=" expr_assign_pipe_right
  385                 | expr ">>=" expr_assign_pipe_right
  386                 | expr "<<<=" expr_assign_pipe_right
  387                 | expr ">>>=" expr_assign_pipe_right

  388 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  389                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  390 expr_method_call: expr "->" "name" '(' ')'
  391                 | expr "->" "name" '(' expr_list ')'

  392 func_addr_name: name_in_namespace
  393               | "$i" '(' expr ')'

  394 func_addr_expr: '@' '@' func_addr_name

  395 $@22: %empty

  396 $@23: %empty

  397 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options '>' $@23 func_addr_name

  398 $@24: %empty

  399 $@25: %empty

  400 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name

  401 expr_field: expr '.' "name"
  402           | expr '.' '.' "name"
  403           | expr '.' "name" '(' ')'
  404           | expr '.' "name" '(' expr_list ')'

  405 $@26: %empty

  406 $@27: %empty

  407 expr_field: expr '.' $@26 error $@27

  408 expr_call: name_in_namespace '(' ')'
  409          | name_in_namespace '(' make_struct_dim ')'
  410          | name_in_namespace '(' expr_list ')'
  411          | basic_type_declaration '(' ')'
  412          | basic_type_declaration '(' expr_list ')'

  413 expr: "null"
  414     | name_in_namespace
  415     | expr_numeric_const
  416     | expr_reader
  417     | string_builder
  418     | make_decl
  419     | "true"
  420     | "false"
  421     | expr_field
  422     | expr_mtag
  423     | '!' expr
  424     | '~' expr
  425     | '+' expr
  426     | '-' expr
  427     | expr "<<" expr
  428     | expr ">>" expr
  429     | expr "<<<" expr
  430     | expr ">>>" expr
  431     | expr '+' expr
  432     | expr '-' expr
  433     | expr '*' expr
  434     | expr '/' expr
  435     | expr '%' expr
  436     | expr '<' expr
  437     | expr '>' expr
  438     | expr "==" expr
  439     | expr "!=" expr
  440     | expr "<=" expr
  441     | expr ">=" expr
  442     | expr '&' expr
  443     | expr '|' expr
  444     | expr '^' expr
  445     | expr "&&" expr
  446     | expr "||" expr
  447     | expr "^^" expr
  448     | expr ".." expr
  449     | "++" expr
  450     | "--" expr
  451     | expr "++"
  452     | expr "--"
  453     | '(' expr_list optional_comma ')'
  454     | expr '[' expr ']'
  455     | expr '.' '[' expr ']'
  456     | expr "?[" expr ']'
  457     | expr '.' "?[" expr ']'
  458     | expr "?." "name"
  459     | expr '.' "?." "name"
  460     | func_addr_expr
  461     | expr_call
  462     | '*' expr
  463     | "deref" '(' expr ')'
  464     | "addr" '(' expr ')'
  465     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  466     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  467     | expr "??" expr
  468     | expr '?' expr ':' expr

  469 $@28: %empty

  470 $@29: %empty

  471 expr: expr "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr "is" basic_type_declaration
  473     | expr "is" "name"
  474     | expr "as" "name"

  475 $@30: %empty

  476 $@31: %empty

  477 expr: expr "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr "as" basic_type_declaration
  479     | expr '?' "as" "name"

  480 $@32: %empty

  481 $@33: %empty

  482 expr: expr '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr '?' "as" basic_type_declaration
  484     | expr_type_info
  485     | expr_type_decl
  486     | expr_cast
  487     | expr_new
  488     | expr_method_call
  489     | expr_named_call
  490     | expr_full_block
  491     | expr "<|" expr
  492     | expr "|>" expr
  493     | expr "|>" basic_type_declaration
  494     | name_in_namespace "name"
  495     | "unsafe" '(' expr ')'
  496     | expression_keyword

  497 expr_mtag: "$$" '(' expr ')'
  498          | "$i" '(' expr ')'
  499          | "$v" '(' expr ')'
  500          | "$b" '(' expr ')'
  501          | "$a" '(' expr ')'
  502          | "..."
  503          | "$c" '(' expr ')' '(' ')'
  504          | "$c" '(' expr ')' '(' expr_list ')'
  505          | expr '.' "$f" '(' expr ')'
  506          | expr "?." "$f" '(' expr ')'
  507          | expr '.' '.' "$f" '(' expr ')'
  508          | expr '.' "?." "$f" '(' expr ')'
  509          | expr "as" "$f" '(' expr ')'
  510          | expr '?' "as" "$f" '(' expr ')'
  511          | expr "is" "$f" '(' expr ')'
  512          | '@' '@' "$c" '(' expr ')'

  513 optional_field_annotation: %empty
  514                          | "[[" annotation_argument_list ']' ']'

  515 optional_override: %empty
  516                  | "override"
  517                  | "sealed"

  518 optional_constant: %empty
  519                  | "const"

  520 optional_public_or_private_member_variable: %empty
  521                                           | "public"
  522                                           | "private"

  523 optional_static_member_variable: %empty
  524                                | "static"

  525 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  526 struct_variable_declaration_list: %empty

  527 $@34: %empty

  528 struct_variable_declaration_list: struct_variable_declaration_list $@34 structure_variable_declaration "end of expression"

  529 $@35: %empty

  530 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header "end of expression"

  531 $@36: %empty

  532 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block
  533                                 | struct_variable_declaration_list '[' annotation_list ']' "end of expression"

  534 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration
  535                              | "$a" '(' expr ')'

  536 function_argument_list: function_argument_declaration
  537                       | function_argument_list "end of expression" function_argument_declaration

  538 tuple_type: type_declaration
  539           | "name" ':' type_declaration

  540 tuple_type_list: tuple_type
  541                | tuple_type_list "end of expression" tuple_type

  542 tuple_alias_type_list: %empty
  543                      | tuple_alias_type_list "end of expression"
  544                      | tuple_alias_type_list tuple_type "end of expression"

  545 variant_type: "name" ':' type_declaration

  546 variant_type_list: variant_type
  547                  | variant_type_list "end of expression" variant_type

  548 variant_alias_type_list: %empty
  549                        | variant_alias_type_list "end of expression"
  550                        | variant_alias_type_list variant_type "end of expression"

  551 copy_or_move: '='
  552             | "<-"

  553 variable_declaration: variable_name_with_pos_list
  554                     | variable_name_with_pos_list '&'
  555                     | variable_name_with_pos_list ':' type_declaration
  556                     | variable_name_with_pos_list ':' type_declaration copy_or_move expr
  557                     | variable_name_with_pos_list copy_or_move expr
  558                     | variable_name_with_pos_list copy_or_move expr_pipe

  559 copy_or_move_or_clone: '='
  560                      | "<-"
  561                      | ":="

  562 optional_ref: %empty
  563             | '&'

  564 let_variable_name_with_pos_list: "name"
  565                                | "$i" '(' expr ')'
  566                                | "name" "aka" "name"
  567                                | let_variable_name_with_pos_list ',' "name"
  568                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  569 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression"
  570                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  571                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  572                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression"
  573                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe

  574 global_variable_declaration_list: %empty

  575 $@37: %empty

  576 global_variable_declaration_list: global_variable_declaration_list $@37 optional_field_annotation let_variable_declaration

  577 optional_shared: %empty
  578                | "shared"

  579 optional_public_or_private_variable: %empty
  580                                    | "private"
  581                                    | "public"

  582 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"

  583 $@38: %empty

  584 global_let: kwd_let optional_shared optional_public_or_private_variable $@38 optional_field_annotation let_variable_declaration

  585 enum_list: %empty
  586          | enum_list "end of expression"
  587          | enum_list "name" "end of expression"
  588          | enum_list "name" '=' expr "end of expression"

  589 optional_public_or_private_alias: %empty
  590                                 | "private"
  591                                 | "public"

  592 $@39: %empty

  593 single_alias: optional_public_or_private_alias "name" $@39 '=' type_declaration

  594 alias_list: single_alias "end of expression"
  595           | alias_list single_alias "end of expression"

  596 alias_declaration: "typedef" "begin of code block" alias_list "end of code block"

  597 $@40: %empty

  598 alias_declaration: "typedef" $@40 single_alias "end of expression"

  599 optional_public_or_private_enum: %empty
  600                                | "private"
  601                                | "public"

  602 enum_name: "name"

  603 $@41: %empty

  604 $@42: %empty

  605 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list $@42 "end of code block"

  606 $@43: %empty

  607 $@44: %empty

  608 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"

  609 optional_structure_parent: %empty
  610                          | ':' name_in_namespace

  611 optional_sealed: %empty
  612                | "sealed"

  613 structure_name: optional_sealed "name" optional_structure_parent

  614 class_or_struct: "class"
  615                | "struct"

  616 optional_public_or_private_structure: %empty
  617                                     | "private"
  618                                     | "public"

  619 optional_struct_variable_declaration_list: %empty
  620                                          | "begin of code block" struct_variable_declaration_list "end of code block"

  621 $@45: %empty

  622 $@46: %empty

  623 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 structure_name $@46 optional_struct_variable_declaration_list

  624 variable_name_with_pos_list: "name"
  625                            | "$i" '(' expr ')'
  626                            | "name" "aka" "name"
  627                            | variable_name_with_pos_list ',' "name"
  628                            | variable_name_with_pos_list ',' "name" "aka" "name"

  629 basic_type_declaration: "bool"
  630                       | "string"
  631                       | "int"
  632                       | "int8"
  633                       | "int16"
  634                       | "int64"
  635                       | "int2"
  636                       | "int3"
  637                       | "int4"
  638                       | "uint"
  639                       | "uint8"
  640                       | "uint16"
  641                       | "uint64"
  642                       | "uint2"
  643                       | "uint3"
  644                       | "uint4"
  645                       | "float"
  646                       | "float2"
  647                       | "float3"
  648                       | "float4"
  649                       | "void"
  650                       | "range"
  651                       | "urange"
  652                       | "range64"
  653                       | "urange64"
  654                       | "double"
  655                       | "bitfield"

  656 enum_basic_type_declaration: "int"
  657                            | "int8"
  658                            | "int16"
  659                            | "uint"
  660                            | "uint8"
  661                            | "uint16"

  662 structure_type_declaration: name_in_namespace

  663 auto_type_declaration: "auto"
  664                      | "auto" '(' "name" ')'
  665                      | "$t" '(' expr ')'

  666 bitfield_bits: "name"
  667              | bitfield_bits "end of expression" "name"

  668 bitfield_alias_bits: %empty
  669                    | bitfield_alias_bits "end of expression"
  670                    | bitfield_alias_bits "name" "end of expression"

  671 $@47: %empty

  672 $@48: %empty

  673 bitfield_type_declaration: "bitfield" '<' $@47 bitfield_bits '>' $@48

  674 table_type_pair: type_declaration
  675                | type_declaration "end of expression" type_declaration

  676 dim_list: '[' expr ']'
  677         | dim_list '[' expr ']'

  678 type_declaration_no_options: basic_type_declaration
  679                            | auto_type_declaration
  680                            | bitfield_type_declaration
  681                            | structure_type_declaration
  682                            | type_declaration_no_options dim_list
  683                            | type_declaration_no_options '[' ']'

  684 $@49: %empty

  685 $@50: %empty

  686 type_declaration_no_options: "type" '<' $@49 type_declaration '>' $@50
  687                            | "typedecl" '(' expr ')'
  688                            | '$' name_in_namespace '(' optional_expr_list ')'

  689 $@51: %empty

  690 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')'
  691                            | type_declaration_no_options '-' '[' ']'
  692                            | type_declaration_no_options "explicit"
  693                            | type_declaration_no_options "const"
  694                            | type_declaration_no_options '-' "const"
  695                            | type_declaration_no_options '&'
  696                            | type_declaration_no_options '-' '&'
  697                            | type_declaration_no_options '#'
  698                            | type_declaration_no_options "implicit"
  699                            | type_declaration_no_options '-' '#'
  700                            | type_declaration_no_options "==" "const"
  701                            | type_declaration_no_options "==" '&'
  702                            | type_declaration_no_options '?'

  703 $@52: %empty

  704 $@53: %empty

  705 type_declaration_no_options: "smart_ptr" '<' $@52 type_declaration '>' $@53
  706                            | type_declaration_no_options "??"

  707 $@54: %empty

  708 $@55: %empty

  709 type_declaration_no_options: "array" '<' $@54 type_declaration '>' $@55

  710 $@56: %empty

  711 $@57: %empty

  712 type_declaration_no_options: "table" '<' $@56 table_type_pair '>' $@57

  713 $@58: %empty

  714 $@59: %empty

  715 type_declaration_no_options: "iterator" '<' $@58 type_declaration '>' $@59
  716                            | "block"

  717 $@60: %empty

  718 $@61: %empty

  719 type_declaration_no_options: "block" '<' $@60 type_declaration '>' $@61

  720 $@62: %empty

  721 $@63: %empty

  722 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list optional_function_type '>' $@63
  723                            | "function"

  724 $@64: %empty

  725 $@65: %empty

  726 type_declaration_no_options: "function" '<' $@64 type_declaration '>' $@65

  727 $@66: %empty

  728 $@67: %empty

  729 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list optional_function_type '>' $@67
  730                            | "lambda"

  731 $@68: %empty

  732 $@69: %empty

  733 type_declaration_no_options: "lambda" '<' $@68 type_declaration '>' $@69

  734 $@70: %empty

  735 $@71: %empty

  736 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list optional_function_type '>' $@71

  737 $@72: %empty

  738 $@73: %empty

  739 type_declaration_no_options: "tuple" '<' $@72 tuple_type_list '>' $@73

  740 $@74: %empty

  741 $@75: %empty

  742 type_declaration_no_options: "variant" '<' $@74 variant_type_list '>' $@75

  743 type_declaration: type_declaration_no_options
  744                 | type_declaration '|' type_declaration_no_options
  745                 | type_declaration '|' '#'

  746 $@76: %empty

  747 $@77: %empty

  748 $@78: %empty

  749 $@79: %empty

  750 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

  751 $@80: %empty

  752 $@81: %empty

  753 $@82: %empty

  754 $@83: %empty

  755 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

  756 $@84: %empty

  757 $@85: %empty

  758 $@86: %empty

  759 $@87: %empty

  760 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

  761 make_decl: make_struct_decl
  762          | make_dim_decl
  763          | make_table_decl
  764          | array_comprehension
  765          | make_tuple_call

  766 make_struct_fields: "name" copy_or_move expr
  767                   | "name" ":=" expr
  768                   | make_struct_fields ',' "name" copy_or_move expr
  769                   | make_struct_fields ',' "name" ":=" expr
  770                   | "$f" '(' expr ')' copy_or_move expr
  771                   | "$f" '(' expr ')' ":=" expr
  772                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  773                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  774 make_struct_dim: make_struct_fields
  775                | make_struct_dim "end of expression" make_struct_fields

  776 optional_block: %empty
  777               | "where" expr_block

  778 optional_trailing_semicolon_cur_cur: "end of code block" "end of code block"
  779                                    | ";}}"

  780 optional_trailing_semicolon_cur_sqr: "end of code block" ']'
  781                                    | ";}]"

  782 optional_trailing_semicolon_sqr_sqr: ']' ']'
  783                                    | ";]]"

  784 optional_trailing_delim_sqr_sqr: ']' ']'
  785                                | ";]]"
  786                                | ",]]"

  787 optional_trailing_delim_cur_sqr: "end of code block" ']'
  788                                | ";}]"
  789                                | ",}]"

  790 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  791                 | "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  792                 | "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  793                 | "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  794                 | "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  795                 | "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

  796 $@88: %empty

  797 $@89: %empty

  798 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' make_struct_dim ')'

  799 $@90: %empty

  800 $@91: %empty

  801 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' make_struct_dim ')'

  802 $@92: %empty

  803 $@93: %empty

  804 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 '(' make_struct_dim ')'

  805 $@94: %empty

  806 $@95: %empty

  807 make_struct_decl: "default" '<' $@94 type_declaration_no_options '>' $@95

  808 make_tuple: expr
  809           | expr "=>" expr
  810           | make_tuple ',' expr

  811 make_map_tuple: expr "=>" expr
  812               | expr

  813 make_tuple_call: "tuple" '(' expr_list optional_comma ')'

  814 $@96: %empty

  815 $@97: %empty

  816 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' make_struct_dim ')'

  817 make_dim: make_tuple
  818         | make_dim "end of expression" make_tuple

  819 make_dim_decl: '[' expr_list optional_comma ']'
  820              | "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  821              | "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr
  822              | "array" '(' expr_list optional_comma ')'

  823 $@98: %empty

  824 $@99: %empty

  825 make_dim_decl: "array" '<' $@98 type_declaration_no_options '>' $@99 '(' expr_list optional_comma ')'
  826              | "fixed_array" '(' expr_list optional_comma ')'

  827 $@100: %empty

  828 $@101: %empty

  829 make_dim_decl: "fixed_array" '<' $@100 type_declaration_no_options '>' $@101 '(' expr_list optional_comma ')'

  830 make_table: make_map_tuple
  831           | make_table "end of expression" make_map_tuple

  832 expr_map_tuple_list: make_map_tuple
  833                    | expr_map_tuple_list ',' make_map_tuple

  834 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma "end of code block"
  835                | "{{" make_table optional_trailing_semicolon_cur_cur
  836                | "table" '(' expr_map_tuple_list optional_comma ')'
  837                | "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'
  838                | "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

  839 array_comprehension_where: %empty
  840                          | "end of expression" "where" expr

  841 optional_comma: %empty
  842               | ','

  843 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  844                    | "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']'
  845                    | "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'
  846                    | "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"
  847                    | "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 109 125 423
    '#' (35) 697 699 745
    '$' (36) 20 325 688 690
    '%' (37) 35 42 145 435
    '&' (38) 153 328 442 554 563 695 696 701
    '(' (40) 100 107 113 120 121 248 272 273 274 300 302 317 318 319 388 389 390 391 393 403 404 408 409 410 411 412 453 463 464 465 466 495 497 498 499 500 501 503 504 505 506 507 508 509 510 511 512 535 565 625 664 665 687 688 690 770 771 772 773 792 793 795 798 801 804 813 816 822 825 826 829 836 837 838
    ')' (41) 100 107 113 120 121 248 272 273 274 300 302 317 318 319 388 389 390 391 393 403 404 408 409 410 411 412 453 463 464 465 466 495 497 498 499 500 501 503 504 505 506 507 508 509 510 511 512 535 565 625 664 665 687 688 690 770 771 772 773 792 793 795 798 801 804 813 816 822 825 826 829 836 837 838
    '*' (42) 143 433 462
    '+' (43) 141 425 431
    ',' (44) 51 89 102 116 298 321 333 389 567 568 627 628 768 769 772 773 810 833 842
    '-' (45) 142 426 432 691 694 696 699
    '.' (46) 43 170 172 173 401 402 403 404 407 455 457 459 505 507 508
    '/' (47) 44 144 434
    ':' (58) 53 54 123 299 300 468 539 545 555 556 569 570 571 608 610
    "end of expression" (59) 15 16 74 220 224 225 232 233 238 239 240 250 281 286 299 300 301 302 319 528 530 533 537 541 543 544 547 549 550 569 570 572 586 587 588 594 595 598 667 669 670 675 775 818 831 838 840 843 844 845 846 847
    '<' (60) 146 253 256 269 307 310 313 316 318 319 397 400 436 465 466 471 477 482 673 686 690 705 709 712 715 719 722 726 729 733 736 739 742 798 801 804 807 816 825 829 837 838
    '=' (61) 81 93 94 95 96 97 98 100 329 349 371 551 559 588 593
    '>' (62) 147 253 256 269 307 310 313 316 318 319 397 400 437 465 466 471 477 482 673 686 690 705 709 712 715 719 722 726 729 733 736 739 742 798 801 804 807 816 825 829 837 838
    '?' (63) 182 183 468 479 482 483 510 702
    '@' (64) 326 327 394 397 400 512
    '[' (91) 118 168 388 389 454 455 533 676 677 683 691 819 843
    ']' (93) 118 168 169 299 301 335 388 389 454 455 456 457 514 533 676 677 683 691 780 782 784 787 819 843 844 845
    '^' (94) 155 444
    "begin of code block" (123) 216 217 582 596 605 608 620 750 755 760 834 846
    '|' (124) 154 443 744 745
    "end of code block" (125) 216 217 582 596 605 608 620 750 755 760 778 780 787 834 845 846 847
    '~' (126) 126 424
    error (256) 243 407
    "lexer error" (258)
    "struct" (259) 615 798
    "class" (260) 614 801
    "let" (261) 290 293
    "def" (262) 209 530 532
    "while" (263) 78
    "if" (264) 62 74
    "static_if" (265) 63
    "else" (266) 60 66
    "for" (267) 76 843 844 845 846 847
    "recover" (268) 289
    "true" (269) 86 97 419
    "false" (270) 87 98 420
    "new" (271) 271 272 273 274 275
    "typeinfo" (272) 317 318 319
    "type" (273) 91 316 471 477 482 686
    "in" (274) 76 92 843 844 845 846 847
    "is" (275) 178 180 471 472 473 511
    "as" (276) 46 179 181 182 183 474 477 478 479 482 483 509 510
    "elif" (277) 57
    "static_elif" (278) 58
    "array" (279) 709 822 825
    "return" (280) 278 279 280 282 283
    "null" (281) 413
    "break" (282) 276
    "try" (283) 289
    "options" (284) 36
    "table" (285) 712 836 837 838
    "expect" (286) 49
    "const" (287) 519 693 694 700
    "require" (288) 37 104
    "operator" (289) 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183
    "enum" (290) 605 608
    "finally" (291) 217
    "delete" (292) 176 265 266
    "deref" (293) 463
    "typedef" (294) 596 598
    "typedecl" (295) 687
    "with" (296) 79
    "aka" (297) 566 568 626 628
    "assume" (298) 81
    "cast" (299) 307
    "override" (300) 516
    "abstract" (301) 530
    "upcast" (302) 310
    "iterator" (303) 715
    "var" (304) 291 294
    "addr" (305) 464
    "continue" (306) 277
    "where" (307) 777 840
    "pass" (308) 240
    "reinterpret" (309) 313
    "module" (310) 22
    "public" (311) 18 48 212 521 581 591 601 618
    "label" (312) 54 55
    "goto" (313) 55 56
    "implicit" (314) 698
    "explicit" (315) 266 692
    "shared" (316) 578
    "private" (317) 19 105 211 522 580 590 600 617
    "smart_ptr" (318) 705
    "unsafe" (319) 77 495
    "inscope" (320) 295
    "static" (321) 524
    "fixed_array" (322) 826 829
    "default" (323) 807
    "bool" (324) 184 629
    "void" (325) 649
    "string" (326) 185 630
    "auto" (327) 663 664
    "int" (328) 186 631 656
    "int2" (329) 187 635
    "int3" (330) 188 636
    "int4" (331) 189 637
    "uint" (332) 190 638 659
    "bitfield" (333) 655 673 760
    "uint2" (334) 191 642
    "uint3" (335) 192 643
    "uint4" (336) 193 644
    "float" (337) 194 645
    "float2" (338) 195 646
    "float3" (339) 196 647
    "float4" (340) 197 648
    "range" (341) 198 650
    "urange" (342) 199 651
    "range64" (343) 200 652
    "urange64" (344) 201 653
    "block" (345) 716 719 722
    "int64" (346) 202 634
    "uint64" (347) 203 641
    "double" (348) 204 654
    "function" (349) 723 726 729
    "lambda" (350) 730 733 736
    "int8" (351) 205 632 657
    "uint8" (352) 206 639 660
    "int16" (353) 207 633 658
    "uint16" (354) 208 640 661
    "tuple" (355) 739 750 813 816
    "variant" (356) 742 755 804
    "generator" (357) 465 466
    "yield" (358) 284 285 287 288
    "sealed" (359) 517 612
    "+=" (360) 127 358 379
    "-=" (361) 128 359 380
    "/=" (362) 130 361 382
    "*=" (363) 129 360 381
    "%=" (364) 131 362 383
    "&=" (365) 132 352 373
    "|=" (366) 133 353 374
    "^=" (367) 134 354 375
    "<<" (368) 160 427
    ">>" (369) 161 428
    "++" (370) 156 158 449 451
    "--" (371) 157 159 450 452
    "<=" (372) 151 440
    "<<=" (373) 162 363 384
    ">>=" (374) 163 364 385
    ">=" (375) 152 441
    "==" (376) 149 438 700 701
    "!=" (377) 150 439
    "->" (378) 390 391
    "<-" (379) 280 283 285 288 324 330 350 372 552 560
    "??" (380) 177 467 706
    "?." (381) 171 174 458 459 506 508
    "?[" (382) 169 456 457
    "<|" (383) 491
    " <|" (384) 257
    "$ <|" (385) 260 369
    "@ <|" (386) 258 367
    "@@ <|" (387) 259 368
    "|>" (388) 114 492 493
    ":=" (389) 173 175 331 351 561 767 769 771 773
    "<<<" (390) 164 429
    ">>>" (391) 165 430
    "<<<=" (392) 166 365 386
    ">>>=" (393) 167 366 387
    "=>" (394) 323 324 809 811
    "::" (395) 263 264
    "&&" (396) 110 138 445
    "||" (397) 111 139 446
    "^^" (398) 112 140 447
    "&&=" (399) 135 355 376
    "||=" (400) 136 356 377
    "^^=" (401) 137 357 378
    ".." (402) 148 448
    "$$" (403) 497
    "$i" (404) 393 498 565 625
    "$v" (405) 499
    "$b" (406) 500
    "$a" (407) 501 535
    "$t" (408) 665
    "$c" (409) 503 504 512
    "$f" (410) 505 506 507 508 509 510 511 770 771 772 773
    "..." (411) 502
    "[[" (412) 299 301 335 514 790 791 792 793 820 844
    "[{" (413) 794 795 821 845
    "{{" (414) 835 847
    "integer constant" <i> (415) 52 53 54 55 84 95 341
    "long integer constant" <i64> (416) 343
    "unsigned integer constant" <ui> (417) 342
    "unsigned long integer constant" <ui64> (418) 344
    "unsigned int8 constant" <ui> (419) 345
    "floating point constant" <fd> (420) 85 96 346
    "double constant" <d> (421) 347
    "name" <s> (422) 21 38 46 81 83 90 94 124 172 173 174 180 181 183 262 263 264 297 298 318 319 328 329 330 331 390 391 401 402 403 404 458 459 473 474 479 494 539 545 564 566 567 568 587 588 593 602 613 624 626 627 628 664 666 667 670 750 755 760 766 767 768 769
    "keyword" <s> (423) 39 244 253
    "type function" <s> (424) 40 256
    "start of the string" (425) 27 31
    STRING_CHARACTER <ch> (426) 23 25 32 33
    STRING_CHARACTER_ESC (427) 24 26
    "end of the string" (428) 27 31
    "{" (429) 30
    "}" (430) 30
    "end of failed eader macro" (431)
    ";}}" (432) 779
    ";}]" (433) 781 788
    ";]]" (434) 783 785
    ",]]" (435) 786
    ",}]" (436) 789
    UNARY_MINUS (437)
    UNARY_PLUS (438)
    PRE_INC (439)
    PRE_DEC (440)
    POST_INC (441)
    POST_DEC (442)
    DEREF (443)


Nonterminals, with rules where they appear

    $accept (216)
        on left: 0
    program (217)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    top_level_reader_macro (218)
        on left: 16
        on right: 14
    optional_public_or_private_module <b> (219)
        on left: 17 18 19
        on right: 22
    module_name <s> (220)
        on left: 20 21
        on right: 22
    module_declaration (221)
        on left: 22
        on right: 2
    character_sequence <s> (222)
        on left: 23 24 25 26
        on right: 25 26 27 29
    string_constant <s> (223)
        on left: 27
        on right: 82 93
    string_builder_body <pExpression> (224)
        on left: 28 29 30
        on right: 29 30 31
    string_builder <pExpression> (225)
        on left: 31
        on right: 417
    reader_character_sequence (226)
        on left: 32 33
        on right: 33 35
    expr_reader <pExpression> (227)
        on left: 35
        on right: 16 416
    $@1 (228)
        on left: 34
        on right: 35
    options_declaration (229)
        on left: 36
        on right: 9
    require_declaration (230)
        on left: 37
        on right: 8
    keyword_or_name <s> (231)
        on left: 38 39 40
        on right: 41 43 44
    require_module_name <s> (232)
        on left: 41 42 43 44
        on right: 42 43 44 45 46
    require_module (233)
        on left: 45 46
        on right: 37
    is_public_module <b> (234)
        on left: 47 48
        on right: 45 46
    expect_declaration (235)
        on left: 49
        on right: 7
    expect_list (236)
        on left: 50 51
        on right: 49 51
    expect_error (237)
        on left: 52 53
        on right: 50 51
    expression_label <pExpression> (238)
        on left: 54
        on right: 238
    expression_goto <pExpression> (239)
        on left: 55 56
        on right: 239
    elif_or_static_elif <b> (240)
        on left: 57 58
        on right: 61
    expression_else <pExpression> (241)
        on left: 59 60 61
        on right: 61 72
    if_or_static_if <b> (242)
        on left: 62 63
        on right: 72
    expression_else_one_liner <pExpression> (243)
        on left: 64 66
        on right: 74
    $@2 (244)
        on left: 65
        on right: 66
    expression_if_one_liner <pExpression> (245)
        on left: 67 68 69 70 71
        on right: 66 74
    expression_if_then_else <pExpression> (246)
        on left: 72 74
        on right: 236
    $@3 (247)
        on left: 73
        on right: 74
    expression_for_loop <pExpression> (248)
        on left: 76
        on right: 231
    $@4 (249)
        on left: 75
        on right: 76
    expression_unsafe <pExpression> (250)
        on left: 77
        on right: 228
    expression_while_loop <pExpression> (251)
        on left: 78
        on right: 227
    expression_with <pExpression> (252)
        on left: 79
        on right: 229
    expression_with_alias <pExpression> (253)
        on left: 81
        on right: 230
    $@5 (254)
        on left: 80
        on right: 81
    annotation_argument_value <aa> (255)
        on left: 82 83 84 85 86 87
        on right: 88 89
    annotation_argument_value_list <aaList> (256)
        on left: 88 89
        on right: 89 100
    annotation_argument_name <s> (257)
        on left: 90 91 92
        on right: 93 94 95 96 97 98 99 100
    annotation_argument <aa> (258)
        on left: 93 94 95 96 97 98 99 100
        on right: 101 102
    annotation_argument_list <aaList> (259)
        on left: 101 102
        on right: 36 102 107 514
    annotation_declaration_name <s> (260)
        on left: 103 104 105
        on right: 106 107
    annotation_declaration_basic <fa> (261)
        on left: 106 107
        on right: 108
    annotation_declaration <fa> (262)
        on left: 108 109 110 111 112 113 114
        on right: 109 110 111 112 113 114 115 116
    annotation_list <faList> (263)
        on left: 115 116
        on right: 116 118 533
    optional_annotation_list <faList> (264)
        on left: 117 118
        on right: 209 337 338 340 530 532 605 608 623
    optional_function_argument_list <pVarDeclList> (265)
        on left: 119 120 121
        on right: 213 337 338 340 400 722 729 736
    optional_function_type <pTypeDecl> (266)
        on left: 122 123
        on right: 213 337 338 340 400 722 729 736
    function_name <s> (267)
        on left: 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208
        on right: 213
    global_function_declaration (268)
        on left: 209
        on right: 6
    optional_public_or_private_function <b> (269)
        on left: 210 211 212
        on right: 215
    function_declaration_header <pFuncDecl> (270)
        on left: 213
        on right: 215 530 532
    function_declaration <pFuncDecl> (271)
        on left: 215
        on right: 209
    $@6 (272)
        on left: 214
        on right: 215
    expression_block <pExpression> (273)
        on left: 216 217
        on right: 60 61 72 76 77 78 79 215 244 289 322 336 340 532
    expr_call_pipe <pExpression> (274)
        on left: 218 219
        on right: 261 370
    expression_any <pExpression> (275)
        on left: 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240
        on right: 242
    expressions <pExpression> (276)
        on left: 241 242 243
        on right: 216 217 242 243
    expr_keyword <pExpression> (277)
        on left: 244
        on right: 222
    optional_expr_list <pExpression> (278)
        on left: 245 246
        on right: 248 688 690
    optional_expr_list_in_braces <pExpression> (279)
        on left: 247 248
        on right: 256
    type_declaration_no_options_list <pTypeDeclList> (280)
        on left: 249 250
        on right: 250 253 256 690
    expression_keyword <pExpression> (281)
        on left: 253 256
        on right: 219 496
    $@7 (282)
        on left: 251
        on right: 253
    $@8 (283)
        on left: 252
        on right: 253
    $@9 (284)
        on left: 254
        on right: 256
    $@10 (285)
        on left: 255
        on right: 256
    expr_pipe <pExpression> (286)
        on left: 257 258 259 260 261
        on right: 221 282 283 287 288 558 571 573
    name_in_namespace <s> (287)
        on left: 262 263 264
        on right: 35 103 317 318 319 388 389 392 408 409 410 414 494 610 662 688 690
    expression_delete <pExpression> (288)
        on left: 265 266
        on right: 225
    new_type_declaration <pTypeDecl> (289)
        on left: 269 270
        on right: 271 272 273 274
    $@11 (290)
        on left: 267
        on right: 269
    $@12 (291)
        on left: 268
        on right: 269
    expr_new <pExpression> (292)
        on left: 271 272 273 274 275
        on right: 487
    expression_break <pExpression> (293)
        on left: 276
        on right: 70 232
    expression_continue <pExpression> (294)
        on left: 277
        on right: 71 233
    expression_return_no_pipe <pExpression> (295)
        on left: 278 279 280
        on right: 68 281
    expression_return <pExpression> (296)
        on left: 281 282 283
        on right: 234
    expression_yield_no_pipe <pExpression> (297)
        on left: 284 285
        on right: 69 286
    expression_yield <pExpression> (298)
        on left: 286 287 288
        on right: 235
    expression_try_catch <pExpression> (299)
        on left: 289
        on right: 237
    kwd_let_var_or_nothing <b> (300)
        on left: 290 291 292
        on right: 534
    kwd_let <b> (301)
        on left: 293 294
        on right: 303 304 582 584
    optional_in_scope <b> (302)
        on left: 295 296
        on right: 303 304
    tuple_expansion <pNameList> (303)
        on left: 297 298
        on right: 298 299 300 301 302
    tuple_expansion_variable_declaration <pVarDecl> (304)
        on left: 299 300 301 302
        on right: 304
    expression_let <pExpression> (305)
        on left: 303 304
        on right: 226
    expr_cast <pExpression> (306)
        on left: 307 310 313
        on right: 486
    $@13 (307)
        on left: 305
        on right: 307
    $@14 (308)
        on left: 306
        on right: 307
    $@15 (309)
        on left: 308
        on right: 310
    $@16 (310)
        on left: 309
        on right: 310
    $@17 (311)
        on left: 311
        on right: 313
    $@18 (312)
        on left: 312
        on right: 313
    expr_type_decl <pExpression> (313)
        on left: 316
        on right: 485
    $@19 (314)
        on left: 314
        on right: 316
    $@20 (315)
        on left: 315
        on right: 316
    expr_type_info <pExpression> (316)
        on left: 317 318 319
        on right: 484
    expr_list <pExpression> (317)
        on left: 320 321
        on right: 76 246 273 279 280 321 389 391 404 410 412 453 504 813 819 822 825 826 829 843 844 845 846 847
    block_or_simple_block <pExpression> (318)
        on left: 322 323 324
        on right: 337 338
    block_or_lambda <i> (319)
        on left: 325 326 327
        on right: 337 338 340
    capture_entry <pCapt> (320)
        on left: 328 329 330 331
        on right: 332 333
    capture_list <pCaptList> (321)
        on left: 332 333
        on right: 333 335
    optional_capture_list <pCaptList> (322)
        on left: 334 335
        on right: 337 338 340 465 466
    expr_block <pExpression> (323)
        on left: 336 337
        on right: 257 258 259 260 367 368 369 777
    expr_full_block <pExpression> (324)
        on left: 338
        on right: 490
    expr_full_block_assumed_piped <pExpression> (325)
        on left: 340
        on right: 218 219
    $@21 (326)
        on left: 339
        on right: 340
    expr_numeric_const <pExpression> (327)
        on left: 341 342 343 344 345 346 347
        on right: 415
    expr_assign <pExpression> (328)
        on left: 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366
        on right: 224 257
    expr_assign_pipe_right <pExpression> (329)
        on left: 367 368 369 370
        on right: 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387
    expr_assign_pipe <pExpression> (330)
        on left: 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387
        on right: 223
    expr_named_call <pExpression> (331)
        on left: 388 389
        on right: 489
    expr_method_call <pExpression> (332)
        on left: 390 391
        on right: 488
    func_addr_name <pExpression> (333)
        on left: 392 393
        on right: 394 397 400
    func_addr_expr <pExpression> (334)
        on left: 394 397 400
        on right: 460
    $@22 (335)
        on left: 395
        on right: 397
    $@23 (336)
        on left: 396
        on right: 397
    $@24 (337)
        on left: 398
        on right: 400
    $@25 (338)
        on left: 399
        on right: 400
    expr_field <pExpression> (339)
        on left: 401 402 403 404 407
        on right: 421
    $@26 (340)
        on left: 405
        on right: 407
    $@27 (341)
        on left: 406
        on right: 407
    expr_call <pExpression> (342)
        on left: 408 409 410 411 412
        on right: 461
    expr <pExpression> (343)
        on left: 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 471 472 473 474 477 478 479 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496
        on right
    $@28 (344)
        on left: 469
        on right: 471
    $@29 (345)
        on left: 470
        on right: 471
    $@30 (346)
        on left: 475
        on right: 477
    $@31 (347)
        on left: 476
        on right: 477
    $@32 (348)
        on left: 480
        on right: 482
    $@33 (349)
        on left: 481
        on right: 482
    expr_mtag <pExpression> (350)
        on left: 497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512
        on right: 422
    optional_field_annotation <aaList> (351)
        on left: 513 514
        on right: 525 534 576 584
    optional_override <i> (352)
        on left: 515 516 517
        on right: 525 532
    optional_constant <b> (353)
        on left: 518 519
        on right: 530 532
    optional_public_or_private_member_variable <b> (354)
        on left: 520 521 522
        on right: 525 530 532
    optional_static_member_variable <b> (355)
        on left: 523 524
        on right: 525 532
    structure_variable_declaration <pVarDecl> (356)
        on left: 525
        on right: 528
    struct_variable_declaration_list <pVarDeclList> (357)
        on left: 526 528 530 532 533
        on right: 528 530 532 533 620
    $@34 (358)
        on left: 527
        on right: 528
    $@35 (359)
        on left: 529
        on right: 530
    $@36 (360)
        on left: 531
        on right: 532
    function_argument_declaration <pVarDecl> (361)
        on left: 534 535
        on right: 536 537
    function_argument_list <pVarDeclList> (362)
        on left: 536 537
        on right: 121 537
    tuple_type <pVarDecl> (363)
        on left: 538 539
        on right: 540 541 544
    tuple_type_list <pVarDeclList> (364)
        on left: 540 541
        on right: 541 739
    tuple_alias_type_list <pVarDeclList> (365)
        on left: 542 543 544
        on right: 543 544 750
    variant_type <pVarDecl> (366)
        on left: 545
        on right: 546 547 550
    variant_type_list <pVarDeclList> (367)
        on left: 546 547
        on right: 547 742
    variant_alias_type_list <pVarDeclList> (368)
        on left: 548 549 550
        on right: 549 550 755
    copy_or_move <b> (369)
        on left: 551 552
        on right: 556 557 558 766 768 770 772
    variable_declaration <pVarDecl> (370)
        on left: 553 554 555 556 557 558
        on right: 525 534
    copy_or_move_or_clone <i> (371)
        on left: 559 560 561
        on right: 299 300 301 302 570 571 572 573
    optional_ref <b> (372)
        on left: 562 563
        on right: 301 302 572 573
    let_variable_name_with_pos_list <pNameWithPosList> (373)
        on left: 564 565 566 567 568
        on right: 567 568 569 570 571 572 573
    let_variable_declaration <pVarDecl> (374)
        on left: 569 570 571 572 573
        on right: 303 576 584
    global_variable_declaration_list <pVarDeclList> (375)
        on left: 574 576
        on right: 576 582
    $@37 (376)
        on left: 575
        on right: 576
    optional_shared <b> (377)
        on left: 577 578
        on right: 22 582 584
    optional_public_or_private_variable <b> (378)
        on left: 579 580 581
        on right: 582 584
    global_let (379)
        on left: 582 584
        on right: 5
    $@38 (380)
        on left: 583
        on right: 584
    enum_list <pEnum> (381)
        on left: 585 586 587 588
        on right: 586 587 588 605 608
    optional_public_or_private_alias <b> (382)
        on left: 589 590 591
        on right: 593 750 755 760
    single_alias (383)
        on left: 593
        on right: 594 595 598
    $@39 (384)
        on left: 592
        on right: 593
    alias_list (385)
        on left: 594 595
        on right: 595 596
    alias_declaration (386)
        on left: 596 598
        on right: 10
    $@40 (387)
        on left: 597
        on right: 598
    optional_public_or_private_enum <b> (388)
        on left: 599 600 601
        on right: 605 608
    enum_name <pEnum> (389)
        on left: 602
        on right: 605 608
    enum_declaration (390)
        on left: 605 608
        on right: 4
    $@41 (391)
        on left: 603
        on right: 605
    $@42 (392)
        on left: 604
        on right: 605
    $@43 (393)
        on left: 606
        on right: 608
    $@44 (394)
        on left: 607
        on right: 608
    optional_structure_parent <s> (395)
        on left: 609 610
        on right: 613
    optional_sealed <b> (396)
        on left: 611 612
        on right: 613
    structure_name <pStructure> (397)
        on left: 613
        on right: 623
    class_or_struct <b> (398)
        on left: 614 615
        on right: 623
    optional_public_or_private_structure <b> (399)
        on left: 616 617 618
        on right: 623
    optional_struct_variable_declaration_list <pVarDeclList> (400)
        on left: 619 620
        on right: 623
    structure_declaration (401)
        on left: 623
        on right: 3
    $@45 (402)
        on left: 621
        on right: 623
    $@46 (403)
        on left: 622
        on right: 623
    variable_name_with_pos_list <pNameWithPosList> (404)
        on left: 624 625 626 627 628
        on right: 76 553 554 555 556 557 558 627 628 843 844 845 846 847
    basic_type_declaration <type> (405)
        on left: 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655
        on right: 411 412 472 478 483 493 678
    enum_basic_type_declaration <type> (406)
        on left: 656 657 658 659 660 661
        on right: 608
    structure_type_declaration <pTypeDecl> (407)
        on left: 662
        on right: 270 681
    auto_type_declaration <pTypeDecl> (408)
        on left: 663 664 665
        on right: 679
    bitfield_bits <pNameList> (409)
        on left: 666 667
        on right: 667 673
    bitfield_alias_bits <pNameList> (410)
        on left: 668 669 670
        on right: 669 670 760
    bitfield_type_declaration <pTypeDecl> (411)
        on left: 673
        on right: 680
    $@47 (412)
        on left: 671
        on right: 673
    $@48 (413)
        on left: 672
        on right: 673
    table_type_pair <aTypePair> (414)
        on left: 674 675
        on right: 712
    dim_list <pTypeDecl> (415)
        on left: 676 677
        on right: 677 682
    type_declaration_no_options <pTypeDecl> (416)
        on left: 678 679 680 681 682 683 686 687 688 690 691 692 693 694 695 696 697 698 699 700 701 702 705 706 709 712 715 716 719 722 723 726 729 730 733 736 739 742
        on right: 299 300 307 310 313 397 465 466 471 569 570 571 682 683 691 692 693 694 695 696 697 698 699 700 701 702 706 743 744 790 791 792 793 794 795 798 801 804 807 816 820 821 825 829 837 838
    $@49 (417)
        on left: 684
        on right: 686
    $@50 (418)
        on left: 685
        on right: 686
    $@51 (419)
        on left: 689
        on right: 690
    $@52 (420)
        on left: 703
        on right: 705
    $@53 (421)
        on left: 704
        on right: 705
    $@54 (422)
        on left: 707
        on right: 709
    $@55 (423)
        on left: 708
        on right: 709
    $@56 (424)
        on left: 710
        on right: 712
    $@57 (425)
        on left: 711
        on right: 712
    $@58 (426)
        on left: 713
        on right: 715
    $@59 (427)
        on left: 714
        on right: 715
    $@60 (428)
        on left: 717
        on right: 719
    $@61 (429)
        on left: 718
        on right: 719
    $@62 (430)
        on left: 720
        on right: 722
    $@63 (431)
        on left: 721
        on right: 722
    $@64 (432)
        on left: 724
        on right: 726
    $@65 (433)
        on left: 725
        on right: 726
    $@66 (434)
        on left: 727
        on right: 729
    $@67 (435)
        on left: 728
        on right: 729
    $@68 (436)
        on left: 731
        on right: 733
    $@69 (437)
        on left: 732
        on right: 733
    $@70 (438)
        on left: 734
        on right: 736
    $@71 (439)
        on left: 735
        on right: 736
    $@72 (440)
        on left: 737
        on right: 739
    $@73 (441)
        on left: 738
        on right: 739
    $@74 (442)
        on left: 740
        on right: 742
    $@75 (443)
        on left: 741
        on right: 742
    type_declaration <pTypeDecl> (444)
        on left: 743 744 745
        on right: 123 249 250 269 316 477 482 538 539 545 555 556 593 674 675 686 705 709 715 719 726 733 744 745
    tuple_alias_declaration (445)
        on left: 750
        on right: 12
    $@76 (446)
        on left: 746
        on right: 750
    $@77 (447)
        on left: 747
        on right: 750
    $@78 (448)
        on left: 748
        on right: 750
    $@79 (449)
        on left: 749
        on right: 750
    variant_alias_declaration (450)
        on left: 755
        on right: 11
    $@80 (451)
        on left: 751
        on right: 755
    $@81 (452)
        on left: 752
        on right: 755
    $@82 (453)
        on left: 753
        on right: 755
    $@83 (454)
        on left: 754
        on right: 755
    bitfield_alias_declaration (455)
        on left: 760
        on right: 13
    $@84 (456)
        on left: 756
        on right: 760
    $@85 (457)
        on left: 757
        on right: 760
    $@86 (458)
        on left: 758
        on right: 760
    $@87 (459)
        on left: 759
        on right: 760
    make_decl <pExpression> (460)
        on left: 761 762 763 764 765
        on right: 275 418
    make_struct_fields <pMakeStruct> (461)
        on left: 766 767 768 769 770 771 772 773
        on right: 388 389 768 769 772 773 774 775
    make_struct_dim <pExpression> (462)
        on left: 774 775
        on right: 274 409 775 790 793 794 795 798 801 804 816
    optional_block <pExpression> (463)
        on left: 776 777
        on right: 790 791 792 793 794 795
    optional_trailing_semicolon_cur_cur (464)
        on left: 778 779
        on right: 835
    optional_trailing_semicolon_cur_sqr (465)
        on left: 780 781
        on right: 821
    optional_trailing_semicolon_sqr_sqr (466)
        on left: 782 783
        on right: 820
    optional_trailing_delim_sqr_sqr (467)
        on left: 784 785 786
        on right: 790 791 792 793
    optional_trailing_delim_cur_sqr (468)
        on left: 787 788 789
        on right: 794 795
    make_struct_decl <pExpression> (469)
        on left: 790 791 792 793 794 795 798 801 804 807
        on right: 761
    $@88 (470)
        on left: 796
        on right: 798
    $@89 (471)
        on left: 797
        on right: 798
    $@90 (472)
        on left: 799
        on right: 801
    $@91 (473)
        on left: 800
        on right: 801
    $@92 (474)
        on left: 802
        on right: 804
    $@93 (475)
        on left: 803
        on right: 804
    $@94 (476)
        on left: 805
        on right: 807
    $@95 (477)
        on left: 806
        on right: 807
    make_tuple <pExpression> (478)
        on left: 808 809 810
        on right: 810 817 818
    make_map_tuple <pExpression> (479)
        on left: 811 812
        on right: 830 831 832 833 846 847
    make_tuple_call <pExpression> (480)
        on left: 813 816
        on right: 765
    $@96 (481)
        on left: 814
        on right: 816
    $@97 (482)
        on left: 815
        on right: 816
    make_dim <pExpression> (483)
        on left: 817 818
        on right: 818 820 821
    make_dim_decl <pExpression> (484)
        on left: 819 820 821 822 825 826 829
        on right: 762
    $@98 (485)
        on left: 823
        on right: 825
    $@99 (486)
        on left: 824
        on right: 825
    $@100 (487)
        on left: 827
        on right: 829
    $@101 (488)
        on left: 828
        on right: 829
    make_table <pExpression> (489)
        on left: 830 831
        on right: 831 835
    expr_map_tuple_list <pExpression> (490)
        on left: 832 833
        on right: 833 834 836 837 838
    make_table_decl <pExpression> (491)
        on left: 834 835 836 837 838
        on right: 763
    array_comprehension_where <pExpression> (492)
        on left: 839 840
        on right: 843 844 845 846 847
    optional_comma <b> (493)
        on left: 841 842
        on right: 453 813 819 822 825 826 829 834 836 837 838
    array_comprehension <pExpression> (494)
        on left: 843 844 845 846 847
        on right: 764


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration
    9        | program . options_declaration
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . tuple_alias_declaration
   13        | program . bitfield_alias_declaration
   14        | program . top_level_reader_macro
   15        | program . "end of expression"

    $end                 shift, and go to state 2
    "let"                shift, and go to state 3
    "options"            shift, and go to state 4
    "expect"             shift, and go to state 5
    "require"            shift, and go to state 6
    "typedef"            shift, and go to state 7
    "var"                shift, and go to state 8
    "module"             shift, and go to state 9
    "bitfield"           shift, and go to state 10
    "tuple"              shift, and go to state 11
    "variant"            shift, and go to state 12
    "end of expression"  shift, and go to state 13
    '%'                  shift, and go to state 14
    '['                  shift, and go to state 15

    $default  reduce using rule 117 (optional_annotation_list)

    top_level_reader_macro       go to state 16
    module_declaration           go to state 17
    expr_reader                  go to state 18
    options_declaration          go to state 19
    require_declaration          go to state 20
    expect_declaration           go to state 21
    optional_annotation_list     go to state 22
    global_function_declaration  go to state 23
    kwd_let                      go to state 24
    global_let                   go to state 25
    alias_declaration            go to state 26
    enum_declaration             go to state 27
    structure_declaration        go to state 28
    tuple_alias_declaration      go to state 29
    variant_alias_declaration    go to state 30
    bitfield_alias_declaration   go to state 31


State 2

    0 $accept: program $end .

    $default  accept


State 3

  293 kwd_let: "let" .

    $default  reduce using rule 293 (kwd_let)


State 4

   36 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 37


State 5

   49 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 38

    expect_list   go to state 39
    expect_error  go to state 40


State 6

   37 require_declaration: "require" . require_module

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43
    '%'              shift, and go to state 44

    keyword_or_name      go to state 45
    require_module_name  go to state 46
    require_module       go to state 47


State 7

  596 alias_declaration: "typedef" . "begin of code block" alias_list "end of code block"
  598                  | "typedef" . $@40 single_alias "end of expression"

    "begin of code block"  shift, and go to state 48

    $default  reduce using rule 597 ($@40)

    $@40  go to state 49


State 8

  294 kwd_let: "var" .

    $default  reduce using rule 294 (kwd_let)


State 9

   22 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 50
    '$'     shift, and go to state 51

    module_name  go to state 52


State 10

  760 bitfield_alias_declaration: "bitfield" . optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 589 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 55


State 11

  750 tuple_alias_declaration: "tuple" . optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 589 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 56


State 12

  755 variant_alias_declaration: "variant" . optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 589 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 57


State 13

   15 program: program "end of expression" .

    $default  reduce using rule 15 (program)


State 14

   35 expr_reader: '%' . name_in_namespace $@1 reader_character_sequence

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 60


State 15

  118 optional_annotation_list: '[' . annotation_list ']'

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 68
    annotation_list               go to state 69
    name_in_namespace             go to state 70


State 16

   14 program: program top_level_reader_macro .

    $default  reduce using rule 14 (program)


State 17

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 18

   16 top_level_reader_macro: expr_reader . "end of expression"

    "end of expression"  shift, and go to state 71


State 19

    9 program: program options_declaration .

    $default  reduce using rule 9 (program)


State 20

    8 program: program require_declaration .

    $default  reduce using rule 8 (program)


State 21

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 22

  209 global_function_declaration: optional_annotation_list . "def" function_declaration
  605 enum_declaration: optional_annotation_list . "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list $@42 "end of code block"
  608                 | optional_annotation_list . "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"
  623 structure_declaration: optional_annotation_list . class_or_struct optional_public_or_private_structure $@45 structure_name $@46 optional_struct_variable_declaration_list

    "struct"  shift, and go to state 72
    "class"   shift, and go to state 73
    "def"     shift, and go to state 74
    "enum"    shift, and go to state 75

    class_or_struct  go to state 76


State 23

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 24

  582 global_let: kwd_let . optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"
  584           | kwd_let . optional_shared optional_public_or_private_variable $@38 optional_field_annotation let_variable_declaration

    "shared"  shift, and go to state 77

    $default  reduce using rule 577 (optional_shared)

    optional_shared  go to state 78


State 25

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 26

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 27

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 28

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 29

   12 program: program tuple_alias_declaration .

    $default  reduce using rule 12 (program)


State 30

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 31

   13 program: program bitfield_alias_declaration .

    $default  reduce using rule 13 (program)


State 32

   91 annotation_argument_name: "type" .

    $default  reduce using rule 91 (annotation_argument_name)


State 33

   92 annotation_argument_name: "in" .

    $default  reduce using rule 92 (annotation_argument_name)


State 34

   90 annotation_argument_name: "name" .

    $default  reduce using rule 90 (annotation_argument_name)


State 35

   93 annotation_argument: annotation_argument_name . '=' string_constant
   94                    | annotation_argument_name . '=' "name"
   95                    | annotation_argument_name . '=' "integer constant"
   96                    | annotation_argument_name . '=' "floating point constant"
   97                    | annotation_argument_name . '=' "true"
   98                    | annotation_argument_name . '=' "false"
   99                    | annotation_argument_name .
  100                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 79

    $default  reduce using rule 99 (annotation_argument)


State 36

  101 annotation_argument_list: annotation_argument .

    $default  reduce using rule 101 (annotation_argument_list)


State 37

   36 options_declaration: "options" annotation_argument_list .
  102 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 80

    $default  reduce using rule 36 (options_declaration)


State 38

   52 expect_error: "integer constant" .
   53             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 81

    $default  reduce using rule 52 (expect_error)


State 39

   49 expect_declaration: "expect" expect_list .
   51 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 82

    $default  reduce using rule 49 (expect_declaration)


State 40

   50 expect_list: expect_error .

    $default  reduce using rule 50 (expect_list)


State 41

   38 keyword_or_name: "name" .

    $default  reduce using rule 38 (keyword_or_name)


State 42

   39 keyword_or_name: "keyword" .

    $default  reduce using rule 39 (keyword_or_name)


State 43

   40 keyword_or_name: "type function" .

    $default  reduce using rule 40 (keyword_or_name)


State 44

   42 require_module_name: '%' . require_module_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43
    '%'              shift, and go to state 44

    keyword_or_name      go to state 45
    require_module_name  go to state 83


State 45

   41 require_module_name: keyword_or_name .

    $default  reduce using rule 41 (require_module_name)


State 46

   43 require_module_name: require_module_name . '.' keyword_or_name
   44                    | require_module_name . '/' keyword_or_name
   45 require_module: require_module_name . is_public_module
   46               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 84
    "public"  shift, and go to state 85
    '/'       shift, and go to state 86
    '.'       shift, and go to state 87

    $default  reduce using rule 47 (is_public_module)

    is_public_module  go to state 88


State 47

   37 require_declaration: "require" require_module .

    $default  reduce using rule 37 (require_declaration)


State 48

  596 alias_declaration: "typedef" "begin of code block" . alias_list "end of code block"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 589 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 89
    single_alias                      go to state 90
    alias_list                        go to state 91


State 49

  598 alias_declaration: "typedef" $@40 . single_alias "end of expression"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 589 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 89
    single_alias                      go to state 92


State 50

   21 module_name: "name" .

    $default  reduce using rule 21 (module_name)


State 51

   20 module_name: '$' .

    $default  reduce using rule 20 (module_name)


State 52

   22 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 77

    $default  reduce using rule 577 (optional_shared)

    optional_shared  go to state 93


State 53

  591 optional_public_or_private_alias: "public" .

    $default  reduce using rule 591 (optional_public_or_private_alias)


State 54

  590 optional_public_or_private_alias: "private" .

    $default  reduce using rule 590 (optional_public_or_private_alias)


State 55

  760 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias . $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

    $default  reduce using rule 756 ($@84)

    $@84  go to state 94


State 56

  750 tuple_alias_declaration: "tuple" optional_public_or_private_alias . $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

    $default  reduce using rule 746 ($@76)

    $@76  go to state 95


State 57

  755 variant_alias_declaration: "variant" optional_public_or_private_alias . $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

    $default  reduce using rule 751 ($@80)

    $@80  go to state 96


State 58

  264 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 97


State 59

  262 name_in_namespace: "name" .
  263                  | "name" . "::" "name"

    "::"  shift, and go to state 98

    "::"      [reduce using rule 262 (name_in_namespace)]
    $default  reduce using rule 262 (name_in_namespace)


State 60

   35 expr_reader: '%' name_in_namespace . $@1 reader_character_sequence

    $default  reduce using rule 34 ($@1)

    $@1  go to state 99


State 61

  104 annotation_declaration_name: "require" .

    $default  reduce using rule 104 (annotation_declaration_name)


State 62

  105 annotation_declaration_name: "private" .

    $default  reduce using rule 105 (annotation_declaration_name)


State 63

  114 annotation_declaration: "|>" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 100
    name_in_namespace             go to state 70


State 64

  109 annotation_declaration: '!' . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 101
    name_in_namespace             go to state 70


State 65

  113 annotation_declaration: '(' . annotation_declaration ')'

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 102
    name_in_namespace             go to state 70


State 66

  106 annotation_declaration_basic: annotation_declaration_name .
  107                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 103

    $default  reduce using rule 106 (annotation_declaration_basic)


State 67

  108 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 108 (annotation_declaration)


State 68

  110 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  111                       | annotation_declaration . "||" annotation_declaration
  112                       | annotation_declaration . "^^" annotation_declaration
  115 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 104
    "||"  shift, and go to state 105
    "^^"  shift, and go to state 106

    $default  reduce using rule 115 (annotation_list)


State 69

  116 annotation_list: annotation_list . ',' annotation_declaration
  118 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 107
    ']'  shift, and go to state 108


State 70

  103 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 103 (annotation_declaration_name)


State 71

   16 top_level_reader_macro: expr_reader "end of expression" .

    $default  reduce using rule 16 (top_level_reader_macro)


State 72

  615 class_or_struct: "struct" .

    $default  reduce using rule 615 (class_or_struct)


State 73

  614 class_or_struct: "class" .

    $default  reduce using rule 614 (class_or_struct)


State 74

  209 global_function_declaration: optional_annotation_list "def" . function_declaration

    "public"   shift, and go to state 109
    "private"  shift, and go to state 110

    $default  reduce using rule 210 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 111
    function_declaration                 go to state 112


State 75

  605 enum_declaration: optional_annotation_list "enum" . optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list $@42 "end of code block"
  608                 | optional_annotation_list "enum" . optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"

    "public"   shift, and go to state 113
    "private"  shift, and go to state 114

    $default  reduce using rule 599 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 115


State 76

  623 structure_declaration: optional_annotation_list class_or_struct . optional_public_or_private_structure $@45 structure_name $@46 optional_struct_variable_declaration_list

    "public"   shift, and go to state 116
    "private"  shift, and go to state 117

    $default  reduce using rule 616 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 118


State 77

  578 optional_shared: "shared" .

    $default  reduce using rule 578 (optional_shared)


State 78

  582 global_let: kwd_let optional_shared . optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"
  584           | kwd_let optional_shared . optional_public_or_private_variable $@38 optional_field_annotation let_variable_declaration

    "public"   shift, and go to state 119
    "private"  shift, and go to state 120

    $default  reduce using rule 579 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 121


State 79

   93 annotation_argument: annotation_argument_name '=' . string_constant
   94                    | annotation_argument_name '=' . "name"
   95                    | annotation_argument_name '=' . "integer constant"
   96                    | annotation_argument_name '=' . "floating point constant"
   97                    | annotation_argument_name '=' . "true"
   98                    | annotation_argument_name '=' . "false"
  100                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 122
    "false"                    shift, and go to state 123
    "integer constant"         shift, and go to state 124
    "floating point constant"  shift, and go to state 125
    "name"                     shift, and go to state 126
    "start of the string"      shift, and go to state 127
    '('                        shift, and go to state 128

    string_constant  go to state 129


State 80

  102 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 130


State 81

   53 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 131


State 82

   51 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 38

    expect_error  go to state 132


State 83

   42 require_module_name: '%' require_module_name .
   43                    | require_module_name . '.' keyword_or_name
   44                    | require_module_name . '/' keyword_or_name

    '.'  shift, and go to state 87

    $default  reduce using rule 42 (require_module_name)


State 84

   46 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 133


State 85

   48 is_public_module: "public" .

    $default  reduce using rule 48 (is_public_module)


State 86

   44 require_module_name: require_module_name '/' . keyword_or_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43

    keyword_or_name  go to state 134


State 87

   43 require_module_name: require_module_name '.' . keyword_or_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43

    keyword_or_name  go to state 135


State 88

   45 require_module: require_module_name is_public_module .

    $default  reduce using rule 45 (require_module)


State 89

  593 single_alias: optional_public_or_private_alias . "name" $@39 '=' type_declaration

    "name"  shift, and go to state 136


State 90

  594 alias_list: single_alias . "end of expression"

    "end of expression"  shift, and go to state 137


State 91

  595 alias_list: alias_list . single_alias "end of expression"
  596 alias_declaration: "typedef" "begin of code block" alias_list . "end of code block"

    "public"             shift, and go to state 53
    "private"            shift, and go to state 54
    "end of code block"  shift, and go to state 138

    $default  reduce using rule 589 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 89
    single_alias                      go to state 139


State 92

  598 alias_declaration: "typedef" $@40 single_alias . "end of expression"

    "end of expression"  shift, and go to state 140


State 93

   22 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 141
    "private"  shift, and go to state 142

    $default  reduce using rule 17 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 143


State 94

  760 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 . "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

    "name"  shift, and go to state 144


State 95

  750 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 . "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

    "name"  shift, and go to state 145


State 96

  755 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 . "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

    "name"  shift, and go to state 146


State 97

  264 name_in_namespace: "::" "name" .

    $default  reduce using rule 264 (name_in_namespace)


State 98

  263 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 147


State 99

   35 expr_reader: '%' name_in_namespace $@1 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 148

    reader_character_sequence  go to state 149


State 100

  110 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  111                       | annotation_declaration . "||" annotation_declaration
  112                       | annotation_declaration . "^^" annotation_declaration
  114                       | "|>" annotation_declaration .

    $default  reduce using rule 114 (annotation_declaration)


State 101

  109 annotation_declaration: '!' annotation_declaration .
  110                       | annotation_declaration . "&&" annotation_declaration
  111                       | annotation_declaration . "||" annotation_declaration
  112                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 109 (annotation_declaration)


State 102

  110 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  111                       | annotation_declaration . "||" annotation_declaration
  112                       | annotation_declaration . "^^" annotation_declaration
  113                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 104
    "||"  shift, and go to state 105
    "^^"  shift, and go to state 106
    ')'   shift, and go to state 150


State 103

  107 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 151


State 104

  110 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 152
    name_in_namespace             go to state 70


State 105

  111 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 153
    name_in_namespace             go to state 70


State 106

  112 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 154
    name_in_namespace             go to state 70


State 107

  116 annotation_list: annotation_list ',' . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 155
    name_in_namespace             go to state 70


State 108

  118 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 118 (optional_annotation_list)


State 109

  212 optional_public_or_private_function: "public" .

    $default  reduce using rule 212 (optional_public_or_private_function)


State 110

  211 optional_public_or_private_function: "private" .

    $default  reduce using rule 211 (optional_public_or_private_function)


State 111

  215 function_declaration: optional_public_or_private_function . $@6 function_declaration_header expression_block

    $default  reduce using rule 214 ($@6)

    $@6  go to state 156


State 112

  209 global_function_declaration: optional_annotation_list "def" function_declaration .

    $default  reduce using rule 209 (global_function_declaration)


State 113

  601 optional_public_or_private_enum: "public" .

    $default  reduce using rule 601 (optional_public_or_private_enum)


State 114

  600 optional_public_or_private_enum: "private" .

    $default  reduce using rule 600 (optional_public_or_private_enum)


State 115

  605 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum . enum_name "begin of code block" $@41 enum_list $@42 "end of code block"
  608                 | optional_annotation_list "enum" optional_public_or_private_enum . enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"

    "name"  shift, and go to state 157

    enum_name  go to state 158


State 116

  618 optional_public_or_private_structure: "public" .

    $default  reduce using rule 618 (optional_public_or_private_structure)


State 117

  617 optional_public_or_private_structure: "private" .

    $default  reduce using rule 617 (optional_public_or_private_structure)


State 118

  623 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure . $@45 structure_name $@46 optional_struct_variable_declaration_list

    $default  reduce using rule 621 ($@45)

    $@45  go to state 159


State 119

  581 optional_public_or_private_variable: "public" .

    $default  reduce using rule 581 (optional_public_or_private_variable)


State 120

  580 optional_public_or_private_variable: "private" .

    $default  reduce using rule 580 (optional_public_or_private_variable)


State 121

  582 global_let: kwd_let optional_shared optional_public_or_private_variable . "begin of code block" global_variable_declaration_list "end of code block"
  584           | kwd_let optional_shared optional_public_or_private_variable . $@38 optional_field_annotation let_variable_declaration

    "begin of code block"  shift, and go to state 160

    $default  reduce using rule 583 ($@38)

    $@38  go to state 161


State 122

   97 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 97 (annotation_argument)


State 123

   98 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 98 (annotation_argument)


State 124

   95 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 95 (annotation_argument)


State 125

   96 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 96 (annotation_argument)


State 126

   94 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 94 (annotation_argument)


State 127

   27 string_constant: "start of the string" . character_sequence "end of the string"

    STRING_CHARACTER      shift, and go to state 162
    STRING_CHARACTER_ESC  shift, and go to state 163

    character_sequence  go to state 164


State 128

  100 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 165
    "false"                    shift, and go to state 166
    "integer constant"         shift, and go to state 167
    "floating point constant"  shift, and go to state 168
    "name"                     shift, and go to state 169
    "start of the string"      shift, and go to state 127

    string_constant                 go to state 170
    annotation_argument_value       go to state 171
    annotation_argument_value_list  go to state 172


State 129

   93 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 93 (annotation_argument)


State 130

  102 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 102 (annotation_argument_list)


State 131

   53 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 53 (expect_error)


State 132

   51 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 51 (expect_list)


State 133

   46 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 85

    $default  reduce using rule 47 (is_public_module)

    is_public_module  go to state 173


State 134

   44 require_module_name: require_module_name '/' keyword_or_name .

    $default  reduce using rule 44 (require_module_name)


State 135

   43 require_module_name: require_module_name '.' keyword_or_name .

    $default  reduce using rule 43 (require_module_name)


State 136

  593 single_alias: optional_public_or_private_alias "name" . $@39 '=' type_declaration

    $default  reduce using rule 592 ($@39)

    $@39  go to state 174


State 137

  594 alias_list: single_alias "end of expression" .

    $default  reduce using rule 594 (alias_list)


State 138

  596 alias_declaration: "typedef" "begin of code block" alias_list "end of code block" .

    $default  reduce using rule 596 (alias_declaration)


State 139

  595 alias_list: alias_list single_alias . "end of expression"

    "end of expression"  shift, and go to state 175


State 140

  598 alias_declaration: "typedef" $@40 single_alias "end of expression" .

    $default  reduce using rule 598 (alias_declaration)


State 141

   18 optional_public_or_private_module: "public" .

    $default  reduce using rule 18 (optional_public_or_private_module)


State 142

   19 optional_public_or_private_module: "private" .

    $default  reduce using rule 19 (optional_public_or_private_module)


State 143

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 22 (module_declaration)


State 144

  760 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" . $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

    $default  reduce using rule 757 ($@85)

    $@85  go to state 176


State 145

  750 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" . $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

    $default  reduce using rule 747 ($@77)

    $@77  go to state 177


State 146

  755 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" . $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

    $default  reduce using rule 752 ($@81)

    $@81  go to state 178


State 147

  263 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 263 (name_in_namespace)


State 148

   32 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 32 (reader_character_sequence)


State 149

   33 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   35 expr_reader: '%' name_in_namespace $@1 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 179

    $default  reduce using rule 35 (expr_reader)


State 150

  113 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 113 (annotation_declaration)


State 151

  102 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  107 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 80
    ')'  shift, and go to state 180


State 152

  110 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  110                       | annotation_declaration "&&" annotation_declaration .
  111                       | annotation_declaration . "||" annotation_declaration
  112                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 110 (annotation_declaration)


State 153

  110 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  111                       | annotation_declaration . "||" annotation_declaration
  111                       | annotation_declaration "||" annotation_declaration .
  112                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 104
    "^^"  shift, and go to state 106

    $default  reduce using rule 111 (annotation_declaration)


State 154

  110 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  111                       | annotation_declaration . "||" annotation_declaration
  112                       | annotation_declaration . "^^" annotation_declaration
  112                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 104

    $default  reduce using rule 112 (annotation_declaration)


State 155

  110 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  111                       | annotation_declaration . "||" annotation_declaration
  112                       | annotation_declaration . "^^" annotation_declaration
  116 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 104
    "||"  shift, and go to state 105
    "^^"  shift, and go to state 106

    $default  reduce using rule 116 (annotation_list)


State 156

  215 function_declaration: optional_public_or_private_function $@6 . function_declaration_header expression_block

    "operator"  shift, and go to state 181
    "bool"      shift, and go to state 182
    "string"    shift, and go to state 183
    "int"       shift, and go to state 184
    "int2"      shift, and go to state 185
    "int3"      shift, and go to state 186
    "int4"      shift, and go to state 187
    "uint"      shift, and go to state 188
    "uint2"     shift, and go to state 189
    "uint3"     shift, and go to state 190
    "uint4"     shift, and go to state 191
    "float"     shift, and go to state 192
    "float2"    shift, and go to state 193
    "float3"    shift, and go to state 194
    "float4"    shift, and go to state 195
    "range"     shift, and go to state 196
    "urange"    shift, and go to state 197
    "range64"   shift, and go to state 198
    "urange64"  shift, and go to state 199
    "int64"     shift, and go to state 200
    "uint64"    shift, and go to state 201
    "double"    shift, and go to state 202
    "int8"      shift, and go to state 203
    "uint8"     shift, and go to state 204
    "int16"     shift, and go to state 205
    "uint16"    shift, and go to state 206
    "++"        shift, and go to state 207
    "--"        shift, and go to state 208
    "name"      shift, and go to state 209

    function_name                go to state 210
    function_declaration_header  go to state 211


State 157

  602 enum_name: "name" .

    $default  reduce using rule 602 (enum_name)


State 158

  605 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name . "begin of code block" $@41 enum_list $@42 "end of code block"
  608                 | optional_annotation_list "enum" optional_public_or_private_enum enum_name . ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"

    "begin of code block"  shift, and go to state 212
    ':'                    shift, and go to state 213


State 159

  623 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 . structure_name $@46 optional_struct_variable_declaration_list

    "sealed"  shift, and go to state 214

    $default  reduce using rule 611 (optional_sealed)

    optional_sealed  go to state 215
    structure_name   go to state 216


State 160

  582 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" . global_variable_declaration_list "end of code block"

    $default  reduce using rule 574 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 217


State 161

  584 global_let: kwd_let optional_shared optional_public_or_private_variable $@38 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 218

    $default  reduce using rule 513 (optional_field_annotation)

    optional_field_annotation  go to state 219


State 162

   23 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 23 (character_sequence)


State 163

   24 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 24 (character_sequence)


State 164

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   27 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 220
    STRING_CHARACTER_ESC  shift, and go to state 221
    "end of the string"   shift, and go to state 222


State 165

   86 annotation_argument_value: "true" .

    $default  reduce using rule 86 (annotation_argument_value)


State 166

   87 annotation_argument_value: "false" .

    $default  reduce using rule 87 (annotation_argument_value)


State 167

   84 annotation_argument_value: "integer constant" .

    $default  reduce using rule 84 (annotation_argument_value)


State 168

   85 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 85 (annotation_argument_value)


State 169

   83 annotation_argument_value: "name" .

    $default  reduce using rule 83 (annotation_argument_value)


State 170

   82 annotation_argument_value: string_constant .

    $default  reduce using rule 82 (annotation_argument_value)


State 171

   88 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 88 (annotation_argument_value_list)


State 172

   89 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
  100 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 223
    ')'  shift, and go to state 224


State 173

   46 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 46 (require_module)


State 174

  593 single_alias: optional_public_or_private_alias "name" $@39 . '=' type_declaration

    '='  shift, and go to state 225


State 175

  595 alias_list: alias_list single_alias "end of expression" .

    $default  reduce using rule 595 (alias_list)


State 176

  760 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 . "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

    "begin of code block"  shift, and go to state 226


State 177

  750 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 . "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

    "begin of code block"  shift, and go to state 227


State 178

  755 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 . "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

    "begin of code block"  shift, and go to state 228


State 179

   33 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 33 (reader_character_sequence)


State 180

  107 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 107 (annotation_declaration_basic)


State 181

  125 function_name: "operator" . '!'
  126              | "operator" . '~'
  127              | "operator" . "+="
  128              | "operator" . "-="
  129              | "operator" . "*="
  130              | "operator" . "/="
  131              | "operator" . "%="
  132              | "operator" . "&="
  133              | "operator" . "|="
  134              | "operator" . "^="
  135              | "operator" . "&&="
  136              | "operator" . "||="
  137              | "operator" . "^^="
  138              | "operator" . "&&"
  139              | "operator" . "||"
  140              | "operator" . "^^"
  141              | "operator" . '+'
  142              | "operator" . '-'
  143              | "operator" . '*'
  144              | "operator" . '/'
  145              | "operator" . '%'
  146              | "operator" . '<'
  147              | "operator" . '>'
  148              | "operator" . ".."
  149              | "operator" . "=="
  150              | "operator" . "!="
  151              | "operator" . "<="
  152              | "operator" . ">="
  153              | "operator" . '&'
  154              | "operator" . '|'
  155              | "operator" . '^'
  158              | "operator" . "++"
  159              | "operator" . "--"
  160              | "operator" . "<<"
  161              | "operator" . ">>"
  162              | "operator" . "<<="
  163              | "operator" . ">>="
  164              | "operator" . "<<<"
  165              | "operator" . ">>>"
  166              | "operator" . "<<<="
  167              | "operator" . ">>>="
  168              | "operator" . '[' ']'
  169              | "operator" . "?[" ']'
  170              | "operator" . '.'
  171              | "operator" . "?."
  172              | "operator" . '.' "name"
  173              | "operator" . '.' "name" ":="
  174              | "operator" . "?." "name"
  175              | "operator" . ":="
  176              | "operator" . "delete"
  177              | "operator" . "??"
  178              | "operator" . "is"
  179              | "operator" . "as"
  180              | "operator" . "is" "name"
  181              | "operator" . "as" "name"
  182              | "operator" . '?' "as"
  183              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 229
    "as"      shift, and go to state 230
    "delete"  shift, and go to state 231
    "+="      shift, and go to state 232
    "-="      shift, and go to state 233
    "/="      shift, and go to state 234
    "*="      shift, and go to state 235
    "%="      shift, and go to state 236
    "&="      shift, and go to state 237
    "|="      shift, and go to state 238
    "^="      shift, and go to state 239
    "<<"      shift, and go to state 240
    ">>"      shift, and go to state 241
    "++"      shift, and go to state 242
    "--"      shift, and go to state 243
    "<="      shift, and go to state 244
    "<<="     shift, and go to state 245
    ">>="     shift, and go to state 246
    ">="      shift, and go to state 247
    "=="      shift, and go to state 248
    "!="      shift, and go to state 249
    "??"      shift, and go to state 250
    "?."      shift, and go to state 251
    "?["      shift, and go to state 252
    ":="      shift, and go to state 253
    "<<<"     shift, and go to state 254
    ">>>"     shift, and go to state 255
    "<<<="    shift, and go to state 256
    ">>>="    shift, and go to state 257
    "&&"      shift, and go to state 258
    "||"      shift, and go to state 259
    "^^"      shift, and go to state 260
    "&&="     shift, and go to state 261
    "||="     shift, and go to state 262
    "^^="     shift, and go to state 263
    ".."      shift, and go to state 264
    '?'       shift, and go to state 265
    '|'       shift, and go to state 266
    '^'       shift, and go to state 267
    '&'       shift, and go to state 268
    '<'       shift, and go to state 269
    '>'       shift, and go to state 270
    '-'       shift, and go to state 271
    '+'       shift, and go to state 272
    '*'       shift, and go to state 273
    '/'       shift, and go to state 274
    '%'       shift, and go to state 275
    '~'       shift, and go to state 276
    '!'       shift, and go to state 277
    '.'       shift, and go to state 278
    '['       shift, and go to state 279


State 182

  184 function_name: "bool" .

    $default  reduce using rule 184 (function_name)


State 183

  185 function_name: "string" .

    $default  reduce using rule 185 (function_name)


State 184

  186 function_name: "int" .

    $default  reduce using rule 186 (function_name)


State 185

  187 function_name: "int2" .

    $default  reduce using rule 187 (function_name)


State 186

  188 function_name: "int3" .

    $default  reduce using rule 188 (function_name)


State 187

  189 function_name: "int4" .

    $default  reduce using rule 189 (function_name)


State 188

  190 function_name: "uint" .

    $default  reduce using rule 190 (function_name)


State 189

  191 function_name: "uint2" .

    $default  reduce using rule 191 (function_name)


State 190

  192 function_name: "uint3" .

    $default  reduce using rule 192 (function_name)


State 191

  193 function_name: "uint4" .

    $default  reduce using rule 193 (function_name)


State 192

  194 function_name: "float" .

    $default  reduce using rule 194 (function_name)


State 193

  195 function_name: "float2" .

    $default  reduce using rule 195 (function_name)


State 194

  196 function_name: "float3" .

    $default  reduce using rule 196 (function_name)


State 195

  197 function_name: "float4" .

    $default  reduce using rule 197 (function_name)


State 196

  198 function_name: "range" .

    $default  reduce using rule 198 (function_name)


State 197

  199 function_name: "urange" .

    $default  reduce using rule 199 (function_name)


State 198

  200 function_name: "range64" .

    $default  reduce using rule 200 (function_name)


State 199

  201 function_name: "urange64" .

    $default  reduce using rule 201 (function_name)


State 200

  202 function_name: "int64" .

    $default  reduce using rule 202 (function_name)


State 201

  203 function_name: "uint64" .

    $default  reduce using rule 203 (function_name)


State 202

  204 function_name: "double" .

    $default  reduce using rule 204 (function_name)


State 203

  205 function_name: "int8" .

    $default  reduce using rule 205 (function_name)


State 204

  206 function_name: "uint8" .

    $default  reduce using rule 206 (function_name)


State 205

  207 function_name: "int16" .

    $default  reduce using rule 207 (function_name)


State 206

  208 function_name: "uint16" .

    $default  reduce using rule 208 (function_name)


State 207

  156 function_name: "++" . "operator"

    "operator"  shift, and go to state 280


State 208

  157 function_name: "--" . "operator"

    "operator"  shift, and go to state 281


State 209

  124 function_name: "name" .

    $default  reduce using rule 124 (function_name)


State 210

  213 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 282

    $default  reduce using rule 119 (optional_function_argument_list)

    optional_function_argument_list  go to state 283


State 211

  215 function_declaration: optional_public_or_private_function $@6 function_declaration_header . expression_block

    "begin of code block"  shift, and go to state 284

    expression_block  go to state 285


State 212

  605 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" . $@41 enum_list $@42 "end of code block"

    $default  reduce using rule 603 ($@41)

    $@41  go to state 286


State 213

  608 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' . enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"

    "int"     shift, and go to state 287
    "uint"    shift, and go to state 288
    "int8"    shift, and go to state 289
    "uint8"   shift, and go to state 290
    "int16"   shift, and go to state 291
    "uint16"  shift, and go to state 292

    enum_basic_type_declaration  go to state 293


State 214

  612 optional_sealed: "sealed" .

    $default  reduce using rule 612 (optional_sealed)


State 215

  613 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 294


State 216

  623 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 structure_name . $@46 optional_struct_variable_declaration_list

    $default  reduce using rule 622 ($@46)

    $@46  go to state 295


State 217

  576 global_variable_declaration_list: global_variable_declaration_list . $@37 optional_field_annotation let_variable_declaration
  582 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list . "end of code block"

    "end of code block"  shift, and go to state 296

    $default  reduce using rule 575 ($@37)

    $@37  go to state 297


State 218

  514 optional_field_annotation: "[[" . annotation_argument_list ']' ']'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 298


State 219

  584 global_let: kwd_let optional_shared optional_public_or_private_variable $@38 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 299
    "name"  shift, and go to state 300

    let_variable_name_with_pos_list  go to state 301
    let_variable_declaration         go to state 302


State 220

   25 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 25 (character_sequence)


State 221

   26 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 26 (character_sequence)


State 222

   27 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 27 (string_constant)


State 223

   89 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 165
    "false"                    shift, and go to state 166
    "integer constant"         shift, and go to state 167
    "floating point constant"  shift, and go to state 168
    "name"                     shift, and go to state 169
    "start of the string"      shift, and go to state 127

    string_constant            go to state 170
    annotation_argument_value  go to state 303


State 224

  100 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 100 (annotation_argument)


State 225

  593 single_alias: optional_public_or_private_alias "name" $@39 '=' . type_declaration

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 351


State 226

  760 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" . $@86 bitfield_alias_bits $@87 "end of code block"

    $default  reduce using rule 758 ($@86)

    $@86  go to state 352


State 227

  750 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" . $@78 tuple_alias_type_list $@79 "end of code block"

    $default  reduce using rule 748 ($@78)

    $@78  go to state 353


State 228

  755 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" . $@82 variant_alias_type_list $@83 "end of code block"

    $default  reduce using rule 753 ($@82)

    $@82  go to state 354


State 229

  178 function_name: "operator" "is" .
  180              | "operator" "is" . "name"

    "name"  shift, and go to state 355

    $default  reduce using rule 178 (function_name)


State 230

  179 function_name: "operator" "as" .
  181              | "operator" "as" . "name"

    "name"  shift, and go to state 356

    $default  reduce using rule 179 (function_name)


State 231

  176 function_name: "operator" "delete" .

    $default  reduce using rule 176 (function_name)


State 232

  127 function_name: "operator" "+=" .

    $default  reduce using rule 127 (function_name)


State 233

  128 function_name: "operator" "-=" .

    $default  reduce using rule 128 (function_name)


State 234

  130 function_name: "operator" "/=" .

    $default  reduce using rule 130 (function_name)


State 235

  129 function_name: "operator" "*=" .

    $default  reduce using rule 129 (function_name)


State 236

  131 function_name: "operator" "%=" .

    $default  reduce using rule 131 (function_name)


State 237

  132 function_name: "operator" "&=" .

    $default  reduce using rule 132 (function_name)


State 238

  133 function_name: "operator" "|=" .

    $default  reduce using rule 133 (function_name)


State 239

  134 function_name: "operator" "^=" .

    $default  reduce using rule 134 (function_name)


State 240

  160 function_name: "operator" "<<" .

    $default  reduce using rule 160 (function_name)


State 241

  161 function_name: "operator" ">>" .

    $default  reduce using rule 161 (function_name)


State 242

  158 function_name: "operator" "++" .

    $default  reduce using rule 158 (function_name)


State 243

  159 function_name: "operator" "--" .

    $default  reduce using rule 159 (function_name)


State 244

  151 function_name: "operator" "<=" .

    $default  reduce using rule 151 (function_name)


State 245

  162 function_name: "operator" "<<=" .

    $default  reduce using rule 162 (function_name)


State 246

  163 function_name: "operator" ">>=" .

    $default  reduce using rule 163 (function_name)


State 247

  152 function_name: "operator" ">=" .

    $default  reduce using rule 152 (function_name)


State 248

  149 function_name: "operator" "==" .

    $default  reduce using rule 149 (function_name)


State 249

  150 function_name: "operator" "!=" .

    $default  reduce using rule 150 (function_name)


State 250

  177 function_name: "operator" "??" .

    $default  reduce using rule 177 (function_name)


State 251

  171 function_name: "operator" "?." .
  174              | "operator" "?." . "name"

    "name"  shift, and go to state 357

    $default  reduce using rule 171 (function_name)


State 252

  169 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 358


State 253

  175 function_name: "operator" ":=" .

    $default  reduce using rule 175 (function_name)


State 254

  164 function_name: "operator" "<<<" .

    $default  reduce using rule 164 (function_name)


State 255

  165 function_name: "operator" ">>>" .

    $default  reduce using rule 165 (function_name)


State 256

  166 function_name: "operator" "<<<=" .

    $default  reduce using rule 166 (function_name)


State 257

  167 function_name: "operator" ">>>=" .

    $default  reduce using rule 167 (function_name)


State 258

  138 function_name: "operator" "&&" .

    $default  reduce using rule 138 (function_name)


State 259

  139 function_name: "operator" "||" .

    $default  reduce using rule 139 (function_name)


State 260

  140 function_name: "operator" "^^" .

    $default  reduce using rule 140 (function_name)


State 261

  135 function_name: "operator" "&&=" .

    $default  reduce using rule 135 (function_name)


State 262

  136 function_name: "operator" "||=" .

    $default  reduce using rule 136 (function_name)


State 263

  137 function_name: "operator" "^^=" .

    $default  reduce using rule 137 (function_name)


State 264

  148 function_name: "operator" ".." .

    $default  reduce using rule 148 (function_name)


State 265

  182 function_name: "operator" '?' . "as"
  183              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 359


State 266

  154 function_name: "operator" '|' .

    $default  reduce using rule 154 (function_name)


State 267

  155 function_name: "operator" '^' .

    $default  reduce using rule 155 (function_name)


State 268

  153 function_name: "operator" '&' .

    $default  reduce using rule 153 (function_name)


State 269

  146 function_name: "operator" '<' .

    $default  reduce using rule 146 (function_name)


State 270

  147 function_name: "operator" '>' .

    $default  reduce using rule 147 (function_name)


State 271

  142 function_name: "operator" '-' .

    $default  reduce using rule 142 (function_name)


State 272

  141 function_name: "operator" '+' .

    $default  reduce using rule 141 (function_name)


State 273

  143 function_name: "operator" '*' .

    $default  reduce using rule 143 (function_name)


State 274

  144 function_name: "operator" '/' .

    $default  reduce using rule 144 (function_name)


State 275

  145 function_name: "operator" '%' .

    $default  reduce using rule 145 (function_name)


State 276

  126 function_name: "operator" '~' .

    $default  reduce using rule 126 (function_name)


State 277

  125 function_name: "operator" '!' .

    $default  reduce using rule 125 (function_name)


State 278

  170 function_name: "operator" '.' .
  172              | "operator" '.' . "name"
  173              | "operator" '.' . "name" ":="

    "name"  shift, and go to state 360

    $default  reduce using rule 170 (function_name)


State 279

  168 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 361


State 280

  156 function_name: "++" "operator" .

    $default  reduce using rule 156 (function_name)


State 281

  157 function_name: "--" "operator" .

    $default  reduce using rule 157 (function_name)


State 282

  120 optional_function_argument_list: '(' . ')'
  121                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 362
    "[["  shift, and go to state 218
    ')'   shift, and go to state 363

    $default  reduce using rule 513 (optional_field_annotation)

    optional_field_annotation      go to state 364
    function_argument_declaration  go to state 365
    function_argument_list         go to state 366


State 283

  213 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 367

    $default  reduce using rule 122 (optional_function_type)

    optional_function_type  go to state 368


State 284

  216 expression_block: "begin of code block" . expressions "end of code block"
  217                 | "begin of code block" . expressions "end of code block" "finally" "begin of code block" expressions "end of code block"

    $default  reduce using rule 241 (expressions)

    expressions  go to state 369


State 285

  215 function_declaration: optional_public_or_private_function $@6 function_declaration_header expression_block .

    $default  reduce using rule 215 (function_declaration)


State 286

  605 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 . enum_list $@42 "end of code block"

    $default  reduce using rule 585 (enum_list)

    enum_list  go to state 370


State 287

  656 enum_basic_type_declaration: "int" .

    $default  reduce using rule 656 (enum_basic_type_declaration)


State 288

  659 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 659 (enum_basic_type_declaration)


State 289

  657 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 657 (enum_basic_type_declaration)


State 290

  660 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 660 (enum_basic_type_declaration)


State 291

  658 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 658 (enum_basic_type_declaration)


State 292

  661 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 661 (enum_basic_type_declaration)


State 293

  608 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration . "begin of code block" $@43 enum_list $@44 "end of code block"

    "begin of code block"  shift, and go to state 371


State 294

  613 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 372

    $default  reduce using rule 609 (optional_structure_parent)

    optional_structure_parent  go to state 373


State 295

  623 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 structure_name $@46 . optional_struct_variable_declaration_list

    "begin of code block"  shift, and go to state 374

    $default  reduce using rule 619 (optional_struct_variable_declaration_list)

    optional_struct_variable_declaration_list  go to state 375


State 296

  582 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block" .

    $default  reduce using rule 582 (global_let)


State 297

  576 global_variable_declaration_list: global_variable_declaration_list $@37 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 218

    $default  reduce using rule 513 (optional_field_annotation)

    optional_field_annotation  go to state 376


State 298

  102 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  514 optional_field_annotation: "[[" annotation_argument_list . ']' ']'

    ','  shift, and go to state 80
    ']'  shift, and go to state 377


State 299

  565 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 378


State 300

  564 let_variable_name_with_pos_list: "name" .
  566                                | "name" . "aka" "name"

    "aka"  shift, and go to state 379

    $default  reduce using rule 564 (let_variable_name_with_pos_list)


State 301

  567 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  568                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  569 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options "end of expression"
  570                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  571                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  572                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr "end of expression"
  573                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 380
    ':'  shift, and go to state 381
    '&'  shift, and go to state 382

    $default  reduce using rule 562 (optional_ref)

    optional_ref  go to state 383


State 302

  584 global_let: kwd_let optional_shared optional_public_or_private_variable $@38 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 584 (global_let)


State 303

   89 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 89 (annotation_argument_value_list)


State 304

  686 type_declaration_no_options: "type" . '<' $@49 type_declaration '>' $@50

    '<'  shift, and go to state 384


State 305

  709 type_declaration_no_options: "array" . '<' $@54 type_declaration '>' $@55

    '<'  shift, and go to state 385


State 306

  712 type_declaration_no_options: "table" . '<' $@56 table_type_pair '>' $@57

    '<'  shift, and go to state 386


State 307

  687 type_declaration_no_options: "typedecl" . '(' expr ')'

    '('  shift, and go to state 387


State 308

  715 type_declaration_no_options: "iterator" . '<' $@58 type_declaration '>' $@59

    '<'  shift, and go to state 388


State 309

  705 type_declaration_no_options: "smart_ptr" . '<' $@52 type_declaration '>' $@53

    '<'  shift, and go to state 389


State 310

  629 basic_type_declaration: "bool" .

    $default  reduce using rule 629 (basic_type_declaration)


State 311

  649 basic_type_declaration: "void" .

    $default  reduce using rule 649 (basic_type_declaration)


State 312

  630 basic_type_declaration: "string" .

    $default  reduce using rule 630 (basic_type_declaration)


State 313

  663 auto_type_declaration: "auto" .
  664                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 390

    '('       [reduce using rule 663 (auto_type_declaration)]
    $default  reduce using rule 663 (auto_type_declaration)


State 314

  631 basic_type_declaration: "int" .

    $default  reduce using rule 631 (basic_type_declaration)


State 315

  635 basic_type_declaration: "int2" .

    $default  reduce using rule 635 (basic_type_declaration)


State 316

  636 basic_type_declaration: "int3" .

    $default  reduce using rule 636 (basic_type_declaration)


State 317

  637 basic_type_declaration: "int4" .

    $default  reduce using rule 637 (basic_type_declaration)


State 318

  638 basic_type_declaration: "uint" .

    $default  reduce using rule 638 (basic_type_declaration)


State 319

  655 basic_type_declaration: "bitfield" .
  673 bitfield_type_declaration: "bitfield" . '<' $@47 bitfield_bits '>' $@48

    '<'  shift, and go to state 391

    $default  reduce using rule 655 (basic_type_declaration)


State 320

  642 basic_type_declaration: "uint2" .

    $default  reduce using rule 642 (basic_type_declaration)


State 321

  643 basic_type_declaration: "uint3" .

    $default  reduce using rule 643 (basic_type_declaration)


State 322

  644 basic_type_declaration: "uint4" .

    $default  reduce using rule 644 (basic_type_declaration)


State 323

  645 basic_type_declaration: "float" .

    $default  reduce using rule 645 (basic_type_declaration)


State 324

  646 basic_type_declaration: "float2" .

    $default  reduce using rule 646 (basic_type_declaration)


State 325

  647 basic_type_declaration: "float3" .

    $default  reduce using rule 647 (basic_type_declaration)


State 326

  648 basic_type_declaration: "float4" .

    $default  reduce using rule 648 (basic_type_declaration)


State 327

  650 basic_type_declaration: "range" .

    $default  reduce using rule 650 (basic_type_declaration)


State 328

  651 basic_type_declaration: "urange" .

    $default  reduce using rule 651 (basic_type_declaration)


State 329

  652 basic_type_declaration: "range64" .

    $default  reduce using rule 652 (basic_type_declaration)


State 330

  653 basic_type_declaration: "urange64" .

    $default  reduce using rule 653 (basic_type_declaration)


State 331

  716 type_declaration_no_options: "block" .
  719                            | "block" . '<' $@60 type_declaration '>' $@61
  722                            | "block" . '<' $@62 optional_function_argument_list optional_function_type '>' $@63

    '<'  shift, and go to state 392

    $default  reduce using rule 716 (type_declaration_no_options)


State 332

  634 basic_type_declaration: "int64" .

    $default  reduce using rule 634 (basic_type_declaration)


State 333

  641 basic_type_declaration: "uint64" .

    $default  reduce using rule 641 (basic_type_declaration)


State 334

  654 basic_type_declaration: "double" .

    $default  reduce using rule 654 (basic_type_declaration)


State 335

  723 type_declaration_no_options: "function" .
  726                            | "function" . '<' $@64 type_declaration '>' $@65
  729                            | "function" . '<' $@66 optional_function_argument_list optional_function_type '>' $@67

    '<'  shift, and go to state 393

    $default  reduce using rule 723 (type_declaration_no_options)


State 336

  730 type_declaration_no_options: "lambda" .
  733                            | "lambda" . '<' $@68 type_declaration '>' $@69
  736                            | "lambda" . '<' $@70 optional_function_argument_list optional_function_type '>' $@71

    '<'  shift, and go to state 394

    $default  reduce using rule 730 (type_declaration_no_options)


State 337

  632 basic_type_declaration: "int8" .

    $default  reduce using rule 632 (basic_type_declaration)


State 338

  639 basic_type_declaration: "uint8" .

    $default  reduce using rule 639 (basic_type_declaration)


State 339

  633 basic_type_declaration: "int16" .

    $default  reduce using rule 633 (basic_type_declaration)


State 340

  640 basic_type_declaration: "uint16" .

    $default  reduce using rule 640 (basic_type_declaration)


State 341

  739 type_declaration_no_options: "tuple" . '<' $@72 tuple_type_list '>' $@73

    '<'  shift, and go to state 395


State 342

  742 type_declaration_no_options: "variant" . '<' $@74 variant_type_list '>' $@75

    '<'  shift, and go to state 396


State 343

  665 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 397


State 344

  688 type_declaration_no_options: '$' . name_in_namespace '(' optional_expr_list ')'
  690                            | '$' . name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 398


State 345

  662 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 662 (structure_type_declaration)


State 346

  678 type_declaration_no_options: basic_type_declaration .

    $default  reduce using rule 678 (type_declaration_no_options)


State 347

  681 type_declaration_no_options: structure_type_declaration .

    $default  reduce using rule 681 (type_declaration_no_options)


State 348

  679 type_declaration_no_options: auto_type_declaration .

    $default  reduce using rule 679 (type_declaration_no_options)


State 349

  680 type_declaration_no_options: bitfield_type_declaration .

    $default  reduce using rule 680 (type_declaration_no_options)


State 350

  682 type_declaration_no_options: type_declaration_no_options . dim_list
  683                            | type_declaration_no_options . '[' ']'
  691                            | type_declaration_no_options . '-' '[' ']'
  692                            | type_declaration_no_options . "explicit"
  693                            | type_declaration_no_options . "const"
  694                            | type_declaration_no_options . '-' "const"
  695                            | type_declaration_no_options . '&'
  696                            | type_declaration_no_options . '-' '&'
  697                            | type_declaration_no_options . '#'
  698                            | type_declaration_no_options . "implicit"
  699                            | type_declaration_no_options . '-' '#'
  700                            | type_declaration_no_options . "==" "const"
  701                            | type_declaration_no_options . "==" '&'
  702                            | type_declaration_no_options . '?'
  706                            | type_declaration_no_options . "??"
  743 type_declaration: type_declaration_no_options .

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    $default  reduce using rule 743 (type_declaration)

    dim_list  go to state 409


State 351

  593 single_alias: optional_public_or_private_alias "name" $@39 '=' type_declaration .
  744 type_declaration: type_declaration . '|' type_declaration_no_options
  745                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410

    $default  reduce using rule 593 (single_alias)


State 352

  760 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 . bitfield_alias_bits $@87 "end of code block"

    $default  reduce using rule 668 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 411


State 353

  750 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 . tuple_alias_type_list $@79 "end of code block"

    $default  reduce using rule 542 (tuple_alias_type_list)

    tuple_alias_type_list  go to state 412


State 354

  755 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 . variant_alias_type_list $@83 "end of code block"

    $default  reduce using rule 548 (variant_alias_type_list)

    variant_alias_type_list  go to state 413


State 355

  180 function_name: "operator" "is" "name" .

    $default  reduce using rule 180 (function_name)


State 356

  181 function_name: "operator" "as" "name" .

    $default  reduce using rule 181 (function_name)


State 357

  174 function_name: "operator" "?." "name" .

    $default  reduce using rule 174 (function_name)


State 358

  169 function_name: "operator" "?[" ']' .

    $default  reduce using rule 169 (function_name)


State 359

  182 function_name: "operator" '?' "as" .
  183              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 414

    $default  reduce using rule 182 (function_name)


State 360

  172 function_name: "operator" '.' "name" .
  173              | "operator" '.' "name" . ":="

    ":="  shift, and go to state 415

    $default  reduce using rule 172 (function_name)


State 361

  168 function_name: "operator" '[' ']' .

    $default  reduce using rule 168 (function_name)


State 362

  535 function_argument_declaration: "$a" . '(' expr ')'

    '('  shift, and go to state 416


State 363

  120 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 120 (optional_function_argument_list)


State 364

  534 function_argument_declaration: optional_field_annotation . kwd_let_var_or_nothing variable_declaration

    "let"  shift, and go to state 417
    "var"  shift, and go to state 418

    $default  reduce using rule 292 (kwd_let_var_or_nothing)

    kwd_let_var_or_nothing  go to state 419


State 365

  536 function_argument_list: function_argument_declaration .

    $default  reduce using rule 536 (function_argument_list)


State 366

  121 optional_function_argument_list: '(' function_argument_list . ')'
  537 function_argument_list: function_argument_list . "end of expression" function_argument_declaration

    "end of expression"  shift, and go to state 420
    ')'                  shift, and go to state 421


State 367

  123 optional_function_type: ':' . type_declaration

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 422


State 368

  213 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 213 (function_declaration_header)


State 369

  216 expression_block: "begin of code block" expressions . "end of code block"
  217                 | "begin of code block" expressions . "end of code block" "finally" "begin of code block" expressions "end of code block"
  242 expressions: expressions . expression_any
  243            | expressions . error

    error                             shift, and go to state 423
    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 426
    "if"                              shift, and go to state 427
    "static_if"                       shift, and go to state 428
    "for"                             shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "return"                          shift, and go to state 436
    "null"                            shift, and go to state 437
    "break"                           shift, and go to state 438
    "try"                             shift, and go to state 439
    "table"                           shift, and go to state 440
    "delete"                          shift, and go to state 441
    "deref"                           shift, and go to state 442
    "with"                            shift, and go to state 443
    "assume"                          shift, and go to state 444
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 447
    "continue"                        shift, and go to state 448
    "pass"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 450
    "label"                           shift, and go to state 451
    "goto"                            shift, and go to state 452
    "unsafe"                          shift, and go to state 453
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "yield"                           shift, and go to state 460
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "$ <|"                            shift, and go to state 463
    "@ <|"                            shift, and go to state 464
    "@@ <|"                           shift, and go to state 465
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 483
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    "end of code block"               shift, and go to state 487
    "end of expression"               shift, and go to state 488
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder             go to state 498
    expr_reader                go to state 499
    expression_label           go to state 500
    expression_goto            go to state 501
    if_or_static_if            go to state 502
    expression_if_one_liner    go to state 503
    expression_if_then_else    go to state 504
    expression_for_loop        go to state 505
    expression_unsafe          go to state 506
    expression_while_loop      go to state 507
    expression_with            go to state 508
    expression_with_alias      go to state 509
    expr_call_pipe             go to state 510
    expression_any             go to state 511
    expr_keyword               go to state 512
    expression_keyword         go to state 513
    expr_pipe                  go to state 514
    name_in_namespace          go to state 515
    expression_delete          go to state 516
    expr_new                   go to state 517
    expression_break           go to state 518
    expression_continue        go to state 519
    expression_return_no_pipe  go to state 520
    expression_return          go to state 521
    expression_yield_no_pipe   go to state 522
    expression_yield           go to state 523
    expression_try_catch       go to state 524
    kwd_let                    go to state 525
    expression_let             go to state 526
    expr_cast                  go to state 527
    expr_type_decl             go to state 528
    expr_type_info             go to state 529
    block_or_lambda            go to state 530
    expr_full_block            go to state 531
    expr_numeric_const         go to state 532
    expr_assign                go to state 533
    expr_assign_pipe           go to state 534
    expr_named_call            go to state 535
    expr_method_call           go to state 536
    func_addr_expr             go to state 537
    expr_field                 go to state 538
    expr_call                  go to state 539
    expr                       go to state 540
    expr_mtag                  go to state 541
    basic_type_declaration     go to state 542
    make_decl                  go to state 543
    make_struct_decl           go to state 544
    make_tuple_call            go to state 545
    make_dim_decl              go to state 546
    make_table_decl            go to state 547
    array_comprehension        go to state 548


State 370

  586 enum_list: enum_list . "end of expression"
  587          | enum_list . "name" "end of expression"
  588          | enum_list . "name" '=' expr "end of expression"
  605 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list . $@42 "end of code block"

    "name"               shift, and go to state 549
    "end of expression"  shift, and go to state 550

    $default  reduce using rule 604 ($@42)

    $@42  go to state 551


State 371

  608 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" . $@43 enum_list $@44 "end of code block"

    $default  reduce using rule 606 ($@43)

    $@43  go to state 552


State 372

  610 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 553


State 373

  613 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 613 (structure_name)


State 374

  620 optional_struct_variable_declaration_list: "begin of code block" . struct_variable_declaration_list "end of code block"

    $default  reduce using rule 526 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 554


State 375

  623 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 structure_name $@46 optional_struct_variable_declaration_list .

    $default  reduce using rule 623 (structure_declaration)


State 376

  576 global_variable_declaration_list: global_variable_declaration_list $@37 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 299
    "name"  shift, and go to state 300

    let_variable_name_with_pos_list  go to state 301
    let_variable_declaration         go to state 555


State 377

  514 optional_field_annotation: "[[" annotation_argument_list ']' . ']'

    ']'  shift, and go to state 556


State 378

  565 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 560
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 379

  566 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 561


State 380

  567 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  568                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 562


State 381

  569 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options "end of expression"
  570                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  571                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr_pipe

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 563


State 382

  563 optional_ref: '&' .

    $default  reduce using rule 563 (optional_ref)


State 383

  572 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr "end of expression"
  573                         | let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 564
    ":="  shift, and go to state 565
    '='   shift, and go to state 566

    copy_or_move_or_clone  go to state 567


State 384

  686 type_declaration_no_options: "type" '<' . $@49 type_declaration '>' $@50

    $default  reduce using rule 684 ($@49)

    $@49  go to state 568


State 385

  709 type_declaration_no_options: "array" '<' . $@54 type_declaration '>' $@55

    $default  reduce using rule 707 ($@54)

    $@54  go to state 569


State 386

  712 type_declaration_no_options: "table" '<' . $@56 table_type_pair '>' $@57

    $default  reduce using rule 710 ($@56)

    $@56  go to state 570


State 387

  687 type_declaration_no_options: "typedecl" '(' . expr ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 571
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 388

  715 type_declaration_no_options: "iterator" '<' . $@58 type_declaration '>' $@59

    $default  reduce using rule 713 ($@58)

    $@58  go to state 572


State 389

  705 type_declaration_no_options: "smart_ptr" '<' . $@52 type_declaration '>' $@53

    $default  reduce using rule 703 ($@52)

    $@52  go to state 573


State 390

  664 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 574


State 391

  673 bitfield_type_declaration: "bitfield" '<' . $@47 bitfield_bits '>' $@48

    $default  reduce using rule 671 ($@47)

    $@47  go to state 575


State 392

  719 type_declaration_no_options: "block" '<' . $@60 type_declaration '>' $@61
  722                            | "block" '<' . $@62 optional_function_argument_list optional_function_type '>' $@63

    ':'       reduce using rule 720 ($@62)
    '>'       reduce using rule 720 ($@62)
    '('       reduce using rule 720 ($@62)
    $default  reduce using rule 717 ($@60)

    $@60  go to state 576
    $@62  go to state 577


State 393

  726 type_declaration_no_options: "function" '<' . $@64 type_declaration '>' $@65
  729                            | "function" '<' . $@66 optional_function_argument_list optional_function_type '>' $@67

    ':'       reduce using rule 727 ($@66)
    '>'       reduce using rule 727 ($@66)
    '('       reduce using rule 727 ($@66)
    $default  reduce using rule 724 ($@64)

    $@64  go to state 578
    $@66  go to state 579


State 394

  733 type_declaration_no_options: "lambda" '<' . $@68 type_declaration '>' $@69
  736                            | "lambda" '<' . $@70 optional_function_argument_list optional_function_type '>' $@71

    ':'       reduce using rule 734 ($@70)
    '>'       reduce using rule 734 ($@70)
    '('       reduce using rule 734 ($@70)
    $default  reduce using rule 731 ($@68)

    $@68  go to state 580
    $@70  go to state 581


State 395

  739 type_declaration_no_options: "tuple" '<' . $@72 tuple_type_list '>' $@73

    $default  reduce using rule 737 ($@72)

    $@72  go to state 582


State 396

  742 type_declaration_no_options: "variant" '<' . $@74 variant_type_list '>' $@75

    $default  reduce using rule 740 ($@74)

    $@74  go to state 583


State 397

  665 auto_type_declaration: "$t" '(' . expr ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 584
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 398

  688 type_declaration_no_options: '$' name_in_namespace . '(' optional_expr_list ')'
  690                            | '$' name_in_namespace . '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    '<'  shift, and go to state 585
    '('  shift, and go to state 586


State 399

  693 type_declaration_no_options: type_declaration_no_options "const" .

    $default  reduce using rule 693 (type_declaration_no_options)


State 400

  698 type_declaration_no_options: type_declaration_no_options "implicit" .

    $default  reduce using rule 698 (type_declaration_no_options)


State 401

  692 type_declaration_no_options: type_declaration_no_options "explicit" .

    $default  reduce using rule 692 (type_declaration_no_options)


State 402

  700 type_declaration_no_options: type_declaration_no_options "==" . "const"
  701                            | type_declaration_no_options "==" . '&'

    "const"  shift, and go to state 587
    '&'      shift, and go to state 588


State 403

  706 type_declaration_no_options: type_declaration_no_options "??" .

    $default  reduce using rule 706 (type_declaration_no_options)


State 404

  702 type_declaration_no_options: type_declaration_no_options '?' .

    $default  reduce using rule 702 (type_declaration_no_options)


State 405

  695 type_declaration_no_options: type_declaration_no_options '&' .

    $default  reduce using rule 695 (type_declaration_no_options)


State 406

  691 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  694                            | type_declaration_no_options '-' . "const"
  696                            | type_declaration_no_options '-' . '&'
  699                            | type_declaration_no_options '-' . '#'

    "const"  shift, and go to state 589
    '&'      shift, and go to state 590
    '['      shift, and go to state 591
    '#'      shift, and go to state 592


State 407

  676 dim_list: '[' . expr ']'
  683 type_declaration_no_options: type_declaration_no_options '[' . ']'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    ']'                               shift, and go to state 593
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 594
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 408

  697 type_declaration_no_options: type_declaration_no_options '#' .

    $default  reduce using rule 697 (type_declaration_no_options)


State 409

  677 dim_list: dim_list . '[' expr ']'
  682 type_declaration_no_options: type_declaration_no_options dim_list .

    '['  shift, and go to state 595

    '['       [reduce using rule 682 (type_declaration_no_options)]
    $default  reduce using rule 682 (type_declaration_no_options)


State 410

  744 type_declaration: type_declaration '|' . type_declaration_no_options
  745                 | type_declaration '|' . '#'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344
    '#'          shift, and go to state 596

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 597


State 411

  669 bitfield_alias_bits: bitfield_alias_bits . "end of expression"
  670                    | bitfield_alias_bits . "name" "end of expression"
  760 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits . $@87 "end of code block"

    "name"               shift, and go to state 598
    "end of expression"  shift, and go to state 599

    $default  reduce using rule 759 ($@87)

    $@87  go to state 600


State 412

  543 tuple_alias_type_list: tuple_alias_type_list . "end of expression"
  544                      | tuple_alias_type_list . tuple_type "end of expression"
  750 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list . $@79 "end of code block"

    "type"               shift, and go to state 304
    "array"              shift, and go to state 305
    "table"              shift, and go to state 306
    "typedecl"           shift, and go to state 307
    "iterator"           shift, and go to state 308
    "smart_ptr"          shift, and go to state 309
    "bool"               shift, and go to state 310
    "void"               shift, and go to state 311
    "string"             shift, and go to state 312
    "auto"               shift, and go to state 313
    "int"                shift, and go to state 314
    "int2"               shift, and go to state 315
    "int3"               shift, and go to state 316
    "int4"               shift, and go to state 317
    "uint"               shift, and go to state 318
    "bitfield"           shift, and go to state 319
    "uint2"              shift, and go to state 320
    "uint3"              shift, and go to state 321
    "uint4"              shift, and go to state 322
    "float"              shift, and go to state 323
    "float2"             shift, and go to state 324
    "float3"             shift, and go to state 325
    "float4"             shift, and go to state 326
    "range"              shift, and go to state 327
    "urange"             shift, and go to state 328
    "range64"            shift, and go to state 329
    "urange64"           shift, and go to state 330
    "block"              shift, and go to state 331
    "int64"              shift, and go to state 332
    "uint64"             shift, and go to state 333
    "double"             shift, and go to state 334
    "function"           shift, and go to state 335
    "lambda"             shift, and go to state 336
    "int8"               shift, and go to state 337
    "uint8"              shift, and go to state 338
    "int16"              shift, and go to state 339
    "uint16"             shift, and go to state 340
    "tuple"              shift, and go to state 341
    "variant"            shift, and go to state 342
    "::"                 shift, and go to state 58
    "$t"                 shift, and go to state 343
    "name"               shift, and go to state 601
    "end of expression"  shift, and go to state 602
    '$'                  shift, and go to state 344

    $default  reduce using rule 749 ($@79)

    name_in_namespace            go to state 345
    tuple_type                   go to state 603
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 604
    $@79                         go to state 605


State 413

  549 variant_alias_type_list: variant_alias_type_list . "end of expression"
  550                        | variant_alias_type_list . variant_type "end of expression"
  755 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list . $@83 "end of code block"

    "name"               shift, and go to state 606
    "end of expression"  shift, and go to state 607

    $default  reduce using rule 754 ($@83)

    variant_type  go to state 608
    $@83          go to state 609


State 414

  183 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 183 (function_name)


State 415

  173 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 173 (function_name)


State 416

  535 function_argument_declaration: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 610
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 417

  290 kwd_let_var_or_nothing: "let" .

    $default  reduce using rule 290 (kwd_let_var_or_nothing)


State 418

  291 kwd_let_var_or_nothing: "var" .

    $default  reduce using rule 291 (kwd_let_var_or_nothing)


State 419

  534 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing . variable_declaration

    "$i"    shift, and go to state 611
    "name"  shift, and go to state 612

    variable_declaration         go to state 613
    variable_name_with_pos_list  go to state 614


State 420

  537 function_argument_list: function_argument_list "end of expression" . function_argument_declaration

    "$a"  shift, and go to state 362
    "[["  shift, and go to state 218

    $default  reduce using rule 513 (optional_field_annotation)

    optional_field_annotation      go to state 364
    function_argument_declaration  go to state 615


State 421

  121 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 121 (optional_function_argument_list)


State 422

  123 optional_function_type: ':' type_declaration .
  744 type_declaration: type_declaration . '|' type_declaration_no_options
  745                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410

    $default  reduce using rule 123 (optional_function_type)


State 423

  243 expressions: expressions error .

    $default  reduce using rule 243 (expressions)


State 424

  798 make_struct_decl: "struct" . '<' $@88 type_declaration_no_options '>' $@89 '(' make_struct_dim ')'

    '<'  shift, and go to state 616


State 425

  801 make_struct_decl: "class" . '<' $@90 type_declaration_no_options '>' $@91 '(' make_struct_dim ')'

    '<'  shift, and go to state 617


State 426

   78 expression_while_loop: "while" . expr expression_block

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 618
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 427

   62 if_or_static_if: "if" .

    $default  reduce using rule 62 (if_or_static_if)


State 428

   63 if_or_static_if: "static_if" .

    $default  reduce using rule 63 (if_or_static_if)


State 429

   76 expression_for_loop: "for" . $@4 variable_name_with_pos_list "in" expr_list expression_block

    $default  reduce using rule 75 ($@4)

    $@4  go to state 619


State 430

  419 expr: "true" .

    $default  reduce using rule 419 (expr)


State 431

  420 expr: "false" .

    $default  reduce using rule 420 (expr)


State 432

  271 expr_new: "new" . new_type_declaration
  272         | "new" . new_type_declaration '(' ')'
  273         | "new" . new_type_declaration '(' expr_list ')'
  274         | "new" . new_type_declaration '(' make_struct_dim ')'
  275         | "new" . make_decl

    "struct"               shift, and go to state 424
    "class"                shift, and go to state 425
    "array"                shift, and go to state 435
    "table"                shift, and go to state 440
    "fixed_array"          shift, and go to state 454
    "default"              shift, and go to state 455
    "tuple"                shift, and go to state 457
    "variant"              shift, and go to state 458
    "::"                   shift, and go to state 58
    "[["                   shift, and go to state 473
    "[{"                   shift, and go to state 474
    "{{"                   shift, and go to state 475
    "name"                 shift, and go to state 59
    "begin of code block"  shift, and go to state 486
    '<'                    shift, and go to state 620
    '['                    shift, and go to state 494

    name_in_namespace           go to state 345
    new_type_declaration        go to state 621
    structure_type_declaration  go to state 622
    make_decl                   go to state 623
    make_struct_decl            go to state 544
    make_tuple_call             go to state 545
    make_dim_decl               go to state 546
    make_table_decl             go to state 547
    array_comprehension         go to state 548


State 433

  317 expr_type_info: "typeinfo" . '(' name_in_namespace expr ')'
  318               | "typeinfo" . '(' name_in_namespace '<' "name" '>' expr ')'
  319               | "typeinfo" . '(' name_in_namespace '<' "name" "end of expression" "name" '>' expr ')'

    '('  shift, and go to state 624


State 434

  316 expr_type_decl: "type" . '<' $@19 type_declaration '>' $@20

    '<'  shift, and go to state 625


State 435

  822 make_dim_decl: "array" . '(' expr_list optional_comma ')'
  825              | "array" . '<' $@98 type_declaration_no_options '>' $@99 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 626
    '('  shift, and go to state 627


State 436

  278 expression_return_no_pipe: "return" .
  279                          | "return" . expr_list
  280                          | "return" . "<-" expr_list
  282 expression_return: "return" . expr_pipe
  283                  | "return" . "<-" expr_pipe

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "<-"                              shift, and go to state 628
    "$ <|"                            shift, and go to state 463
    "@ <|"                            shift, and go to state 464
    "@@ <|"                           shift, and go to state 465
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    $default  reduce using rule 278 (expression_return_no_pipe)

    string_builder          go to state 498
    expr_reader             go to state 499
    expr_call_pipe          go to state 510
    expression_keyword      go to state 513
    expr_pipe               go to state 629
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 630
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_assign             go to state 631
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 632
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 437

  413 expr: "null" .

    $default  reduce using rule 413 (expr)


State 438

  276 expression_break: "break" .

    $default  reduce using rule 276 (expression_break)


State 439

  289 expression_try_catch: "try" . expression_block "recover" expression_block

    "begin of code block"  shift, and go to state 284

    expression_block  go to state 633


State 440

  836 make_table_decl: "table" . '(' expr_map_tuple_list optional_comma ')'
  837                | "table" . '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'
  838                | "table" . '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    '<'  shift, and go to state 634
    '('  shift, and go to state 635


State 441

  265 expression_delete: "delete" . expr
  266                  | "delete" . "explicit" expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "explicit"                        shift, and go to state 636
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 637
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 442

  463 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 638


State 443

   79 expression_with: "with" . expr expression_block

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 639
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 444

   81 expression_with_alias: "assume" . "name" '=' $@5 expr

    "name"  shift, and go to state 640


State 445

  307 expr_cast: "cast" . '<' $@13 type_declaration_no_options '>' $@14 expr

    '<'  shift, and go to state 641


State 446

  310 expr_cast: "upcast" . '<' $@15 type_declaration_no_options '>' $@16 expr

    '<'  shift, and go to state 642


State 447

  464 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 643


State 448

  277 expression_continue: "continue" .

    $default  reduce using rule 277 (expression_continue)


State 449

  240 expression_any: "pass" . "end of expression"

    "end of expression"  shift, and go to state 644


State 450

  313 expr_cast: "reinterpret" . '<' $@17 type_declaration_no_options '>' $@18 expr

    '<'  shift, and go to state 645


State 451

   54 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 646


State 452

   55 expression_goto: "goto" . "label" "integer constant"
   56                | "goto" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "label"                           shift, and go to state 647
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 648
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 453

   77 expression_unsafe: "unsafe" . expression_block
  495 expr: "unsafe" . '(' expr ')'

    "begin of code block"  shift, and go to state 284
    '('                    shift, and go to state 649

    expression_block  go to state 650


State 454

  826 make_dim_decl: "fixed_array" . '(' expr_list optional_comma ')'
  829              | "fixed_array" . '<' $@100 type_declaration_no_options '>' $@101 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 651
    '('  shift, and go to state 652


State 455

  807 make_struct_decl: "default" . '<' $@94 type_declaration_no_options '>' $@95

    '<'  shift, and go to state 653


State 456

  655 basic_type_declaration: "bitfield" .

    $default  reduce using rule 655 (basic_type_declaration)


State 457

  813 make_tuple_call: "tuple" . '(' expr_list optional_comma ')'
  816                | "tuple" . '<' $@96 type_declaration_no_options '>' $@97 '(' make_struct_dim ')'

    '<'  shift, and go to state 654
    '('  shift, and go to state 655


State 458

  804 make_struct_decl: "variant" . '<' $@92 type_declaration_no_options '>' $@93 '(' make_struct_dim ')'

    '<'  shift, and go to state 656


State 459

  465 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  466     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'

    '<'  shift, and go to state 657


State 460

  284 expression_yield_no_pipe: "yield" . expr
  285                         | "yield" . "<-" expr
  287 expression_yield: "yield" . expr_pipe
  288                 | "yield" . "<-" expr_pipe

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "<-"                              shift, and go to state 658
    "$ <|"                            shift, and go to state 463
    "@ <|"                            shift, and go to state 464
    "@@ <|"                           shift, and go to state 465
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expr_call_pipe          go to state 510
    expression_keyword      go to state 513
    expr_pipe               go to state 659
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_assign             go to state 631
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 660
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 461

  449 expr: "++" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 661
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 462

  450 expr: "--" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 662
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 463

  260 expr_pipe: "$ <|" . expr_block

    "begin of code block"  shift, and go to state 284
    '$'                    shift, and go to state 496
    '@'                    shift, and go to state 663

    expression_block  go to state 664
    block_or_lambda   go to state 665
    expr_block        go to state 666


State 464

  258 expr_pipe: "@ <|" . expr_block

    "begin of code block"  shift, and go to state 284
    '$'                    shift, and go to state 496
    '@'                    shift, and go to state 663

    expression_block  go to state 664
    block_or_lambda   go to state 665
    expr_block        go to state 667


State 465

  259 expr_pipe: "@@ <|" . expr_block

    "begin of code block"  shift, and go to state 284
    '$'                    shift, and go to state 496
    '@'                    shift, and go to state 663

    expression_block  go to state 664
    block_or_lambda   go to state 665
    expr_block        go to state 668


State 466

  497 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 669


State 467

  498 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 670


State 468

  499 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 671


State 469

  500 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 672


State 470

  501 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 673


State 471

  503 expr_mtag: "$c" . '(' expr ')' '(' ')'
  504          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 674


State 472

  502 expr_mtag: "..." .

    $default  reduce using rule 502 (expr_mtag)


State 473

  790 make_struct_decl: "[[" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  791                 | "[[" . type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  792                 | "[[" . type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  793                 | "[[" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  820 make_dim_decl: "[[" . type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  844 array_comprehension: "[[" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']'

    "for"        shift, and go to state 675
    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 676


State 474

  794 make_struct_decl: "[{" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  795                 | "[{" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  821 make_dim_decl: "[{" . type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr
  845 array_comprehension: "[{" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "for"        shift, and go to state 677
    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 678


State 475

  835 make_table_decl: "{{" . make_table optional_trailing_semicolon_cur_cur
  847 array_comprehension: "{{" . "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "for"                             shift, and go to state 679
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 680
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_map_tuple          go to state 681
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table              go to state 682
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 476

  341 expr_numeric_const: "integer constant" .

    $default  reduce using rule 341 (expr_numeric_const)


State 477

  343 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 343 (expr_numeric_const)


State 478

  342 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 342 (expr_numeric_const)


State 479

  344 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 344 (expr_numeric_const)


State 480

  345 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 345 (expr_numeric_const)


State 481

  346 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 346 (expr_numeric_const)


State 482

  347 expr_numeric_const: "double constant" .

    $default  reduce using rule 347 (expr_numeric_const)


State 483

  244 expr_keyword: "keyword" . expr expression_block
  253 expression_keyword: "keyword" . '<' $@7 type_declaration_no_options_list '>' $@8 expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '<'                               shift, and go to state 683
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 684
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 484

  256 expression_keyword: "type function" . '<' $@9 type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces

    '<'  shift, and go to state 685


State 485

   31 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 28 (string_builder_body)

    string_builder_body  go to state 686


State 486

  834 make_table_decl: "begin of code block" . expr_map_tuple_list optional_comma "end of code block"
  846 array_comprehension: "begin of code block" . "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "for"                             shift, and go to state 687
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 680
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_map_tuple          go to state 688
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    expr_map_tuple_list     go to state 689
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 487

  216 expression_block: "begin of code block" expressions "end of code block" .
  217                 | "begin of code block" expressions "end of code block" . "finally" "begin of code block" expressions "end of code block"

    "finally"  shift, and go to state 690

    $default  reduce using rule 216 (expression_block)


State 488

  220 expression_any: "end of expression" .

    $default  reduce using rule 220 (expression_any)


State 489

  426 expr: '-' . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 691
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 490

  425 expr: '+' . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 692
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 491

  462 expr: '*' . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 693
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 492

  424 expr: '~' . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 694
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 493

  423 expr: '!' . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 695
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 494

  819 make_dim_decl: '[' . expr_list optional_comma ']'
  843 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "for"                             shift, and go to state 696
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 697
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 698
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 495

  453 expr: '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 699
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 698
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 496

  325 block_or_lambda: '$' .

    $default  reduce using rule 325 (block_or_lambda)


State 497

  326 block_or_lambda: '@' .
  327                | '@' . '@'
  394 func_addr_expr: '@' . '@' func_addr_name
  397               | '@' . '@' '<' $@22 type_declaration_no_options '>' $@23 func_addr_name
  400               | '@' . '@' '<' $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name
  512 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 700

    $default  reduce using rule 326 (block_or_lambda)


State 498

  417 expr: string_builder .

    $default  reduce using rule 417 (expr)


State 499

  416 expr: expr_reader .

    $default  reduce using rule 416 (expr)


State 500

  238 expression_any: expression_label . "end of expression"

    "end of expression"  shift, and go to state 701


State 501

  239 expression_any: expression_goto . "end of expression"

    "end of expression"  shift, and go to state 702


State 502

   72 expression_if_then_else: if_or_static_if . expr expression_block expression_else

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 703
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 503

   74 expression_if_then_else: expression_if_one_liner . "if" $@3 expr expression_else_one_liner "end of expression"

    "if"  shift, and go to state 704


State 504

  236 expression_any: expression_if_then_else .

    $default  reduce using rule 236 (expression_any)


State 505

  231 expression_any: expression_for_loop .

    $default  reduce using rule 231 (expression_any)


State 506

  228 expression_any: expression_unsafe .

    $default  reduce using rule 228 (expression_any)


State 507

  227 expression_any: expression_while_loop .

    $default  reduce using rule 227 (expression_any)


State 508

  229 expression_any: expression_with .

    $default  reduce using rule 229 (expression_any)


State 509

  230 expression_any: expression_with_alias .

    $default  reduce using rule 230 (expression_any)


State 510

  261 expr_pipe: expr_call_pipe .

    $default  reduce using rule 261 (expr_pipe)


State 511

  242 expressions: expressions expression_any .

    $default  reduce using rule 242 (expressions)


State 512

  222 expression_any: expr_keyword .

    $default  reduce using rule 222 (expression_any)


State 513

  219 expr_call_pipe: expression_keyword . expr_full_block_assumed_piped
  496 expr: expression_keyword .

    '$'  shift, and go to state 496
    '@'  shift, and go to state 663

    '$'       [reduce using rule 496 (expr)]
    '@'       [reduce using rule 496 (expr)]
    $default  reduce using rule 496 (expr)

    block_or_lambda                go to state 705
    expr_full_block_assumed_piped  go to state 706


State 514

  221 expression_any: expr_pipe .

    $default  reduce using rule 221 (expression_any)


State 515

  388 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  389                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  408 expr_call: name_in_namespace . '(' ')'
  409          | name_in_namespace . '(' make_struct_dim ')'
  410          | name_in_namespace . '(' expr_list ')'
  414 expr: name_in_namespace .
  494     | name_in_namespace . "name"

    "name"  shift, and go to state 707
    '('     shift, and go to state 708

    "name"    [reduce using rule 414 (expr)]
    '('       [reduce using rule 414 (expr)]
    $default  reduce using rule 414 (expr)


State 516

  225 expression_any: expression_delete . "end of expression"

    "end of expression"  shift, and go to state 709


State 517

  487 expr: expr_new .

    $default  reduce using rule 487 (expr)


State 518

   70 expression_if_one_liner: expression_break .
  232 expression_any: expression_break . "end of expression"

    "end of expression"  shift, and go to state 710

    $default  reduce using rule 70 (expression_if_one_liner)


State 519

   71 expression_if_one_liner: expression_continue .
  233 expression_any: expression_continue . "end of expression"

    "end of expression"  shift, and go to state 711

    $default  reduce using rule 71 (expression_if_one_liner)


State 520

   68 expression_if_one_liner: expression_return_no_pipe .
  281 expression_return: expression_return_no_pipe . "end of expression"

    "end of expression"  shift, and go to state 712

    $default  reduce using rule 68 (expression_if_one_liner)


State 521

  234 expression_any: expression_return .

    $default  reduce using rule 234 (expression_any)


State 522

   69 expression_if_one_liner: expression_yield_no_pipe .
  286 expression_yield: expression_yield_no_pipe . "end of expression"

    "end of expression"  shift, and go to state 713

    $default  reduce using rule 69 (expression_if_one_liner)


State 523

  235 expression_any: expression_yield .

    $default  reduce using rule 235 (expression_any)


State 524

  237 expression_any: expression_try_catch .

    $default  reduce using rule 237 (expression_any)


State 525

  303 expression_let: kwd_let . optional_in_scope let_variable_declaration
  304               | kwd_let . optional_in_scope tuple_expansion_variable_declaration

    "inscope"  shift, and go to state 714

    $default  reduce using rule 296 (optional_in_scope)

    optional_in_scope  go to state 715


State 526

  226 expression_any: expression_let .

    $default  reduce using rule 226 (expression_any)


State 527

  486 expr: expr_cast .

    $default  reduce using rule 486 (expr)


State 528

  485 expr: expr_type_decl .

    $default  reduce using rule 485 (expr)


State 529

  484 expr: expr_type_info .

    $default  reduce using rule 484 (expr)


State 530

  338 expr_full_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 15

    $default  reduce using rule 117 (optional_annotation_list)

    optional_annotation_list  go to state 716


State 531

  490 expr: expr_full_block .

    $default  reduce using rule 490 (expr)


State 532

  415 expr: expr_numeric_const .

    $default  reduce using rule 415 (expr)


State 533

  224 expression_any: expr_assign . "end of expression"
  257 expr_pipe: expr_assign . " <|" expr_block

    " <|"                shift, and go to state 717
    "end of expression"  shift, and go to state 718


State 534

  223 expression_any: expr_assign_pipe .

    $default  reduce using rule 223 (expression_any)


State 535

  489 expr: expr_named_call .

    $default  reduce using rule 489 (expr)


State 536

  488 expr: expr_method_call .

    $default  reduce using rule 488 (expr)


State 537

  460 expr: func_addr_expr .

    $default  reduce using rule 460 (expr)


State 538

  421 expr: expr_field .

    $default  reduce using rule 421 (expr)


State 539

  461 expr: expr_call .

    $default  reduce using rule 461 (expr)


State 540

   67 expression_if_one_liner: expr .
  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  348 expr_assign: expr .
  349            | expr . '=' expr
  350            | expr . "<-" expr
  351            | expr . ":=" expr
  352            | expr . "&=" expr
  353            | expr . "|=" expr
  354            | expr . "^=" expr
  355            | expr . "&&=" expr
  356            | expr . "||=" expr
  357            | expr . "^^=" expr
  358            | expr . "+=" expr
  359            | expr . "-=" expr
  360            | expr . "*=" expr
  361            | expr . "/=" expr
  362            | expr . "%=" expr
  363            | expr . "<<=" expr
  364            | expr . ">>=" expr
  365            | expr . "<<<=" expr
  366            | expr . ">>>=" expr
  371 expr_assign_pipe: expr . '=' expr_assign_pipe_right
  372                 | expr . "<-" expr_assign_pipe_right
  373                 | expr . "&=" expr_assign_pipe_right
  374                 | expr . "|=" expr_assign_pipe_right
  375                 | expr . "^=" expr_assign_pipe_right
  376                 | expr . "&&=" expr_assign_pipe_right
  377                 | expr . "||=" expr_assign_pipe_right
  378                 | expr . "^^=" expr_assign_pipe_right
  379                 | expr . "+=" expr_assign_pipe_right
  380                 | expr . "-=" expr_assign_pipe_right
  381                 | expr . "*=" expr_assign_pipe_right
  382                 | expr . "/=" expr_assign_pipe_right
  383                 | expr . "%=" expr_assign_pipe_right
  384                 | expr . "<<=" expr_assign_pipe_right
  385                 | expr . ">>=" expr_assign_pipe_right
  386                 | expr . "<<<=" expr_assign_pipe_right
  387                 | expr . ">>>=" expr_assign_pipe_right
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 719
    "as"    shift, and go to state 720
    "+="    shift, and go to state 721
    "-="    shift, and go to state 722
    "/="    shift, and go to state 723
    "*="    shift, and go to state 724
    "%="    shift, and go to state 725
    "&="    shift, and go to state 726
    "|="    shift, and go to state 727
    "^="    shift, and go to state 728
    "<<"    shift, and go to state 729
    ">>"    shift, and go to state 730
    "++"    shift, and go to state 731
    "--"    shift, and go to state 732
    "<="    shift, and go to state 733
    "<<="   shift, and go to state 734
    ">>="   shift, and go to state 735
    ">="    shift, and go to state 736
    "=="    shift, and go to state 737
    "!="    shift, and go to state 738
    "->"    shift, and go to state 739
    "<-"    shift, and go to state 740
    "??"    shift, and go to state 741
    "?."    shift, and go to state 742
    "?["    shift, and go to state 743
    "<|"    shift, and go to state 744
    "|>"    shift, and go to state 745
    ":="    shift, and go to state 746
    "<<<"   shift, and go to state 747
    ">>>"   shift, and go to state 748
    "<<<="  shift, and go to state 749
    ">>>="  shift, and go to state 750
    "&&"    shift, and go to state 751
    "||"    shift, and go to state 752
    "^^"    shift, and go to state 753
    "&&="   shift, and go to state 754
    "||="   shift, and go to state 755
    "^^="   shift, and go to state 756
    ".."    shift, and go to state 757
    '='     shift, and go to state 758
    '?'     shift, and go to state 759
    '|'     shift, and go to state 760
    '^'     shift, and go to state 761
    '&'     shift, and go to state 762
    '<'     shift, and go to state 763
    '>'     shift, and go to state 764
    '-'     shift, and go to state 765
    '+'     shift, and go to state 766
    '*'     shift, and go to state 767
    '/'     shift, and go to state 768
    '%'     shift, and go to state 769
    '.'     shift, and go to state 770
    '['     shift, and go to state 771
    '$'     shift, and go to state 496
    '@'     shift, and go to state 663

    "if"      reduce using rule 67 (expression_if_one_liner)
    $default  reduce using rule 348 (expr_assign)

    block_or_lambda                go to state 705
    expr_full_block_assumed_piped  go to state 772


State 541

  422 expr: expr_mtag .

    $default  reduce using rule 422 (expr)


State 542

  411 expr_call: basic_type_declaration . '(' ')'
  412          | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 773


State 543

  418 expr: make_decl .

    $default  reduce using rule 418 (expr)


State 544

  761 make_decl: make_struct_decl .

    $default  reduce using rule 761 (make_decl)


State 545

  765 make_decl: make_tuple_call .

    $default  reduce using rule 765 (make_decl)


State 546

  762 make_decl: make_dim_decl .

    $default  reduce using rule 762 (make_decl)


State 547

  763 make_decl: make_table_decl .

    $default  reduce using rule 763 (make_decl)


State 548

  764 make_decl: array_comprehension .

    $default  reduce using rule 764 (make_decl)


State 549

  587 enum_list: enum_list "name" . "end of expression"
  588          | enum_list "name" . '=' expr "end of expression"

    "end of expression"  shift, and go to state 774
    '='                  shift, and go to state 775


State 550

  586 enum_list: enum_list "end of expression" .

    $default  reduce using rule 586 (enum_list)


State 551

  605 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list $@42 . "end of code block"

    "end of code block"  shift, and go to state 776


State 552

  608 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 . enum_list $@44 "end of code block"

    $default  reduce using rule 585 (enum_list)

    enum_list  go to state 777


State 553

  610 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 610 (optional_structure_parent)


State 554

  528 struct_variable_declaration_list: struct_variable_declaration_list . $@34 structure_variable_declaration "end of expression"
  530                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header "end of expression"
  532                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block
  533                                 | struct_variable_declaration_list . '[' annotation_list ']' "end of expression"
  620 optional_struct_variable_declaration_list: "begin of code block" struct_variable_declaration_list . "end of code block"

    "end of code block"  shift, and go to state 778
    '['                  shift, and go to state 779

    "def"     reduce using rule 117 (optional_annotation_list)
    $default  reduce using rule 527 ($@34)

    optional_annotation_list  go to state 780
    $@34                      go to state 781


State 555

  576 global_variable_declaration_list: global_variable_declaration_list $@37 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 576 (global_variable_declaration_list)


State 556

  514 optional_field_annotation: "[[" annotation_argument_list ']' ']' .

    $default  reduce using rule 514 (optional_field_annotation)


State 557

  495 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 649


State 558

  253 expression_keyword: "keyword" . '<' $@7 type_declaration_no_options_list '>' $@8 expr

    '<'  shift, and go to state 683


State 559

  496 expr: expression_keyword .

    $default  reduce using rule 496 (expr)


State 560

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'
  565 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771
    ')'    shift, and go to state 782


State 561

  566 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 566 (let_variable_name_with_pos_list)


State 562

  567 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  568                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 783

    $default  reduce using rule 567 (let_variable_name_with_pos_list)


State 563

  569 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . "end of expression"
  570                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"
  571                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr_pipe
  682 type_declaration_no_options: type_declaration_no_options . dim_list
  683                            | type_declaration_no_options . '[' ']'
  691                            | type_declaration_no_options . '-' '[' ']'
  692                            | type_declaration_no_options . "explicit"
  693                            | type_declaration_no_options . "const"
  694                            | type_declaration_no_options . '-' "const"
  695                            | type_declaration_no_options . '&'
  696                            | type_declaration_no_options . '-' '&'
  697                            | type_declaration_no_options . '#'
  698                            | type_declaration_no_options . "implicit"
  699                            | type_declaration_no_options . '-' '#'
  700                            | type_declaration_no_options . "==" "const"
  701                            | type_declaration_no_options . "==" '&'
  702                            | type_declaration_no_options . '?'
  706                            | type_declaration_no_options . "??"

    "const"              shift, and go to state 399
    "implicit"           shift, and go to state 400
    "explicit"           shift, and go to state 401
    "=="                 shift, and go to state 402
    "<-"                 shift, and go to state 564
    "??"                 shift, and go to state 403
    ":="                 shift, and go to state 565
    "end of expression"  shift, and go to state 784
    '='                  shift, and go to state 566
    '?'                  shift, and go to state 404
    '&'                  shift, and go to state 405
    '-'                  shift, and go to state 406
    '['                  shift, and go to state 407
    '#'                  shift, and go to state 408

    copy_or_move_or_clone  go to state 785
    dim_list               go to state 409


State 564

  560 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 560 (copy_or_move_or_clone)


State 565

  561 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 561 (copy_or_move_or_clone)


State 566

  559 copy_or_move_or_clone: '=' .

    $default  reduce using rule 559 (copy_or_move_or_clone)


State 567

  572 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr "end of expression"
  573                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "$ <|"                            shift, and go to state 463
    "@ <|"                            shift, and go to state 464
    "@@ <|"                           shift, and go to state 465
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expr_call_pipe          go to state 510
    expression_keyword      go to state 513
    expr_pipe               go to state 786
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_assign             go to state 631
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 787
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 568

  686 type_declaration_no_options: "type" '<' $@49 . type_declaration '>' $@50

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 788


State 569

  709 type_declaration_no_options: "array" '<' $@54 . type_declaration '>' $@55

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 789


State 570

  712 type_declaration_no_options: "table" '<' $@56 . table_type_pair '>' $@57

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    table_type_pair              go to state 790
    type_declaration_no_options  go to state 350
    type_declaration             go to state 791


State 571

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'
  687 type_declaration_no_options: "typedecl" '(' expr . ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771
    ')'    shift, and go to state 792


State 572

  715 type_declaration_no_options: "iterator" '<' $@58 . type_declaration '>' $@59

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 793


State 573

  705 type_declaration_no_options: "smart_ptr" '<' $@52 . type_declaration '>' $@53

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 794


State 574

  664 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 795


State 575

  673 bitfield_type_declaration: "bitfield" '<' $@47 . bitfield_bits '>' $@48

    "name"  shift, and go to state 796

    bitfield_bits  go to state 797


State 576

  719 type_declaration_no_options: "block" '<' $@60 . type_declaration '>' $@61

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 798


State 577

  722 type_declaration_no_options: "block" '<' $@62 . optional_function_argument_list optional_function_type '>' $@63

    '('  shift, and go to state 282

    $default  reduce using rule 119 (optional_function_argument_list)

    optional_function_argument_list  go to state 799


State 578

  726 type_declaration_no_options: "function" '<' $@64 . type_declaration '>' $@65

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 800


State 579

  729 type_declaration_no_options: "function" '<' $@66 . optional_function_argument_list optional_function_type '>' $@67

    '('  shift, and go to state 282

    $default  reduce using rule 119 (optional_function_argument_list)

    optional_function_argument_list  go to state 801


State 580

  733 type_declaration_no_options: "lambda" '<' $@68 . type_declaration '>' $@69

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 802


State 581

  736 type_declaration_no_options: "lambda" '<' $@70 . optional_function_argument_list optional_function_type '>' $@71

    '('  shift, and go to state 282

    $default  reduce using rule 119 (optional_function_argument_list)

    optional_function_argument_list  go to state 803


State 582

  739 type_declaration_no_options: "tuple" '<' $@72 . tuple_type_list '>' $@73

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 601
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    tuple_type                   go to state 804
    tuple_type_list              go to state 805
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 604


State 583

  742 type_declaration_no_options: "variant" '<' $@74 . variant_type_list '>' $@75

    "name"  shift, and go to state 606

    variant_type       go to state 806
    variant_type_list  go to state 807


State 584

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'
  665 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771
    ')'    shift, and go to state 808


State 585

  690 type_declaration_no_options: '$' name_in_namespace '<' . $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    $default  reduce using rule 689 ($@51)

    $@51  go to state 809


State 586

  688 type_declaration_no_options: '$' name_in_namespace '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    $default  reduce using rule 245 (optional_expr_list)

    string_builder          go to state 498
    expr_reader             go to state 499
    optional_expr_list      go to state 810
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 811
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 698
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 587

  700 type_declaration_no_options: type_declaration_no_options "==" "const" .

    $default  reduce using rule 700 (type_declaration_no_options)


State 588

  701 type_declaration_no_options: type_declaration_no_options "==" '&' .

    $default  reduce using rule 701 (type_declaration_no_options)


State 589

  694 type_declaration_no_options: type_declaration_no_options '-' "const" .

    $default  reduce using rule 694 (type_declaration_no_options)


State 590

  696 type_declaration_no_options: type_declaration_no_options '-' '&' .

    $default  reduce using rule 696 (type_declaration_no_options)


State 591

  691 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'

    ']'  shift, and go to state 812


State 592

  699 type_declaration_no_options: type_declaration_no_options '-' '#' .

    $default  reduce using rule 699 (type_declaration_no_options)


State 593

  683 type_declaration_no_options: type_declaration_no_options '[' ']' .

    $default  reduce using rule 683 (type_declaration_no_options)


State 594

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'
  676 dim_list: '[' expr . ']'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771
    ']'    shift, and go to state 813


State 595

  677 dim_list: dim_list '[' . expr ']'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 814
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 596

  745 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 745 (type_declaration)


State 597

  682 type_declaration_no_options: type_declaration_no_options . dim_list
  683                            | type_declaration_no_options . '[' ']'
  691                            | type_declaration_no_options . '-' '[' ']'
  692                            | type_declaration_no_options . "explicit"
  693                            | type_declaration_no_options . "const"
  694                            | type_declaration_no_options . '-' "const"
  695                            | type_declaration_no_options . '&'
  696                            | type_declaration_no_options . '-' '&'
  697                            | type_declaration_no_options . '#'
  698                            | type_declaration_no_options . "implicit"
  699                            | type_declaration_no_options . '-' '#'
  700                            | type_declaration_no_options . "==" "const"
  701                            | type_declaration_no_options . "==" '&'
  702                            | type_declaration_no_options . '?'
  706                            | type_declaration_no_options . "??"
  744 type_declaration: type_declaration '|' type_declaration_no_options .

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    $default  reduce using rule 744 (type_declaration)

    dim_list  go to state 409


State 598

  670 bitfield_alias_bits: bitfield_alias_bits "name" . "end of expression"

    "end of expression"  shift, and go to state 815


State 599

  669 bitfield_alias_bits: bitfield_alias_bits "end of expression" .

    $default  reduce using rule 669 (bitfield_alias_bits)


State 600

  760 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 . "end of code block"

    "end of code block"  shift, and go to state 816


State 601

  262 name_in_namespace: "name" .
  263                  | "name" . "::" "name"
  539 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 98
    ':'   shift, and go to state 817

    $default  reduce using rule 262 (name_in_namespace)


State 602

  543 tuple_alias_type_list: tuple_alias_type_list "end of expression" .

    $default  reduce using rule 543 (tuple_alias_type_list)


State 603

  544 tuple_alias_type_list: tuple_alias_type_list tuple_type . "end of expression"

    "end of expression"  shift, and go to state 818


State 604

  538 tuple_type: type_declaration .
  744 type_declaration: type_declaration . '|' type_declaration_no_options
  745                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410

    $default  reduce using rule 538 (tuple_type)


State 605

  750 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 . "end of code block"

    "end of code block"  shift, and go to state 819


State 606

  545 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 820


State 607

  549 variant_alias_type_list: variant_alias_type_list "end of expression" .

    $default  reduce using rule 549 (variant_alias_type_list)


State 608

  550 variant_alias_type_list: variant_alias_type_list variant_type . "end of expression"

    "end of expression"  shift, and go to state 821


State 609

  755 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 . "end of code block"

    "end of code block"  shift, and go to state 822


State 610

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'
  535 function_argument_declaration: "$a" '(' expr . ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771
    ')'    shift, and go to state 823


State 611

  625 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 824


State 612

  624 variable_name_with_pos_list: "name" .
  626                            | "name" . "aka" "name"

    "aka"  shift, and go to state 825

    $default  reduce using rule 624 (variable_name_with_pos_list)


State 613

  534 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration .

    $default  reduce using rule 534 (function_argument_declaration)


State 614

  553 variable_declaration: variable_name_with_pos_list .
  554                     | variable_name_with_pos_list . '&'
  555                     | variable_name_with_pos_list . ':' type_declaration
  556                     | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  557                     | variable_name_with_pos_list . copy_or_move expr
  558                     | variable_name_with_pos_list . copy_or_move expr_pipe
  627 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  628                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 826
    ','   shift, and go to state 827
    '='   shift, and go to state 828
    ':'   shift, and go to state 829
    '&'   shift, and go to state 830

    $default  reduce using rule 553 (variable_declaration)

    copy_or_move  go to state 831


State 615

  537 function_argument_list: function_argument_list "end of expression" function_argument_declaration .

    $default  reduce using rule 537 (function_argument_list)


State 616

  798 make_struct_decl: "struct" '<' . $@88 type_declaration_no_options '>' $@89 '(' make_struct_dim ')'

    $default  reduce using rule 796 ($@88)

    $@88  go to state 832


State 617

  801 make_struct_decl: "class" '<' . $@90 type_declaration_no_options '>' $@91 '(' make_struct_dim ')'

    $default  reduce using rule 799 ($@90)

    $@90  go to state 833


State 618

   78 expression_while_loop: "while" expr . expression_block
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 719
    "as"                   shift, and go to state 720
    "<<"                   shift, and go to state 729
    ">>"                   shift, and go to state 730
    "++"                   shift, and go to state 731
    "--"                   shift, and go to state 732
    "<="                   shift, and go to state 733
    ">="                   shift, and go to state 736
    "=="                   shift, and go to state 737
    "!="                   shift, and go to state 738
    "->"                   shift, and go to state 739
    "??"                   shift, and go to state 741
    "?."                   shift, and go to state 742
    "?["                   shift, and go to state 743
    "<|"                   shift, and go to state 744
    "|>"                   shift, and go to state 745
    "<<<"                  shift, and go to state 747
    ">>>"                  shift, and go to state 748
    "&&"                   shift, and go to state 751
    "||"                   shift, and go to state 752
    "^^"                   shift, and go to state 753
    ".."                   shift, and go to state 757
    "begin of code block"  shift, and go to state 284
    '?'                    shift, and go to state 759
    '|'                    shift, and go to state 760
    '^'                    shift, and go to state 761
    '&'                    shift, and go to state 762
    '<'                    shift, and go to state 763
    '>'                    shift, and go to state 764
    '-'                    shift, and go to state 765
    '+'                    shift, and go to state 766
    '*'                    shift, and go to state 767
    '/'                    shift, and go to state 768
    '%'                    shift, and go to state 769
    '.'                    shift, and go to state 770
    '['                    shift, and go to state 771

    expression_block  go to state 834


State 619

   76 expression_for_loop: "for" $@4 . variable_name_with_pos_list "in" expr_list expression_block

    "$i"    shift, and go to state 611
    "name"  shift, and go to state 612

    variable_name_with_pos_list  go to state 835


State 620

  269 new_type_declaration: '<' . $@11 type_declaration '>' $@12

    $default  reduce using rule 267 ($@11)

    $@11  go to state 836


State 621

  271 expr_new: "new" new_type_declaration .
  272         | "new" new_type_declaration . '(' ')'
  273         | "new" new_type_declaration . '(' expr_list ')'
  274         | "new" new_type_declaration . '(' make_struct_dim ')'

    '('  shift, and go to state 837

    '('       [reduce using rule 271 (expr_new)]
    $default  reduce using rule 271 (expr_new)


State 622

  270 new_type_declaration: structure_type_declaration .

    $default  reduce using rule 270 (new_type_declaration)


State 623

  275 expr_new: "new" make_decl .

    $default  reduce using rule 275 (expr_new)


State 624

  317 expr_type_info: "typeinfo" '(' . name_in_namespace expr ')'
  318               | "typeinfo" '(' . name_in_namespace '<' "name" '>' expr ')'
  319               | "typeinfo" '(' . name_in_namespace '<' "name" "end of expression" "name" '>' expr ')'

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 838


State 625

  316 expr_type_decl: "type" '<' . $@19 type_declaration '>' $@20

    $default  reduce using rule 314 ($@19)

    $@19  go to state 839


State 626

  825 make_dim_decl: "array" '<' . $@98 type_declaration_no_options '>' $@99 '(' expr_list optional_comma ')'

    $default  reduce using rule 823 ($@98)

    $@98  go to state 840


State 627

  822 make_dim_decl: "array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 841
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 698
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 628

  280 expression_return_no_pipe: "return" "<-" . expr_list
  283 expression_return: "return" "<-" . expr_pipe

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "$ <|"                            shift, and go to state 463
    "@ <|"                            shift, and go to state 464
    "@@ <|"                           shift, and go to state 465
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expr_call_pipe          go to state 510
    expression_keyword      go to state 513
    expr_pipe               go to state 842
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 843
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_assign             go to state 631
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 632
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 629

  282 expression_return: "return" expr_pipe .

    $default  reduce using rule 282 (expression_return)


State 630

  279 expression_return_no_pipe: "return" expr_list .
  321 expr_list: expr_list . ',' expr

    ','  shift, and go to state 844

    $default  reduce using rule 279 (expression_return_no_pipe)


State 631

  257 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 717


State 632

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  320 expr_list: expr .
  348 expr_assign: expr .
  349            | expr . '=' expr
  350            | expr . "<-" expr
  351            | expr . ":=" expr
  352            | expr . "&=" expr
  353            | expr . "|=" expr
  354            | expr . "^=" expr
  355            | expr . "&&=" expr
  356            | expr . "||=" expr
  357            | expr . "^^=" expr
  358            | expr . "+=" expr
  359            | expr . "-=" expr
  360            | expr . "*=" expr
  361            | expr . "/=" expr
  362            | expr . "%=" expr
  363            | expr . "<<=" expr
  364            | expr . ">>=" expr
  365            | expr . "<<<=" expr
  366            | expr . ">>>=" expr
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 719
    "as"    shift, and go to state 720
    "+="    shift, and go to state 845
    "-="    shift, and go to state 846
    "/="    shift, and go to state 847
    "*="    shift, and go to state 848
    "%="    shift, and go to state 849
    "&="    shift, and go to state 850
    "|="    shift, and go to state 851
    "^="    shift, and go to state 852
    "<<"    shift, and go to state 729
    ">>"    shift, and go to state 730
    "++"    shift, and go to state 731
    "--"    shift, and go to state 732
    "<="    shift, and go to state 733
    "<<="   shift, and go to state 853
    ">>="   shift, and go to state 854
    ">="    shift, and go to state 736
    "=="    shift, and go to state 737
    "!="    shift, and go to state 738
    "->"    shift, and go to state 739
    "<-"    shift, and go to state 855
    "??"    shift, and go to state 741
    "?."    shift, and go to state 742
    "?["    shift, and go to state 743
    "<|"    shift, and go to state 744
    "|>"    shift, and go to state 745
    ":="    shift, and go to state 746
    "<<<"   shift, and go to state 747
    ">>>"   shift, and go to state 748
    "<<<="  shift, and go to state 856
    ">>>="  shift, and go to state 857
    "&&"    shift, and go to state 751
    "||"    shift, and go to state 752
    "^^"    shift, and go to state 753
    "&&="   shift, and go to state 858
    "||="   shift, and go to state 859
    "^^="   shift, and go to state 860
    ".."    shift, and go to state 757
    '='     shift, and go to state 861
    '?'     shift, and go to state 759
    '|'     shift, and go to state 760
    '^'     shift, and go to state 761
    '&'     shift, and go to state 762
    '<'     shift, and go to state 763
    '>'     shift, and go to state 764
    '-'     shift, and go to state 765
    '+'     shift, and go to state 766
    '*'     shift, and go to state 767
    '/'     shift, and go to state 768
    '%'     shift, and go to state 769
    '.'     shift, and go to state 770
    '['     shift, and go to state 771
    '$'     shift, and go to state 496
    '@'     shift, and go to state 663

    " <|"     reduce using rule 348 (expr_assign)
    $default  reduce using rule 320 (expr_list)

    block_or_lambda                go to state 705
    expr_full_block_assumed_piped  go to state 772


State 633

  289 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 862


State 634

  837 make_table_decl: "table" '<' . type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'
  838                | "table" '<' . type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 863


State 635

  836 make_table_decl: "table" '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 680
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_map_tuple          go to state 688
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    expr_map_tuple_list     go to state 864
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 636

  266 expression_delete: "delete" "explicit" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 865
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 637

  265 expression_delete: "delete" expr .
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771

    $default  reduce using rule 265 (expression_delete)


State 638

  463 expr: "deref" '(' . expr ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 866
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 639

   79 expression_with: "with" expr . expression_block
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 719
    "as"                   shift, and go to state 720
    "<<"                   shift, and go to state 729
    ">>"                   shift, and go to state 730
    "++"                   shift, and go to state 731
    "--"                   shift, and go to state 732
    "<="                   shift, and go to state 733
    ">="                   shift, and go to state 736
    "=="                   shift, and go to state 737
    "!="                   shift, and go to state 738
    "->"                   shift, and go to state 739
    "??"                   shift, and go to state 741
    "?."                   shift, and go to state 742
    "?["                   shift, and go to state 743
    "<|"                   shift, and go to state 744
    "|>"                   shift, and go to state 745
    "<<<"                  shift, and go to state 747
    ">>>"                  shift, and go to state 748
    "&&"                   shift, and go to state 751
    "||"                   shift, and go to state 752
    "^^"                   shift, and go to state 753
    ".."                   shift, and go to state 757
    "begin of code block"  shift, and go to state 284
    '?'                    shift, and go to state 759
    '|'                    shift, and go to state 760
    '^'                    shift, and go to state 761
    '&'                    shift, and go to state 762
    '<'                    shift, and go to state 763
    '>'                    shift, and go to state 764
    '-'                    shift, and go to state 765
    '+'                    shift, and go to state 766
    '*'                    shift, and go to state 767
    '/'                    shift, and go to state 768
    '%'                    shift, and go to state 769
    '.'                    shift, and go to state 770
    '['                    shift, and go to state 771

    expression_block  go to state 867


State 640

   81 expression_with_alias: "assume" "name" . '=' $@5 expr

    '='  shift, and go to state 868


State 641

  307 expr_cast: "cast" '<' . $@13 type_declaration_no_options '>' $@14 expr

    $default  reduce using rule 305 ($@13)

    $@13  go to state 869


State 642

  310 expr_cast: "upcast" '<' . $@15 type_declaration_no_options '>' $@16 expr

    $default  reduce using rule 308 ($@15)

    $@15  go to state 870


State 643

  464 expr: "addr" '(' . expr ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 871
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 644

  240 expression_any: "pass" "end of expression" .

    $default  reduce using rule 240 (expression_any)


State 645

  313 expr_cast: "reinterpret" '<' . $@17 type_declaration_no_options '>' $@18 expr

    $default  reduce using rule 311 ($@17)

    $@17  go to state 872


State 646

   54 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 873


State 647

   55 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 874


State 648

   56 expression_goto: "goto" expr .
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771

    $default  reduce using rule 56 (expression_goto)


State 649

  495 expr: "unsafe" '(' . expr ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 875
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 650

   77 expression_unsafe: "unsafe" expression_block .

    $default  reduce using rule 77 (expression_unsafe)


State 651

  829 make_dim_decl: "fixed_array" '<' . $@100 type_declaration_no_options '>' $@101 '(' expr_list optional_comma ')'

    $default  reduce using rule 827 ($@100)

    $@100  go to state 876


State 652

  826 make_dim_decl: "fixed_array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 877
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 698
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 653

  807 make_struct_decl: "default" '<' . $@94 type_declaration_no_options '>' $@95

    $default  reduce using rule 805 ($@94)

    $@94  go to state 878


State 654

  816 make_tuple_call: "tuple" '<' . $@96 type_declaration_no_options '>' $@97 '(' make_struct_dim ')'

    $default  reduce using rule 814 ($@96)

    $@96  go to state 879


State 655

  813 make_tuple_call: "tuple" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 880
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 698
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 656

  804 make_struct_decl: "variant" '<' . $@92 type_declaration_no_options '>' $@93 '(' make_struct_dim ')'

    $default  reduce using rule 802 ($@92)

    $@92  go to state 881


State 657

  465 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  466     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 882


State 658

  285 expression_yield_no_pipe: "yield" "<-" . expr
  288 expression_yield: "yield" "<-" . expr_pipe

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "$ <|"                            shift, and go to state 463
    "@ <|"                            shift, and go to state 464
    "@@ <|"                           shift, and go to state 465
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expr_call_pipe          go to state 510
    expression_keyword      go to state 513
    expr_pipe               go to state 883
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_assign             go to state 631
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 884
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 659

  287 expression_yield: "yield" expr_pipe .

    $default  reduce using rule 287 (expression_yield)


State 660

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  284 expression_yield_no_pipe: "yield" expr .
  348 expr_assign: expr .
  349            | expr . '=' expr
  350            | expr . "<-" expr
  351            | expr . ":=" expr
  352            | expr . "&=" expr
  353            | expr . "|=" expr
  354            | expr . "^=" expr
  355            | expr . "&&=" expr
  356            | expr . "||=" expr
  357            | expr . "^^=" expr
  358            | expr . "+=" expr
  359            | expr . "-=" expr
  360            | expr . "*=" expr
  361            | expr . "/=" expr
  362            | expr . "%=" expr
  363            | expr . "<<=" expr
  364            | expr . ">>=" expr
  365            | expr . "<<<=" expr
  366            | expr . ">>>=" expr
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 719
    "as"    shift, and go to state 720
    "+="    shift, and go to state 845
    "-="    shift, and go to state 846
    "/="    shift, and go to state 847
    "*="    shift, and go to state 848
    "%="    shift, and go to state 849
    "&="    shift, and go to state 850
    "|="    shift, and go to state 851
    "^="    shift, and go to state 852
    "<<"    shift, and go to state 729
    ">>"    shift, and go to state 730
    "++"    shift, and go to state 731
    "--"    shift, and go to state 732
    "<="    shift, and go to state 733
    "<<="   shift, and go to state 853
    ">>="   shift, and go to state 854
    ">="    shift, and go to state 736
    "=="    shift, and go to state 737
    "!="    shift, and go to state 738
    "->"    shift, and go to state 739
    "<-"    shift, and go to state 855
    "??"    shift, and go to state 741
    "?."    shift, and go to state 742
    "?["    shift, and go to state 743
    "<|"    shift, and go to state 744
    "|>"    shift, and go to state 745
    ":="    shift, and go to state 746
    "<<<"   shift, and go to state 747
    ">>>"   shift, and go to state 748
    "<<<="  shift, and go to state 856
    ">>>="  shift, and go to state 857
    "&&"    shift, and go to state 751
    "||"    shift, and go to state 752
    "^^"    shift, and go to state 753
    "&&="   shift, and go to state 858
    "||="   shift, and go to state 859
    "^^="   shift, and go to state 860
    ".."    shift, and go to state 757
    '='     shift, and go to state 861
    '?'     shift, and go to state 759
    '|'     shift, and go to state 760
    '^'     shift, and go to state 761
    '&'     shift, and go to state 762
    '<'     shift, and go to state 763
    '>'     shift, and go to state 764
    '-'     shift, and go to state 765
    '+'     shift, and go to state 766
    '*'     shift, and go to state 767
    '/'     shift, and go to state 768
    '%'     shift, and go to state 769
    '.'     shift, and go to state 770
    '['     shift, and go to state 771
    '$'     shift, and go to state 496
    '@'     shift, and go to state 663

    " <|"     reduce using rule 348 (expr_assign)
    $default  reduce using rule 284 (expression_yield_no_pipe)

    block_or_lambda                go to state 705
    expr_full_block_assumed_piped  go to state 772


State 661

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  449     | "++" expr .
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 719
    "as"  shift, and go to state 720
    "++"  shift, and go to state 731
    "--"  shift, and go to state 732
    "->"  shift, and go to state 739
    "?."  shift, and go to state 742
    "?["  shift, and go to state 743
    "<|"  shift, and go to state 744
    "|>"  shift, and go to state 745
    '.'   shift, and go to state 770
    '['   shift, and go to state 771

    $default  reduce using rule 449 (expr)


State 662

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  450     | "--" expr .
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 719
    "as"  shift, and go to state 720
    "++"  shift, and go to state 731
    "--"  shift, and go to state 732
    "->"  shift, and go to state 739
    "?."  shift, and go to state 742
    "?["  shift, and go to state 743
    "<|"  shift, and go to state 744
    "|>"  shift, and go to state 745
    '.'   shift, and go to state 770
    '['   shift, and go to state 771

    $default  reduce using rule 450 (expr)


State 663

  326 block_or_lambda: '@' .
  327                | '@' . '@'

    '@'  shift, and go to state 885

    $default  reduce using rule 326 (block_or_lambda)


State 664

  336 expr_block: expression_block .

    $default  reduce using rule 336 (expr_block)


State 665

  337 expr_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 15

    $default  reduce using rule 117 (optional_annotation_list)

    optional_annotation_list  go to state 886


State 666

  260 expr_pipe: "$ <|" expr_block .

    $default  reduce using rule 260 (expr_pipe)


State 667

  258 expr_pipe: "@ <|" expr_block .

    $default  reduce using rule 258 (expr_pipe)


State 668

  259 expr_pipe: "@@ <|" expr_block .

    $default  reduce using rule 259 (expr_pipe)


State 669

  497 expr_mtag: "$$" '(' . expr ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 887
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 670

  498 expr_mtag: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 888
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 671

  499 expr_mtag: "$v" '(' . expr ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 889
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 672

  500 expr_mtag: "$b" '(' . expr ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 890
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 673

  501 expr_mtag: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 891
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 674

  503 expr_mtag: "$c" '(' . expr ')' '(' ')'
  504          | "$c" '(' . expr ')' '(' expr_list ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 892
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 675

  844 array_comprehension: "[[" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']'

    "$i"    shift, and go to state 611
    "name"  shift, and go to state 612

    variable_name_with_pos_list  go to state 893


State 676

  682 type_declaration_no_options: type_declaration_no_options . dim_list
  683                            | type_declaration_no_options . '[' ']'
  691                            | type_declaration_no_options . '-' '[' ']'
  692                            | type_declaration_no_options . "explicit"
  693                            | type_declaration_no_options . "const"
  694                            | type_declaration_no_options . '-' "const"
  695                            | type_declaration_no_options . '&'
  696                            | type_declaration_no_options . '-' '&'
  697                            | type_declaration_no_options . '#'
  698                            | type_declaration_no_options . "implicit"
  699                            | type_declaration_no_options . '-' '#'
  700                            | type_declaration_no_options . "==" "const"
  701                            | type_declaration_no_options . "==" '&'
  702                            | type_declaration_no_options . '?'
  706                            | type_declaration_no_options . "??"
  790 make_struct_decl: "[[" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  791                 | "[[" type_declaration_no_options . optional_block optional_trailing_delim_sqr_sqr
  792                 | "[[" type_declaration_no_options . '(' ')' optional_block optional_trailing_delim_sqr_sqr
  793                 | "[[" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  820 make_dim_decl: "[[" type_declaration_no_options . make_dim optional_trailing_semicolon_sqr_sqr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "const"                           shift, and go to state 399
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "where"                           shift, and go to state 894
    "reinterpret"                     shift, and go to state 450
    "implicit"                        shift, and go to state 400
    "explicit"                        shift, and go to state 401
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "=="                              shift, and go to state 402
    "??"                              shift, and go to state 403
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "$f"                              shift, and go to state 895
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 896
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '?'                               shift, and go to state 404
    '&'                               shift, and go to state 405
    '-'                               shift, and go to state 897
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 898
    '('                               shift, and go to state 899
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497
    '#'                               shift, and go to state 408

    $default  reduce using rule 776 (optional_block)

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 900
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    dim_list                go to state 409
    make_decl               go to state 543
    make_struct_fields      go to state 901
    make_struct_dim         go to state 902
    optional_block          go to state 903
    make_struct_decl        go to state 544
    make_tuple              go to state 904
    make_tuple_call         go to state 545
    make_dim                go to state 905
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 677

  845 array_comprehension: "[{" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "$i"    shift, and go to state 611
    "name"  shift, and go to state 612

    variable_name_with_pos_list  go to state 906


State 678

  682 type_declaration_no_options: type_declaration_no_options . dim_list
  683                            | type_declaration_no_options . '[' ']'
  691                            | type_declaration_no_options . '-' '[' ']'
  692                            | type_declaration_no_options . "explicit"
  693                            | type_declaration_no_options . "const"
  694                            | type_declaration_no_options . '-' "const"
  695                            | type_declaration_no_options . '&'
  696                            | type_declaration_no_options . '-' '&'
  697                            | type_declaration_no_options . '#'
  698                            | type_declaration_no_options . "implicit"
  699                            | type_declaration_no_options . '-' '#'
  700                            | type_declaration_no_options . "==" "const"
  701                            | type_declaration_no_options . "==" '&'
  702                            | type_declaration_no_options . '?'
  706                            | type_declaration_no_options . "??"
  794 make_struct_decl: "[{" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_cur_sqr
  795                 | "[{" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  821 make_dim_decl: "[{" type_declaration_no_options . make_dim optional_trailing_semicolon_cur_sqr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "const"                           shift, and go to state 399
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "implicit"                        shift, and go to state 400
    "explicit"                        shift, and go to state 401
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "=="                              shift, and go to state 402
    "??"                              shift, and go to state 403
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "$f"                              shift, and go to state 895
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 896
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '?'                               shift, and go to state 404
    '&'                               shift, and go to state 405
    '-'                               shift, and go to state 897
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 898
    '('                               shift, and go to state 907
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497
    '#'                               shift, and go to state 408

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 900
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    dim_list                go to state 409
    make_decl               go to state 543
    make_struct_fields      go to state 901
    make_struct_dim         go to state 908
    make_struct_decl        go to state 544
    make_tuple              go to state 904
    make_tuple_call         go to state 545
    make_dim                go to state 909
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 679

  847 array_comprehension: "{{" "for" . variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "$i"    shift, and go to state 611
    "name"  shift, and go to state 612

    variable_name_with_pos_list  go to state 910


State 680

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'
  811 make_map_tuple: expr . "=>" expr
  812               | expr .

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "=>"   shift, and go to state 911
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771

    $default  reduce using rule 812 (make_map_tuple)


State 681

  830 make_table: make_map_tuple .

    $default  reduce using rule 830 (make_table)


State 682

  831 make_table: make_table . "end of expression" make_map_tuple
  835 make_table_decl: "{{" make_table . optional_trailing_semicolon_cur_cur

    "end of code block"  shift, and go to state 912
    "end of expression"  shift, and go to state 913
    ";}}"                shift, and go to state 914

    optional_trailing_semicolon_cur_cur  go to state 915


State 683

  253 expression_keyword: "keyword" '<' . $@7 type_declaration_no_options_list '>' $@8 expr

    $default  reduce using rule 251 ($@7)

    $@7  go to state 916


State 684

  244 expr_keyword: "keyword" expr . expression_block
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 719
    "as"                   shift, and go to state 720
    "<<"                   shift, and go to state 729
    ">>"                   shift, and go to state 730
    "++"                   shift, and go to state 731
    "--"                   shift, and go to state 732
    "<="                   shift, and go to state 733
    ">="                   shift, and go to state 736
    "=="                   shift, and go to state 737
    "!="                   shift, and go to state 738
    "->"                   shift, and go to state 739
    "??"                   shift, and go to state 741
    "?."                   shift, and go to state 742
    "?["                   shift, and go to state 743
    "<|"                   shift, and go to state 744
    "|>"                   shift, and go to state 745
    "<<<"                  shift, and go to state 747
    ">>>"                  shift, and go to state 748
    "&&"                   shift, and go to state 751
    "||"                   shift, and go to state 752
    "^^"                   shift, and go to state 753
    ".."                   shift, and go to state 757
    "begin of code block"  shift, and go to state 284
    '?'                    shift, and go to state 759
    '|'                    shift, and go to state 760
    '^'                    shift, and go to state 761
    '&'                    shift, and go to state 762
    '<'                    shift, and go to state 763
    '>'                    shift, and go to state 764
    '-'                    shift, and go to state 765
    '+'                    shift, and go to state 766
    '*'                    shift, and go to state 767
    '/'                    shift, and go to state 768
    '%'                    shift, and go to state 769
    '.'                    shift, and go to state 770
    '['                    shift, and go to state 771

    expression_block  go to state 917


State 685

  256 expression_keyword: "type function" '<' . $@9 type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces

    $default  reduce using rule 254 ($@9)

    $@9  go to state 918


State 686

   29 string_builder_body: string_builder_body . character_sequence
   30                    | string_builder_body . "{" expr "}"
   31 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 162
    STRING_CHARACTER_ESC  shift, and go to state 163
    "end of the string"   shift, and go to state 919
    "{"                   shift, and go to state 920

    character_sequence  go to state 921


State 687

  846 array_comprehension: "begin of code block" "for" . variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "$i"    shift, and go to state 611
    "name"  shift, and go to state 612

    variable_name_with_pos_list  go to state 922


State 688

  832 expr_map_tuple_list: make_map_tuple .

    $default  reduce using rule 832 (expr_map_tuple_list)


State 689

  833 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  834 make_table_decl: "begin of code block" expr_map_tuple_list . optional_comma "end of code block"

    ','  shift, and go to state 923

    $default  reduce using rule 841 (optional_comma)

    optional_comma  go to state 924


State 690

  217 expression_block: "begin of code block" expressions "end of code block" "finally" . "begin of code block" expressions "end of code block"

    "begin of code block"  shift, and go to state 925


State 691

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  426 expr: '-' expr .
  427     | expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 719
    "as"  shift, and go to state 720
    "++"  shift, and go to state 731
    "--"  shift, and go to state 732
    "->"  shift, and go to state 739
    "?."  shift, and go to state 742
    "?["  shift, and go to state 743
    "<|"  shift, and go to state 744
    "|>"  shift, and go to state 745
    '.'   shift, and go to state 770
    '['   shift, and go to state 771

    $default  reduce using rule 426 (expr)


State 692

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  425 expr: '+' expr .
  427     | expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 719
    "as"  shift, and go to state 720
    "++"  shift, and go to state 731
    "--"  shift, and go to state 732
    "->"  shift, and go to state 739
    "?."  shift, and go to state 742
    "?["  shift, and go to state 743
    "<|"  shift, and go to state 744
    "|>"  shift, and go to state 745
    '.'   shift, and go to state 770
    '['   shift, and go to state 771

    $default  reduce using rule 425 (expr)


State 693

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  462     | '*' expr .
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 742
    "?["  shift, and go to state 743
    '.'   shift, and go to state 770
    '['   shift, and go to state 771

    $default  reduce using rule 462 (expr)


State 694

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  424 expr: '~' expr .
  427     | expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 719
    "as"  shift, and go to state 720
    "++"  shift, and go to state 731
    "--"  shift, and go to state 732
    "->"  shift, and go to state 739
    "?."  shift, and go to state 742
    "?["  shift, and go to state 743
    "<|"  shift, and go to state 744
    "|>"  shift, and go to state 745
    '.'   shift, and go to state 770
    '['   shift, and go to state 771

    $default  reduce using rule 424 (expr)


State 695

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  423 expr: '!' expr .
  427     | expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 719
    "as"  shift, and go to state 720
    "++"  shift, and go to state 731
    "--"  shift, and go to state 732
    "->"  shift, and go to state 739
    "?."  shift, and go to state 742
    "?["  shift, and go to state 743
    "<|"  shift, and go to state 744
    "|>"  shift, and go to state 745
    '.'   shift, and go to state 770
    '['   shift, and go to state 771

    $default  reduce using rule 423 (expr)


State 696

  843 array_comprehension: '[' "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 611
    "name"  shift, and go to state 612

    variable_name_with_pos_list  go to state 926


State 697

  321 expr_list: expr_list . ',' expr
  819 make_dim_decl: '[' expr_list . optional_comma ']'

    ','  shift, and go to state 927

    $default  reduce using rule 841 (optional_comma)

    optional_comma  go to state 928


State 698

  320 expr_list: expr .
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771

    $default  reduce using rule 320 (expr_list)


State 699

  321 expr_list: expr_list . ',' expr
  453 expr: '(' expr_list . optional_comma ')'

    ','  shift, and go to state 927

    $default  reduce using rule 841 (optional_comma)

    optional_comma  go to state 929


State 700

  327 block_or_lambda: '@' '@' .
  394 func_addr_expr: '@' '@' . func_addr_name
  397               | '@' '@' . '<' $@22 type_declaration_no_options '>' $@23 func_addr_name
  400               | '@' '@' . '<' $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name
  512 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 930
    "$c"    shift, and go to state 931
    "name"  shift, and go to state 59
    '<'     shift, and go to state 932

    $default  reduce using rule 327 (block_or_lambda)

    name_in_namespace  go to state 933
    func_addr_name     go to state 934


State 701

  238 expression_any: expression_label "end of expression" .

    $default  reduce using rule 238 (expression_any)


State 702

  239 expression_any: expression_goto "end of expression" .

    $default  reduce using rule 239 (expression_any)


State 703

   72 expression_if_then_else: if_or_static_if expr . expression_block expression_else
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 719
    "as"                   shift, and go to state 720
    "<<"                   shift, and go to state 729
    ">>"                   shift, and go to state 730
    "++"                   shift, and go to state 731
    "--"                   shift, and go to state 732
    "<="                   shift, and go to state 733
    ">="                   shift, and go to state 736
    "=="                   shift, and go to state 737
    "!="                   shift, and go to state 738
    "->"                   shift, and go to state 739
    "??"                   shift, and go to state 741
    "?."                   shift, and go to state 742
    "?["                   shift, and go to state 743
    "<|"                   shift, and go to state 744
    "|>"                   shift, and go to state 745
    "<<<"                  shift, and go to state 747
    ">>>"                  shift, and go to state 748
    "&&"                   shift, and go to state 751
    "||"                   shift, and go to state 752
    "^^"                   shift, and go to state 753
    ".."                   shift, and go to state 757
    "begin of code block"  shift, and go to state 284
    '?'                    shift, and go to state 759
    '|'                    shift, and go to state 760
    '^'                    shift, and go to state 761
    '&'                    shift, and go to state 762
    '<'                    shift, and go to state 763
    '>'                    shift, and go to state 764
    '-'                    shift, and go to state 765
    '+'                    shift, and go to state 766
    '*'                    shift, and go to state 767
    '/'                    shift, and go to state 768
    '%'                    shift, and go to state 769
    '.'                    shift, and go to state 770
    '['                    shift, and go to state 771

    expression_block  go to state 935


State 704

   74 expression_if_then_else: expression_if_one_liner "if" . $@3 expr expression_else_one_liner "end of expression"

    $default  reduce using rule 73 ($@3)

    $@3  go to state 936


State 705

  340 expr_full_block_assumed_piped: block_or_lambda . $@21 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

    $default  reduce using rule 339 ($@21)

    $@21  go to state 937


State 706

  219 expr_call_pipe: expression_keyword expr_full_block_assumed_piped .

    $default  reduce using rule 219 (expr_call_pipe)


State 707

  494 expr: name_in_namespace "name" .

    $default  reduce using rule 494 (expr)


State 708

  388 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  389                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  408 expr_call: name_in_namespace '(' . ')'
  409          | name_in_namespace '(' . make_struct_dim ')'
  410          | name_in_namespace '(' . expr_list ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "$f"                              shift, and go to state 895
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 896
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 938
    '('                               shift, and go to state 495
    ')'                               shift, and go to state 939
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 940
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 698
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_fields      go to state 901
    make_struct_dim         go to state 941
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 709

  225 expression_any: expression_delete "end of expression" .

    $default  reduce using rule 225 (expression_any)


State 710

  232 expression_any: expression_break "end of expression" .

    $default  reduce using rule 232 (expression_any)


State 711

  233 expression_any: expression_continue "end of expression" .

    $default  reduce using rule 233 (expression_any)


State 712

  281 expression_return: expression_return_no_pipe "end of expression" .

    $default  reduce using rule 281 (expression_return)


State 713

  286 expression_yield: expression_yield_no_pipe "end of expression" .

    $default  reduce using rule 286 (expression_yield)


State 714

  295 optional_in_scope: "inscope" .

    $default  reduce using rule 295 (optional_in_scope)


State 715

  303 expression_let: kwd_let optional_in_scope . let_variable_declaration
  304               | kwd_let optional_in_scope . tuple_expansion_variable_declaration

    "$i"    shift, and go to state 299
    "[["    shift, and go to state 942
    "name"  shift, and go to state 300
    '('     shift, and go to state 943

    tuple_expansion_variable_declaration  go to state 944
    let_variable_name_with_pos_list       go to state 301
    let_variable_declaration              go to state 945


State 716

  338 expr_full_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "[["  shift, and go to state 946

    $default  reduce using rule 334 (optional_capture_list)

    optional_capture_list  go to state 947


State 717

  257 expr_pipe: expr_assign " <|" . expr_block

    "begin of code block"  shift, and go to state 284
    '$'                    shift, and go to state 496
    '@'                    shift, and go to state 663

    expression_block  go to state 664
    block_or_lambda   go to state 665
    expr_block        go to state 948


State 718

  224 expression_any: expr_assign "end of expression" .

    $default  reduce using rule 224 (expression_any)


State 719

  471 expr: expr "is" . "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr "is" . basic_type_declaration
  473     | expr "is" . "name"
  511 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 949
    "bool"      shift, and go to state 310
    "void"      shift, and go to state 311
    "string"    shift, and go to state 312
    "int"       shift, and go to state 314
    "int2"      shift, and go to state 315
    "int3"      shift, and go to state 316
    "int4"      shift, and go to state 317
    "uint"      shift, and go to state 318
    "bitfield"  shift, and go to state 456
    "uint2"     shift, and go to state 320
    "uint3"     shift, and go to state 321
    "uint4"     shift, and go to state 322
    "float"     shift, and go to state 323
    "float2"    shift, and go to state 324
    "float3"    shift, and go to state 325
    "float4"    shift, and go to state 326
    "range"     shift, and go to state 327
    "urange"    shift, and go to state 328
    "range64"   shift, and go to state 329
    "urange64"  shift, and go to state 330
    "int64"     shift, and go to state 332
    "uint64"    shift, and go to state 333
    "double"    shift, and go to state 334
    "int8"      shift, and go to state 337
    "uint8"     shift, and go to state 338
    "int16"     shift, and go to state 339
    "uint16"    shift, and go to state 340
    "$f"        shift, and go to state 950
    "name"      shift, and go to state 951

    basic_type_declaration  go to state 952


State 720

  474 expr: expr "as" . "name"
  477     | expr "as" . "type" '<' $@30 type_declaration '>' $@31
  478     | expr "as" . basic_type_declaration
  509 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 953
    "bool"      shift, and go to state 310
    "void"      shift, and go to state 311
    "string"    shift, and go to state 312
    "int"       shift, and go to state 314
    "int2"      shift, and go to state 315
    "int3"      shift, and go to state 316
    "int4"      shift, and go to state 317
    "uint"      shift, and go to state 318
    "bitfield"  shift, and go to state 456
    "uint2"     shift, and go to state 320
    "uint3"     shift, and go to state 321
    "uint4"     shift, and go to state 322
    "float"     shift, and go to state 323
    "float2"    shift, and go to state 324
    "float3"    shift, and go to state 325
    "float4"    shift, and go to state 326
    "range"     shift, and go to state 327
    "urange"    shift, and go to state 328
    "range64"   shift, and go to state 329
    "urange64"  shift, and go to state 330
    "int64"     shift, and go to state 332
    "uint64"    shift, and go to state 333
    "double"    shift, and go to state 334
    "int8"      shift, and go to state 337
    "uint8"     shift, and go to state 338
    "int16"     shift, and go to state 339
    "uint16"    shift, and go to state 340
    "$f"        shift, and go to state 954
    "name"      shift, and go to state 955

    basic_type_declaration  go to state 956


State 721

  358 expr_assign: expr "+=" . expr
  379 expr_assign_pipe: expr "+=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "$ <|"                            shift, and go to state 957
    "@ <|"                            shift, and go to state 958
    "@@ <|"                           shift, and go to state 959
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expr_call_pipe          go to state 960
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_assign_pipe_right  go to state 961
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 962
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 722

  359 expr_assign: expr "-=" . expr
  380 expr_assign_pipe: expr "-=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "$ <|"                            shift, and go to state 957
    "@ <|"                            shift, and go to state 958
    "@@ <|"                           shift, and go to state 959
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expr_call_pipe          go to state 960
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_assign_pipe_right  go to state 963
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 964
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 723

  361 expr_assign: expr "/=" . expr
  382 expr_assign_pipe: expr "/=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "$ <|"                            shift, and go to state 957
    "@ <|"                            shift, and go to state 958
    "@@ <|"                           shift, and go to state 959
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expr_call_pipe          go to state 960
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_assign_pipe_right  go to state 965
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 966
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 724

  360 expr_assign: expr "*=" . expr
  381 expr_assign_pipe: expr "*=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "$ <|"                            shift, and go to state 957
    "@ <|"                            shift, and go to state 958
    "@@ <|"                           shift, and go to state 959
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expr_call_pipe          go to state 960
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_assign_pipe_right  go to state 967
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 968
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 725

  362 expr_assign: expr "%=" . expr
  383 expr_assign_pipe: expr "%=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "$ <|"                            shift, and go to state 957
    "@ <|"                            shift, and go to state 958
    "@@ <|"                           shift, and go to state 959
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expr_call_pipe          go to state 960
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_assign_pipe_right  go to state 969
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 970
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 726

  352 expr_assign: expr "&=" . expr
  373 expr_assign_pipe: expr "&=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "$ <|"                            shift, and go to state 957
    "@ <|"                            shift, and go to state 958
    "@@ <|"                           shift, and go to state 959
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expr_call_pipe          go to state 960
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_assign_pipe_right  go to state 971
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 972
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 727

  353 expr_assign: expr "|=" . expr
  374 expr_assign_pipe: expr "|=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "$ <|"                            shift, and go to state 957
    "@ <|"                            shift, and go to state 958
    "@@ <|"                           shift, and go to state 959
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expr_call_pipe          go to state 960
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_assign_pipe_right  go to state 973
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 974
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 728

  354 expr_assign: expr "^=" . expr
  375 expr_assign_pipe: expr "^=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "$ <|"                            shift, and go to state 957
    "@ <|"                            shift, and go to state 958
    "@@ <|"                           shift, and go to state 959
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expr_call_pipe          go to state 960
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_assign_pipe_right  go to state 975
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 976
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 729

  427 expr: expr "<<" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 977
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 730

  428 expr: expr ">>" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 978
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 731

  451 expr: expr "++" .

    $default  reduce using rule 451 (expr)


State 732

  452 expr: expr "--" .

    $default  reduce using rule 452 (expr)


State 733

  440 expr: expr "<=" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 979
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 734

  363 expr_assign: expr "<<=" . expr
  384 expr_assign_pipe: expr "<<=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "$ <|"                            shift, and go to state 957
    "@ <|"                            shift, and go to state 958
    "@@ <|"                           shift, and go to state 959
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expr_call_pipe          go to state 960
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_assign_pipe_right  go to state 980
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 981
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 735

  364 expr_assign: expr ">>=" . expr
  385 expr_assign_pipe: expr ">>=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "$ <|"                            shift, and go to state 957
    "@ <|"                            shift, and go to state 958
    "@@ <|"                           shift, and go to state 959
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expr_call_pipe          go to state 960
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_assign_pipe_right  go to state 982
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 983
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 736

  441 expr: expr ">=" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 984
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 737

  438 expr: expr "==" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 985
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 738

  439 expr: expr "!=" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 986
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 739

  390 expr_method_call: expr "->" . "name" '(' ')'
  391                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 987


State 740

  350 expr_assign: expr "<-" . expr
  372 expr_assign_pipe: expr "<-" . expr_assign_pipe_right

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "$ <|"                            shift, and go to state 957
    "@ <|"                            shift, and go to state 958
    "@@ <|"                           shift, and go to state 959
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expr_call_pipe          go to state 960
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_assign_pipe_right  go to state 988
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 989
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 741

  467 expr: expr "??" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 990
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 742

  458 expr: expr "?." . "name"
  506 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 991
    "name"  shift, and go to state 992


State 743

  456 expr: expr "?[" . expr ']'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 993
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 744

  491 expr: expr "<|" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 994
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 745

  492 expr: expr "|>" . expr
  493     | expr "|>" . basic_type_declaration

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 995
    expr_mtag               go to state 541
    basic_type_declaration  go to state 996
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 746

  351 expr_assign: expr ":=" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 997
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 747

  429 expr: expr "<<<" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 998
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 748

  430 expr: expr ">>>" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 999
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 749

  365 expr_assign: expr "<<<=" . expr
  386 expr_assign_pipe: expr "<<<=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "$ <|"                            shift, and go to state 957
    "@ <|"                            shift, and go to state 958
    "@@ <|"                           shift, and go to state 959
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expr_call_pipe          go to state 960
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_assign_pipe_right  go to state 1000
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1001
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 750

  366 expr_assign: expr ">>>=" . expr
  387 expr_assign_pipe: expr ">>>=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "$ <|"                            shift, and go to state 957
    "@ <|"                            shift, and go to state 958
    "@@ <|"                           shift, and go to state 959
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expr_call_pipe          go to state 960
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_assign_pipe_right  go to state 1002
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1003
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 751

  445 expr: expr "&&" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1004
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 752

  446 expr: expr "||" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1005
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 753

  447 expr: expr "^^" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1006
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 754

  355 expr_assign: expr "&&=" . expr
  376 expr_assign_pipe: expr "&&=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "$ <|"                            shift, and go to state 957
    "@ <|"                            shift, and go to state 958
    "@@ <|"                           shift, and go to state 959
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expr_call_pipe          go to state 960
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_assign_pipe_right  go to state 1007
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1008
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 755

  356 expr_assign: expr "||=" . expr
  377 expr_assign_pipe: expr "||=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "$ <|"                            shift, and go to state 957
    "@ <|"                            shift, and go to state 958
    "@@ <|"                           shift, and go to state 959
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expr_call_pipe          go to state 960
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_assign_pipe_right  go to state 1009
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1010
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 756

  357 expr_assign: expr "^^=" . expr
  378 expr_assign_pipe: expr "^^=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "$ <|"                            shift, and go to state 957
    "@ <|"                            shift, and go to state 958
    "@@ <|"                           shift, and go to state 959
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expr_call_pipe          go to state 960
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_assign_pipe_right  go to state 1011
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1012
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 757

  448 expr: expr ".." . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1013
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 758

  349 expr_assign: expr '=' . expr
  371 expr_assign_pipe: expr '=' . expr_assign_pipe_right

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "$ <|"                            shift, and go to state 957
    "@ <|"                            shift, and go to state 958
    "@@ <|"                           shift, and go to state 959
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expr_call_pipe          go to state 960
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_assign_pipe_right  go to state 1014
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1015
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 759

  468 expr: expr '?' . expr ':' expr
  479     | expr '?' . "as" "name"
  482     | expr '?' . "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr '?' . "as" basic_type_declaration
  510 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "as"                              shift, and go to state 1016
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1017
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 760

  443 expr: expr '|' . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1018
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 761

  444 expr: expr '^' . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1019
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 762

  442 expr: expr '&' . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1020
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 763

  436 expr: expr '<' . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1021
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 764

  437 expr: expr '>' . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1022
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 765

  432 expr: expr '-' . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1023
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 766

  431 expr: expr '+' . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1024
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 767

  433 expr: expr '*' . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1025
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 768

  434 expr: expr '/' . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1026
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 769

  435 expr: expr '%' . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1027
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 770

  401 expr_field: expr '.' . "name"
  402           | expr '.' . '.' "name"
  403           | expr '.' . "name" '(' ')'
  404           | expr '.' . "name" '(' expr_list ')'
  407           | expr '.' . $@26 error $@27
  455 expr: expr '.' . '[' expr ']'
  457     | expr '.' . "?[" expr ']'
  459     | expr '.' . "?." "name"
  505 expr_mtag: expr '.' . "$f" '(' expr ')'
  507          | expr '.' . '.' "$f" '(' expr ')'
  508          | expr '.' . "?." "$f" '(' expr ')'

    "?."    shift, and go to state 1028
    "?["    shift, and go to state 1029
    "$f"    shift, and go to state 1030
    "name"  shift, and go to state 1031
    '.'     shift, and go to state 1032
    '['     shift, and go to state 1033

    $default  reduce using rule 405 ($@26)

    $@26  go to state 1034


State 771

  454 expr: expr '[' . expr ']'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1035
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 772

  218 expr_call_pipe: expr expr_full_block_assumed_piped .

    $default  reduce using rule 218 (expr_call_pipe)


State 773

  411 expr_call: basic_type_declaration '(' . ')'
  412          | basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    ')'                               shift, and go to state 1036
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 1037
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 698
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 774

  587 enum_list: enum_list "name" "end of expression" .

    $default  reduce using rule 587 (enum_list)


State 775

  588 enum_list: enum_list "name" '=' . expr "end of expression"

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1038
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 776

  605 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list $@42 "end of code block" .

    $default  reduce using rule 605 (enum_declaration)


State 777

  586 enum_list: enum_list . "end of expression"
  587          | enum_list . "name" "end of expression"
  588          | enum_list . "name" '=' expr "end of expression"
  608 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list . $@44 "end of code block"

    "name"               shift, and go to state 549
    "end of expression"  shift, and go to state 550

    $default  reduce using rule 607 ($@44)

    $@44  go to state 1039


State 778

  620 optional_struct_variable_declaration_list: "begin of code block" struct_variable_declaration_list "end of code block" .

    $default  reduce using rule 620 (optional_struct_variable_declaration_list)


State 779

  118 optional_annotation_list: '[' . annotation_list ']'
  533 struct_variable_declaration_list: struct_variable_declaration_list '[' . annotation_list ']' "end of expression"

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 68
    annotation_list               go to state 1040
    name_in_namespace             go to state 70


State 780

  530 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header "end of expression"
  532                                 | struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block

    "def"  shift, and go to state 1041


State 781

  528 struct_variable_declaration_list: struct_variable_declaration_list $@34 . structure_variable_declaration "end of expression"

    "[["  shift, and go to state 218

    $default  reduce using rule 513 (optional_field_annotation)

    optional_field_annotation       go to state 1042
    structure_variable_declaration  go to state 1043


State 782

  565 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 565 (let_variable_name_with_pos_list)


State 783

  568 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1044


State 784

  569 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression" .

    $default  reduce using rule 569 (let_variable_declaration)


State 785

  570 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"
  571                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "$ <|"                            shift, and go to state 463
    "@ <|"                            shift, and go to state 464
    "@@ <|"                           shift, and go to state 465
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expr_call_pipe          go to state 510
    expression_keyword      go to state 513
    expr_pipe               go to state 1045
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_assign             go to state 631
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1046
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 786

  573 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 573 (let_variable_declaration)


State 787

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  348 expr_assign: expr .
  349            | expr . '=' expr
  350            | expr . "<-" expr
  351            | expr . ":=" expr
  352            | expr . "&=" expr
  353            | expr . "|=" expr
  354            | expr . "^=" expr
  355            | expr . "&&=" expr
  356            | expr . "||=" expr
  357            | expr . "^^=" expr
  358            | expr . "+=" expr
  359            | expr . "-=" expr
  360            | expr . "*=" expr
  361            | expr . "/=" expr
  362            | expr . "%=" expr
  363            | expr . "<<=" expr
  364            | expr . ">>=" expr
  365            | expr . "<<<=" expr
  366            | expr . ">>>=" expr
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'
  572 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 719
    "as"                 shift, and go to state 720
    "+="                 shift, and go to state 845
    "-="                 shift, and go to state 846
    "/="                 shift, and go to state 847
    "*="                 shift, and go to state 848
    "%="                 shift, and go to state 849
    "&="                 shift, and go to state 850
    "|="                 shift, and go to state 851
    "^="                 shift, and go to state 852
    "<<"                 shift, and go to state 729
    ">>"                 shift, and go to state 730
    "++"                 shift, and go to state 731
    "--"                 shift, and go to state 732
    "<="                 shift, and go to state 733
    "<<="                shift, and go to state 853
    ">>="                shift, and go to state 854
    ">="                 shift, and go to state 736
    "=="                 shift, and go to state 737
    "!="                 shift, and go to state 738
    "->"                 shift, and go to state 739
    "<-"                 shift, and go to state 855
    "??"                 shift, and go to state 741
    "?."                 shift, and go to state 742
    "?["                 shift, and go to state 743
    "<|"                 shift, and go to state 744
    "|>"                 shift, and go to state 745
    ":="                 shift, and go to state 746
    "<<<"                shift, and go to state 747
    ">>>"                shift, and go to state 748
    "<<<="               shift, and go to state 856
    ">>>="               shift, and go to state 857
    "&&"                 shift, and go to state 751
    "||"                 shift, and go to state 752
    "^^"                 shift, and go to state 753
    "&&="                shift, and go to state 858
    "||="                shift, and go to state 859
    "^^="                shift, and go to state 860
    ".."                 shift, and go to state 757
    "end of expression"  shift, and go to state 1047
    '='                  shift, and go to state 861
    '?'                  shift, and go to state 759
    '|'                  shift, and go to state 760
    '^'                  shift, and go to state 761
    '&'                  shift, and go to state 762
    '<'                  shift, and go to state 763
    '>'                  shift, and go to state 764
    '-'                  shift, and go to state 765
    '+'                  shift, and go to state 766
    '*'                  shift, and go to state 767
    '/'                  shift, and go to state 768
    '%'                  shift, and go to state 769
    '.'                  shift, and go to state 770
    '['                  shift, and go to state 771
    '$'                  shift, and go to state 496
    '@'                  shift, and go to state 663

    $default  reduce using rule 348 (expr_assign)

    block_or_lambda                go to state 705
    expr_full_block_assumed_piped  go to state 772


State 788

  686 type_declaration_no_options: "type" '<' $@49 type_declaration . '>' $@50
  744 type_declaration: type_declaration . '|' type_declaration_no_options
  745                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1048


State 789

  709 type_declaration_no_options: "array" '<' $@54 type_declaration . '>' $@55
  744 type_declaration: type_declaration . '|' type_declaration_no_options
  745                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1049


State 790

  712 type_declaration_no_options: "table" '<' $@56 table_type_pair . '>' $@57

    '>'  shift, and go to state 1050


State 791

  674 table_type_pair: type_declaration .
  675                | type_declaration . "end of expression" type_declaration
  744 type_declaration: type_declaration . '|' type_declaration_no_options
  745                 | type_declaration . '|' '#'

    "end of expression"  shift, and go to state 1051
    '|'                  shift, and go to state 410

    $default  reduce using rule 674 (table_type_pair)


State 792

  687 type_declaration_no_options: "typedecl" '(' expr ')' .

    $default  reduce using rule 687 (type_declaration_no_options)


State 793

  715 type_declaration_no_options: "iterator" '<' $@58 type_declaration . '>' $@59
  744 type_declaration: type_declaration . '|' type_declaration_no_options
  745                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1052


State 794

  705 type_declaration_no_options: "smart_ptr" '<' $@52 type_declaration . '>' $@53
  744 type_declaration: type_declaration . '|' type_declaration_no_options
  745                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1053


State 795

  664 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 664 (auto_type_declaration)


State 796

  666 bitfield_bits: "name" .

    $default  reduce using rule 666 (bitfield_bits)


State 797

  667 bitfield_bits: bitfield_bits . "end of expression" "name"
  673 bitfield_type_declaration: "bitfield" '<' $@47 bitfield_bits . '>' $@48

    "end of expression"  shift, and go to state 1054
    '>'                  shift, and go to state 1055


State 798

  719 type_declaration_no_options: "block" '<' $@60 type_declaration . '>' $@61
  744 type_declaration: type_declaration . '|' type_declaration_no_options
  745                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1056


State 799

  722 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list . optional_function_type '>' $@63

    ':'  shift, and go to state 367

    $default  reduce using rule 122 (optional_function_type)

    optional_function_type  go to state 1057


State 800

  726 type_declaration_no_options: "function" '<' $@64 type_declaration . '>' $@65
  744 type_declaration: type_declaration . '|' type_declaration_no_options
  745                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1058


State 801

  729 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list . optional_function_type '>' $@67

    ':'  shift, and go to state 367

    $default  reduce using rule 122 (optional_function_type)

    optional_function_type  go to state 1059


State 802

  733 type_declaration_no_options: "lambda" '<' $@68 type_declaration . '>' $@69
  744 type_declaration: type_declaration . '|' type_declaration_no_options
  745                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1060


State 803

  736 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list . optional_function_type '>' $@71

    ':'  shift, and go to state 367

    $default  reduce using rule 122 (optional_function_type)

    optional_function_type  go to state 1061


State 804

  540 tuple_type_list: tuple_type .

    $default  reduce using rule 540 (tuple_type_list)


State 805

  541 tuple_type_list: tuple_type_list . "end of expression" tuple_type
  739 type_declaration_no_options: "tuple" '<' $@72 tuple_type_list . '>' $@73

    "end of expression"  shift, and go to state 1062
    '>'                  shift, and go to state 1063


State 806

  546 variant_type_list: variant_type .

    $default  reduce using rule 546 (variant_type_list)


State 807

  547 variant_type_list: variant_type_list . "end of expression" variant_type
  742 type_declaration_no_options: "variant" '<' $@74 variant_type_list . '>' $@75

    "end of expression"  shift, and go to state 1064
    '>'                  shift, and go to state 1065


State 808

  665 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 665 (auto_type_declaration)


State 809

  690 type_declaration_no_options: '$' name_in_namespace '<' $@51 . type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    type_declaration_no_options_list  go to state 1066
    name_in_namespace                 go to state 345
    basic_type_declaration            go to state 346
    structure_type_declaration        go to state 347
    auto_type_declaration             go to state 348
    bitfield_type_declaration         go to state 349
    type_declaration_no_options       go to state 350
    type_declaration                  go to state 1067


State 810

  688 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list . ')'

    ')'  shift, and go to state 1068


State 811

  246 optional_expr_list: expr_list .
  321 expr_list: expr_list . ',' expr

    ','  shift, and go to state 844

    $default  reduce using rule 246 (optional_expr_list)


State 812

  691 type_declaration_no_options: type_declaration_no_options '-' '[' ']' .

    $default  reduce using rule 691 (type_declaration_no_options)


State 813

  676 dim_list: '[' expr ']' .

    $default  reduce using rule 676 (dim_list)


State 814

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'
  677 dim_list: dim_list '[' expr . ']'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771
    ']'    shift, and go to state 1069


State 815

  670 bitfield_alias_bits: bitfield_alias_bits "name" "end of expression" .

    $default  reduce using rule 670 (bitfield_alias_bits)


State 816

  760 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block" .

    $default  reduce using rule 760 (bitfield_alias_declaration)


State 817

  539 tuple_type: "name" ':' . type_declaration

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1070


State 818

  544 tuple_alias_type_list: tuple_alias_type_list tuple_type "end of expression" .

    $default  reduce using rule 544 (tuple_alias_type_list)


State 819

  750 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block" .

    $default  reduce using rule 750 (tuple_alias_declaration)


State 820

  545 variant_type: "name" ':' . type_declaration

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1071


State 821

  550 variant_alias_type_list: variant_alias_type_list variant_type "end of expression" .

    $default  reduce using rule 550 (variant_alias_type_list)


State 822

  755 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block" .

    $default  reduce using rule 755 (variant_alias_declaration)


State 823

  535 function_argument_declaration: "$a" '(' expr ')' .

    $default  reduce using rule 535 (function_argument_declaration)


State 824

  625 variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1072
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 825

  626 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1073


State 826

  552 copy_or_move: "<-" .

    $default  reduce using rule 552 (copy_or_move)


State 827

  627 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  628                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 1074


State 828

  551 copy_or_move: '=' .

    $default  reduce using rule 551 (copy_or_move)


State 829

  555 variable_declaration: variable_name_with_pos_list ':' . type_declaration
  556                     | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1075


State 830

  554 variable_declaration: variable_name_with_pos_list '&' .

    $default  reduce using rule 554 (variable_declaration)


State 831

  557 variable_declaration: variable_name_with_pos_list copy_or_move . expr
  558                     | variable_name_with_pos_list copy_or_move . expr_pipe

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "$ <|"                            shift, and go to state 463
    "@ <|"                            shift, and go to state 464
    "@@ <|"                           shift, and go to state 465
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expr_call_pipe          go to state 510
    expression_keyword      go to state 513
    expr_pipe               go to state 1076
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_assign             go to state 631
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1077
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 832

  798 make_struct_decl: "struct" '<' $@88 . type_declaration_no_options '>' $@89 '(' make_struct_dim ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1078


State 833

  801 make_struct_decl: "class" '<' $@90 . type_declaration_no_options '>' $@91 '(' make_struct_dim ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1079


State 834

   78 expression_while_loop: "while" expr expression_block .

    $default  reduce using rule 78 (expression_while_loop)


State 835

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list . "in" expr_list expression_block
  627 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  628                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 1080
    ','   shift, and go to state 827


State 836

  269 new_type_declaration: '<' $@11 . type_declaration '>' $@12

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1081


State 837

  272 expr_new: "new" new_type_declaration '(' . ')'
  273         | "new" new_type_declaration '(' . expr_list ')'
  274         | "new" new_type_declaration '(' . make_struct_dim ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "$f"                              shift, and go to state 895
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 896
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    ')'                               shift, and go to state 1082
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 1083
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 698
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_fields      go to state 901
    make_struct_dim         go to state 1084
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 838

  317 expr_type_info: "typeinfo" '(' name_in_namespace . expr ')'
  318               | "typeinfo" '(' name_in_namespace . '<' "name" '>' expr ')'
  319               | "typeinfo" '(' name_in_namespace . '<' "name" "end of expression" "name" '>' expr ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '<'                               shift, and go to state 1085
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1086
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 839

  316 expr_type_decl: "type" '<' $@19 . type_declaration '>' $@20

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1087


State 840

  825 make_dim_decl: "array" '<' $@98 . type_declaration_no_options '>' $@99 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1088


State 841

  321 expr_list: expr_list . ',' expr
  822 make_dim_decl: "array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 927

    $default  reduce using rule 841 (optional_comma)

    optional_comma  go to state 1089


State 842

  283 expression_return: "return" "<-" expr_pipe .

    $default  reduce using rule 283 (expression_return)


State 843

  280 expression_return_no_pipe: "return" "<-" expr_list .
  321 expr_list: expr_list . ',' expr

    ','  shift, and go to state 844

    $default  reduce using rule 280 (expression_return_no_pipe)


State 844

  321 expr_list: expr_list ',' . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1090
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 845

  358 expr_assign: expr "+=" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1091
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 846

  359 expr_assign: expr "-=" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1092
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 847

  361 expr_assign: expr "/=" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1093
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 848

  360 expr_assign: expr "*=" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1094
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 849

  362 expr_assign: expr "%=" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1095
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 850

  352 expr_assign: expr "&=" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1096
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 851

  353 expr_assign: expr "|=" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1097
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 852

  354 expr_assign: expr "^=" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1098
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 853

  363 expr_assign: expr "<<=" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1099
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 854

  364 expr_assign: expr ">>=" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1100
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 855

  350 expr_assign: expr "<-" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1101
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 856

  365 expr_assign: expr "<<<=" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1102
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 857

  366 expr_assign: expr ">>>=" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1103
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 858

  355 expr_assign: expr "&&=" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1104
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 859

  356 expr_assign: expr "||=" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1105
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 860

  357 expr_assign: expr "^^=" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1106
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 861

  349 expr_assign: expr '=' . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1107
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 862

  289 expression_try_catch: "try" expression_block "recover" . expression_block

    "begin of code block"  shift, and go to state 284

    expression_block  go to state 1108


State 863

  682 type_declaration_no_options: type_declaration_no_options . dim_list
  683                            | type_declaration_no_options . '[' ']'
  691                            | type_declaration_no_options . '-' '[' ']'
  692                            | type_declaration_no_options . "explicit"
  693                            | type_declaration_no_options . "const"
  694                            | type_declaration_no_options . '-' "const"
  695                            | type_declaration_no_options . '&'
  696                            | type_declaration_no_options . '-' '&'
  697                            | type_declaration_no_options . '#'
  698                            | type_declaration_no_options . "implicit"
  699                            | type_declaration_no_options . '-' '#'
  700                            | type_declaration_no_options . "==" "const"
  701                            | type_declaration_no_options . "==" '&'
  702                            | type_declaration_no_options . '?'
  706                            | type_declaration_no_options . "??"
  837 make_table_decl: "table" '<' type_declaration_no_options . '>' '(' expr_map_tuple_list optional_comma ')'
  838                | "table" '<' type_declaration_no_options . "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    "const"              shift, and go to state 399
    "implicit"           shift, and go to state 400
    "explicit"           shift, and go to state 401
    "=="                 shift, and go to state 402
    "??"                 shift, and go to state 403
    "end of expression"  shift, and go to state 1109
    '?'                  shift, and go to state 404
    '&'                  shift, and go to state 405
    '>'                  shift, and go to state 1110
    '-'                  shift, and go to state 406
    '['                  shift, and go to state 407
    '#'                  shift, and go to state 408

    dim_list  go to state 409


State 864

  833 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  836 make_table_decl: "table" '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 923

    $default  reduce using rule 841 (optional_comma)

    optional_comma  go to state 1111


State 865

  266 expression_delete: "delete" "explicit" expr .
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771

    $default  reduce using rule 266 (expression_delete)


State 866

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  463     | "deref" '(' expr . ')'
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771
    ')'    shift, and go to state 1112


State 867

   79 expression_with: "with" expr expression_block .

    $default  reduce using rule 79 (expression_with)


State 868

   81 expression_with_alias: "assume" "name" '=' . $@5 expr

    $default  reduce using rule 80 ($@5)

    $@5  go to state 1113


State 869

  307 expr_cast: "cast" '<' $@13 . type_declaration_no_options '>' $@14 expr

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1114


State 870

  310 expr_cast: "upcast" '<' $@15 . type_declaration_no_options '>' $@16 expr

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1115


State 871

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  464     | "addr" '(' expr . ')'
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771
    ')'    shift, and go to state 1116


State 872

  313 expr_cast: "reinterpret" '<' $@17 . type_declaration_no_options '>' $@18 expr

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1117


State 873

   54 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 54 (expression_label)


State 874

   55 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 55 (expression_goto)


State 875

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  495     | "unsafe" '(' expr . ')'
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771
    ')'    shift, and go to state 1118


State 876

  829 make_dim_decl: "fixed_array" '<' $@100 . type_declaration_no_options '>' $@101 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1119


State 877

  321 expr_list: expr_list . ',' expr
  826 make_dim_decl: "fixed_array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 927

    $default  reduce using rule 841 (optional_comma)

    optional_comma  go to state 1120


State 878

  807 make_struct_decl: "default" '<' $@94 . type_declaration_no_options '>' $@95

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1121


State 879

  816 make_tuple_call: "tuple" '<' $@96 . type_declaration_no_options '>' $@97 '(' make_struct_dim ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1122


State 880

  321 expr_list: expr_list . ',' expr
  813 make_tuple_call: "tuple" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 927

    $default  reduce using rule 841 (optional_comma)

    optional_comma  go to state 1123


State 881

  804 make_struct_decl: "variant" '<' $@92 . type_declaration_no_options '>' $@93 '(' make_struct_dim ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1124


State 882

  465 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  466     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  682 type_declaration_no_options: type_declaration_no_options . dim_list
  683                            | type_declaration_no_options . '[' ']'
  691                            | type_declaration_no_options . '-' '[' ']'
  692                            | type_declaration_no_options . "explicit"
  693                            | type_declaration_no_options . "const"
  694                            | type_declaration_no_options . '-' "const"
  695                            | type_declaration_no_options . '&'
  696                            | type_declaration_no_options . '-' '&'
  697                            | type_declaration_no_options . '#'
  698                            | type_declaration_no_options . "implicit"
  699                            | type_declaration_no_options . '-' '#'
  700                            | type_declaration_no_options . "==" "const"
  701                            | type_declaration_no_options . "==" '&'
  702                            | type_declaration_no_options . '?'
  706                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1125
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 883

  288 expression_yield: "yield" "<-" expr_pipe .

    $default  reduce using rule 288 (expression_yield)


State 884

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  285 expression_yield_no_pipe: "yield" "<-" expr .
  348 expr_assign: expr .
  349            | expr . '=' expr
  350            | expr . "<-" expr
  351            | expr . ":=" expr
  352            | expr . "&=" expr
  353            | expr . "|=" expr
  354            | expr . "^=" expr
  355            | expr . "&&=" expr
  356            | expr . "||=" expr
  357            | expr . "^^=" expr
  358            | expr . "+=" expr
  359            | expr . "-=" expr
  360            | expr . "*=" expr
  361            | expr . "/=" expr
  362            | expr . "%=" expr
  363            | expr . "<<=" expr
  364            | expr . ">>=" expr
  365            | expr . "<<<=" expr
  366            | expr . ">>>=" expr
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 719
    "as"    shift, and go to state 720
    "+="    shift, and go to state 845
    "-="    shift, and go to state 846
    "/="    shift, and go to state 847
    "*="    shift, and go to state 848
    "%="    shift, and go to state 849
    "&="    shift, and go to state 850
    "|="    shift, and go to state 851
    "^="    shift, and go to state 852
    "<<"    shift, and go to state 729
    ">>"    shift, and go to state 730
    "++"    shift, and go to state 731
    "--"    shift, and go to state 732
    "<="    shift, and go to state 733
    "<<="   shift, and go to state 853
    ">>="   shift, and go to state 854
    ">="    shift, and go to state 736
    "=="    shift, and go to state 737
    "!="    shift, and go to state 738
    "->"    shift, and go to state 739
    "<-"    shift, and go to state 855
    "??"    shift, and go to state 741
    "?."    shift, and go to state 742
    "?["    shift, and go to state 743
    "<|"    shift, and go to state 744
    "|>"    shift, and go to state 745
    ":="    shift, and go to state 746
    "<<<"   shift, and go to state 747
    ">>>"   shift, and go to state 748
    "<<<="  shift, and go to state 856
    ">>>="  shift, and go to state 857
    "&&"    shift, and go to state 751
    "||"    shift, and go to state 752
    "^^"    shift, and go to state 753
    "&&="   shift, and go to state 858
    "||="   shift, and go to state 859
    "^^="   shift, and go to state 860
    ".."    shift, and go to state 757
    '='     shift, and go to state 861
    '?'     shift, and go to state 759
    '|'     shift, and go to state 760
    '^'     shift, and go to state 761
    '&'     shift, and go to state 762
    '<'     shift, and go to state 763
    '>'     shift, and go to state 764
    '-'     shift, and go to state 765
    '+'     shift, and go to state 766
    '*'     shift, and go to state 767
    '/'     shift, and go to state 768
    '%'     shift, and go to state 769
    '.'     shift, and go to state 770
    '['     shift, and go to state 771
    '$'     shift, and go to state 496
    '@'     shift, and go to state 663

    " <|"     reduce using rule 348 (expr_assign)
    $default  reduce using rule 285 (expression_yield_no_pipe)

    block_or_lambda                go to state 705
    expr_full_block_assumed_piped  go to state 772


State 885

  327 block_or_lambda: '@' '@' .

    $default  reduce using rule 327 (block_or_lambda)


State 886

  337 expr_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "[["  shift, and go to state 946

    $default  reduce using rule 334 (optional_capture_list)

    optional_capture_list  go to state 1126


State 887

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  497 expr_mtag: "$$" '(' expr . ')'
  505          | expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771
    ')'    shift, and go to state 1127


State 888

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  498 expr_mtag: "$i" '(' expr . ')'
  505          | expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771
    ')'    shift, and go to state 1128


State 889

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  499 expr_mtag: "$v" '(' expr . ')'
  505          | expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771
    ')'    shift, and go to state 1129


State 890

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  500 expr_mtag: "$b" '(' expr . ')'
  505          | expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771
    ')'    shift, and go to state 1130


State 891

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  501 expr_mtag: "$a" '(' expr . ')'
  505          | expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771
    ')'    shift, and go to state 1131


State 892

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  503 expr_mtag: "$c" '(' expr . ')' '(' ')'
  504          | "$c" '(' expr . ')' '(' expr_list ')'
  505          | expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771
    ')'    shift, and go to state 1132


State 893

  627 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  628                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  844 array_comprehension: "[[" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']' ']'

    "in"  shift, and go to state 1133
    ','   shift, and go to state 827


State 894

  777 optional_block: "where" . expr_block

    "begin of code block"  shift, and go to state 284
    '$'                    shift, and go to state 496
    '@'                    shift, and go to state 663

    expression_block  go to state 664
    block_or_lambda   go to state 665
    expr_block        go to state 1134


State 895

  770 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  771                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1135


State 896

  262 name_in_namespace: "name" .
  263                  | "name" . "::" "name"
  766 make_struct_fields: "name" . copy_or_move expr
  767                   | "name" . ":=" expr

    "<-"  shift, and go to state 826
    ":="  shift, and go to state 1136
    "::"  shift, and go to state 98
    '='   shift, and go to state 828

    $default  reduce using rule 262 (name_in_namespace)

    copy_or_move  go to state 1137


State 897

  426 expr: '-' . expr
  691 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  694                            | type_declaration_no_options '-' . "const"
  696                            | type_declaration_no_options '-' . '&'
  699                            | type_declaration_no_options '-' . '#'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "const"                           shift, and go to state 589
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '&'                               shift, and go to state 590
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 1138
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497
    '#'                               shift, and go to state 592

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 691
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 898

  676 dim_list: '[' . expr ']'
  683 type_declaration_no_options: type_declaration_no_options '[' . ']'
  819 make_dim_decl: '[' . expr_list optional_comma ']'
  843 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "for"                             shift, and go to state 696
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    ']'                               shift, and go to state 593
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 697
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1139
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 899

  453 expr: '(' . expr_list optional_comma ')'
  792 make_struct_decl: "[[" type_declaration_no_options '(' . ')' optional_block optional_trailing_delim_sqr_sqr
  793                 | "[[" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    ')'                               shift, and go to state 1140
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 699
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 698
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 900

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'
  808 make_tuple: expr .
  809           | expr . "=>" expr

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "=>"   shift, and go to state 1141
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771

    $default  reduce using rule 808 (make_tuple)


State 901

  768 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  769                   | make_struct_fields . ',' "name" ":=" expr
  772                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  773                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  774 make_struct_dim: make_struct_fields .

    ','  shift, and go to state 1142

    $default  reduce using rule 774 (make_struct_dim)


State 902

  775 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  790 make_struct_decl: "[[" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"              shift, and go to state 894
    "end of expression"  shift, and go to state 1143

    $default  reduce using rule 776 (optional_block)

    optional_block  go to state 1144


State 903

  791 make_struct_decl: "[[" type_declaration_no_options optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1145
    ",]]"  shift, and go to state 1146
    ']'    shift, and go to state 1147

    optional_trailing_delim_sqr_sqr  go to state 1148


State 904

  810 make_tuple: make_tuple . ',' expr
  817 make_dim: make_tuple .

    ','  shift, and go to state 1149

    $default  reduce using rule 817 (make_dim)


State 905

  818 make_dim: make_dim . "end of expression" make_tuple
  820 make_dim_decl: "[[" type_declaration_no_options make_dim . optional_trailing_semicolon_sqr_sqr

    "end of expression"  shift, and go to state 1150
    ";]]"                shift, and go to state 1151
    ']'                  shift, and go to state 1152

    optional_trailing_semicolon_sqr_sqr  go to state 1153


State 906

  627 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  628                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  845 array_comprehension: "[{" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "in"  shift, and go to state 1154
    ','   shift, and go to state 827


State 907

  453 expr: '(' . expr_list optional_comma ')'
  795 make_struct_decl: "[{" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    ')'                               shift, and go to state 1155
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 699
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 698
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 908

  775 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  794 make_struct_decl: "[{" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"              shift, and go to state 894
    "end of expression"  shift, and go to state 1143

    $default  reduce using rule 776 (optional_block)

    optional_block  go to state 1156


State 909

  818 make_dim: make_dim . "end of expression" make_tuple
  821 make_dim_decl: "[{" type_declaration_no_options make_dim . optional_trailing_semicolon_cur_sqr

    "end of code block"  shift, and go to state 1157
    "end of expression"  shift, and go to state 1150
    ";}]"                shift, and go to state 1158

    optional_trailing_semicolon_cur_sqr  go to state 1159


State 910

  627 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  628                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  847 array_comprehension: "{{" "for" variable_name_with_pos_list . "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "in"  shift, and go to state 1160
    ','   shift, and go to state 827


State 911

  811 make_map_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1161
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 912

  778 optional_trailing_semicolon_cur_cur: "end of code block" . "end of code block"

    "end of code block"  shift, and go to state 1162


State 913

  831 make_table: make_table "end of expression" . make_map_tuple

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 680
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_map_tuple          go to state 1163
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 914

  779 optional_trailing_semicolon_cur_cur: ";}}" .

    $default  reduce using rule 779 (optional_trailing_semicolon_cur_cur)


State 915

  835 make_table_decl: "{{" make_table optional_trailing_semicolon_cur_cur .

    $default  reduce using rule 835 (make_table_decl)


State 916

  253 expression_keyword: "keyword" '<' $@7 . type_declaration_no_options_list '>' $@8 expr

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    type_declaration_no_options_list  go to state 1164
    name_in_namespace                 go to state 345
    basic_type_declaration            go to state 346
    structure_type_declaration        go to state 347
    auto_type_declaration             go to state 348
    bitfield_type_declaration         go to state 349
    type_declaration_no_options       go to state 350
    type_declaration                  go to state 1067


State 917

  244 expr_keyword: "keyword" expr expression_block .

    $default  reduce using rule 244 (expr_keyword)


State 918

  256 expression_keyword: "type function" '<' $@9 . type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    type_declaration_no_options_list  go to state 1165
    name_in_namespace                 go to state 345
    basic_type_declaration            go to state 346
    structure_type_declaration        go to state 347
    auto_type_declaration             go to state 348
    bitfield_type_declaration         go to state 349
    type_declaration_no_options       go to state 350
    type_declaration                  go to state 1067


State 919

   31 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 31 (string_builder)


State 920

   30 string_builder_body: string_builder_body "{" . expr "}"

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1166
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 921

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   29 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 220
    STRING_CHARACTER_ESC  shift, and go to state 221

    STRING_CHARACTER      [reduce using rule 29 (string_builder_body)]
    STRING_CHARACTER_ESC  [reduce using rule 29 (string_builder_body)]
    $default              reduce using rule 29 (string_builder_body)


State 922

  627 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  628                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  846 array_comprehension: "begin of code block" "for" variable_name_with_pos_list . "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "in"  shift, and go to state 1167
    ','   shift, and go to state 827


State 923

  833 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple
  842 optional_comma: ',' .

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    $default  reduce using rule 842 (optional_comma)

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 680
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_map_tuple          go to state 1168
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 924

  834 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma . "end of code block"

    "end of code block"  shift, and go to state 1169


State 925

  217 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" . expressions "end of code block"

    $default  reduce using rule 241 (expressions)

    expressions  go to state 1170


State 926

  627 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  628                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  843 array_comprehension: '[' "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1171
    ','   shift, and go to state 827


State 927

  321 expr_list: expr_list ',' . expr
  842 optional_comma: ',' .

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    $default  reduce using rule 842 (optional_comma)

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1090
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 928

  819 make_dim_decl: '[' expr_list optional_comma . ']'

    ']'  shift, and go to state 1172


State 929

  453 expr: '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1173


State 930

  393 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 1174


State 931

  512 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 1175


State 932

  397 func_addr_expr: '@' '@' '<' . $@22 type_declaration_no_options '>' $@23 func_addr_name
  400               | '@' '@' '<' . $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name

    ':'       reduce using rule 398 ($@24)
    '>'       reduce using rule 398 ($@24)
    '('       reduce using rule 398 ($@24)
    $default  reduce using rule 395 ($@22)

    $@22  go to state 1176
    $@24  go to state 1177


State 933

  392 func_addr_name: name_in_namespace .

    $default  reduce using rule 392 (func_addr_name)


State 934

  394 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 394 (func_addr_expr)


State 935

   72 expression_if_then_else: if_or_static_if expr expression_block . expression_else

    "else"         shift, and go to state 1178
    "elif"         shift, and go to state 1179
    "static_elif"  shift, and go to state 1180

    $default  reduce using rule 59 (expression_else)

    elif_or_static_elif  go to state 1181
    expression_else      go to state 1182


State 936

   74 expression_if_then_else: expression_if_one_liner "if" $@3 . expr expression_else_one_liner "end of expression"

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1183
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 937

  340 expr_full_block_assumed_piped: block_or_lambda $@21 . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

    '['  shift, and go to state 15

    $default  reduce using rule 117 (optional_annotation_list)

    optional_annotation_list  go to state 1184


State 938

  388 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'
  819 make_dim_decl: '[' . expr_list optional_comma ']'
  843 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "for"                             shift, and go to state 696
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "$f"                              shift, and go to state 895
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 896
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 697
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 698
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_fields      go to state 1185
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 939

  408 expr_call: name_in_namespace '(' ')' .

    $default  reduce using rule 408 (expr_call)


State 940

  321 expr_list: expr_list . ',' expr
  389 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  410 expr_call: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 1186
    ')'  shift, and go to state 1187


State 941

  409 expr_call: name_in_namespace '(' make_struct_dim . ')'
  775 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields

    "end of expression"  shift, and go to state 1143
    ')'                  shift, and go to state 1188


State 942

  299 tuple_expansion_variable_declaration: "[[" . tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  301                                     | "[[" . tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr "end of expression"

    "name"  shift, and go to state 1189

    tuple_expansion  go to state 1190


State 943

  300 tuple_expansion_variable_declaration: '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  302                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression"

    "name"  shift, and go to state 1189

    tuple_expansion  go to state 1191


State 944

  304 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 304 (expression_let)


State 945

  303 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 303 (expression_let)


State 946

  335 optional_capture_list: "[[" . capture_list ']' ']'

    "<-"  shift, and go to state 1192
    ":="  shift, and go to state 1193
    '='   shift, and go to state 1194
    '&'   shift, and go to state 1195

    capture_entry  go to state 1196
    capture_list   go to state 1197


State 947

  338 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 282

    $default  reduce using rule 119 (optional_function_argument_list)

    optional_function_argument_list  go to state 1198


State 948

  257 expr_pipe: expr_assign " <|" expr_block .

    $default  reduce using rule 257 (expr_pipe)


State 949

  471 expr: expr "is" "type" . '<' $@28 type_declaration_no_options '>' $@29

    '<'  shift, and go to state 1199


State 950

  511 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 1200


State 951

  473 expr: expr "is" "name" .

    $default  reduce using rule 473 (expr)


State 952

  472 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 472 (expr)


State 953

  477 expr: expr "as" "type" . '<' $@30 type_declaration '>' $@31

    '<'  shift, and go to state 1201


State 954

  509 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1202


State 955

  474 expr: expr "as" "name" .

    $default  reduce using rule 474 (expr)


State 956

  478 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 478 (expr)


State 957

  369 expr_assign_pipe_right: "$ <|" . expr_block

    "begin of code block"  shift, and go to state 284
    '$'                    shift, and go to state 496
    '@'                    shift, and go to state 663

    expression_block  go to state 664
    block_or_lambda   go to state 665
    expr_block        go to state 1203


State 958

  367 expr_assign_pipe_right: "@ <|" . expr_block

    "begin of code block"  shift, and go to state 284
    '$'                    shift, and go to state 496
    '@'                    shift, and go to state 663

    expression_block  go to state 664
    block_or_lambda   go to state 665
    expr_block        go to state 1204


State 959

  368 expr_assign_pipe_right: "@@ <|" . expr_block

    "begin of code block"  shift, and go to state 284
    '$'                    shift, and go to state 496
    '@'                    shift, and go to state 663

    expression_block  go to state 664
    block_or_lambda   go to state 665
    expr_block        go to state 1205


State 960

  370 expr_assign_pipe_right: expr_call_pipe .

    $default  reduce using rule 370 (expr_assign_pipe_right)


State 961

  379 expr_assign_pipe: expr "+=" expr_assign_pipe_right .

    $default  reduce using rule 379 (expr_assign_pipe)


State 962

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  358 expr_assign: expr "+=" expr .
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771
    '$'    shift, and go to state 496
    '@'    shift, and go to state 663

    $default  reduce using rule 358 (expr_assign)

    block_or_lambda                go to state 705
    expr_full_block_assumed_piped  go to state 772


State 963

  380 expr_assign_pipe: expr "-=" expr_assign_pipe_right .

    $default  reduce using rule 380 (expr_assign_pipe)


State 964

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  359 expr_assign: expr "-=" expr .
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771
    '$'    shift, and go to state 496
    '@'    shift, and go to state 663

    $default  reduce using rule 359 (expr_assign)

    block_or_lambda                go to state 705
    expr_full_block_assumed_piped  go to state 772


State 965

  382 expr_assign_pipe: expr "/=" expr_assign_pipe_right .

    $default  reduce using rule 382 (expr_assign_pipe)


State 966

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  361 expr_assign: expr "/=" expr .
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771
    '$'    shift, and go to state 496
    '@'    shift, and go to state 663

    $default  reduce using rule 361 (expr_assign)

    block_or_lambda                go to state 705
    expr_full_block_assumed_piped  go to state 772


State 967

  381 expr_assign_pipe: expr "*=" expr_assign_pipe_right .

    $default  reduce using rule 381 (expr_assign_pipe)


State 968

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  360 expr_assign: expr "*=" expr .
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771
    '$'    shift, and go to state 496
    '@'    shift, and go to state 663

    $default  reduce using rule 360 (expr_assign)

    block_or_lambda                go to state 705
    expr_full_block_assumed_piped  go to state 772


State 969

  383 expr_assign_pipe: expr "%=" expr_assign_pipe_right .

    $default  reduce using rule 383 (expr_assign_pipe)


State 970

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  362 expr_assign: expr "%=" expr .
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771
    '$'    shift, and go to state 496
    '@'    shift, and go to state 663

    $default  reduce using rule 362 (expr_assign)

    block_or_lambda                go to state 705
    expr_full_block_assumed_piped  go to state 772


State 971

  373 expr_assign_pipe: expr "&=" expr_assign_pipe_right .

    $default  reduce using rule 373 (expr_assign_pipe)


State 972

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  352 expr_assign: expr "&=" expr .
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771
    '$'    shift, and go to state 496
    '@'    shift, and go to state 663

    $default  reduce using rule 352 (expr_assign)

    block_or_lambda                go to state 705
    expr_full_block_assumed_piped  go to state 772


State 973

  374 expr_assign_pipe: expr "|=" expr_assign_pipe_right .

    $default  reduce using rule 374 (expr_assign_pipe)


State 974

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  353 expr_assign: expr "|=" expr .
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771
    '$'    shift, and go to state 496
    '@'    shift, and go to state 663

    $default  reduce using rule 353 (expr_assign)

    block_or_lambda                go to state 705
    expr_full_block_assumed_piped  go to state 772


State 975

  375 expr_assign_pipe: expr "^=" expr_assign_pipe_right .

    $default  reduce using rule 375 (expr_assign_pipe)


State 976

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  354 expr_assign: expr "^=" expr .
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771
    '$'    shift, and go to state 496
    '@'    shift, and go to state 663

    $default  reduce using rule 354 (expr_assign)

    block_or_lambda                go to state 705
    expr_full_block_assumed_piped  go to state 772


State 977

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  427     | expr "<<" expr .
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 719
    "as"  shift, and go to state 720
    "++"  shift, and go to state 731
    "--"  shift, and go to state 732
    "->"  shift, and go to state 739
    "??"  shift, and go to state 741
    "?."  shift, and go to state 742
    "?["  shift, and go to state 743
    "<|"  shift, and go to state 744
    "|>"  shift, and go to state 745
    '-'   shift, and go to state 765
    '+'   shift, and go to state 766
    '*'   shift, and go to state 767
    '/'   shift, and go to state 768
    '%'   shift, and go to state 769
    '.'   shift, and go to state 770
    '['   shift, and go to state 771

    $default  reduce using rule 427 (expr)


State 978

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  428     | expr ">>" expr .
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 719
    "as"  shift, and go to state 720
    "++"  shift, and go to state 731
    "--"  shift, and go to state 732
    "->"  shift, and go to state 739
    "??"  shift, and go to state 741
    "?."  shift, and go to state 742
    "?["  shift, and go to state 743
    "<|"  shift, and go to state 744
    "|>"  shift, and go to state 745
    '-'   shift, and go to state 765
    '+'   shift, and go to state 766
    '*'   shift, and go to state 767
    '/'   shift, and go to state 768
    '%'   shift, and go to state 769
    '.'   shift, and go to state 770
    '['   shift, and go to state 771

    $default  reduce using rule 428 (expr)


State 979

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  440     | expr "<=" expr .
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771

    $default  reduce using rule 440 (expr)


State 980

  384 expr_assign_pipe: expr "<<=" expr_assign_pipe_right .

    $default  reduce using rule 384 (expr_assign_pipe)


State 981

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  363 expr_assign: expr "<<=" expr .
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771
    '$'    shift, and go to state 496
    '@'    shift, and go to state 663

    $default  reduce using rule 363 (expr_assign)

    block_or_lambda                go to state 705
    expr_full_block_assumed_piped  go to state 772


State 982

  385 expr_assign_pipe: expr ">>=" expr_assign_pipe_right .

    $default  reduce using rule 385 (expr_assign_pipe)


State 983

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  364 expr_assign: expr ">>=" expr .
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771
    '$'    shift, and go to state 496
    '@'    shift, and go to state 663

    $default  reduce using rule 364 (expr_assign)

    block_or_lambda                go to state 705
    expr_full_block_assumed_piped  go to state 772


State 984

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  441     | expr ">=" expr .
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771

    $default  reduce using rule 441 (expr)


State 985

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  438     | expr "==" expr .
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771

    $default  reduce using rule 438 (expr)


State 986

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  439     | expr "!=" expr .
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771

    $default  reduce using rule 439 (expr)


State 987

  390 expr_method_call: expr "->" "name" . '(' ')'
  391                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 1206


State 988

  372 expr_assign_pipe: expr "<-" expr_assign_pipe_right .

    $default  reduce using rule 372 (expr_assign_pipe)


State 989

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  350 expr_assign: expr "<-" expr .
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771
    '$'    shift, and go to state 496
    '@'    shift, and go to state 663

    $default  reduce using rule 350 (expr_assign)

    block_or_lambda                go to state 705
    expr_full_block_assumed_piped  go to state 772


State 990

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  467     | expr "??" expr .
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 719
    "as"  shift, and go to state 720
    "++"  shift, and go to state 731
    "--"  shift, and go to state 732
    "->"  shift, and go to state 739
    "??"  shift, and go to state 741
    "?."  shift, and go to state 742
    "?["  shift, and go to state 743
    "<|"  shift, and go to state 744
    "|>"  shift, and go to state 745
    '.'   shift, and go to state 770
    '['   shift, and go to state 771

    $default  reduce using rule 467 (expr)


State 991

  506 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1207


State 992

  458 expr: expr "?." "name" .

    $default  reduce using rule 458 (expr)


State 993

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  456     | expr "?[" expr . ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771
    ']'    shift, and go to state 1208


State 994

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  491     | expr "<|" expr .
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 739
    "?."  shift, and go to state 742
    "?["  shift, and go to state 743
    '.'   shift, and go to state 770
    '['   shift, and go to state 771

    $default  reduce using rule 491 (expr)


State 995

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  492     | expr "|>" expr .
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 739
    "?."  shift, and go to state 742
    "?["  shift, and go to state 743
    '.'   shift, and go to state 770
    '['   shift, and go to state 771

    $default  reduce using rule 492 (expr)


State 996

  411 expr_call: basic_type_declaration . '(' ')'
  412          | basic_type_declaration . '(' expr_list ')'
  493 expr: expr "|>" basic_type_declaration .

    '('  shift, and go to state 773

    $default  reduce using rule 493 (expr)


State 997

  351 expr_assign: expr ":=" expr .
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771

    $default  reduce using rule 351 (expr_assign)


State 998

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  429     | expr "<<<" expr .
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 719
    "as"  shift, and go to state 720
    "++"  shift, and go to state 731
    "--"  shift, and go to state 732
    "->"  shift, and go to state 739
    "??"  shift, and go to state 741
    "?."  shift, and go to state 742
    "?["  shift, and go to state 743
    "<|"  shift, and go to state 744
    "|>"  shift, and go to state 745
    '-'   shift, and go to state 765
    '+'   shift, and go to state 766
    '*'   shift, and go to state 767
    '/'   shift, and go to state 768
    '%'   shift, and go to state 769
    '.'   shift, and go to state 770
    '['   shift, and go to state 771

    $default  reduce using rule 429 (expr)


State 999

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  430     | expr ">>>" expr .
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 719
    "as"  shift, and go to state 720
    "++"  shift, and go to state 731
    "--"  shift, and go to state 732
    "->"  shift, and go to state 739
    "??"  shift, and go to state 741
    "?."  shift, and go to state 742
    "?["  shift, and go to state 743
    "<|"  shift, and go to state 744
    "|>"  shift, and go to state 745
    '-'   shift, and go to state 765
    '+'   shift, and go to state 766
    '*'   shift, and go to state 767
    '/'   shift, and go to state 768
    '%'   shift, and go to state 769
    '.'   shift, and go to state 770
    '['   shift, and go to state 771

    $default  reduce using rule 430 (expr)


State 1000

  386 expr_assign_pipe: expr "<<<=" expr_assign_pipe_right .

    $default  reduce using rule 386 (expr_assign_pipe)


State 1001

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  365 expr_assign: expr "<<<=" expr .
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771
    '$'    shift, and go to state 496
    '@'    shift, and go to state 663

    $default  reduce using rule 365 (expr_assign)

    block_or_lambda                go to state 705
    expr_full_block_assumed_piped  go to state 772


State 1002

  387 expr_assign_pipe: expr ">>>=" expr_assign_pipe_right .

    $default  reduce using rule 387 (expr_assign_pipe)


State 1003

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  366 expr_assign: expr ">>>=" expr .
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771
    '$'    shift, and go to state 496
    '@'    shift, and go to state 663

    $default  reduce using rule 366 (expr_assign)

    block_or_lambda                go to state 705
    expr_full_block_assumed_piped  go to state 772


State 1004

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  445     | expr "&&" expr .
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771

    $default  reduce using rule 445 (expr)


State 1005

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  446     | expr "||" expr .
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "^^"   shift, and go to state 753
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771

    $default  reduce using rule 446 (expr)


State 1006

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  447     | expr "^^" expr .
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771

    $default  reduce using rule 447 (expr)


State 1007

  376 expr_assign_pipe: expr "&&=" expr_assign_pipe_right .

    $default  reduce using rule 376 (expr_assign_pipe)


State 1008

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  355 expr_assign: expr "&&=" expr .
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771
    '$'    shift, and go to state 496
    '@'    shift, and go to state 663

    $default  reduce using rule 355 (expr_assign)

    block_or_lambda                go to state 705
    expr_full_block_assumed_piped  go to state 772


State 1009

  377 expr_assign_pipe: expr "||=" expr_assign_pipe_right .

    $default  reduce using rule 377 (expr_assign_pipe)


State 1010

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  356 expr_assign: expr "||=" expr .
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771
    '$'    shift, and go to state 496
    '@'    shift, and go to state 663

    $default  reduce using rule 356 (expr_assign)

    block_or_lambda                go to state 705
    expr_full_block_assumed_piped  go to state 772


State 1011

  378 expr_assign_pipe: expr "^^=" expr_assign_pipe_right .

    $default  reduce using rule 378 (expr_assign_pipe)


State 1012

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  357 expr_assign: expr "^^=" expr .
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771
    '$'    shift, and go to state 496
    '@'    shift, and go to state 663

    $default  reduce using rule 357 (expr_assign)

    block_or_lambda                go to state 705
    expr_full_block_assumed_piped  go to state 772


State 1013

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  448     | expr ".." expr .
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771

    ".."  error (nonassociative)

    $default  reduce using rule 448 (expr)


State 1014

  371 expr_assign_pipe: expr '=' expr_assign_pipe_right .

    $default  reduce using rule 371 (expr_assign_pipe)


State 1015

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  349 expr_assign: expr '=' expr .
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771
    '$'    shift, and go to state 496
    '@'    shift, and go to state 663

    $default  reduce using rule 349 (expr_assign)

    block_or_lambda                go to state 705
    expr_full_block_assumed_piped  go to state 772


State 1016

  479 expr: expr '?' "as" . "name"
  482     | expr '?' "as" . "type" '<' $@32 type_declaration '>' $@33
  483     | expr '?' "as" . basic_type_declaration
  510 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1209
    "bool"      shift, and go to state 310
    "void"      shift, and go to state 311
    "string"    shift, and go to state 312
    "int"       shift, and go to state 314
    "int2"      shift, and go to state 315
    "int3"      shift, and go to state 316
    "int4"      shift, and go to state 317
    "uint"      shift, and go to state 318
    "bitfield"  shift, and go to state 456
    "uint2"     shift, and go to state 320
    "uint3"     shift, and go to state 321
    "uint4"     shift, and go to state 322
    "float"     shift, and go to state 323
    "float2"    shift, and go to state 324
    "float3"    shift, and go to state 325
    "float4"    shift, and go to state 326
    "range"     shift, and go to state 327
    "urange"    shift, and go to state 328
    "range64"   shift, and go to state 329
    "urange64"  shift, and go to state 330
    "int64"     shift, and go to state 332
    "uint64"    shift, and go to state 333
    "double"    shift, and go to state 334
    "int8"      shift, and go to state 337
    "uint8"     shift, and go to state 338
    "int16"     shift, and go to state 339
    "uint16"    shift, and go to state 340
    "$f"        shift, and go to state 1210
    "name"      shift, and go to state 1211

    basic_type_declaration  go to state 1212


State 1017

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  468     | expr '?' expr . ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    ':'    shift, and go to state 1213
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771


State 1018

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  443     | expr '|' expr .
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771

    $default  reduce using rule 443 (expr)


State 1019

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  444     | expr '^' expr .
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771

    $default  reduce using rule 444 (expr)


State 1020

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  442     | expr '&' expr .
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771

    $default  reduce using rule 442 (expr)


State 1021

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  436     | expr '<' expr .
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771

    $default  reduce using rule 436 (expr)


State 1022

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  437     | expr '>' expr .
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771

    $default  reduce using rule 437 (expr)


State 1023

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  432     | expr '-' expr .
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 719
    "as"  shift, and go to state 720
    "++"  shift, and go to state 731
    "--"  shift, and go to state 732
    "->"  shift, and go to state 739
    "??"  shift, and go to state 741
    "?."  shift, and go to state 742
    "?["  shift, and go to state 743
    "<|"  shift, and go to state 744
    "|>"  shift, and go to state 745
    '*'   shift, and go to state 767
    '/'   shift, and go to state 768
    '%'   shift, and go to state 769
    '.'   shift, and go to state 770
    '['   shift, and go to state 771

    $default  reduce using rule 432 (expr)


State 1024

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  431     | expr '+' expr .
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 719
    "as"  shift, and go to state 720
    "++"  shift, and go to state 731
    "--"  shift, and go to state 732
    "->"  shift, and go to state 739
    "??"  shift, and go to state 741
    "?."  shift, and go to state 742
    "?["  shift, and go to state 743
    "<|"  shift, and go to state 744
    "|>"  shift, and go to state 745
    '*'   shift, and go to state 767
    '/'   shift, and go to state 768
    '%'   shift, and go to state 769
    '.'   shift, and go to state 770
    '['   shift, and go to state 771

    $default  reduce using rule 431 (expr)


State 1025

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  433     | expr '*' expr .
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 719
    "as"  shift, and go to state 720
    "++"  shift, and go to state 731
    "--"  shift, and go to state 732
    "->"  shift, and go to state 739
    "??"  shift, and go to state 741
    "?."  shift, and go to state 742
    "?["  shift, and go to state 743
    "<|"  shift, and go to state 744
    "|>"  shift, and go to state 745
    '.'   shift, and go to state 770
    '['   shift, and go to state 771

    $default  reduce using rule 433 (expr)


State 1026

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  434     | expr '/' expr .
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 719
    "as"  shift, and go to state 720
    "++"  shift, and go to state 731
    "--"  shift, and go to state 732
    "->"  shift, and go to state 739
    "??"  shift, and go to state 741
    "?."  shift, and go to state 742
    "?["  shift, and go to state 743
    "<|"  shift, and go to state 744
    "|>"  shift, and go to state 745
    '.'   shift, and go to state 770
    '['   shift, and go to state 771

    $default  reduce using rule 434 (expr)


State 1027

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  435     | expr '%' expr .
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 719
    "as"  shift, and go to state 720
    "++"  shift, and go to state 731
    "--"  shift, and go to state 732
    "->"  shift, and go to state 739
    "??"  shift, and go to state 741
    "?."  shift, and go to state 742
    "?["  shift, and go to state 743
    "<|"  shift, and go to state 744
    "|>"  shift, and go to state 745
    '.'   shift, and go to state 770
    '['   shift, and go to state 771

    $default  reduce using rule 435 (expr)


State 1028

  459 expr: expr '.' "?." . "name"
  508 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1214
    "name"  shift, and go to state 1215


State 1029

  457 expr: expr '.' "?[" . expr ']'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1216
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1030

  505 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1217


State 1031

  401 expr_field: expr '.' "name" .
  403           | expr '.' "name" . '(' ')'
  404           | expr '.' "name" . '(' expr_list ')'

    '('  shift, and go to state 1218

    '('       [reduce using rule 401 (expr_field)]
    $default  reduce using rule 401 (expr_field)


State 1032

  402 expr_field: expr '.' '.' . "name"
  507 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1219
    "name"  shift, and go to state 1220


State 1033

  455 expr: expr '.' '[' . expr ']'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1221
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1034

  407 expr_field: expr '.' $@26 . error $@27

    error  shift, and go to state 1222


State 1035

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  454     | expr '[' expr . ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771
    ']'    shift, and go to state 1223


State 1036

  411 expr_call: basic_type_declaration '(' ')' .

    $default  reduce using rule 411 (expr_call)


State 1037

  321 expr_list: expr_list . ',' expr
  412 expr_call: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 844
    ')'  shift, and go to state 1224


State 1038

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'
  588 enum_list: enum_list "name" '=' expr . "end of expression"

    "is"                 shift, and go to state 719
    "as"                 shift, and go to state 720
    "<<"                 shift, and go to state 729
    ">>"                 shift, and go to state 730
    "++"                 shift, and go to state 731
    "--"                 shift, and go to state 732
    "<="                 shift, and go to state 733
    ">="                 shift, and go to state 736
    "=="                 shift, and go to state 737
    "!="                 shift, and go to state 738
    "->"                 shift, and go to state 739
    "??"                 shift, and go to state 741
    "?."                 shift, and go to state 742
    "?["                 shift, and go to state 743
    "<|"                 shift, and go to state 744
    "|>"                 shift, and go to state 745
    "<<<"                shift, and go to state 747
    ">>>"                shift, and go to state 748
    "&&"                 shift, and go to state 751
    "||"                 shift, and go to state 752
    "^^"                 shift, and go to state 753
    ".."                 shift, and go to state 757
    "end of expression"  shift, and go to state 1225
    '?'                  shift, and go to state 759
    '|'                  shift, and go to state 760
    '^'                  shift, and go to state 761
    '&'                  shift, and go to state 762
    '<'                  shift, and go to state 763
    '>'                  shift, and go to state 764
    '-'                  shift, and go to state 765
    '+'                  shift, and go to state 766
    '*'                  shift, and go to state 767
    '/'                  shift, and go to state 768
    '%'                  shift, and go to state 769
    '.'                  shift, and go to state 770
    '['                  shift, and go to state 771


State 1039

  608 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 . "end of code block"

    "end of code block"  shift, and go to state 1226


State 1040

  116 annotation_list: annotation_list . ',' annotation_declaration
  118 optional_annotation_list: '[' annotation_list . ']'
  533 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list . ']' "end of expression"

    ','  shift, and go to state 107
    ']'  shift, and go to state 1227


State 1041

  530 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header "end of expression"
  532                                 | struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block

    "public"   shift, and go to state 1228
    "private"  shift, and go to state 1229

    $default  reduce using rule 520 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1230


State 1042

  525 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1231

    $default  reduce using rule 523 (optional_static_member_variable)

    optional_static_member_variable  go to state 1232


State 1043

  528 struct_variable_declaration_list: struct_variable_declaration_list $@34 structure_variable_declaration . "end of expression"

    "end of expression"  shift, and go to state 1233


State 1044

  568 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 568 (let_variable_name_with_pos_list)


State 1045

  571 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 571 (let_variable_declaration)


State 1046

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  348 expr_assign: expr .
  349            | expr . '=' expr
  350            | expr . "<-" expr
  351            | expr . ":=" expr
  352            | expr . "&=" expr
  353            | expr . "|=" expr
  354            | expr . "^=" expr
  355            | expr . "&&=" expr
  356            | expr . "||=" expr
  357            | expr . "^^=" expr
  358            | expr . "+=" expr
  359            | expr . "-=" expr
  360            | expr . "*=" expr
  361            | expr . "/=" expr
  362            | expr . "%=" expr
  363            | expr . "<<=" expr
  364            | expr . ">>=" expr
  365            | expr . "<<<=" expr
  366            | expr . ">>>=" expr
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'
  570 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 719
    "as"                 shift, and go to state 720
    "+="                 shift, and go to state 845
    "-="                 shift, and go to state 846
    "/="                 shift, and go to state 847
    "*="                 shift, and go to state 848
    "%="                 shift, and go to state 849
    "&="                 shift, and go to state 850
    "|="                 shift, and go to state 851
    "^="                 shift, and go to state 852
    "<<"                 shift, and go to state 729
    ">>"                 shift, and go to state 730
    "++"                 shift, and go to state 731
    "--"                 shift, and go to state 732
    "<="                 shift, and go to state 733
    "<<="                shift, and go to state 853
    ">>="                shift, and go to state 854
    ">="                 shift, and go to state 736
    "=="                 shift, and go to state 737
    "!="                 shift, and go to state 738
    "->"                 shift, and go to state 739
    "<-"                 shift, and go to state 855
    "??"                 shift, and go to state 741
    "?."                 shift, and go to state 742
    "?["                 shift, and go to state 743
    "<|"                 shift, and go to state 744
    "|>"                 shift, and go to state 745
    ":="                 shift, and go to state 746
    "<<<"                shift, and go to state 747
    ">>>"                shift, and go to state 748
    "<<<="               shift, and go to state 856
    ">>>="               shift, and go to state 857
    "&&"                 shift, and go to state 751
    "||"                 shift, and go to state 752
    "^^"                 shift, and go to state 753
    "&&="                shift, and go to state 858
    "||="                shift, and go to state 859
    "^^="                shift, and go to state 860
    ".."                 shift, and go to state 757
    "end of expression"  shift, and go to state 1234
    '='                  shift, and go to state 861
    '?'                  shift, and go to state 759
    '|'                  shift, and go to state 760
    '^'                  shift, and go to state 761
    '&'                  shift, and go to state 762
    '<'                  shift, and go to state 763
    '>'                  shift, and go to state 764
    '-'                  shift, and go to state 765
    '+'                  shift, and go to state 766
    '*'                  shift, and go to state 767
    '/'                  shift, and go to state 768
    '%'                  shift, and go to state 769
    '.'                  shift, and go to state 770
    '['                  shift, and go to state 771
    '$'                  shift, and go to state 496
    '@'                  shift, and go to state 663

    $default  reduce using rule 348 (expr_assign)

    block_or_lambda                go to state 705
    expr_full_block_assumed_piped  go to state 772


State 1047

  572 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 572 (let_variable_declaration)


State 1048

  686 type_declaration_no_options: "type" '<' $@49 type_declaration '>' . $@50

    $default  reduce using rule 685 ($@50)

    $@50  go to state 1235


State 1049

  709 type_declaration_no_options: "array" '<' $@54 type_declaration '>' . $@55

    $default  reduce using rule 708 ($@55)

    $@55  go to state 1236


State 1050

  712 type_declaration_no_options: "table" '<' $@56 table_type_pair '>' . $@57

    $default  reduce using rule 711 ($@57)

    $@57  go to state 1237


State 1051

  675 table_type_pair: type_declaration "end of expression" . type_declaration

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1238


State 1052

  715 type_declaration_no_options: "iterator" '<' $@58 type_declaration '>' . $@59

    $default  reduce using rule 714 ($@59)

    $@59  go to state 1239


State 1053

  705 type_declaration_no_options: "smart_ptr" '<' $@52 type_declaration '>' . $@53

    $default  reduce using rule 704 ($@53)

    $@53  go to state 1240


State 1054

  667 bitfield_bits: bitfield_bits "end of expression" . "name"

    "name"  shift, and go to state 1241


State 1055

  673 bitfield_type_declaration: "bitfield" '<' $@47 bitfield_bits '>' . $@48

    $default  reduce using rule 672 ($@48)

    $@48  go to state 1242


State 1056

  719 type_declaration_no_options: "block" '<' $@60 type_declaration '>' . $@61

    $default  reduce using rule 718 ($@61)

    $@61  go to state 1243


State 1057

  722 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list optional_function_type . '>' $@63

    '>'  shift, and go to state 1244


State 1058

  726 type_declaration_no_options: "function" '<' $@64 type_declaration '>' . $@65

    $default  reduce using rule 725 ($@65)

    $@65  go to state 1245


State 1059

  729 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list optional_function_type . '>' $@67

    '>'  shift, and go to state 1246


State 1060

  733 type_declaration_no_options: "lambda" '<' $@68 type_declaration '>' . $@69

    $default  reduce using rule 732 ($@69)

    $@69  go to state 1247


State 1061

  736 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list optional_function_type . '>' $@71

    '>'  shift, and go to state 1248


State 1062

  541 tuple_type_list: tuple_type_list "end of expression" . tuple_type

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 601
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    tuple_type                   go to state 1249
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 604


State 1063

  739 type_declaration_no_options: "tuple" '<' $@72 tuple_type_list '>' . $@73

    $default  reduce using rule 738 ($@73)

    $@73  go to state 1250


State 1064

  547 variant_type_list: variant_type_list "end of expression" . variant_type

    "name"  shift, and go to state 606

    variant_type  go to state 1251


State 1065

  742 type_declaration_no_options: "variant" '<' $@74 variant_type_list '>' . $@75

    $default  reduce using rule 741 ($@75)

    $@75  go to state 1252


State 1066

  250 type_declaration_no_options_list: type_declaration_no_options_list . "end of expression" type_declaration
  690 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list . '>' '(' optional_expr_list ')'

    "end of expression"  shift, and go to state 1253
    '>'                  shift, and go to state 1254


State 1067

  249 type_declaration_no_options_list: type_declaration .
  744 type_declaration: type_declaration . '|' type_declaration_no_options
  745                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410

    $default  reduce using rule 249 (type_declaration_no_options_list)


State 1068

  688 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list ')' .

    $default  reduce using rule 688 (type_declaration_no_options)


State 1069

  677 dim_list: dim_list '[' expr ']' .

    $default  reduce using rule 677 (dim_list)


State 1070

  539 tuple_type: "name" ':' type_declaration .
  744 type_declaration: type_declaration . '|' type_declaration_no_options
  745                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410

    $default  reduce using rule 539 (tuple_type)


State 1071

  545 variant_type: "name" ':' type_declaration .
  744 type_declaration: type_declaration . '|' type_declaration_no_options
  745                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410

    $default  reduce using rule 545 (variant_type)


State 1072

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'
  625 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771
    ')'    shift, and go to state 1255


State 1073

  626 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 626 (variable_name_with_pos_list)


State 1074

  627 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  628                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1256

    $default  reduce using rule 627 (variable_name_with_pos_list)


State 1075

  555 variable_declaration: variable_name_with_pos_list ':' type_declaration .
  556                     | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  744 type_declaration: type_declaration . '|' type_declaration_no_options
  745                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 826
    '='   shift, and go to state 828
    '|'   shift, and go to state 410

    $default  reduce using rule 555 (variable_declaration)

    copy_or_move  go to state 1257


State 1076

  558 variable_declaration: variable_name_with_pos_list copy_or_move expr_pipe .

    $default  reduce using rule 558 (variable_declaration)


State 1077

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  348 expr_assign: expr .
  349            | expr . '=' expr
  350            | expr . "<-" expr
  351            | expr . ":=" expr
  352            | expr . "&=" expr
  353            | expr . "|=" expr
  354            | expr . "^=" expr
  355            | expr . "&&=" expr
  356            | expr . "||=" expr
  357            | expr . "^^=" expr
  358            | expr . "+=" expr
  359            | expr . "-=" expr
  360            | expr . "*=" expr
  361            | expr . "/=" expr
  362            | expr . "%=" expr
  363            | expr . "<<=" expr
  364            | expr . ">>=" expr
  365            | expr . "<<<=" expr
  366            | expr . ">>>=" expr
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'
  557 variable_declaration: variable_name_with_pos_list copy_or_move expr .

    "is"    shift, and go to state 719
    "as"    shift, and go to state 720
    "+="    shift, and go to state 845
    "-="    shift, and go to state 846
    "/="    shift, and go to state 847
    "*="    shift, and go to state 848
    "%="    shift, and go to state 849
    "&="    shift, and go to state 850
    "|="    shift, and go to state 851
    "^="    shift, and go to state 852
    "<<"    shift, and go to state 729
    ">>"    shift, and go to state 730
    "++"    shift, and go to state 731
    "--"    shift, and go to state 732
    "<="    shift, and go to state 733
    "<<="   shift, and go to state 853
    ">>="   shift, and go to state 854
    ">="    shift, and go to state 736
    "=="    shift, and go to state 737
    "!="    shift, and go to state 738
    "->"    shift, and go to state 739
    "<-"    shift, and go to state 855
    "??"    shift, and go to state 741
    "?."    shift, and go to state 742
    "?["    shift, and go to state 743
    "<|"    shift, and go to state 744
    "|>"    shift, and go to state 745
    ":="    shift, and go to state 746
    "<<<"   shift, and go to state 747
    ">>>"   shift, and go to state 748
    "<<<="  shift, and go to state 856
    ">>>="  shift, and go to state 857
    "&&"    shift, and go to state 751
    "||"    shift, and go to state 752
    "^^"    shift, and go to state 753
    "&&="   shift, and go to state 858
    "||="   shift, and go to state 859
    "^^="   shift, and go to state 860
    ".."    shift, and go to state 757
    '='     shift, and go to state 861
    '?'     shift, and go to state 759
    '|'     shift, and go to state 760
    '^'     shift, and go to state 761
    '&'     shift, and go to state 762
    '<'     shift, and go to state 763
    '>'     shift, and go to state 764
    '-'     shift, and go to state 765
    '+'     shift, and go to state 766
    '*'     shift, and go to state 767
    '/'     shift, and go to state 768
    '%'     shift, and go to state 769
    '.'     shift, and go to state 770
    '['     shift, and go to state 771
    '$'     shift, and go to state 496
    '@'     shift, and go to state 663

    " <|"     reduce using rule 348 (expr_assign)
    $default  reduce using rule 557 (variable_declaration)

    block_or_lambda                go to state 705
    expr_full_block_assumed_piped  go to state 772


State 1078

  682 type_declaration_no_options: type_declaration_no_options . dim_list
  683                            | type_declaration_no_options . '[' ']'
  691                            | type_declaration_no_options . '-' '[' ']'
  692                            | type_declaration_no_options . "explicit"
  693                            | type_declaration_no_options . "const"
  694                            | type_declaration_no_options . '-' "const"
  695                            | type_declaration_no_options . '&'
  696                            | type_declaration_no_options . '-' '&'
  697                            | type_declaration_no_options . '#'
  698                            | type_declaration_no_options . "implicit"
  699                            | type_declaration_no_options . '-' '#'
  700                            | type_declaration_no_options . "==" "const"
  701                            | type_declaration_no_options . "==" '&'
  702                            | type_declaration_no_options . '?'
  706                            | type_declaration_no_options . "??"
  798 make_struct_decl: "struct" '<' $@88 type_declaration_no_options . '>' $@89 '(' make_struct_dim ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1258
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1079

  682 type_declaration_no_options: type_declaration_no_options . dim_list
  683                            | type_declaration_no_options . '[' ']'
  691                            | type_declaration_no_options . '-' '[' ']'
  692                            | type_declaration_no_options . "explicit"
  693                            | type_declaration_no_options . "const"
  694                            | type_declaration_no_options . '-' "const"
  695                            | type_declaration_no_options . '&'
  696                            | type_declaration_no_options . '-' '&'
  697                            | type_declaration_no_options . '#'
  698                            | type_declaration_no_options . "implicit"
  699                            | type_declaration_no_options . '-' '#'
  700                            | type_declaration_no_options . "==" "const"
  701                            | type_declaration_no_options . "==" '&'
  702                            | type_declaration_no_options . '?'
  706                            | type_declaration_no_options . "??"
  801 make_struct_decl: "class" '<' $@90 type_declaration_no_options . '>' $@91 '(' make_struct_dim ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1259
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1080

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" . expr_list expression_block

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 1260
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 698
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1081

  269 new_type_declaration: '<' $@11 type_declaration . '>' $@12
  744 type_declaration: type_declaration . '|' type_declaration_no_options
  745                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1261


State 1082

  272 expr_new: "new" new_type_declaration '(' ')' .

    $default  reduce using rule 272 (expr_new)


State 1083

  273 expr_new: "new" new_type_declaration '(' expr_list . ')'
  321 expr_list: expr_list . ',' expr

    ','  shift, and go to state 844
    ')'  shift, and go to state 1262


State 1084

  274 expr_new: "new" new_type_declaration '(' make_struct_dim . ')'
  775 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields

    "end of expression"  shift, and go to state 1143
    ')'                  shift, and go to state 1263


State 1085

  318 expr_type_info: "typeinfo" '(' name_in_namespace '<' . "name" '>' expr ')'
  319               | "typeinfo" '(' name_in_namespace '<' . "name" "end of expression" "name" '>' expr ')'

    "name"  shift, and go to state 1264


State 1086

  317 expr_type_info: "typeinfo" '(' name_in_namespace expr . ')'
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771
    ')'    shift, and go to state 1265


State 1087

  316 expr_type_decl: "type" '<' $@19 type_declaration . '>' $@20
  744 type_declaration: type_declaration . '|' type_declaration_no_options
  745                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1266


State 1088

  682 type_declaration_no_options: type_declaration_no_options . dim_list
  683                            | type_declaration_no_options . '[' ']'
  691                            | type_declaration_no_options . '-' '[' ']'
  692                            | type_declaration_no_options . "explicit"
  693                            | type_declaration_no_options . "const"
  694                            | type_declaration_no_options . '-' "const"
  695                            | type_declaration_no_options . '&'
  696                            | type_declaration_no_options . '-' '&'
  697                            | type_declaration_no_options . '#'
  698                            | type_declaration_no_options . "implicit"
  699                            | type_declaration_no_options . '-' '#'
  700                            | type_declaration_no_options . "==" "const"
  701                            | type_declaration_no_options . "==" '&'
  702                            | type_declaration_no_options . '?'
  706                            | type_declaration_no_options . "??"
  825 make_dim_decl: "array" '<' $@98 type_declaration_no_options . '>' $@99 '(' expr_list optional_comma ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1267
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1089

  822 make_dim_decl: "array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1268


State 1090

  321 expr_list: expr_list ',' expr .
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771

    $default  reduce using rule 321 (expr_list)


State 1091

  358 expr_assign: expr "+=" expr .
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771

    $default  reduce using rule 358 (expr_assign)


State 1092

  359 expr_assign: expr "-=" expr .
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771

    $default  reduce using rule 359 (expr_assign)


State 1093

  361 expr_assign: expr "/=" expr .
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771

    $default  reduce using rule 361 (expr_assign)


State 1094

  360 expr_assign: expr "*=" expr .
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771

    $default  reduce using rule 360 (expr_assign)


State 1095

  362 expr_assign: expr "%=" expr .
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771

    $default  reduce using rule 362 (expr_assign)


State 1096

  352 expr_assign: expr "&=" expr .
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771

    $default  reduce using rule 352 (expr_assign)


State 1097

  353 expr_assign: expr "|=" expr .
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771

    $default  reduce using rule 353 (expr_assign)


State 1098

  354 expr_assign: expr "^=" expr .
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771

    $default  reduce using rule 354 (expr_assign)


State 1099

  363 expr_assign: expr "<<=" expr .
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771

    $default  reduce using rule 363 (expr_assign)


State 1100

  364 expr_assign: expr ">>=" expr .
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771

    $default  reduce using rule 364 (expr_assign)


State 1101

  350 expr_assign: expr "<-" expr .
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771

    $default  reduce using rule 350 (expr_assign)


State 1102

  365 expr_assign: expr "<<<=" expr .
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771

    $default  reduce using rule 365 (expr_assign)


State 1103

  366 expr_assign: expr ">>>=" expr .
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771

    $default  reduce using rule 366 (expr_assign)


State 1104

  355 expr_assign: expr "&&=" expr .
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771

    $default  reduce using rule 355 (expr_assign)


State 1105

  356 expr_assign: expr "||=" expr .
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771

    $default  reduce using rule 356 (expr_assign)


State 1106

  357 expr_assign: expr "^^=" expr .
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771

    $default  reduce using rule 357 (expr_assign)


State 1107

  349 expr_assign: expr '=' expr .
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771

    $default  reduce using rule 349 (expr_assign)


State 1108

  289 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 289 (expression_try_catch)


State 1109

  838 make_table_decl: "table" '<' type_declaration_no_options "end of expression" . type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1269


State 1110

  837 make_table_decl: "table" '<' type_declaration_no_options '>' . '(' expr_map_tuple_list optional_comma ')'

    '('  shift, and go to state 1270


State 1111

  836 make_table_decl: "table" '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1271


State 1112

  463 expr: "deref" '(' expr ')' .

    $default  reduce using rule 463 (expr)


State 1113

   81 expression_with_alias: "assume" "name" '=' $@5 . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1272
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1114

  307 expr_cast: "cast" '<' $@13 type_declaration_no_options . '>' $@14 expr
  682 type_declaration_no_options: type_declaration_no_options . dim_list
  683                            | type_declaration_no_options . '[' ']'
  691                            | type_declaration_no_options . '-' '[' ']'
  692                            | type_declaration_no_options . "explicit"
  693                            | type_declaration_no_options . "const"
  694                            | type_declaration_no_options . '-' "const"
  695                            | type_declaration_no_options . '&'
  696                            | type_declaration_no_options . '-' '&'
  697                            | type_declaration_no_options . '#'
  698                            | type_declaration_no_options . "implicit"
  699                            | type_declaration_no_options . '-' '#'
  700                            | type_declaration_no_options . "==" "const"
  701                            | type_declaration_no_options . "==" '&'
  702                            | type_declaration_no_options . '?'
  706                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1273
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1115

  310 expr_cast: "upcast" '<' $@15 type_declaration_no_options . '>' $@16 expr
  682 type_declaration_no_options: type_declaration_no_options . dim_list
  683                            | type_declaration_no_options . '[' ']'
  691                            | type_declaration_no_options . '-' '[' ']'
  692                            | type_declaration_no_options . "explicit"
  693                            | type_declaration_no_options . "const"
  694                            | type_declaration_no_options . '-' "const"
  695                            | type_declaration_no_options . '&'
  696                            | type_declaration_no_options . '-' '&'
  697                            | type_declaration_no_options . '#'
  698                            | type_declaration_no_options . "implicit"
  699                            | type_declaration_no_options . '-' '#'
  700                            | type_declaration_no_options . "==" "const"
  701                            | type_declaration_no_options . "==" '&'
  702                            | type_declaration_no_options . '?'
  706                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1274
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1116

  464 expr: "addr" '(' expr ')' .

    $default  reduce using rule 464 (expr)


State 1117

  313 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options . '>' $@18 expr
  682 type_declaration_no_options: type_declaration_no_options . dim_list
  683                            | type_declaration_no_options . '[' ']'
  691                            | type_declaration_no_options . '-' '[' ']'
  692                            | type_declaration_no_options . "explicit"
  693                            | type_declaration_no_options . "const"
  694                            | type_declaration_no_options . '-' "const"
  695                            | type_declaration_no_options . '&'
  696                            | type_declaration_no_options . '-' '&'
  697                            | type_declaration_no_options . '#'
  698                            | type_declaration_no_options . "implicit"
  699                            | type_declaration_no_options . '-' '#'
  700                            | type_declaration_no_options . "==" "const"
  701                            | type_declaration_no_options . "==" '&'
  702                            | type_declaration_no_options . '?'
  706                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1275
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1118

  495 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 495 (expr)


State 1119

  682 type_declaration_no_options: type_declaration_no_options . dim_list
  683                            | type_declaration_no_options . '[' ']'
  691                            | type_declaration_no_options . '-' '[' ']'
  692                            | type_declaration_no_options . "explicit"
  693                            | type_declaration_no_options . "const"
  694                            | type_declaration_no_options . '-' "const"
  695                            | type_declaration_no_options . '&'
  696                            | type_declaration_no_options . '-' '&'
  697                            | type_declaration_no_options . '#'
  698                            | type_declaration_no_options . "implicit"
  699                            | type_declaration_no_options . '-' '#'
  700                            | type_declaration_no_options . "==" "const"
  701                            | type_declaration_no_options . "==" '&'
  702                            | type_declaration_no_options . '?'
  706                            | type_declaration_no_options . "??"
  829 make_dim_decl: "fixed_array" '<' $@100 type_declaration_no_options . '>' $@101 '(' expr_list optional_comma ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1276
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1120

  826 make_dim_decl: "fixed_array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1277


State 1121

  682 type_declaration_no_options: type_declaration_no_options . dim_list
  683                            | type_declaration_no_options . '[' ']'
  691                            | type_declaration_no_options . '-' '[' ']'
  692                            | type_declaration_no_options . "explicit"
  693                            | type_declaration_no_options . "const"
  694                            | type_declaration_no_options . '-' "const"
  695                            | type_declaration_no_options . '&'
  696                            | type_declaration_no_options . '-' '&'
  697                            | type_declaration_no_options . '#'
  698                            | type_declaration_no_options . "implicit"
  699                            | type_declaration_no_options . '-' '#'
  700                            | type_declaration_no_options . "==" "const"
  701                            | type_declaration_no_options . "==" '&'
  702                            | type_declaration_no_options . '?'
  706                            | type_declaration_no_options . "??"
  807 make_struct_decl: "default" '<' $@94 type_declaration_no_options . '>' $@95

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1278
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1122

  682 type_declaration_no_options: type_declaration_no_options . dim_list
  683                            | type_declaration_no_options . '[' ']'
  691                            | type_declaration_no_options . '-' '[' ']'
  692                            | type_declaration_no_options . "explicit"
  693                            | type_declaration_no_options . "const"
  694                            | type_declaration_no_options . '-' "const"
  695                            | type_declaration_no_options . '&'
  696                            | type_declaration_no_options . '-' '&'
  697                            | type_declaration_no_options . '#'
  698                            | type_declaration_no_options . "implicit"
  699                            | type_declaration_no_options . '-' '#'
  700                            | type_declaration_no_options . "==" "const"
  701                            | type_declaration_no_options . "==" '&'
  702                            | type_declaration_no_options . '?'
  706                            | type_declaration_no_options . "??"
  816 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options . '>' $@97 '(' make_struct_dim ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1279
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1123

  813 make_tuple_call: "tuple" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1280


State 1124

  682 type_declaration_no_options: type_declaration_no_options . dim_list
  683                            | type_declaration_no_options . '[' ']'
  691                            | type_declaration_no_options . '-' '[' ']'
  692                            | type_declaration_no_options . "explicit"
  693                            | type_declaration_no_options . "const"
  694                            | type_declaration_no_options . '-' "const"
  695                            | type_declaration_no_options . '&'
  696                            | type_declaration_no_options . '-' '&'
  697                            | type_declaration_no_options . '#'
  698                            | type_declaration_no_options . "implicit"
  699                            | type_declaration_no_options . '-' '#'
  700                            | type_declaration_no_options . "==" "const"
  701                            | type_declaration_no_options . "==" '&'
  702                            | type_declaration_no_options . '?'
  706                            | type_declaration_no_options . "??"
  804 make_struct_decl: "variant" '<' $@92 type_declaration_no_options . '>' $@93 '(' make_struct_dim ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1281
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1125

  465 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  466     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'

    "[["  shift, and go to state 946

    $default  reduce using rule 334 (optional_capture_list)

    optional_capture_list  go to state 1282


State 1126

  337 expr_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 282

    $default  reduce using rule 119 (optional_function_argument_list)

    optional_function_argument_list  go to state 1283


State 1127

  497 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 497 (expr_mtag)


State 1128

  498 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 498 (expr_mtag)


State 1129

  499 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 499 (expr_mtag)


State 1130

  500 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 500 (expr_mtag)


State 1131

  501 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 501 (expr_mtag)


State 1132

  503 expr_mtag: "$c" '(' expr ')' . '(' ')'
  504          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1284


State 1133

  844 array_comprehension: "[[" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']' ']'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 1285
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 698
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1134

  777 optional_block: "where" expr_block .

    $default  reduce using rule 777 (optional_block)


State 1135

  770 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  771                   | "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1286
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1136

  767 make_struct_fields: "name" ":=" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1287
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1137

  766 make_struct_fields: "name" copy_or_move . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1288
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1138

  691 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'
  819 make_dim_decl: '[' . expr_list optional_comma ']'
  843 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "for"                             shift, and go to state 696
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    ']'                               shift, and go to state 812
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 697
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 698
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1139

  320 expr_list: expr .
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'
  676 dim_list: '[' expr . ']'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771
    ']'    shift, and go to state 813

    ']'       [reduce using rule 320 (expr_list)]
    $default  reduce using rule 320 (expr_list)


State 1140

  792 make_struct_decl: "[[" type_declaration_no_options '(' ')' . optional_block optional_trailing_delim_sqr_sqr
  793                 | "[[" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "where"  shift, and go to state 894
    "$f"     shift, and go to state 895
    "name"   shift, and go to state 1289

    $default  reduce using rule 776 (optional_block)

    make_struct_fields  go to state 901
    make_struct_dim     go to state 1290
    optional_block      go to state 1291


State 1141

  809 make_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1292
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1142

  768 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  769                   | make_struct_fields ',' . "name" ":=" expr
  772                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  773                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 1293
    "name"  shift, and go to state 1294


State 1143

  775 make_struct_dim: make_struct_dim "end of expression" . make_struct_fields

    "$f"    shift, and go to state 895
    "name"  shift, and go to state 1289

    make_struct_fields  go to state 1295


State 1144

  790 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1145
    ",]]"  shift, and go to state 1146
    ']'    shift, and go to state 1147

    optional_trailing_delim_sqr_sqr  go to state 1296


State 1145

  785 optional_trailing_delim_sqr_sqr: ";]]" .

    $default  reduce using rule 785 (optional_trailing_delim_sqr_sqr)


State 1146

  786 optional_trailing_delim_sqr_sqr: ",]]" .

    $default  reduce using rule 786 (optional_trailing_delim_sqr_sqr)


State 1147

  784 optional_trailing_delim_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1297


State 1148

  791 make_struct_decl: "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 791 (make_struct_decl)


State 1149

  810 make_tuple: make_tuple ',' . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1298
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1150

  818 make_dim: make_dim "end of expression" . make_tuple

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 900
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple              go to state 1299
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1151

  783 optional_trailing_semicolon_sqr_sqr: ";]]" .

    $default  reduce using rule 783 (optional_trailing_semicolon_sqr_sqr)


State 1152

  782 optional_trailing_semicolon_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1300


State 1153

  820 make_dim_decl: "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr .

    $default  reduce using rule 820 (make_dim_decl)


State 1154

  845 array_comprehension: "[{" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 1301
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 698
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1155

  795 make_struct_decl: "[{" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "$f"    shift, and go to state 895
    "name"  shift, and go to state 1289

    make_struct_fields  go to state 901
    make_struct_dim     go to state 1302


State 1156

  794 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    "end of code block"  shift, and go to state 1303
    ";}]"                shift, and go to state 1304
    ",}]"                shift, and go to state 1305

    optional_trailing_delim_cur_sqr  go to state 1306


State 1157

  780 optional_trailing_semicolon_cur_sqr: "end of code block" . ']'

    ']'  shift, and go to state 1307


State 1158

  781 optional_trailing_semicolon_cur_sqr: ";}]" .

    $default  reduce using rule 781 (optional_trailing_semicolon_cur_sqr)


State 1159

  821 make_dim_decl: "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr .

    $default  reduce using rule 821 (make_dim_decl)


State 1160

  847 array_comprehension: "{{" "for" variable_name_with_pos_list "in" . expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 1308
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 698
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1161

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'
  811 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771

    $default  reduce using rule 811 (make_map_tuple)


State 1162

  778 optional_trailing_semicolon_cur_cur: "end of code block" "end of code block" .

    $default  reduce using rule 778 (optional_trailing_semicolon_cur_cur)


State 1163

  831 make_table: make_table "end of expression" make_map_tuple .

    $default  reduce using rule 831 (make_table)


State 1164

  250 type_declaration_no_options_list: type_declaration_no_options_list . "end of expression" type_declaration
  253 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list . '>' $@8 expr

    "end of expression"  shift, and go to state 1253
    '>'                  shift, and go to state 1309


State 1165

  250 type_declaration_no_options_list: type_declaration_no_options_list . "end of expression" type_declaration
  256 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list . '>' $@10 optional_expr_list_in_braces

    "end of expression"  shift, and go to state 1253
    '>'                  shift, and go to state 1310


State 1166

   30 string_builder_body: string_builder_body "{" expr . "}"
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    "}"    shift, and go to state 1311
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771


State 1167

  846 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" . expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 1312
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 698
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1168

  833 expr_map_tuple_list: expr_map_tuple_list ',' make_map_tuple .

    $default  reduce using rule 833 (expr_map_tuple_list)


State 1169

  834 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma "end of code block" .

    $default  reduce using rule 834 (make_table_decl)


State 1170

  217 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions . "end of code block"
  242 expressions: expressions . expression_any
  243            | expressions . error

    error                             shift, and go to state 423
    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 426
    "if"                              shift, and go to state 427
    "static_if"                       shift, and go to state 428
    "for"                             shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "return"                          shift, and go to state 436
    "null"                            shift, and go to state 437
    "break"                           shift, and go to state 438
    "try"                             shift, and go to state 439
    "table"                           shift, and go to state 440
    "delete"                          shift, and go to state 441
    "deref"                           shift, and go to state 442
    "with"                            shift, and go to state 443
    "assume"                          shift, and go to state 444
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 447
    "continue"                        shift, and go to state 448
    "pass"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 450
    "label"                           shift, and go to state 451
    "goto"                            shift, and go to state 452
    "unsafe"                          shift, and go to state 453
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "yield"                           shift, and go to state 460
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "$ <|"                            shift, and go to state 463
    "@ <|"                            shift, and go to state 464
    "@@ <|"                           shift, and go to state 465
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 483
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    "end of code block"               shift, and go to state 1313
    "end of expression"               shift, and go to state 488
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder             go to state 498
    expr_reader                go to state 499
    expression_label           go to state 500
    expression_goto            go to state 501
    if_or_static_if            go to state 502
    expression_if_one_liner    go to state 503
    expression_if_then_else    go to state 504
    expression_for_loop        go to state 505
    expression_unsafe          go to state 506
    expression_while_loop      go to state 507
    expression_with            go to state 508
    expression_with_alias      go to state 509
    expr_call_pipe             go to state 510
    expression_any             go to state 511
    expr_keyword               go to state 512
    expression_keyword         go to state 513
    expr_pipe                  go to state 514
    name_in_namespace          go to state 515
    expression_delete          go to state 516
    expr_new                   go to state 517
    expression_break           go to state 518
    expression_continue        go to state 519
    expression_return_no_pipe  go to state 520
    expression_return          go to state 521
    expression_yield_no_pipe   go to state 522
    expression_yield           go to state 523
    expression_try_catch       go to state 524
    kwd_let                    go to state 525
    expression_let             go to state 526
    expr_cast                  go to state 527
    expr_type_decl             go to state 528
    expr_type_info             go to state 529
    block_or_lambda            go to state 530
    expr_full_block            go to state 531
    expr_numeric_const         go to state 532
    expr_assign                go to state 533
    expr_assign_pipe           go to state 534
    expr_named_call            go to state 535
    expr_method_call           go to state 536
    func_addr_expr             go to state 537
    expr_field                 go to state 538
    expr_call                  go to state 539
    expr                       go to state 540
    expr_mtag                  go to state 541
    basic_type_declaration     go to state 542
    make_decl                  go to state 543
    make_struct_decl           go to state 544
    make_tuple_call            go to state 545
    make_dim_decl              go to state 546
    make_table_decl            go to state 547
    array_comprehension        go to state 548


State 1171

  843 array_comprehension: '[' "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 1314
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 698
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1172

  819 make_dim_decl: '[' expr_list optional_comma ']' .

    $default  reduce using rule 819 (make_dim_decl)


State 1173

  453 expr: '(' expr_list optional_comma ')' .

    $default  reduce using rule 453 (expr)


State 1174

  393 func_addr_name: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1315
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1175

  512 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1316
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1176

  397 func_addr_expr: '@' '@' '<' $@22 . type_declaration_no_options '>' $@23 func_addr_name

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1317


State 1177

  400 func_addr_expr: '@' '@' '<' $@24 . optional_function_argument_list optional_function_type '>' $@25 func_addr_name

    '('  shift, and go to state 282

    $default  reduce using rule 119 (optional_function_argument_list)

    optional_function_argument_list  go to state 1318


State 1178

   60 expression_else: "else" . expression_block

    "begin of code block"  shift, and go to state 284

    expression_block  go to state 1319


State 1179

   57 elif_or_static_elif: "elif" .

    $default  reduce using rule 57 (elif_or_static_elif)


State 1180

   58 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 58 (elif_or_static_elif)


State 1181

   61 expression_else: elif_or_static_elif . expr expression_block expression_else

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1320
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1182

   72 expression_if_then_else: if_or_static_if expr expression_block expression_else .

    $default  reduce using rule 72 (expression_if_then_else)


State 1183

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr . expression_else_one_liner "end of expression"
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "else"  shift, and go to state 1321
    "is"    shift, and go to state 719
    "as"    shift, and go to state 720
    "<<"    shift, and go to state 729
    ">>"    shift, and go to state 730
    "++"    shift, and go to state 731
    "--"    shift, and go to state 732
    "<="    shift, and go to state 733
    ">="    shift, and go to state 736
    "=="    shift, and go to state 737
    "!="    shift, and go to state 738
    "->"    shift, and go to state 739
    "??"    shift, and go to state 741
    "?."    shift, and go to state 742
    "?["    shift, and go to state 743
    "<|"    shift, and go to state 744
    "|>"    shift, and go to state 745
    "<<<"   shift, and go to state 747
    ">>>"   shift, and go to state 748
    "&&"    shift, and go to state 751
    "||"    shift, and go to state 752
    "^^"    shift, and go to state 753
    ".."    shift, and go to state 757
    '?'     shift, and go to state 759
    '|'     shift, and go to state 760
    '^'     shift, and go to state 761
    '&'     shift, and go to state 762
    '<'     shift, and go to state 763
    '>'     shift, and go to state 764
    '-'     shift, and go to state 765
    '+'     shift, and go to state 766
    '*'     shift, and go to state 767
    '/'     shift, and go to state 768
    '%'     shift, and go to state 769
    '.'     shift, and go to state 770
    '['     shift, and go to state 771

    $default  reduce using rule 64 (expression_else_one_liner)

    expression_else_one_liner  go to state 1322


State 1184

  340 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type expression_block

    "[["  shift, and go to state 946

    $default  reduce using rule 334 (optional_capture_list)

    optional_capture_list  go to state 1323


State 1185

  388 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  768 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  769                   | make_struct_fields . ',' "name" ":=" expr
  772                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  773                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1142
    ']'  shift, and go to state 1324


State 1186

  321 expr_list: expr_list ',' . expr
  389 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 1325
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1090
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1187

  410 expr_call: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 410 (expr_call)


State 1188

  409 expr_call: name_in_namespace '(' make_struct_dim ')' .

    $default  reduce using rule 409 (expr_call)


State 1189

  297 tuple_expansion: "name" .

    $default  reduce using rule 297 (tuple_expansion)


State 1190

  298 tuple_expansion: tuple_expansion . ',' "name"
  299 tuple_expansion_variable_declaration: "[[" tuple_expansion . ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  301                                     | "[[" tuple_expansion . ']' ']' optional_ref copy_or_move_or_clone expr "end of expression"

    ','  shift, and go to state 1326
    ']'  shift, and go to state 1327


State 1191

  298 tuple_expansion: tuple_expansion . ',' "name"
  300 tuple_expansion_variable_declaration: '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  302                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr "end of expression"

    ','  shift, and go to state 1326
    ')'  shift, and go to state 1328


State 1192

  330 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1329


State 1193

  331 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1330


State 1194

  329 capture_entry: '=' . "name"

    "name"  shift, and go to state 1331


State 1195

  328 capture_entry: '&' . "name"

    "name"  shift, and go to state 1332


State 1196

  332 capture_list: capture_entry .

    $default  reduce using rule 332 (capture_list)


State 1197

  333 capture_list: capture_list . ',' capture_entry
  335 optional_capture_list: "[[" capture_list . ']' ']'

    ','  shift, and go to state 1333
    ']'  shift, and go to state 1334


State 1198

  338 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 367

    $default  reduce using rule 122 (optional_function_type)

    optional_function_type  go to state 1335


State 1199

  471 expr: expr "is" "type" '<' . $@28 type_declaration_no_options '>' $@29

    $default  reduce using rule 469 ($@28)

    $@28  go to state 1336


State 1200

  511 expr_mtag: expr "is" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1337
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1201

  477 expr: expr "as" "type" '<' . $@30 type_declaration '>' $@31

    $default  reduce using rule 475 ($@30)

    $@30  go to state 1338


State 1202

  509 expr_mtag: expr "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1339
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1203

  369 expr_assign_pipe_right: "$ <|" expr_block .

    $default  reduce using rule 369 (expr_assign_pipe_right)


State 1204

  367 expr_assign_pipe_right: "@ <|" expr_block .

    $default  reduce using rule 367 (expr_assign_pipe_right)


State 1205

  368 expr_assign_pipe_right: "@@ <|" expr_block .

    $default  reduce using rule 368 (expr_assign_pipe_right)


State 1206

  390 expr_method_call: expr "->" "name" '(' . ')'
  391                 | expr "->" "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    ')'                               shift, and go to state 1340
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 1341
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 698
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1207

  506 expr_mtag: expr "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1342
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1208

  456 expr: expr "?[" expr ']' .

    $default  reduce using rule 456 (expr)


State 1209

  482 expr: expr '?' "as" "type" . '<' $@32 type_declaration '>' $@33

    '<'  shift, and go to state 1343


State 1210

  510 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1344


State 1211

  479 expr: expr '?' "as" "name" .

    $default  reduce using rule 479 (expr)


State 1212

  483 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 483 (expr)


State 1213

  468 expr: expr '?' expr ':' . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1345
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1214

  508 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1346


State 1215

  459 expr: expr '.' "?." "name" .

    $default  reduce using rule 459 (expr)


State 1216

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  457     | expr '.' "?[" expr . ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771
    ']'    shift, and go to state 1347


State 1217

  505 expr_mtag: expr '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1348
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1218

  403 expr_field: expr '.' "name" '(' . ')'
  404           | expr '.' "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    ')'                               shift, and go to state 1349
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 1350
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 698
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1219

  507 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1351


State 1220

  402 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 402 (expr_field)


State 1221

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  455     | expr '.' '[' expr . ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771
    ']'    shift, and go to state 1352


State 1222

  407 expr_field: expr '.' $@26 error . $@27

    $default  reduce using rule 406 ($@27)

    $@27  go to state 1353


State 1223

  454 expr: expr '[' expr ']' .

    $default  reduce using rule 454 (expr)


State 1224

  412 expr_call: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 412 (expr_call)


State 1225

  588 enum_list: enum_list "name" '=' expr "end of expression" .

    $default  reduce using rule 588 (enum_list)


State 1226

  608 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block" .

    $default  reduce using rule 608 (enum_declaration)


State 1227

  118 optional_annotation_list: '[' annotation_list ']' .
  533 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' . "end of expression"

    "end of expression"  shift, and go to state 1354

    $default  reduce using rule 118 (optional_annotation_list)


State 1228

  521 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 521 (optional_public_or_private_member_variable)


State 1229

  522 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 522 (optional_public_or_private_member_variable)


State 1230

  530 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . "abstract" optional_constant $@35 function_declaration_header "end of expression"
  532                                 | struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block

    "abstract"  shift, and go to state 1355
    "static"    shift, and go to state 1231

    $default  reduce using rule 523 (optional_static_member_variable)

    optional_static_member_variable  go to state 1356


State 1231

  524 optional_static_member_variable: "static" .

    $default  reduce using rule 524 (optional_static_member_variable)


State 1232

  525 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1357
    "sealed"    shift, and go to state 1358

    $default  reduce using rule 515 (optional_override)

    optional_override  go to state 1359


State 1233

  528 struct_variable_declaration_list: struct_variable_declaration_list $@34 structure_variable_declaration "end of expression" .

    $default  reduce using rule 528 (struct_variable_declaration_list)


State 1234

  570 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 570 (let_variable_declaration)


State 1235

  686 type_declaration_no_options: "type" '<' $@49 type_declaration '>' $@50 .

    $default  reduce using rule 686 (type_declaration_no_options)


State 1236

  709 type_declaration_no_options: "array" '<' $@54 type_declaration '>' $@55 .

    $default  reduce using rule 709 (type_declaration_no_options)


State 1237

  712 type_declaration_no_options: "table" '<' $@56 table_type_pair '>' $@57 .

    $default  reduce using rule 712 (type_declaration_no_options)


State 1238

  675 table_type_pair: type_declaration "end of expression" type_declaration .
  744 type_declaration: type_declaration . '|' type_declaration_no_options
  745                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410

    $default  reduce using rule 675 (table_type_pair)


State 1239

  715 type_declaration_no_options: "iterator" '<' $@58 type_declaration '>' $@59 .

    $default  reduce using rule 715 (type_declaration_no_options)


State 1240

  705 type_declaration_no_options: "smart_ptr" '<' $@52 type_declaration '>' $@53 .

    $default  reduce using rule 705 (type_declaration_no_options)


State 1241

  667 bitfield_bits: bitfield_bits "end of expression" "name" .

    $default  reduce using rule 667 (bitfield_bits)


State 1242

  673 bitfield_type_declaration: "bitfield" '<' $@47 bitfield_bits '>' $@48 .

    $default  reduce using rule 673 (bitfield_type_declaration)


State 1243

  719 type_declaration_no_options: "block" '<' $@60 type_declaration '>' $@61 .

    $default  reduce using rule 719 (type_declaration_no_options)


State 1244

  722 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list optional_function_type '>' . $@63

    $default  reduce using rule 721 ($@63)

    $@63  go to state 1360


State 1245

  726 type_declaration_no_options: "function" '<' $@64 type_declaration '>' $@65 .

    $default  reduce using rule 726 (type_declaration_no_options)


State 1246

  729 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list optional_function_type '>' . $@67

    $default  reduce using rule 728 ($@67)

    $@67  go to state 1361


State 1247

  733 type_declaration_no_options: "lambda" '<' $@68 type_declaration '>' $@69 .

    $default  reduce using rule 733 (type_declaration_no_options)


State 1248

  736 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list optional_function_type '>' . $@71

    $default  reduce using rule 735 ($@71)

    $@71  go to state 1362


State 1249

  541 tuple_type_list: tuple_type_list "end of expression" tuple_type .

    $default  reduce using rule 541 (tuple_type_list)


State 1250

  739 type_declaration_no_options: "tuple" '<' $@72 tuple_type_list '>' $@73 .

    $default  reduce using rule 739 (type_declaration_no_options)


State 1251

  547 variant_type_list: variant_type_list "end of expression" variant_type .

    $default  reduce using rule 547 (variant_type_list)


State 1252

  742 type_declaration_no_options: "variant" '<' $@74 variant_type_list '>' $@75 .

    $default  reduce using rule 742 (type_declaration_no_options)


State 1253

  250 type_declaration_no_options_list: type_declaration_no_options_list "end of expression" . type_declaration

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1363


State 1254

  690 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' . '(' optional_expr_list ')'

    '('  shift, and go to state 1364


State 1255

  625 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 625 (variable_name_with_pos_list)


State 1256

  628 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1365


State 1257

  556 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1366
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1258

  798 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' . $@89 '(' make_struct_dim ')'

    $default  reduce using rule 797 ($@89)

    $@89  go to state 1367


State 1259

  801 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' . $@91 '(' make_struct_dim ')'

    $default  reduce using rule 800 ($@91)

    $@91  go to state 1368


State 1260

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" expr_list . expression_block
  321 expr_list: expr_list . ',' expr

    "begin of code block"  shift, and go to state 284
    ','                    shift, and go to state 844

    expression_block  go to state 1369


State 1261

  269 new_type_declaration: '<' $@11 type_declaration '>' . $@12

    $default  reduce using rule 268 ($@12)

    $@12  go to state 1370


State 1262

  273 expr_new: "new" new_type_declaration '(' expr_list ')' .

    $default  reduce using rule 273 (expr_new)


State 1263

  274 expr_new: "new" new_type_declaration '(' make_struct_dim ')' .

    $default  reduce using rule 274 (expr_new)


State 1264

  318 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" . '>' expr ')'
  319               | "typeinfo" '(' name_in_namespace '<' "name" . "end of expression" "name" '>' expr ')'

    "end of expression"  shift, and go to state 1371
    '>'                  shift, and go to state 1372


State 1265

  317 expr_type_info: "typeinfo" '(' name_in_namespace expr ')' .

    $default  reduce using rule 317 (expr_type_info)


State 1266

  316 expr_type_decl: "type" '<' $@19 type_declaration '>' . $@20

    $default  reduce using rule 315 ($@20)

    $@20  go to state 1373


State 1267

  825 make_dim_decl: "array" '<' $@98 type_declaration_no_options '>' . $@99 '(' expr_list optional_comma ')'

    $default  reduce using rule 824 ($@99)

    $@99  go to state 1374


State 1268

  822 make_dim_decl: "array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 822 (make_dim_decl)


State 1269

  682 type_declaration_no_options: type_declaration_no_options . dim_list
  683                            | type_declaration_no_options . '[' ']'
  691                            | type_declaration_no_options . '-' '[' ']'
  692                            | type_declaration_no_options . "explicit"
  693                            | type_declaration_no_options . "const"
  694                            | type_declaration_no_options . '-' "const"
  695                            | type_declaration_no_options . '&'
  696                            | type_declaration_no_options . '-' '&'
  697                            | type_declaration_no_options . '#'
  698                            | type_declaration_no_options . "implicit"
  699                            | type_declaration_no_options . '-' '#'
  700                            | type_declaration_no_options . "==" "const"
  701                            | type_declaration_no_options . "==" '&'
  702                            | type_declaration_no_options . '?'
  706                            | type_declaration_no_options . "??"
  838 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options . '>' '(' expr_map_tuple_list optional_comma ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1375
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1270

  837 make_table_decl: "table" '<' type_declaration_no_options '>' '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 680
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_map_tuple          go to state 688
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    expr_map_tuple_list     go to state 1376
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1271

  836 make_table_decl: "table" '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 836 (make_table_decl)


State 1272

   81 expression_with_alias: "assume" "name" '=' $@5 expr .
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771

    $default  reduce using rule 81 (expression_with_alias)


State 1273

  307 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' . $@14 expr

    $default  reduce using rule 306 ($@14)

    $@14  go to state 1377


State 1274

  310 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' . $@16 expr

    $default  reduce using rule 309 ($@16)

    $@16  go to state 1378


State 1275

  313 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' . $@18 expr

    $default  reduce using rule 312 ($@18)

    $@18  go to state 1379


State 1276

  829 make_dim_decl: "fixed_array" '<' $@100 type_declaration_no_options '>' . $@101 '(' expr_list optional_comma ')'

    $default  reduce using rule 828 ($@101)

    $@101  go to state 1380


State 1277

  826 make_dim_decl: "fixed_array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 826 (make_dim_decl)


State 1278

  807 make_struct_decl: "default" '<' $@94 type_declaration_no_options '>' . $@95

    $default  reduce using rule 806 ($@95)

    $@95  go to state 1381


State 1279

  816 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' . $@97 '(' make_struct_dim ')'

    $default  reduce using rule 815 ($@97)

    $@97  go to state 1382


State 1280

  813 make_tuple_call: "tuple" '(' expr_list optional_comma ')' .

    $default  reduce using rule 813 (make_tuple_call)


State 1281

  804 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' . $@93 '(' make_struct_dim ')'

    $default  reduce using rule 803 ($@93)

    $@93  go to state 1383


State 1282

  465 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  466     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'

    '('  shift, and go to state 1384


State 1283

  337 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 367

    $default  reduce using rule 122 (optional_function_type)

    optional_function_type  go to state 1385


State 1284

  503 expr_mtag: "$c" '(' expr ')' '(' . ')'
  504          | "$c" '(' expr ')' '(' . expr_list ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    ')'                               shift, and go to state 1386
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 1387
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 698
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1285

  321 expr_list: expr_list . ',' expr
  844 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']' ']'

    "end of expression"  shift, and go to state 1388
    ','                  shift, and go to state 844


State 1286

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'
  770 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  771                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771
    ')'    shift, and go to state 1389


State 1287

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'
  767 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771

    $default  reduce using rule 767 (make_struct_fields)


State 1288

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'
  766 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771

    $default  reduce using rule 766 (make_struct_fields)


State 1289

  766 make_struct_fields: "name" . copy_or_move expr
  767                   | "name" . ":=" expr

    "<-"  shift, and go to state 826
    ":="  shift, and go to state 1136
    '='   shift, and go to state 828

    copy_or_move  go to state 1137


State 1290

  775 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  793 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"              shift, and go to state 894
    "end of expression"  shift, and go to state 1143

    $default  reduce using rule 776 (optional_block)

    optional_block  go to state 1390


State 1291

  792 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1145
    ",]]"  shift, and go to state 1146
    ']'    shift, and go to state 1147

    optional_trailing_delim_sqr_sqr  go to state 1391


State 1292

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'
  809 make_tuple: expr "=>" expr .

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771

    $default  reduce using rule 809 (make_tuple)


State 1293

  772 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  773                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1392


State 1294

  768 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  769                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 826
    ":="  shift, and go to state 1393
    '='   shift, and go to state 828

    copy_or_move  go to state 1394


State 1295

  768 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  769                   | make_struct_fields . ',' "name" ":=" expr
  772                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  773                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  775 make_struct_dim: make_struct_dim "end of expression" make_struct_fields .

    ','  shift, and go to state 1142

    $default  reduce using rule 775 (make_struct_dim)


State 1296

  790 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 790 (make_struct_decl)


State 1297

  784 optional_trailing_delim_sqr_sqr: ']' ']' .

    $default  reduce using rule 784 (optional_trailing_delim_sqr_sqr)


State 1298

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'
  810 make_tuple: make_tuple ',' expr .

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771

    $default  reduce using rule 810 (make_tuple)


State 1299

  810 make_tuple: make_tuple . ',' expr
  818 make_dim: make_dim "end of expression" make_tuple .

    ','  shift, and go to state 1149

    $default  reduce using rule 818 (make_dim)


State 1300

  782 optional_trailing_semicolon_sqr_sqr: ']' ']' .

    $default  reduce using rule 782 (optional_trailing_semicolon_sqr_sqr)


State 1301

  321 expr_list: expr_list . ',' expr
  845 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where "end of code block" ']'

    "end of expression"  shift, and go to state 1395
    ','                  shift, and go to state 844


State 1302

  775 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  795 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"              shift, and go to state 894
    "end of expression"  shift, and go to state 1143

    $default  reduce using rule 776 (optional_block)

    optional_block  go to state 1396


State 1303

  787 optional_trailing_delim_cur_sqr: "end of code block" . ']'

    ']'  shift, and go to state 1397


State 1304

  788 optional_trailing_delim_cur_sqr: ";}]" .

    $default  reduce using rule 788 (optional_trailing_delim_cur_sqr)


State 1305

  789 optional_trailing_delim_cur_sqr: ",}]" .

    $default  reduce using rule 789 (optional_trailing_delim_cur_sqr)


State 1306

  794 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 794 (make_struct_decl)


State 1307

  780 optional_trailing_semicolon_cur_sqr: "end of code block" ']' .

    $default  reduce using rule 780 (optional_trailing_semicolon_cur_sqr)


State 1308

  321 expr_list: expr_list . ',' expr
  847 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list . "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "end of expression"  shift, and go to state 1398
    ','                  shift, and go to state 844


State 1309

  253 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list '>' . $@8 expr

    $default  reduce using rule 252 ($@8)

    $@8  go to state 1399


State 1310

  256 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list '>' . $@10 optional_expr_list_in_braces

    $default  reduce using rule 255 ($@10)

    $@10  go to state 1400


State 1311

   30 string_builder_body: string_builder_body "{" expr "}" .

    $default  reduce using rule 30 (string_builder_body)


State 1312

  321 expr_list: expr_list . ',' expr
  846 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list . "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1401
    ','                  shift, and go to state 844


State 1313

  217 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions "end of code block" .

    $default  reduce using rule 217 (expression_block)


State 1314

  321 expr_list: expr_list . ',' expr
  843 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1402
    ','                  shift, and go to state 844


State 1315

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  393 func_addr_name: "$i" '(' expr . ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771
    ')'    shift, and go to state 1403


State 1316

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'
  512          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771
    ')'    shift, and go to state 1404


State 1317

  397 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options . '>' $@23 func_addr_name
  682 type_declaration_no_options: type_declaration_no_options . dim_list
  683                            | type_declaration_no_options . '[' ']'
  691                            | type_declaration_no_options . '-' '[' ']'
  692                            | type_declaration_no_options . "explicit"
  693                            | type_declaration_no_options . "const"
  694                            | type_declaration_no_options . '-' "const"
  695                            | type_declaration_no_options . '&'
  696                            | type_declaration_no_options . '-' '&'
  697                            | type_declaration_no_options . '#'
  698                            | type_declaration_no_options . "implicit"
  699                            | type_declaration_no_options . '-' '#'
  700                            | type_declaration_no_options . "==" "const"
  701                            | type_declaration_no_options . "==" '&'
  702                            | type_declaration_no_options . '?'
  706                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1405
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1318

  400 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list . optional_function_type '>' $@25 func_addr_name

    ':'  shift, and go to state 367

    $default  reduce using rule 122 (optional_function_type)

    optional_function_type  go to state 1406


State 1319

   60 expression_else: "else" expression_block .

    $default  reduce using rule 60 (expression_else)


State 1320

   61 expression_else: elif_or_static_elif expr . expression_block expression_else
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 719
    "as"                   shift, and go to state 720
    "<<"                   shift, and go to state 729
    ">>"                   shift, and go to state 730
    "++"                   shift, and go to state 731
    "--"                   shift, and go to state 732
    "<="                   shift, and go to state 733
    ">="                   shift, and go to state 736
    "=="                   shift, and go to state 737
    "!="                   shift, and go to state 738
    "->"                   shift, and go to state 739
    "??"                   shift, and go to state 741
    "?."                   shift, and go to state 742
    "?["                   shift, and go to state 743
    "<|"                   shift, and go to state 744
    "|>"                   shift, and go to state 745
    "<<<"                  shift, and go to state 747
    ">>>"                  shift, and go to state 748
    "&&"                   shift, and go to state 751
    "||"                   shift, and go to state 752
    "^^"                   shift, and go to state 753
    ".."                   shift, and go to state 757
    "begin of code block"  shift, and go to state 284
    '?'                    shift, and go to state 759
    '|'                    shift, and go to state 760
    '^'                    shift, and go to state 761
    '&'                    shift, and go to state 762
    '<'                    shift, and go to state 763
    '>'                    shift, and go to state 764
    '-'                    shift, and go to state 765
    '+'                    shift, and go to state 766
    '*'                    shift, and go to state 767
    '/'                    shift, and go to state 768
    '%'                    shift, and go to state 769
    '.'                    shift, and go to state 770
    '['                    shift, and go to state 771

    expression_block  go to state 1407


State 1321

   66 expression_else_one_liner: "else" . $@2 expression_if_one_liner

    $default  reduce using rule 65 ($@2)

    $@2  go to state 1408


State 1322

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner . "end of expression"

    "end of expression"  shift, and go to state 1409


State 1323

  340 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type expression_block

    '('  shift, and go to state 282

    $default  reduce using rule 119 (optional_function_argument_list)

    optional_function_argument_list  go to state 1410


State 1324

  388 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1411


State 1325

  389 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'
  819 make_dim_decl: '[' . expr_list optional_comma ']'
  843 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "for"                             shift, and go to state 696
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "$f"                              shift, and go to state 895
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 896
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 697
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 698
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_fields      go to state 1412
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1326

  298 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1413


State 1327

  299 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' . ']' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  301                                     | "[[" tuple_expansion ']' . ']' optional_ref copy_or_move_or_clone expr "end of expression"

    ']'  shift, and go to state 1414


State 1328

  300 tuple_expansion_variable_declaration: '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  302                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr "end of expression"

    ':'  shift, and go to state 1415
    '&'  shift, and go to state 382

    $default  reduce using rule 562 (optional_ref)

    optional_ref  go to state 1416


State 1329

  330 capture_entry: "<-" "name" .

    $default  reduce using rule 330 (capture_entry)


State 1330

  331 capture_entry: ":=" "name" .

    $default  reduce using rule 331 (capture_entry)


State 1331

  329 capture_entry: '=' "name" .

    $default  reduce using rule 329 (capture_entry)


State 1332

  328 capture_entry: '&' "name" .

    $default  reduce using rule 328 (capture_entry)


State 1333

  333 capture_list: capture_list ',' . capture_entry

    "<-"  shift, and go to state 1192
    ":="  shift, and go to state 1193
    '='   shift, and go to state 1194
    '&'   shift, and go to state 1195

    capture_entry  go to state 1417


State 1334

  335 optional_capture_list: "[[" capture_list ']' . ']'

    ']'  shift, and go to state 1418


State 1335

  338 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"                   shift, and go to state 1419
    "begin of code block"  shift, and go to state 284

    expression_block       go to state 1420
    block_or_simple_block  go to state 1421


State 1336

  471 expr: expr "is" "type" '<' $@28 . type_declaration_no_options '>' $@29

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1422


State 1337

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'
  511          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771
    ')'    shift, and go to state 1423


State 1338

  477 expr: expr "as" "type" '<' $@30 . type_declaration '>' $@31

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1424


State 1339

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  509          | expr "as" "$f" '(' expr . ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771
    ')'    shift, and go to state 1425


State 1340

  390 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 390 (expr_method_call)


State 1341

  321 expr_list: expr_list . ',' expr
  391 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 844
    ')'  shift, and go to state 1426


State 1342

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  506          | expr "?." "$f" '(' expr . ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771
    ')'    shift, and go to state 1427


State 1343

  482 expr: expr '?' "as" "type" '<' . $@32 type_declaration '>' $@33

    $default  reduce using rule 480 ($@32)

    $@32  go to state 1428


State 1344

  510 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1429
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1345

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  468     | expr '?' expr ':' expr .
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771

    $default  reduce using rule 468 (expr)


State 1346

  508 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1430
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1347

  457 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 457 (expr)


State 1348

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr '.' "$f" '(' expr . ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771
    ')'    shift, and go to state 1431


State 1349

  403 expr_field: expr '.' "name" '(' ')' .

    $default  reduce using rule 403 (expr_field)


State 1350

  321 expr_list: expr_list . ',' expr
  404 expr_field: expr '.' "name" '(' expr_list . ')'

    ','  shift, and go to state 844
    ')'  shift, and go to state 1432


State 1351

  507 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1433
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1352

  455 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 455 (expr)


State 1353

  407 expr_field: expr '.' $@26 error $@27 .

    $default  reduce using rule 407 (expr_field)


State 1354

  533 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' "end of expression" .

    $default  reduce using rule 533 (struct_variable_declaration_list)


State 1355

  530 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" . optional_constant $@35 function_declaration_header "end of expression"

    "const"  shift, and go to state 1434

    $default  reduce using rule 518 (optional_constant)

    optional_constant  go to state 1435


State 1356

  532 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@36 function_declaration_header expression_block

    "override"  shift, and go to state 1357
    "sealed"    shift, and go to state 1358

    $default  reduce using rule 515 (optional_override)

    optional_override  go to state 1436


State 1357

  516 optional_override: "override" .

    $default  reduce using rule 516 (optional_override)


State 1358

  517 optional_override: "sealed" .

    $default  reduce using rule 517 (optional_override)


State 1359

  525 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1228
    "private"  shift, and go to state 1229

    $default  reduce using rule 520 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1437


State 1360

  722 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list optional_function_type '>' $@63 .

    $default  reduce using rule 722 (type_declaration_no_options)


State 1361

  729 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list optional_function_type '>' $@67 .

    $default  reduce using rule 729 (type_declaration_no_options)


State 1362

  736 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list optional_function_type '>' $@71 .

    $default  reduce using rule 736 (type_declaration_no_options)


State 1363

  250 type_declaration_no_options_list: type_declaration_no_options_list "end of expression" type_declaration .
  744 type_declaration: type_declaration . '|' type_declaration_no_options
  745                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410

    $default  reduce using rule 250 (type_declaration_no_options_list)


State 1364

  690 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    $default  reduce using rule 245 (optional_expr_list)

    string_builder          go to state 498
    expr_reader             go to state 499
    optional_expr_list      go to state 1438
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 811
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 698
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1365

  628 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 628 (variable_name_with_pos_list)


State 1366

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'
  556 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771

    $default  reduce using rule 556 (variable_declaration)


State 1367

  798 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 . '(' make_struct_dim ')'

    '('  shift, and go to state 1439


State 1368

  801 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 . '(' make_struct_dim ')'

    '('  shift, and go to state 1440


State 1369

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" expr_list expression_block .

    $default  reduce using rule 76 (expression_for_loop)


State 1370

  269 new_type_declaration: '<' $@11 type_declaration '>' $@12 .

    $default  reduce using rule 269 (new_type_declaration)


State 1371

  319 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" . "name" '>' expr ')'

    "name"  shift, and go to state 1441


State 1372

  318 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' . expr ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1442
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1373

  316 expr_type_decl: "type" '<' $@19 type_declaration '>' $@20 .

    $default  reduce using rule 316 (expr_type_decl)


State 1374

  825 make_dim_decl: "array" '<' $@98 type_declaration_no_options '>' $@99 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1443


State 1375

  838 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' . '(' expr_map_tuple_list optional_comma ')'

    '('  shift, and go to state 1444


State 1376

  833 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  837 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 923

    $default  reduce using rule 841 (optional_comma)

    optional_comma  go to state 1445


State 1377

  307 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1446
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1378

  310 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1447
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1379

  313 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1448
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1380

  829 make_dim_decl: "fixed_array" '<' $@100 type_declaration_no_options '>' $@101 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1449


State 1381

  807 make_struct_decl: "default" '<' $@94 type_declaration_no_options '>' $@95 .

    $default  reduce using rule 807 (make_struct_decl)


State 1382

  816 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 . '(' make_struct_dim ')'

    '('  shift, and go to state 1450


State 1383

  804 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 . '(' make_struct_dim ')'

    '('  shift, and go to state 1451


State 1384

  465 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  466     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    ')'                               shift, and go to state 1452
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1453
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1385

  337 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"                   shift, and go to state 1419
    "begin of code block"  shift, and go to state 284

    expression_block       go to state 1420
    block_or_simple_block  go to state 1454


State 1386

  503 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 503 (expr_mtag)


State 1387

  321 expr_list: expr_list . ',' expr
  504 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 844
    ')'  shift, and go to state 1455


State 1388

  844 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']' ']'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1456
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1389

  770 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  771                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 826
    ":="  shift, and go to state 1457
    '='   shift, and go to state 828

    copy_or_move  go to state 1458


State 1390

  793 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1145
    ",]]"  shift, and go to state 1146
    ']'    shift, and go to state 1147

    optional_trailing_delim_sqr_sqr  go to state 1459


State 1391

  792 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 792 (make_struct_decl)


State 1392

  772 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  773                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1460
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1393

  769 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1461
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1394

  768 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1462
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1395

  845 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where "end of code block" ']'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1463
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1396

  795 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    "end of code block"  shift, and go to state 1303
    ";}]"                shift, and go to state 1304
    ",}]"                shift, and go to state 1305

    optional_trailing_delim_cur_sqr  go to state 1464


State 1397

  787 optional_trailing_delim_cur_sqr: "end of code block" ']' .

    $default  reduce using rule 787 (optional_trailing_delim_cur_sqr)


State 1398

  847 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" . make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 680
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_map_tuple          go to state 1465
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1399

  253 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list '>' $@8 . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1466
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1400

  256 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list '>' $@10 . optional_expr_list_in_braces

    '('  shift, and go to state 1467

    '('       [reduce using rule 247 (optional_expr_list_in_braces)]
    $default  reduce using rule 247 (optional_expr_list_in_braces)

    optional_expr_list_in_braces  go to state 1468


State 1401

  846 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" . make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 680
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_map_tuple          go to state 1469
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1402

  843 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1470
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1403

  393 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 393 (func_addr_name)


State 1404

  512 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 512 (expr_mtag)


State 1405

  397 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options '>' . $@23 func_addr_name

    $default  reduce using rule 396 ($@23)

    $@23  go to state 1471


State 1406

  400 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type . '>' $@25 func_addr_name

    '>'  shift, and go to state 1472


State 1407

   61 expression_else: elif_or_static_elif expr expression_block . expression_else

    "else"         shift, and go to state 1178
    "elif"         shift, and go to state 1179
    "static_elif"  shift, and go to state 1180

    $default  reduce using rule 59 (expression_else)

    elif_or_static_elif  go to state 1181
    expression_else      go to state 1473


State 1408

   66 expression_else_one_liner: "else" $@2 . expression_if_one_liner

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "return"                          shift, and go to state 1474
    "null"                            shift, and go to state 437
    "break"                           shift, and go to state 438
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "continue"                        shift, and go to state 448
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "yield"                           shift, and go to state 1475
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder             go to state 498
    expr_reader                go to state 499
    expression_if_one_liner    go to state 1476
    expression_keyword         go to state 559
    name_in_namespace          go to state 515
    expr_new                   go to state 517
    expression_break           go to state 1477
    expression_continue        go to state 1478
    expression_return_no_pipe  go to state 1479
    expression_yield_no_pipe   go to state 1480
    expr_cast                  go to state 527
    expr_type_decl             go to state 528
    expr_type_info             go to state 529
    block_or_lambda            go to state 530
    expr_full_block            go to state 531
    expr_numeric_const         go to state 532
    expr_named_call            go to state 535
    expr_method_call           go to state 536
    func_addr_expr             go to state 537
    expr_field                 go to state 538
    expr_call                  go to state 539
    expr                       go to state 1481
    expr_mtag                  go to state 541
    basic_type_declaration     go to state 542
    make_decl                  go to state 543
    make_struct_decl           go to state 544
    make_tuple_call            go to state 545
    make_dim_decl              go to state 546
    make_table_decl            go to state 547
    array_comprehension        go to state 548


State 1409

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner "end of expression" .

    $default  reduce using rule 74 (expression_if_then_else)


State 1410

  340 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type expression_block

    ':'  shift, and go to state 367

    $default  reduce using rule 122 (optional_function_type)

    optional_function_type  go to state 1482


State 1411

  388 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 388 (expr_named_call)


State 1412

  389 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  768 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  769                   | make_struct_fields . ',' "name" ":=" expr
  772                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  773                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1142
    ']'  shift, and go to state 1483


State 1413

  298 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 298 (tuple_expansion)


State 1414

  299 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  301                                     | "[[" tuple_expansion ']' ']' . optional_ref copy_or_move_or_clone expr "end of expression"

    ':'  shift, and go to state 1484
    '&'  shift, and go to state 382

    $default  reduce using rule 562 (optional_ref)

    optional_ref  go to state 1485


State 1415

  300 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1486


State 1416

  302 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr "end of expression"

    "<-"  shift, and go to state 564
    ":="  shift, and go to state 565
    '='   shift, and go to state 566

    copy_or_move_or_clone  go to state 1487


State 1417

  333 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 333 (capture_list)


State 1418

  335 optional_capture_list: "[[" capture_list ']' ']' .

    $default  reduce using rule 335 (optional_capture_list)


State 1419

  323 block_or_simple_block: "=>" . expr
  324                      | "=>" . "<-" expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "<-"                              shift, and go to state 1488
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1489
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1420

  322 block_or_simple_block: expression_block .

    $default  reduce using rule 322 (block_or_simple_block)


State 1421

  338 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 338 (expr_full_block)


State 1422

  471 expr: expr "is" "type" '<' $@28 type_declaration_no_options . '>' $@29
  682 type_declaration_no_options: type_declaration_no_options . dim_list
  683                            | type_declaration_no_options . '[' ']'
  691                            | type_declaration_no_options . '-' '[' ']'
  692                            | type_declaration_no_options . "explicit"
  693                            | type_declaration_no_options . "const"
  694                            | type_declaration_no_options . '-' "const"
  695                            | type_declaration_no_options . '&'
  696                            | type_declaration_no_options . '-' '&'
  697                            | type_declaration_no_options . '#'
  698                            | type_declaration_no_options . "implicit"
  699                            | type_declaration_no_options . '-' '#'
  700                            | type_declaration_no_options . "==" "const"
  701                            | type_declaration_no_options . "==" '&'
  702                            | type_declaration_no_options . '?'
  706                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1490
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1423

  511 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 511 (expr_mtag)


State 1424

  477 expr: expr "as" "type" '<' $@30 type_declaration . '>' $@31
  744 type_declaration: type_declaration . '|' type_declaration_no_options
  745                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1491


State 1425

  509 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 509 (expr_mtag)


State 1426

  391 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 391 (expr_method_call)


State 1427

  506 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 506 (expr_mtag)


State 1428

  482 expr: expr '?' "as" "type" '<' $@32 . type_declaration '>' $@33

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1492


State 1429

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr '?' "as" "$f" '(' expr . ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771
    ')'    shift, and go to state 1493


State 1430

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr '.' "?." "$f" '(' expr . ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771
    ')'    shift, and go to state 1494


State 1431

  505 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 505 (expr_mtag)


State 1432

  404 expr_field: expr '.' "name" '(' expr_list ')' .

    $default  reduce using rule 404 (expr_field)


State 1433

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr '.' '.' "$f" '(' expr . ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771
    ')'    shift, and go to state 1495


State 1434

  519 optional_constant: "const" .

    $default  reduce using rule 519 (optional_constant)


State 1435

  530 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant . $@35 function_declaration_header "end of expression"

    $default  reduce using rule 529 ($@35)

    $@35  go to state 1496


State 1436

  532 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@36 function_declaration_header expression_block

    "const"  shift, and go to state 1434

    $default  reduce using rule 518 (optional_constant)

    optional_constant  go to state 1497


State 1437

  525 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 611
    "name"  shift, and go to state 612

    variable_declaration         go to state 1498
    variable_name_with_pos_list  go to state 614


State 1438

  690 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list . ')'

    ')'  shift, and go to state 1499


State 1439

  798 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' . make_struct_dim ')'

    "$f"    shift, and go to state 895
    "name"  shift, and go to state 1289

    make_struct_fields  go to state 901
    make_struct_dim     go to state 1500


State 1440

  801 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' . make_struct_dim ')'

    "$f"    shift, and go to state 895
    "name"  shift, and go to state 1289

    make_struct_fields  go to state 901
    make_struct_dim     go to state 1501


State 1441

  319 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" . '>' expr ')'

    '>'  shift, and go to state 1502


State 1442

  318 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr . ')'
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771
    ')'    shift, and go to state 1503


State 1443

  825 make_dim_decl: "array" '<' $@98 type_declaration_no_options '>' $@99 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 1504
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 698
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1444

  838 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 680
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_map_tuple          go to state 688
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    expr_map_tuple_list     go to state 1505
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1445

  837 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1506


State 1446

  307 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 expr .
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771

    $default  reduce using rule 307 (expr_cast)


State 1447

  310 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 expr .
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771

    $default  reduce using rule 310 (expr_cast)


State 1448

  313 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 expr .
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771

    $default  reduce using rule 313 (expr_cast)


State 1449

  829 make_dim_decl: "fixed_array" '<' $@100 type_declaration_no_options '>' $@101 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 1507
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 698
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1450

  816 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' . make_struct_dim ')'

    "$f"    shift, and go to state 895
    "name"  shift, and go to state 1289

    make_struct_fields  go to state 901
    make_struct_dim     go to state 1508


State 1451

  804 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 '(' . make_struct_dim ')'

    "$f"    shift, and go to state 895
    "name"  shift, and go to state 1289

    make_struct_fields  go to state 901
    make_struct_dim     go to state 1509


State 1452

  465 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 465 (expr)


State 1453

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771
    ')'    shift, and go to state 1510


State 1454

  337 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 337 (expr_block)


State 1455

  504 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 504 (expr_mtag)


State 1456

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'
  844 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']' ']'

    "is"                 shift, and go to state 719
    "as"                 shift, and go to state 720
    "<<"                 shift, and go to state 729
    ">>"                 shift, and go to state 730
    "++"                 shift, and go to state 731
    "--"                 shift, and go to state 732
    "<="                 shift, and go to state 733
    ">="                 shift, and go to state 736
    "=="                 shift, and go to state 737
    "!="                 shift, and go to state 738
    "->"                 shift, and go to state 739
    "??"                 shift, and go to state 741
    "?."                 shift, and go to state 742
    "?["                 shift, and go to state 743
    "<|"                 shift, and go to state 744
    "|>"                 shift, and go to state 745
    "<<<"                shift, and go to state 747
    ">>>"                shift, and go to state 748
    "&&"                 shift, and go to state 751
    "||"                 shift, and go to state 752
    "^^"                 shift, and go to state 753
    ".."                 shift, and go to state 757
    "end of expression"  shift, and go to state 1511
    '?'                  shift, and go to state 759
    '|'                  shift, and go to state 760
    '^'                  shift, and go to state 761
    '&'                  shift, and go to state 762
    '<'                  shift, and go to state 763
    '>'                  shift, and go to state 764
    '-'                  shift, and go to state 765
    '+'                  shift, and go to state 766
    '*'                  shift, and go to state 767
    '/'                  shift, and go to state 768
    '%'                  shift, and go to state 769
    '.'                  shift, and go to state 770
    '['                  shift, and go to state 771

    $default  reduce using rule 839 (array_comprehension_where)

    array_comprehension_where  go to state 1512


State 1457

  771 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1513
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1458

  770 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1514
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1459

  793 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 793 (make_struct_decl)


State 1460

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'
  772 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  773                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771
    ')'    shift, and go to state 1515


State 1461

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'
  769 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771

    $default  reduce using rule 769 (make_struct_fields)


State 1462

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'
  768 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771

    $default  reduce using rule 768 (make_struct_fields)


State 1463

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'
  845 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where "end of code block" ']'

    "is"                 shift, and go to state 719
    "as"                 shift, and go to state 720
    "<<"                 shift, and go to state 729
    ">>"                 shift, and go to state 730
    "++"                 shift, and go to state 731
    "--"                 shift, and go to state 732
    "<="                 shift, and go to state 733
    ">="                 shift, and go to state 736
    "=="                 shift, and go to state 737
    "!="                 shift, and go to state 738
    "->"                 shift, and go to state 739
    "??"                 shift, and go to state 741
    "?."                 shift, and go to state 742
    "?["                 shift, and go to state 743
    "<|"                 shift, and go to state 744
    "|>"                 shift, and go to state 745
    "<<<"                shift, and go to state 747
    ">>>"                shift, and go to state 748
    "&&"                 shift, and go to state 751
    "||"                 shift, and go to state 752
    "^^"                 shift, and go to state 753
    ".."                 shift, and go to state 757
    "end of expression"  shift, and go to state 1511
    '?'                  shift, and go to state 759
    '|'                  shift, and go to state 760
    '^'                  shift, and go to state 761
    '&'                  shift, and go to state 762
    '<'                  shift, and go to state 763
    '>'                  shift, and go to state 764
    '-'                  shift, and go to state 765
    '+'                  shift, and go to state 766
    '*'                  shift, and go to state 767
    '/'                  shift, and go to state 768
    '%'                  shift, and go to state 769
    '.'                  shift, and go to state 770
    '['                  shift, and go to state 771

    $default  reduce using rule 839 (array_comprehension_where)

    array_comprehension_where  go to state 1516


State 1464

  795 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 795 (make_struct_decl)


State 1465

  847 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple . array_comprehension_where "end of code block" "end of code block"

    "end of expression"  shift, and go to state 1511

    $default  reduce using rule 839 (array_comprehension_where)

    array_comprehension_where  go to state 1517


State 1466

  253 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list '>' $@8 expr .
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771

    $default  reduce using rule 253 (expression_keyword)


State 1467

  248 optional_expr_list_in_braces: '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    $default  reduce using rule 245 (optional_expr_list)

    string_builder          go to state 498
    expr_reader             go to state 499
    optional_expr_list      go to state 1518
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 811
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 698
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1468

  256 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces .

    $default  reduce using rule 256 (expression_keyword)


State 1469

  846 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple . array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1511

    $default  reduce using rule 839 (array_comprehension_where)

    array_comprehension_where  go to state 1519


State 1470

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'
  843 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 719
    "as"                 shift, and go to state 720
    "<<"                 shift, and go to state 729
    ">>"                 shift, and go to state 730
    "++"                 shift, and go to state 731
    "--"                 shift, and go to state 732
    "<="                 shift, and go to state 733
    ">="                 shift, and go to state 736
    "=="                 shift, and go to state 737
    "!="                 shift, and go to state 738
    "->"                 shift, and go to state 739
    "??"                 shift, and go to state 741
    "?."                 shift, and go to state 742
    "?["                 shift, and go to state 743
    "<|"                 shift, and go to state 744
    "|>"                 shift, and go to state 745
    "<<<"                shift, and go to state 747
    ">>>"                shift, and go to state 748
    "&&"                 shift, and go to state 751
    "||"                 shift, and go to state 752
    "^^"                 shift, and go to state 753
    ".."                 shift, and go to state 757
    "end of expression"  shift, and go to state 1511
    '?'                  shift, and go to state 759
    '|'                  shift, and go to state 760
    '^'                  shift, and go to state 761
    '&'                  shift, and go to state 762
    '<'                  shift, and go to state 763
    '>'                  shift, and go to state 764
    '-'                  shift, and go to state 765
    '+'                  shift, and go to state 766
    '*'                  shift, and go to state 767
    '/'                  shift, and go to state 768
    '%'                  shift, and go to state 769
    '.'                  shift, and go to state 770
    '['                  shift, and go to state 771

    $default  reduce using rule 839 (array_comprehension_where)

    array_comprehension_where  go to state 1520


State 1471

  397 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options '>' $@23 . func_addr_name

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 930
    "name"  shift, and go to state 59

    name_in_namespace  go to state 933
    func_addr_name     go to state 1521


State 1472

  400 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type '>' . $@25 func_addr_name

    $default  reduce using rule 399 ($@25)

    $@25  go to state 1522


State 1473

   61 expression_else: elif_or_static_elif expr expression_block expression_else .

    $default  reduce using rule 61 (expression_else)


State 1474

  278 expression_return_no_pipe: "return" .
  279                          | "return" . expr_list
  280                          | "return" . "<-" expr_list

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "<-"                              shift, and go to state 1523
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    $default  reduce using rule 278 (expression_return_no_pipe)

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 630
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 698
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1475

  284 expression_yield_no_pipe: "yield" . expr
  285                         | "yield" . "<-" expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "<-"                              shift, and go to state 1524
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1525
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1476

   66 expression_else_one_liner: "else" $@2 expression_if_one_liner .

    $default  reduce using rule 66 (expression_else_one_liner)


State 1477

   70 expression_if_one_liner: expression_break .

    $default  reduce using rule 70 (expression_if_one_liner)


State 1478

   71 expression_if_one_liner: expression_continue .

    $default  reduce using rule 71 (expression_if_one_liner)


State 1479

   68 expression_if_one_liner: expression_return_no_pipe .

    $default  reduce using rule 68 (expression_if_one_liner)


State 1480

   69 expression_if_one_liner: expression_yield_no_pipe .

    $default  reduce using rule 69 (expression_if_one_liner)


State 1481

   67 expression_if_one_liner: expr .
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771

    $default  reduce using rule 67 (expression_if_one_liner)


State 1482

  340 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . expression_block

    "begin of code block"  shift, and go to state 284

    expression_block  go to state 1526


State 1483

  389 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1527


State 1484

  299 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1528


State 1485

  301 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref . copy_or_move_or_clone expr "end of expression"

    "<-"  shift, and go to state 564
    ":="  shift, and go to state 565
    '='   shift, and go to state 566

    copy_or_move_or_clone  go to state 1529


State 1486

  300 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"
  682 type_declaration_no_options: type_declaration_no_options . dim_list
  683                            | type_declaration_no_options . '[' ']'
  691                            | type_declaration_no_options . '-' '[' ']'
  692                            | type_declaration_no_options . "explicit"
  693                            | type_declaration_no_options . "const"
  694                            | type_declaration_no_options . '-' "const"
  695                            | type_declaration_no_options . '&'
  696                            | type_declaration_no_options . '-' '&'
  697                            | type_declaration_no_options . '#'
  698                            | type_declaration_no_options . "implicit"
  699                            | type_declaration_no_options . '-' '#'
  700                            | type_declaration_no_options . "==" "const"
  701                            | type_declaration_no_options . "==" '&'
  702                            | type_declaration_no_options . '?'
  706                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "<-"        shift, and go to state 564
    "??"        shift, and go to state 403
    ":="        shift, and go to state 565
    '='         shift, and go to state 566
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    copy_or_move_or_clone  go to state 1530
    dim_list               go to state 409


State 1487

  302 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1531
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1488

  324 block_or_simple_block: "=>" "<-" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1532
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1489

  323 block_or_simple_block: "=>" expr .
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771

    ".."  error (nonassociative)

    $default  reduce using rule 323 (block_or_simple_block)


State 1490

  471 expr: expr "is" "type" '<' $@28 type_declaration_no_options '>' . $@29

    $default  reduce using rule 470 ($@29)

    $@29  go to state 1533


State 1491

  477 expr: expr "as" "type" '<' $@30 type_declaration '>' . $@31

    $default  reduce using rule 476 ($@31)

    $@31  go to state 1534


State 1492

  482 expr: expr '?' "as" "type" '<' $@32 type_declaration . '>' $@33
  744 type_declaration: type_declaration . '|' type_declaration_no_options
  745                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1535


State 1493

  510 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 510 (expr_mtag)


State 1494

  508 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 508 (expr_mtag)


State 1495

  507 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 507 (expr_mtag)


State 1496

  530 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 . function_declaration_header "end of expression"

    "operator"  shift, and go to state 181
    "bool"      shift, and go to state 182
    "string"    shift, and go to state 183
    "int"       shift, and go to state 184
    "int2"      shift, and go to state 185
    "int3"      shift, and go to state 186
    "int4"      shift, and go to state 187
    "uint"      shift, and go to state 188
    "uint2"     shift, and go to state 189
    "uint3"     shift, and go to state 190
    "uint4"     shift, and go to state 191
    "float"     shift, and go to state 192
    "float2"    shift, and go to state 193
    "float3"    shift, and go to state 194
    "float4"    shift, and go to state 195
    "range"     shift, and go to state 196
    "urange"    shift, and go to state 197
    "range64"   shift, and go to state 198
    "urange64"  shift, and go to state 199
    "int64"     shift, and go to state 200
    "uint64"    shift, and go to state 201
    "double"    shift, and go to state 202
    "int8"      shift, and go to state 203
    "uint8"     shift, and go to state 204
    "int16"     shift, and go to state 205
    "uint16"    shift, and go to state 206
    "++"        shift, and go to state 207
    "--"        shift, and go to state 208
    "name"      shift, and go to state 209

    function_name                go to state 210
    function_declaration_header  go to state 1536


State 1497

  532 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@36 function_declaration_header expression_block

    $default  reduce using rule 531 ($@36)

    $@36  go to state 1537


State 1498

  525 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 525 (structure_variable_declaration)


State 1499

  690 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')' .

    $default  reduce using rule 690 (type_declaration_no_options)


State 1500

  775 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  798 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' make_struct_dim . ')'

    "end of expression"  shift, and go to state 1143
    ')'                  shift, and go to state 1538


State 1501

  775 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  801 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' make_struct_dim . ')'

    "end of expression"  shift, and go to state 1143
    ')'                  shift, and go to state 1539


State 1502

  319 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" '>' . expr ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1540
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1503

  318 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')' .

    $default  reduce using rule 318 (expr_type_info)


State 1504

  321 expr_list: expr_list . ',' expr
  825 make_dim_decl: "array" '<' $@98 type_declaration_no_options '>' $@99 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 927

    $default  reduce using rule 841 (optional_comma)

    optional_comma  go to state 1541


State 1505

  833 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  838 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 923

    $default  reduce using rule 841 (optional_comma)

    optional_comma  go to state 1542


State 1506

  837 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 837 (make_table_decl)


State 1507

  321 expr_list: expr_list . ',' expr
  829 make_dim_decl: "fixed_array" '<' $@100 type_declaration_no_options '>' $@101 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 927

    $default  reduce using rule 841 (optional_comma)

    optional_comma  go to state 1543


State 1508

  775 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  816 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' make_struct_dim . ')'

    "end of expression"  shift, and go to state 1143
    ')'                  shift, and go to state 1544


State 1509

  775 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  804 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 '(' make_struct_dim . ')'

    "end of expression"  shift, and go to state 1143
    ')'                  shift, and go to state 1545


State 1510

  466 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 466 (expr)


State 1511

  840 array_comprehension_where: "end of expression" . "where" expr

    "where"  shift, and go to state 1546


State 1512

  844 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']' ']'

    ']'  shift, and go to state 1547


State 1513

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'
  771 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771

    $default  reduce using rule 771 (make_struct_fields)


State 1514

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'
  770 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771

    $default  reduce using rule 770 (make_struct_fields)


State 1515

  772 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  773                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 826
    ":="  shift, and go to state 1548
    '='   shift, and go to state 828

    copy_or_move  go to state 1549


State 1516

  845 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . "end of code block" ']'

    "end of code block"  shift, and go to state 1550


State 1517

  847 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where . "end of code block" "end of code block"

    "end of code block"  shift, and go to state 1551


State 1518

  248 optional_expr_list_in_braces: '(' optional_expr_list . ')'

    ')'  shift, and go to state 1552


State 1519

  846 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where . "end of code block"

    "end of code block"  shift, and go to state 1553


State 1520

  843 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1554


State 1521

  397 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options '>' $@23 func_addr_name .

    $default  reduce using rule 397 (func_addr_expr)


State 1522

  400 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type '>' $@25 . func_addr_name

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 930
    "name"  shift, and go to state 59

    name_in_namespace  go to state 933
    func_addr_name     go to state 1555


State 1523

  280 expression_return_no_pipe: "return" "<-" . expr_list

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 843
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 698
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1524

  285 expression_yield_no_pipe: "yield" "<-" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1556
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1525

  284 expression_yield_no_pipe: "yield" expr .
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771

    $default  reduce using rule 284 (expression_yield_no_pipe)


State 1526

  340 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block .

    $default  reduce using rule 340 (expr_full_block_assumed_piped)


State 1527

  389 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 389 (expr_named_call)


State 1528

  299 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"
  682 type_declaration_no_options: type_declaration_no_options . dim_list
  683                            | type_declaration_no_options . '[' ']'
  691                            | type_declaration_no_options . '-' '[' ']'
  692                            | type_declaration_no_options . "explicit"
  693                            | type_declaration_no_options . "const"
  694                            | type_declaration_no_options . '-' "const"
  695                            | type_declaration_no_options . '&'
  696                            | type_declaration_no_options . '-' '&'
  697                            | type_declaration_no_options . '#'
  698                            | type_declaration_no_options . "implicit"
  699                            | type_declaration_no_options . '-' '#'
  700                            | type_declaration_no_options . "==" "const"
  701                            | type_declaration_no_options . "==" '&'
  702                            | type_declaration_no_options . '?'
  706                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "<-"        shift, and go to state 564
    "??"        shift, and go to state 403
    ":="        shift, and go to state 565
    '='         shift, and go to state 566
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    copy_or_move_or_clone  go to state 1557
    dim_list               go to state 409


State 1529

  301 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1558
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1530

  300 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1559
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1531

  302 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr . "end of expression"
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 719
    "as"                 shift, and go to state 720
    "<<"                 shift, and go to state 729
    ">>"                 shift, and go to state 730
    "++"                 shift, and go to state 731
    "--"                 shift, and go to state 732
    "<="                 shift, and go to state 733
    ">="                 shift, and go to state 736
    "=="                 shift, and go to state 737
    "!="                 shift, and go to state 738
    "->"                 shift, and go to state 739
    "??"                 shift, and go to state 741
    "?."                 shift, and go to state 742
    "?["                 shift, and go to state 743
    "<|"                 shift, and go to state 744
    "|>"                 shift, and go to state 745
    "<<<"                shift, and go to state 747
    ">>>"                shift, and go to state 748
    "&&"                 shift, and go to state 751
    "||"                 shift, and go to state 752
    "^^"                 shift, and go to state 753
    ".."                 shift, and go to state 757
    "end of expression"  shift, and go to state 1560
    '?'                  shift, and go to state 759
    '|'                  shift, and go to state 760
    '^'                  shift, and go to state 761
    '&'                  shift, and go to state 762
    '<'                  shift, and go to state 763
    '>'                  shift, and go to state 764
    '-'                  shift, and go to state 765
    '+'                  shift, and go to state 766
    '*'                  shift, and go to state 767
    '/'                  shift, and go to state 768
    '%'                  shift, and go to state 769
    '.'                  shift, and go to state 770
    '['                  shift, and go to state 771


State 1532

  324 block_or_simple_block: "=>" "<-" expr .
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771

    $default  reduce using rule 324 (block_or_simple_block)


State 1533

  471 expr: expr "is" "type" '<' $@28 type_declaration_no_options '>' $@29 .

    $default  reduce using rule 471 (expr)


State 1534

  477 expr: expr "as" "type" '<' $@30 type_declaration '>' $@31 .

    $default  reduce using rule 477 (expr)


State 1535

  482 expr: expr '?' "as" "type" '<' $@32 type_declaration '>' . $@33

    $default  reduce using rule 481 ($@33)

    $@33  go to state 1561


State 1536

  530 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header . "end of expression"

    "end of expression"  shift, and go to state 1562


State 1537

  532 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 . function_declaration_header expression_block

    "operator"  shift, and go to state 181
    "bool"      shift, and go to state 182
    "string"    shift, and go to state 183
    "int"       shift, and go to state 184
    "int2"      shift, and go to state 185
    "int3"      shift, and go to state 186
    "int4"      shift, and go to state 187
    "uint"      shift, and go to state 188
    "uint2"     shift, and go to state 189
    "uint3"     shift, and go to state 190
    "uint4"     shift, and go to state 191
    "float"     shift, and go to state 192
    "float2"    shift, and go to state 193
    "float3"    shift, and go to state 194
    "float4"    shift, and go to state 195
    "range"     shift, and go to state 196
    "urange"    shift, and go to state 197
    "range64"   shift, and go to state 198
    "urange64"  shift, and go to state 199
    "int64"     shift, and go to state 200
    "uint64"    shift, and go to state 201
    "double"    shift, and go to state 202
    "int8"      shift, and go to state 203
    "uint8"     shift, and go to state 204
    "int16"     shift, and go to state 205
    "uint16"    shift, and go to state 206
    "++"        shift, and go to state 207
    "--"        shift, and go to state 208
    "name"      shift, and go to state 209

    function_name                go to state 210
    function_declaration_header  go to state 1563


State 1538

  798 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' make_struct_dim ')' .

    $default  reduce using rule 798 (make_struct_decl)


State 1539

  801 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' make_struct_dim ')' .

    $default  reduce using rule 801 (make_struct_decl)


State 1540

  319 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" '>' expr . ')'
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771
    ')'    shift, and go to state 1564


State 1541

  825 make_dim_decl: "array" '<' $@98 type_declaration_no_options '>' $@99 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1565


State 1542

  838 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1566


State 1543

  829 make_dim_decl: "fixed_array" '<' $@100 type_declaration_no_options '>' $@101 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1567


State 1544

  816 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' make_struct_dim ')' .

    $default  reduce using rule 816 (make_tuple_call)


State 1545

  804 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 '(' make_struct_dim ')' .

    $default  reduce using rule 804 (make_struct_decl)


State 1546

  840 array_comprehension_where: "end of expression" "where" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1568
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1547

  844 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' . ']'

    ']'  shift, and go to state 1569


State 1548

  773 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1570
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1549

  772 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1571
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1550

  845 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" . ']'

    ']'  shift, and go to state 1572


State 1551

  847 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" . "end of code block"

    "end of code block"  shift, and go to state 1573


State 1552

  248 optional_expr_list_in_braces: '(' optional_expr_list ')' .

    $default  reduce using rule 248 (optional_expr_list_in_braces)


State 1553

  846 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" .

    $default  reduce using rule 846 (array_comprehension)


State 1554

  843 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 843 (array_comprehension)


State 1555

  400 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name .

    $default  reduce using rule 400 (func_addr_expr)


State 1556

  285 expression_yield_no_pipe: "yield" "<-" expr .
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771

    $default  reduce using rule 285 (expression_yield_no_pipe)


State 1557

  299 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    "begin of code block"             shift, and go to state 486
    '-'                               shift, and go to state 489
    '+'                               shift, and go to state 490
    '*'                               shift, and go to state 491
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 492
    '!'                               shift, and go to state 493
    '['                               shift, and go to state 494
    '('                               shift, and go to state 495
    '$'                               shift, and go to state 496
    '@'                               shift, and go to state 497

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 559
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr_call               go to state 539
    expr                    go to state 1574
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1558

  301 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr . "end of expression"
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 719
    "as"                 shift, and go to state 720
    "<<"                 shift, and go to state 729
    ">>"                 shift, and go to state 730
    "++"                 shift, and go to state 731
    "--"                 shift, and go to state 732
    "<="                 shift, and go to state 733
    ">="                 shift, and go to state 736
    "=="                 shift, and go to state 737
    "!="                 shift, and go to state 738
    "->"                 shift, and go to state 739
    "??"                 shift, and go to state 741
    "?."                 shift, and go to state 742
    "?["                 shift, and go to state 743
    "<|"                 shift, and go to state 744
    "|>"                 shift, and go to state 745
    "<<<"                shift, and go to state 747
    ">>>"                shift, and go to state 748
    "&&"                 shift, and go to state 751
    "||"                 shift, and go to state 752
    "^^"                 shift, and go to state 753
    ".."                 shift, and go to state 757
    "end of expression"  shift, and go to state 1575
    '?'                  shift, and go to state 759
    '|'                  shift, and go to state 760
    '^'                  shift, and go to state 761
    '&'                  shift, and go to state 762
    '<'                  shift, and go to state 763
    '>'                  shift, and go to state 764
    '-'                  shift, and go to state 765
    '+'                  shift, and go to state 766
    '*'                  shift, and go to state 767
    '/'                  shift, and go to state 768
    '%'                  shift, and go to state 769
    '.'                  shift, and go to state 770
    '['                  shift, and go to state 771


State 1559

  300 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 719
    "as"                 shift, and go to state 720
    "<<"                 shift, and go to state 729
    ">>"                 shift, and go to state 730
    "++"                 shift, and go to state 731
    "--"                 shift, and go to state 732
    "<="                 shift, and go to state 733
    ">="                 shift, and go to state 736
    "=="                 shift, and go to state 737
    "!="                 shift, and go to state 738
    "->"                 shift, and go to state 739
    "??"                 shift, and go to state 741
    "?."                 shift, and go to state 742
    "?["                 shift, and go to state 743
    "<|"                 shift, and go to state 744
    "|>"                 shift, and go to state 745
    "<<<"                shift, and go to state 747
    ">>>"                shift, and go to state 748
    "&&"                 shift, and go to state 751
    "||"                 shift, and go to state 752
    "^^"                 shift, and go to state 753
    ".."                 shift, and go to state 757
    "end of expression"  shift, and go to state 1576
    '?'                  shift, and go to state 759
    '|'                  shift, and go to state 760
    '^'                  shift, and go to state 761
    '&'                  shift, and go to state 762
    '<'                  shift, and go to state 763
    '>'                  shift, and go to state 764
    '-'                  shift, and go to state 765
    '+'                  shift, and go to state 766
    '*'                  shift, and go to state 767
    '/'                  shift, and go to state 768
    '%'                  shift, and go to state 769
    '.'                  shift, and go to state 770
    '['                  shift, and go to state 771


State 1560

  302 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 302 (tuple_expansion_variable_declaration)


State 1561

  482 expr: expr '?' "as" "type" '<' $@32 type_declaration '>' $@33 .

    $default  reduce using rule 482 (expr)


State 1562

  530 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header "end of expression" .

    $default  reduce using rule 530 (struct_variable_declaration_list)


State 1563

  532 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header . expression_block

    "begin of code block"  shift, and go to state 284

    expression_block  go to state 1577


State 1564

  319 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" '>' expr ')' .

    $default  reduce using rule 319 (expr_type_info)


State 1565

  825 make_dim_decl: "array" '<' $@98 type_declaration_no_options '>' $@99 '(' expr_list optional_comma ')' .

    $default  reduce using rule 825 (make_dim_decl)


State 1566

  838 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 838 (make_table_decl)


State 1567

  829 make_dim_decl: "fixed_array" '<' $@100 type_declaration_no_options '>' $@101 '(' expr_list optional_comma ')' .

    $default  reduce using rule 829 (make_dim_decl)


State 1568

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'
  840 array_comprehension_where: "end of expression" "where" expr .

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771

    $default  reduce using rule 840 (array_comprehension_where)


State 1569

  844 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']' .

    $default  reduce using rule 844 (array_comprehension)


State 1570

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'
  773 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771

    $default  reduce using rule 773 (make_struct_fields)


State 1571

  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'
  772 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 719
    "as"   shift, and go to state 720
    "<<"   shift, and go to state 729
    ">>"   shift, and go to state 730
    "++"   shift, and go to state 731
    "--"   shift, and go to state 732
    "<="   shift, and go to state 733
    ">="   shift, and go to state 736
    "=="   shift, and go to state 737
    "!="   shift, and go to state 738
    "->"   shift, and go to state 739
    "??"   shift, and go to state 741
    "?."   shift, and go to state 742
    "?["   shift, and go to state 743
    "<|"   shift, and go to state 744
    "|>"   shift, and go to state 745
    "<<<"  shift, and go to state 747
    ">>>"  shift, and go to state 748
    "&&"   shift, and go to state 751
    "||"   shift, and go to state 752
    "^^"   shift, and go to state 753
    ".."   shift, and go to state 757
    '?'    shift, and go to state 759
    '|'    shift, and go to state 760
    '^'    shift, and go to state 761
    '&'    shift, and go to state 762
    '<'    shift, and go to state 763
    '>'    shift, and go to state 764
    '-'    shift, and go to state 765
    '+'    shift, and go to state 766
    '*'    shift, and go to state 767
    '/'    shift, and go to state 768
    '%'    shift, and go to state 769
    '.'    shift, and go to state 770
    '['    shift, and go to state 771

    $default  reduce using rule 772 (make_struct_fields)


State 1572

  845 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']' .

    $default  reduce using rule 845 (array_comprehension)


State 1573

  847 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block" .

    $default  reduce using rule 847 (array_comprehension)


State 1574

  299 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"
  390 expr_method_call: expr . "->" "name" '(' ')'
  391                 | expr . "->" "name" '(' expr_list ')'
  401 expr_field: expr . '.' "name"
  402           | expr . '.' '.' "name"
  403           | expr . '.' "name" '(' ')'
  404           | expr . '.' "name" '(' expr_list ')'
  407           | expr . '.' $@26 error $@27
  427 expr: expr . "<<" expr
  428     | expr . ">>" expr
  429     | expr . "<<<" expr
  430     | expr . ">>>" expr
  431     | expr . '+' expr
  432     | expr . '-' expr
  433     | expr . '*' expr
  434     | expr . '/' expr
  435     | expr . '%' expr
  436     | expr . '<' expr
  437     | expr . '>' expr
  438     | expr . "==" expr
  439     | expr . "!=" expr
  440     | expr . "<=" expr
  441     | expr . ">=" expr
  442     | expr . '&' expr
  443     | expr . '|' expr
  444     | expr . '^' expr
  445     | expr . "&&" expr
  446     | expr . "||" expr
  447     | expr . "^^" expr
  448     | expr . ".." expr
  451     | expr . "++"
  452     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  467     | expr . "??" expr
  468     | expr . '?' expr ':' expr
  471     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  472     | expr . "is" basic_type_declaration
  473     | expr . "is" "name"
  474     | expr . "as" "name"
  477     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  478     | expr . "as" basic_type_declaration
  479     | expr . '?' "as" "name"
  482     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  483     | expr . '?' "as" basic_type_declaration
  491     | expr . "<|" expr
  492     | expr . "|>" expr
  493     | expr . "|>" basic_type_declaration
  505 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr . "?." "$f" '(' expr ')'
  507          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr . "as" "$f" '(' expr ')'
  510          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 719
    "as"                 shift, and go to state 720
    "<<"                 shift, and go to state 729
    ">>"                 shift, and go to state 730
    "++"                 shift, and go to state 731
    "--"                 shift, and go to state 732
    "<="                 shift, and go to state 733
    ">="                 shift, and go to state 736
    "=="                 shift, and go to state 737
    "!="                 shift, and go to state 738
    "->"                 shift, and go to state 739
    "??"                 shift, and go to state 741
    "?."                 shift, and go to state 742
    "?["                 shift, and go to state 743
    "<|"                 shift, and go to state 744
    "|>"                 shift, and go to state 745
    "<<<"                shift, and go to state 747
    ">>>"                shift, and go to state 748
    "&&"                 shift, and go to state 751
    "||"                 shift, and go to state 752
    "^^"                 shift, and go to state 753
    ".."                 shift, and go to state 757
    "end of expression"  shift, and go to state 1578
    '?'                  shift, and go to state 759
    '|'                  shift, and go to state 760
    '^'                  shift, and go to state 761
    '&'                  shift, and go to state 762
    '<'                  shift, and go to state 763
    '>'                  shift, and go to state 764
    '-'                  shift, and go to state 765
    '+'                  shift, and go to state 766
    '*'                  shift, and go to state 767
    '/'                  shift, and go to state 768
    '%'                  shift, and go to state 769
    '.'                  shift, and go to state 770
    '['                  shift, and go to state 771


State 1575

  301 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 301 (tuple_expansion_variable_declaration)


State 1576

  300 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 300 (tuple_expansion_variable_declaration)


State 1577

  532 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block .

    $default  reduce using rule 532 (struct_variable_declaration_list)


State 1578

  299 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 299 (tuple_expansion_variable_declaration)
